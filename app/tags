!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
A	composite/gimp-composite-generic-installer.c	/^  GimpPixelFormat A;$/;"	m	struct:install_table	file:
A	composite/gimp-composite-mmx-installer.c	/^  GimpPixelFormat A;$/;"	m	struct:install_table	file:
A	composite/gimp-composite-sse-installer.c	/^  GimpPixelFormat A;$/;"	m	struct:install_table	file:
A	composite/gimp-composite-sse2-installer.c	/^  GimpPixelFormat A;$/;"	m	struct:install_table	file:
A	composite/gimp-composite.h	/^  guchar          *A;             \/* Source A    *\/$/;"	m	struct:__anon33
ACTION	display/gimpscalecombobox.c	/^  ACTION,$/;"	e	enum:__anon191	file:
ACTIVATE_ITEM	widgets/gimpcontainerview.c	/^  ACTIVATE_ITEM,$/;"	e	enum:__anon363	file:
ACTIVATE_ON_FOCUS_BLURB	config/gimprc-blurbs.h	12;"	d
ACTIVE_CHANNEL_CHANGED	core/gimpimage.c	/^  ACTIVE_CHANNEL_CHANGED,$/;"	e	enum:__anon126	file:
ACTIVE_LAYER_CHANGED	core/gimpimage.c	/^  ACTIVE_LAYER_CHANGED,$/;"	e	enum:__anon126	file:
ACTIVE_VECTORS_CHANGED	core/gimpimage.c	/^  ACTIVE_VECTORS_CHANGED,$/;"	e	enum:__anon126	file:
ADD	core/gimpcontainer.c	/^  ADD,$/;"	e	enum:__anon56	file:
ADD	core/gimpparasitelist.c	/^  ADD,$/;"	e	enum:__anon55	file:
ADDING	tools/gimpmeasuretool.h	/^  ADDING,$/;"	e	enum:__anon280
ADD_RGB	core/gimpbrush-scale.c	293;"	d	file:
ADD_RGB	core/gimpbrush-scale.c	475;"	d	file:
AIRBRUSH_DEFAULT_PRESSURE	paint/gimpairbrushoptions.c	31;"	d	file:
AIRBRUSH_DEFAULT_RATE	paint/gimpairbrushoptions.c	30;"	d	file:
ALIGNMENT	text/gimptext-parasite.c	/^  ALIGNMENT          = 2,$/;"	e	enum:__anon245	file:
ALIGN_TOOL_NUM_BUTTONS	tools/gimpaligntool.h	33;"	d
ALL	tools/gimpbrightnesscontrasttool.c	50;"	d	file:
ALL	tools/gimpcolorbalancetool.c	47;"	d	file:
ALL	tools/gimpcolorizetool.c	52;"	d	file:
ALL	tools/gimpcurvestool.c	65;"	d	file:
ALL	tools/gimphuesaturationtool.c	57;"	d	file:
ALL	tools/gimplevelstool.c	67;"	d	file:
ALL_CHANNELS	tools/gimplevelstool.c	66;"	d	file:
ALPHA	display/gimpdisplayshell-render.c	934;"	d	file:
ALPHA	display/gimpdisplayshell-render.c	952;"	d	file:
ALPHA	display/gimpdisplayshell-render.c	960;"	d	file:
ALPHA	display/gimpdisplayshell-render.c	978;"	d	file:
ALPHA_CHANGED	core/gimpdrawable.c	/^  ALPHA_CHANGED,$/;"	e	enum:__anon113	file:
ALPHA_CHANGED	core/gimpimage.c	/^  ALPHA_CHANGED,$/;"	e	enum:__anon126	file:
ALPHA_G_PIX	base/base-types.h	39;"	d
ALPHA_I_PIX	base/base-types.h	45;"	d
ALPHA_PIX	base/base-types.h	43;"	d
ANGLE	tools/gimprotatetool.c	44;"	d	file:
ANGLE_EPSILON	tools/gimprotatetool.c	322;"	d	file:
ANGLE_EPSILON	tools/gimprotatetool.c	337;"	d	file:
ANTIALIAS	text/gimptext-parasite.c	/^  ANTIALIAS       = 1,$/;"	e	enum:__anon245	file:
ANTI_ERASE_INDEXED	paint-funcs/paint-funcs-types.h	/^  ANTI_ERASE_INDEXED,$/;"	e	enum:__anon228
ANTI_ERASE_INTEN	paint-funcs/paint-funcs-types.h	/^  ANTI_ERASE_INTEN,$/;"	e	enum:__anon228
APPLY_CHANGED	core/gimplayermask.c	/^  APPLY_CHANGED,$/;"	e	enum:__anon138	file:
APPROX	base/cpercep.c	87;"	d	file:
ARAT	core/gimpimage-convert.c	300;"	d	file:
ARAT	core/gimpimage-convert.c	304;"	d	file:
ARC_RADIUS	tools/gimpmeasuretool.c	56;"	d	file:
ARROW_VELOCITY	tools/gimpeditselectiontool.c	63;"	d	file:
ARROW_VELOCITY	tools/gimprectangletool.c	57;"	d	file:
ASSUMED_GAMMA	base/cpercep.c	92;"	d	file:
ASSUMED_GAMMA	base/cpercep.c	95;"	d	file:
AUTOSCROLL_DT	display/gimpdisplayshell-autoscroll.c	40;"	d	file:
AUTOSCROLL_DX	display/gimpdisplayshell-autoscroll.c	41;"	d	file:
AUTO_COLUMN	dialogs/module-dialog.c	/^  AUTO_COLUMN,$/;"	e	enum:__anon181	file:
AUTO_CROP_ALPHA	core/gimpimage-crop.c	/^  AUTO_CROP_ALPHA   = 1,$/;"	e	enum:__anon106	file:
AUTO_CROP_COLOR	core/gimpimage-crop.c	/^  AUTO_CROP_COLOR   = 2$/;"	e	enum:__anon106	file:
AUTO_CROP_NOTHING	core/gimpimage-crop.c	/^  AUTO_CROP_NOTHING = 0,$/;"	e	enum:__anon106	file:
AUX_INFO_CURRENT_DATA	widgets/gimpdataeditor.c	370;"	d	file:
AUX_INFO_CURRENT_PAGE	widgets/gimpcoloreditor.c	340;"	d	file:
AUX_INFO_EDIT_ACTIVE	widgets/gimpdataeditor.c	369;"	d	file:
AUX_INFO_FOLLOW_ACTIVE_IMAGE	widgets/gimpmenudock.c	285;"	d	file:
AUX_INFO_FRAME_1_MODE	widgets/gimpcursorview.c	247;"	d	file:
AUX_INFO_FRAME_2_MODE	widgets/gimpcursorview.c	248;"	d	file:
AUX_INFO_SHOW_BUTTON_BAR	widgets/gimpdocked.c	106;"	d	file:
AUX_INFO_SHOW_IMAGE_MENU	widgets/gimpmenudock.c	284;"	d	file:
AUX_INFO_ZOOM_FACTOR	widgets/gimppaletteeditor.c	402;"	d	file:
AXIS_BLUE	core/gimpimage-convert.c	/^typedef enum {AXIS_UNDEF, AXIS_RED, AXIS_BLUE, AXIS_GREEN} axisType;$/;"	e	enum:__anon107	file:
AXIS_GREEN	core/gimpimage-convert.c	/^typedef enum {AXIS_UNDEF, AXIS_RED, AXIS_BLUE, AXIS_GREEN} axisType;$/;"	e	enum:__anon107	file:
AXIS_RED	core/gimpimage-convert.c	/^typedef enum {AXIS_UNDEF, AXIS_RED, AXIS_BLUE, AXIS_GREEN} axisType;$/;"	e	enum:__anon107	file:
AXIS_UNDEF	core/gimpimage-convert.c	/^typedef enum {AXIS_UNDEF, AXIS_RED, AXIS_BLUE, AXIS_GREEN} axisType;$/;"	e	enum:__anon107	file:
AbrBrushHeader	core/gimpbrush-load.c	/^typedef struct _AbrBrushHeader          AbrBrushHeader;$/;"	t	typeref:struct:_AbrBrushHeader	file:
AbrHeader	core/gimpbrush-load.c	/^typedef struct _AbrHeader               AbrHeader;$/;"	t	typeref:struct:_AbrHeader	file:
AbrSampledBrushHeader	core/gimpbrush-load.c	/^typedef struct _AbrSampledBrushHeader   AbrSampledBrushHeader;$/;"	t	typeref:struct:_AbrSampledBrushHeader	file:
AutoCropType	core/gimpimage-crop.c	/^} AutoCropType;$/;"	t	typeref:enum:__anon106	file:
B	composite/gimp-composite-generic-installer.c	/^  GimpPixelFormat B;$/;"	m	struct:install_table	file:
B	composite/gimp-composite-mmx-installer.c	/^  GimpPixelFormat B;$/;"	m	struct:install_table	file:
B	composite/gimp-composite-sse-installer.c	/^  GimpPixelFormat B;$/;"	m	struct:install_table	file:
B	composite/gimp-composite-sse2-installer.c	/^  GimpPixelFormat B;$/;"	m	struct:install_table	file:
B	composite/gimp-composite.h	/^  guchar          *B;             \/* Source B    *\/$/;"	m	struct:__anon33
BACKGROUND_AREA	widgets/gimpfgbgeditor.c	/^  BACKGROUND_AREA,$/;"	e	enum:__anon386	file:
BACKGROUND_CHANGED	core/gimpcontext.c	/^  BACKGROUND_CHANGED,$/;"	e	enum:__anon103	file:
BAR_SIZE	tools/gimpcurvestool.c	68;"	d	file:
BATCH_DEFAULT_EVAL_PROC	batch.c	41;"	d	file:
BEHIND_INDEXED	paint-funcs/paint-funcs-types.h	/^  BEHIND_INDEXED,$/;"	e	enum:__anon228
BEHIND_INTEN	paint-funcs/paint-funcs-types.h	/^  BEHIND_INTEN,$/;"	e	enum:__anon228
BIAS_FACTOR	core/gimpimage-convert.c	1374;"	d	file:
BIAS_NUMBER	core/gimpimage-convert.c	1375;"	d	file:
BILINEAR	core/gimp-transform-region.c	753;"	d	file:
BITS_IN_SAMPLE	core/gimpimage-convert.c	176;"	d	file:
BLK	widgets/gimpviewrendererbrush.c	145;"	d	file:
BLK	widgets/gimpviewrendererbrush.c	205;"	d	file:
BLOCK	widgets/gimplayertreeview.c	1063;"	d	file:
BLOCK	widgets/gimplayertreeview.c	1082;"	d	file:
BLOCK	widgets/gimplayertreeview.c	1127;"	d	file:
BLOCK	widgets/gimplayertreeview.c	932;"	d	file:
BLOCK_WIDTH	widgets/gimpcellrendererdashes.c	37;"	d	file:
BLU	widgets/gimpviewrendererbrush.c	147;"	d	file:
BLU	widgets/gimpviewrendererbrush.c	207;"	d	file:
BLUE_PIX	base/base-types.h	42;"	d
BOOK_ADDED	widgets/gimpdock.c	/^  BOOK_ADDED,$/;"	e	enum:__anon332	file:
BOOK_REMOVED	widgets/gimpdock.c	/^  BOOK_REMOVED,$/;"	e	enum:__anon332	file:
BORDER_PEN_WIDTH	display/gimpnavigationeditor.c	267;"	d	file:
BORDER_PEN_WIDTH	display/gimpnavigationeditor.c	305;"	d	file:
BORDER_PEN_WIDTH	widgets/gimpnavigationview.c	41;"	d	file:
BOUNDARY_HALF_WAY	base/boundary.h	24;"	d
BOUNDARY_IGNORE_BOUNDS	base/boundary.h	/^  BOUNDARY_IGNORE_BOUNDS$/;"	e	enum:__anon18
BOUNDARY_WITHIN_BOUNDS	base/boundary.h	/^  BOUNDARY_WITHIN_BOUNDS,$/;"	e	enum:__anon18
BOX_B_ELEMS	core/gimpimage-convert.c	2347;"	d	file:
BOX_B_LOG	core/gimpimage-convert.c	2343;"	d	file:
BOX_B_SHIFT	core/gimpimage-convert.c	2351;"	d	file:
BOX_G_ELEMS	core/gimpimage-convert.c	2346;"	d	file:
BOX_G_LOG	core/gimpimage-convert.c	2342;"	d	file:
BOX_G_SHIFT	core/gimpimage-convert.c	2350;"	d	file:
BOX_R_ELEMS	core/gimpimage-convert.c	2345;"	d	file:
BOX_R_LOG	core/gimpimage-convert.c	2341;"	d	file:
BOX_R_SHIFT	core/gimpimage-convert.c	2349;"	d	file:
BRAT	core/gimpimage-convert.c	301;"	d	file:
BRAT	core/gimpimage-convert.c	305;"	d	file:
BRIGHTNESS	tools/gimpbrightnesscontrasttool.c	48;"	d	file:
BRUSH_CHANGED	core/gimpcontext.c	/^  BRUSH_CHANGED,$/;"	e	enum:__anon103	file:
BRUSH_CORE_JITTER_LUTSIZE	paint/gimpbrushcore.h	28;"	d
BRUSH_CORE_SOLID_SUBSAMPLE	paint/gimpbrushcore.h	27;"	d
BRUSH_CORE_SUBSAMPLE	paint/gimpbrushcore.h	26;"	d
BRUSH_PATH_BLURB	config/gimprc-blurbs.h	17;"	d
BRUSH_PATH_WRITABLE_BLURB	config/gimprc-blurbs.h	20;"	d
BRUSH_VIEW_SIZE	widgets/gimpbrusheditor.c	45;"	d	file:
BSDF	core/gimpimage-convert.c	399;"	d	file:
BUFFER_CHANGED	core/gimp.c	/^  BUFFER_CHANGED,$/;"	e	enum:__anon123	file:
BUFFER_CHANGED	core/gimpcontext.c	/^  BUFFER_CHANGED,$/;"	e	enum:__anon103	file:
BUFSIZE	plug-in/gimpinterpreterdb.c	68;"	d	file:
BUF_SIZE	widgets/gimprender.c	154;"	d	file:
BUF_SIZE	widgets/gimprender.c	182;"	d	file:
BUF_SIZE	widgets/gimpwidgets-utils.c	582;"	d	file:
BUF_SIZE	widgets/gimpwidgets-utils.c	682;"	d	file:
B_SCALE	core/gimpimage-convert.c	188;"	d	file:
B_SHIFT	core/gimpimage-convert.c	180;"	d	file:
Bhalferror	core/gimpimage-convert.c	/^  int   Bhalferror;$/;"	m	struct:__anon108	file:
Blob	paint/gimpink-blob.h	/^typedef struct _Blob      Blob;$/;"	t	typeref:struct:_Blob
BlobFunc	paint/gimpink-blob.h	/^typedef Blob * (* BlobFunc) (gdouble xc,$/;"	t
BlobPoint	paint/gimpink-blob.h	/^typedef struct _BlobPoint BlobPoint;$/;"	t	typeref:struct:_BlobPoint
BlobSpan	paint/gimpink-blob.h	/^typedef struct _BlobSpan  BlobSpan;$/;"	t	typeref:struct:_BlobSpan
Bmax	core/gimpimage-convert.c	/^  int   Bmin, Bmax;$/;"	m	struct:__anon108	file:
Bmin	core/gimpimage-convert.c	/^  int   Bmin, Bmax;$/;"	m	struct:__anon108	file:
BoundSeg	base/base-types.h	/^typedef struct _BoundSeg            BoundSeg;$/;"	t	typeref:struct:_BoundSeg
Boundary	base/boundary.c	/^typedef struct _Boundary Boundary;$/;"	t	typeref:struct:_Boundary	file:
BoundaryType	base/boundary.h	/^} BoundaryType;$/;"	t	typeref:enum:__anon18
BrightnessContrastLutData	base/lut-funcs.c	/^} BrightnessContrastLutData;$/;"	t	typeref:struct:__anon15	file:
BrushHeader	core/gimpbrush-header.h	/^typedef struct _BrushHeader BrushHeader;$/;"	t	typeref:struct:_BrushHeader
CACHE_LOCK	base/tile-cache.c	61;"	d	file:
CACHE_LOCK	base/tile-cache.c	66;"	d	file:
CACHE_UNLOCK	base/tile-cache.c	62;"	d	file:
CACHE_UNLOCK	base/tile-cache.c	67;"	d	file:
CALC_VERTEX	display/gimpdisplayshell-preview.c	184;"	d	file:
CALC_VERTEX	display/gimpdisplayshell-preview.c	263;"	d	file:
CANCEL	core/gimpprogress.c	/^  CANCEL,$/;"	e	enum:__anon162	file:
CANCEL	widgets/gimpcontainerpopup.c	/^  CANCEL,$/;"	e	enum:__anon333	file:
CANVAS_PADDING_COLOR_BLURB	config/gimprc-blurbs.h	22;"	d
CANVAS_PADDING_MODE_BLURB	config/gimprc-blurbs.h	26;"	d
CAN_CHANGE_ACCELS_BLURB	config/gimprc-blurbs.h	356;"	d
CELL_SIZE	widgets/gimpdevicestatus.c	50;"	d	file:
CELL_SIZE	widgets/gimptoolbox-indicator-area.c	44;"	d	file:
CELL_SPACING	widgets/gimptoolbox-indicator-area.c	47;"	d	file:
CENTER_X	tools/gimprotatetool.c	46;"	d	file:
CENTER_Y	tools/gimprotatetool.c	47;"	d	file:
CFHistogram	core/gimpimage-convert.c	/^typedef ColorFreq *CFHistogram;$/;"	t	file:
CHANGED	core/gimptoolpresets.c	/^  CHANGED,$/;"	e	enum:__anon165	file:
CHANGED	widgets/gimpdeviceinfo.c	/^  CHANGED,$/;"	e	enum:__anon334	file:
CHANGED	widgets/gimpfileprocview.c	/^  CHANGED,$/;"	e	enum:__anon340	file:
CHANNEL_WAS_ACTIVE	core/gimpimage-quick-mask.c	40;"	d	file:
CHILD_PROP_0	widgets/gtkwrapbox.c	/^  CHILD_PROP_0,$/;"	e	enum:__anon369	file:
CHILD_PROP_HEXPAND	widgets/gtkwrapbox.c	/^  CHILD_PROP_HEXPAND,$/;"	e	enum:__anon369	file:
CHILD_PROP_HFILL	widgets/gtkwrapbox.c	/^  CHILD_PROP_HFILL,$/;"	e	enum:__anon369	file:
CHILD_PROP_POSITION	widgets/gtkwrapbox.c	/^  CHILD_PROP_POSITION,$/;"	e	enum:__anon369	file:
CHILD_PROP_VEXPAND	widgets/gtkwrapbox.c	/^  CHILD_PROP_VEXPAND,$/;"	e	enum:__anon369	file:
CHILD_PROP_VFILL	widgets/gtkwrapbox.c	/^  CHILD_PROP_VFILL,$/;"	e	enum:__anon369	file:
CHILD_PROP_WRAPPED	widgets/gtkwrapbox.c	/^  CHILD_PROP_WRAPPED$/;"	e	enum:__anon369	file:
CHUNK_HEIGHT	core/gimpprojection.c	569;"	d	file:
CHUNK_WIDTH	core/gimpprojection.c	568;"	d	file:
CLAMP	base/cpercep.c	158;"	d	file:
CLAMPED_BOTTOM	tools/gimprectangletool.c	/^  CLAMPED_BOTTOM = (1 << 3)$/;"	e	enum:__anon284	file:
CLAMPED_LEFT	tools/gimprectangletool.c	/^  CLAMPED_LEFT   = (1 << 0),$/;"	e	enum:__anon284	file:
CLAMPED_NONE	tools/gimprectangletool.c	/^  CLAMPED_NONE   = 0,$/;"	e	enum:__anon284	file:
CLAMPED_RIGHT	tools/gimprectangletool.c	/^  CLAMPED_RIGHT  = (1 << 1),$/;"	e	enum:__anon284	file:
CLAMPED_TOP	tools/gimprectangletool.c	/^  CLAMPED_TOP    = (1 << 2),$/;"	e	enum:__anon284	file:
CLEAN	core/gimpimage.c	/^  CLEAN,$/;"	e	enum:__anon126	file:
CLICKED	widgets/gimpcellrendererviewable.c	/^  CLICKED,$/;"	e	enum:__anon354	file:
CLICKED	widgets/gimpview.c	/^  CLICKED,$/;"	e	enum:__anon365	file:
CMatrix	base/cpercep.c	/^typedef double CMatrix[3][3];$/;"	t	file:
COLOR	text/gimptext-parasite.c	/^  COLOR                  = 5,$/;"	e	enum:__anon245	file:
COLORMAP_CHANGED	core/gimpimage.c	/^  COLORMAP_CHANGED,$/;"	e	enum:__anon126	file:
COLOR_AREA_SIZE	widgets/gimpcolordialog.c	46;"	d	file:
COLOR_CHANGED	core/gimpchannel.c	/^  COLOR_CHANGED,$/;"	e	enum:__anon143	file:
COLOR_CLICKED	widgets/gimpfgbgeditor.c	/^  COLOR_CLICKED,$/;"	e	enum:__anon385	file:
COLOR_DROPPED	widgets/gimppaletteview.c	/^  COLOR_DROPPED,$/;"	e	enum:__anon360	file:
COLOR_ERASE_INTEN	paint-funcs/paint-funcs-types.h	/^  COLOR_ERASE_INTEN$/;"	e	enum:__anon228
COLOR_HISTORY	gui/color-history.c	/^  COLOR_HISTORY = 1$/;"	e	enum:__anon202	file:
COLOR_HISTORY_SIZE	gui/color-history.h	26;"	d
COLOR_MANAGEMENT_BLURB	config/gimprc-blurbs.h	29;"	d
COLOR_PROFILE_POLICY_BLURB	config/gimprc-blurbs.h	32;"	d
COLUMNS	widgets/gimppaletteeditor.c	54;"	d	file:
COLUMNS	widgets/gimpviewrendererpalette.c	38;"	d	file:
COLUMN_ACTION	widgets/gimpcontrollereditor.c	/^  COLUMN_ACTION,$/;"	e	enum:__anon377	file:
COLUMN_BLURB	widgets/gimpcontrollereditor.c	/^  COLUMN_BLURB,$/;"	e	enum:__anon377	file:
COLUMN_CHANNEL	widgets/gimpcomponenteditor.c	/^  COLUMN_CHANNEL,$/;"	e	enum:__anon395	file:
COLUMN_EVENT	widgets/gimpcontrollereditor.c	/^  COLUMN_EVENT,$/;"	e	enum:__anon377	file:
COLUMN_EXTENSIONS	widgets/gimpfileprocview.c	/^  COLUMN_EXTENSIONS,$/;"	e	enum:__anon339	file:
COLUMN_HELP_ID	widgets/gimpfileprocview.c	/^  COLUMN_HELP_ID,$/;"	e	enum:__anon339	file:
COLUMN_ICON	widgets/gimpcontrollerlist.c	/^  COLUMN_ICON,$/;"	e	enum:__anon394	file:
COLUMN_LABEL	widgets/gimpfileprocview.c	/^  COLUMN_LABEL,$/;"	e	enum:__anon339	file:
COLUMN_LEFT_NUMBER	tools/gimprectangleoptions.c	/^  COLUMN_LEFT_NUMBER,$/;"	e	enum:__anon251	file:
COLUMN_NAME	widgets/gimpcomponenteditor.c	/^  COLUMN_NAME,$/;"	e	enum:__anon395	file:
COLUMN_NAME	widgets/gimpcontainercombobox.c	/^  COLUMN_NAME,$/;"	e	enum:__anon375	file:
COLUMN_NAME	widgets/gimpcontainertreeview.c	/^  COLUMN_NAME,$/;"	e	enum:__anon364	file:
COLUMN_NAME	widgets/gimpcontrollerlist.c	/^  COLUMN_NAME,$/;"	e	enum:__anon394	file:
COLUMN_NAME_ATTRIBUTES	widgets/gimpcontainertreeview.c	/^  COLUMN_NAME_ATTRIBUTES,$/;"	e	enum:__anon364	file:
COLUMN_PROC	widgets/gimpfileprocview.c	/^  COLUMN_PROC,$/;"	e	enum:__anon339	file:
COLUMN_RENDERER	widgets/gimpcomponenteditor.c	/^  COLUMN_RENDERER,$/;"	e	enum:__anon395	file:
COLUMN_RENDERER	widgets/gimpcontainercombobox.c	/^  COLUMN_RENDERER,$/;"	e	enum:__anon375	file:
COLUMN_RENDERER	widgets/gimpcontainertreeview.c	/^  COLUMN_RENDERER,$/;"	e	enum:__anon364	file:
COLUMN_RIGHT_NUMBER	tools/gimprectangleoptions.c	/^  COLUMN_RIGHT_NUMBER,$/;"	e	enum:__anon251	file:
COLUMN_STOCK_ID	widgets/gimpcontrollereditor.c	/^  COLUMN_STOCK_ID,$/;"	e	enum:__anon377	file:
COLUMN_TEXT	tools/gimprectangleoptions.c	/^  COLUMN_TEXT,$/;"	e	enum:__anon251	file:
COLUMN_TYPE	widgets/gimpcontrollerlist.c	/^  COLUMN_TYPE,$/;"	e	enum:__anon394	file:
COLUMN_VISIBLE	widgets/gimpcomponenteditor.c	/^  COLUMN_VISIBLE,$/;"	e	enum:__anon395	file:
COMBINE_INDEXED_A_INDEXED_A	paint-funcs/paint-funcs-types.h	/^  COMBINE_INDEXED_A_INDEXED_A,$/;"	e	enum:__anon228
COMBINE_INDEXED_INDEXED	paint-funcs/paint-funcs-types.h	/^  COMBINE_INDEXED_INDEXED,$/;"	e	enum:__anon228
COMBINE_INDEXED_INDEXED_A	paint-funcs/paint-funcs-types.h	/^  COMBINE_INDEXED_INDEXED_A,$/;"	e	enum:__anon228
COMBINE_INTEN_A_CHANNEL_MASK	paint-funcs/paint-funcs-types.h	/^  COMBINE_INTEN_A_CHANNEL_MASK,$/;"	e	enum:__anon228
COMBINE_INTEN_A_CHANNEL_SELECTION	paint-funcs/paint-funcs-types.h	/^  COMBINE_INTEN_A_CHANNEL_SELECTION,$/;"	e	enum:__anon228
COMBINE_INTEN_A_INDEXED	paint-funcs/paint-funcs-types.h	/^  COMBINE_INTEN_A_INDEXED,$/;"	e	enum:__anon228
COMBINE_INTEN_A_INDEXED_A	paint-funcs/paint-funcs-types.h	/^  COMBINE_INTEN_A_INDEXED_A,$/;"	e	enum:__anon228
COMBINE_INTEN_A_INTEN	paint-funcs/paint-funcs-types.h	/^  COMBINE_INTEN_A_INTEN,$/;"	e	enum:__anon228
COMBINE_INTEN_A_INTEN_A	paint-funcs/paint-funcs-types.h	/^  COMBINE_INTEN_A_INTEN_A,$/;"	e	enum:__anon228
COMBINE_INTEN_INTEN	paint-funcs/paint-funcs-types.h	/^  COMBINE_INTEN_INTEN,$/;"	e	enum:__anon228
COMBINE_INTEN_INTEN_A	paint-funcs/paint-funcs-types.h	/^  COMBINE_INTEN_INTEN_A,$/;"	e	enum:__anon228
COMPAT_BLURB	pdb/gimppdb-query.c	49;"	d	file:
COMPILE_3DNOW_IS_OKAY	composite/gimp-composite-3dnow.h	17;"	d
COMPILE_ALTIVEC_IS_OKAY	composite/gimp-composite-altivec.h	15;"	d
COMPILE_MMX_IS_OKAY	composite/gimp-composite-mmx.h	23;"	d
COMPILE_SSE2_IS_OKAY	composite/gimp-composite-sse2.h	17;"	d
COMPILE_SSE_IS_OKAY	composite/gimp-composite-sse.h	17;"	d
COMPILE_VIS_IS_OKAY	composite/gimp-composite-vis.h	15;"	d
COMPONENT_ACTIVE_CHANGED	core/gimpimage.c	/^  COMPONENT_ACTIVE_CHANGED,$/;"	e	enum:__anon126	file:
COMPONENT_VISIBILITY_CHANGED	core/gimpimage.c	/^  COMPONENT_VISIBILITY_CHANGED,$/;"	e	enum:__anon126	file:
COMPRESS_FRACTAL	xcf/xcf-private.h	/^  COMPRESS_FRACTAL           =  3   \/* unused *\/$/;"	e	enum:__anon420
COMPRESS_NONE	xcf/xcf-private.h	/^  COMPRESS_NONE              =  0,$/;"	e	enum:__anon420
COMPRESS_RLE	xcf/xcf-private.h	/^  COMPRESS_RLE               =  1,$/;"	e	enum:__anon420
COMPRESS_ZLIB	xcf/xcf-private.h	/^  COMPRESS_ZLIB              =  2,  \/* unused *\/$/;"	e	enum:__anon420
CONFIRM	widgets/gimpcontainerpopup.c	/^  CONFIRM,$/;"	e	enum:__anon333	file:
CONFIRM_ON_CLOSE_BLURB	config/gimprc-blurbs.h	35;"	d
CONF_FNAME	text/gimp-fonts.c	43;"	d	file:
CONST_BUFFER	composite/gimp-composite-altivec.c	40;"	d	file:
CONST_BUFFER	composite/gimp-composite-altivec.c	43;"	d	file:
CONTEXT	widgets/gimpview.c	/^  CONTEXT,$/;"	e	enum:__anon365	file:
CONTEXT_ITEM	widgets/gimpcontainerview.c	/^  CONTEXT_ITEM,$/;"	e	enum:__anon363	file:
CONTRAST	tools/gimpbrightnesscontrasttool.c	49;"	d	file:
CONTROL_HEIGHT	tools/gimplevelstool.c	71;"	d	file:
CONTROL_HEIGHT	widgets/gimphistogrambox.c	42;"	d	file:
COPY_VERTEX	display/gimpdisplayshell-preview.c	207;"	d	file:
COPY_VERTEX	display/gimpdisplayshell-preview.c	264;"	d	file:
COST_WIDTH	tools/gimpiscissorstool.c	94;"	d	file:
CREATING	tools/gimpmeasuretool.h	/^  CREATING,$/;"	e	enum:__anon280
CROSSHAIR	display/gimpdisplayshell-draw.c	154;"	d	file:
CUBIC_ROW	core/gimp-transform-region.c	1088;"	d	file:
CUBIC_SCALED_ROW	core/gimp-transform-region.c	1092;"	d	file:
CURRENT_VALUE	base/siox.c	179;"	d	file:
CURSOR_FORMAT_BLURB	config/gimprc-blurbs.h	38;"	d
CURSOR_FORMAT_LENGTH	display/gimpstatusbar.h	27;"	d
CURSOR_LEN	display/gimpstatusbar.c	51;"	d	file:
CURSOR_MODE_BLURB	config/gimprc-blurbs.h	41;"	d
CURSOR_UPDATING_BLURB	config/gimprc-blurbs.h	44;"	d
CURVES_NUM_POINTS	base/curves.h	22;"	d
CVector	base/cpercep.c	/^typedef double CVector[3];$/;"	t	file:
CYAN_RED	tools/gimpcolorbalancetool.c	43;"	d	file:
ChannelOptionsDialog	dialogs/channel-options-dialog.h	/^typedef struct _ChannelOptionsDialog ChannelOptionsDialog;$/;"	t	typeref:struct:_ChannelOptionsDialog
ClampedSide	tools/gimprectangletool.c	/^} ClampedSide;$/;"	t	typeref:enum:__anon284	file:
Cleanup_Func	core/gimpimage-convert.c	/^typedef void (* Cleanup_Func) (QuantizeObj *);$/;"	t	file:
Color	core/gimpimage-convert.c	/^typedef struct _Color Color;$/;"	t	typeref:struct:_Color	file:
ColorBalance	base/base-types.h	/^typedef struct _ColorBalance        ColorBalance;$/;"	t	typeref:struct:_ColorBalance
ColorDisplayDialog	display/gimpdisplayshell-filter-dialog.c	/^} ColorDisplayDialog;$/;"	t	typeref:struct:__anon184	file:
ColorFreq	core/gimpimage-convert.c	/^typedef unsigned long ColorFreq;$/;"	t	file:
ColorHash	core/gimpimage-colorhash.c	/^typedef struct _ColorHash ColorHash;$/;"	t	typeref:struct:_ColorHash	file:
Colorize	base/base-types.h	/^typedef struct _Colorize            Colorize;$/;"	t	typeref:struct:_Colorize
ColorsEqualFunc	core/gimpimage-crop.c	/^typedef AutoCropType (* ColorsEqualFunc) (guchar *col1,$/;"	t	file:
CombinationMode	paint-funcs/paint-funcs-types.h	/^} CombinationMode;$/;"	t	typeref:enum:__anon228
ConfirmData	widgets/gimpactionview.c	/^} ConfirmData;$/;"	t	typeref:struct:__anon373	file:
ContinuousRegionData	core/gimpimage-contiguous-region.c	/^} ContinuousRegionData;$/;"	t	typeref:struct:__anon100	file:
Curves	base/base-types.h	/^typedef struct _Curves              Curves;$/;"	t	typeref:struct:_Curves
D	composite/gimp-composite-generic-installer.c	/^  GimpPixelFormat D;$/;"	m	struct:install_table	file:
D	composite/gimp-composite-mmx-installer.c	/^  GimpPixelFormat D;$/;"	m	struct:install_table	file:
D	composite/gimp-composite-sse-installer.c	/^  GimpPixelFormat D;$/;"	m	struct:install_table	file:
D	composite/gimp-composite-sse2-installer.c	/^  GimpPixelFormat D;$/;"	m	struct:install_table	file:
D	composite/gimp-composite.h	/^  guchar          *D;             \/* Destination *\/$/;"	m	struct:__anon33
D	core/gimpcontainer.c	40;"	d	file:
D	core/gimpcontainer.c	42;"	d	file:
D	display/gimpdisplayshell-callbacks.c	84;"	d	file:
D	display/gimpdisplayshell-callbacks.c	86;"	d	file:
D	display/gimpdisplayshell-dnd.c	65;"	d	file:
D	display/gimpdisplayshell-dnd.c	67;"	d	file:
D	widgets/gimpdialogfactory.c	47;"	d	file:
D	widgets/gimpdialogfactory.c	49;"	d	file:
D	widgets/gimpdnd-xds.c	56;"	d	file:
D	widgets/gimpdnd-xds.c	58;"	d	file:
D	widgets/gimpdnd.c	65;"	d	file:
D	widgets/gimpdnd.c	67;"	d	file:
D	widgets/gimpselectiondata.c	61;"	d	file:
D	widgets/gimpselectiondata.c	63;"	d	file:
DASHES_HEIGHT	widgets/gimpcellrendererdashes.c	34;"	d	file:
DASHES_WIDTH	widgets/gimpcellrendererdashes.c	33;"	d	file:
DASH_INFO_CHANGED	core/gimpstrokeoptions.c	/^  DASH_INFO_CHANGED,$/;"	e	enum:__anon122	file:
DA_HEIGHT	tools/gimpcolorizetool.c	45;"	d	file:
DA_HEIGHT	tools/gimphuesaturationtool.c	46;"	d	file:
DA_WIDTH	tools/gimpcolorizetool.c	44;"	d	file:
DA_WIDTH	tools/gimphuesaturationtool.c	45;"	d	file:
DBUS_API_SUBJECT_TO_CHANGE	gui/gui.c	26;"	d	file:
DEBUGPRINT	text/gimpfont.c	46;"	d	file:
DEBUG_MEMSIZE	core/gimpobject.c	378;"	d	file:
DEBUG_MEMSIZE	widgets/gimpview.c	402;"	d	file:
DEFAULT_ACTIVATE_ON_FOCUS	config/gimpdisplayconfig.c	41;"	d	file:
DEFAULT_APPLICATION_MODE	paint/gimppaintoptions.c	38;"	d	file:
DEFAULT_AREA	widgets/gimpfgbgeditor.c	/^  DEFAULT_AREA$/;"	e	enum:__anon386	file:
DEFAULT_BRUSH	config/gimpcoreconfig.c	41;"	d	file:
DEFAULT_BRUSH_BLURB	config/gimprc-blurbs.h	48;"	d
DEFAULT_BRUSH_SCALE	paint/gimppaintoptions.c	37;"	d	file:
DEFAULT_BUTTON_ICON_SIZE	widgets/gimpeditor.c	42;"	d	file:
DEFAULT_BUTTON_RELIEF	widgets/gimptoolbox.c	59;"	d	file:
DEFAULT_BUTTON_SPACING	widgets/gimpeditor.c	41;"	d	file:
DEFAULT_COMMENT	config/gimpcoreconfig.c	46;"	d	file:
DEFAULT_CONTENT_SPACING	widgets/gimpeditor.c	40;"	d	file:
DEFAULT_CONVOLVE_RATE	paint/gimpconvolveoptions.c	31;"	d	file:
DEFAULT_CONVOLVE_TYPE	paint/gimpconvolveoptions.c	30;"	d	file:
DEFAULT_DOCK_HEIGHT	widgets/gimpdock.c	48;"	d	file:
DEFAULT_DOT_FOR_DOT_BLURB	config/gimprc-blurbs.h	52;"	d
DEFAULT_FADE_LENGTH	paint/gimppaintoptions.c	50;"	d	file:
DEFAULT_FADE_UNIT	paint/gimppaintoptions.c	51;"	d	file:
DEFAULT_FONT	config/gimpcoreconfig.c	45;"	d	file:
DEFAULT_FONT_BLURB	config/gimprc-blurbs.h	56;"	d
DEFAULT_FULLSCREEN_VIEW_BLURB	config/gimprc-blurbs.h	88;"	d
DEFAULT_GIMP_HELP_BROWSER	config/gimpguiconfig.c	37;"	d	file:
DEFAULT_GRADIENT	config/gimpcoreconfig.c	44;"	d	file:
DEFAULT_GRADIENT_BLURB	config/gimprc-blurbs.h	59;"	d
DEFAULT_GRADIENT_LENGTH	paint/gimppaintoptions.c	59;"	d	file:
DEFAULT_GRADIENT_REPEAT	paint/gimppaintoptions.c	58;"	d	file:
DEFAULT_GRADIENT_REVERSE	paint/gimppaintoptions.c	57;"	d	file:
DEFAULT_GRADIENT_UNIT	paint/gimppaintoptions.c	60;"	d	file:
DEFAULT_GRID_BLURB	config/gimprc-blurbs.h	62;"	d
DEFAULT_HARD	paint/gimppaintoptions.c	39;"	d	file:
DEFAULT_HEIGHT	widgets/gimpdockseparator.c	41;"	d	file:
DEFAULT_IMAGE_BLURB	config/gimprc-blurbs.h	65;"	d
DEFAULT_IMAGE_HEIGHT	core/gimptemplate.c	50;"	d	file:
DEFAULT_IMAGE_HEIGHT	core/gimptemplate.c	53;"	d	file:
DEFAULT_IMAGE_WIDTH	core/gimptemplate.c	49;"	d	file:
DEFAULT_IMAGE_WIDTH	core/gimptemplate.c	52;"	d	file:
DEFAULT_JITTER_AMOUNT	paint/gimppaintoptions.c	54;"	d	file:
DEFAULT_MAX_INC	tools/gimpfreeselecttool.c	44;"	d	file:
DEFAULT_MENU_VIEW_SIZE	widgets/gimpmenudock.c	51;"	d	file:
DEFAULT_MINIMAL_HEIGHT	widgets/gimpdataeditor.c	48;"	d	file:
DEFAULT_MINIMAL_WIDTH	widgets/gimpmenudock.c	50;"	d	file:
DEFAULT_MONITOR_RESOLUTION	config/gimpdisplayconfig.c	42;"	d	file:
DEFAULT_N_SEGMENTS	widgets/gimpdasheditor.c	40;"	d	file:
DEFAULT_PALETTE	config/gimpcoreconfig.c	43;"	d	file:
DEFAULT_PALETTE_BLURB	config/gimprc-blurbs.h	71;"	d
DEFAULT_PATTERN	config/gimpcoreconfig.c	42;"	d	file:
DEFAULT_PATTERN_BLURB	config/gimprc-blurbs.h	68;"	d
DEFAULT_PRESSURE_COLOR	paint/gimppaintoptions.c	47;"	d	file:
DEFAULT_PRESSURE_EXPANDED	paint/gimppaintoptions.c	41;"	d	file:
DEFAULT_PRESSURE_HARDNESS	paint/gimppaintoptions.c	43;"	d	file:
DEFAULT_PRESSURE_INVERSE_SIZE	paint/gimppaintoptions.c	46;"	d	file:
DEFAULT_PRESSURE_OPACITY	paint/gimppaintoptions.c	42;"	d	file:
DEFAULT_PRESSURE_RATE	paint/gimppaintoptions.c	44;"	d	file:
DEFAULT_PRESSURE_SIZE	paint/gimppaintoptions.c	45;"	d	file:
DEFAULT_RESOLUTION	core/gimptemplate.c	56;"	d	file:
DEFAULT_SCREEN	widgets/gimpsessioninfo.c	49;"	d	file:
DEFAULT_SNAP_DISTANCE_BLURB	config/gimprc-blurbs.h	74;"	d
DEFAULT_TAB_BORDER	widgets/gimpdockbook.c	47;"	d	file:
DEFAULT_TAB_ICON_SIZE	widgets/gimpdockbook.c	48;"	d	file:
DEFAULT_THEME	config/gimpguiconfig.c	38;"	d	file:
DEFAULT_THRESHOLD_BLURB	config/gimprc-blurbs.h	78;"	d
DEFAULT_TOOL_ICON_SIZE	widgets/gimptoolbox.c	58;"	d	file:
DEFAULT_USE_FADE	paint/gimppaintoptions.c	49;"	d	file:
DEFAULT_USE_GRADIENT	paint/gimppaintoptions.c	56;"	d	file:
DEFAULT_USE_JITTER	paint/gimppaintoptions.c	53;"	d	file:
DEFAULT_VIEW_BLURB	config/gimprc-blurbs.h	85;"	d
DEFAULT_WEB_BROWSER	config/gimpguiconfig.c	41;"	d	file:
DEFAULT_WEB_BROWSER	config/gimpguiconfig.c	43;"	d	file:
DEST_COLUMN_ENABLED	widgets/gimpcolordisplayeditor.c	/^  DEST_COLUMN_ENABLED,$/;"	e	enum:__anon328	file:
DEST_COLUMN_FILTER	widgets/gimpcolordisplayeditor.c	/^  DEST_COLUMN_FILTER,$/;"	e	enum:__anon328	file:
DEST_COLUMN_ICON	widgets/gimpcolordisplayeditor.c	/^  DEST_COLUMN_ICON,$/;"	e	enum:__anon328	file:
DEST_COLUMN_NAME	widgets/gimpcolordisplayeditor.c	/^  DEST_COLUMN_NAME,$/;"	e	enum:__anon328	file:
DIRTY	core/gimpdata.c	/^  DIRTY,$/;"	e	enum:__anon153	file:
DIRTY	core/gimpimage.c	/^  DIRTY,$/;"	e	enum:__anon126	file:
DIR_CHANGED	widgets/gimptexteditor.c	/^  DIR_CHANGED,$/;"	e	enum:__anon387	file:
DISCONNECT	core/gimpobject.c	/^  DISCONNECT,$/;"	e	enum:__anon129	file:
DISPLAY_CHANGED	core/gimpcontext.c	/^  DISPLAY_CHANGED,$/;"	e	enum:__anon103	file:
DISTP	core/gimpimage-convert.c	3276;"	d	file:
DIST_SMOOTHER_BUFFER	paint/gimpink.h	27;"	d
DM	core/gimpimage-convert-data.h	/^static guchar DM[32][32] = {$/;"	v
DM_HEIGHT	core/gimpimage-convert-data.h	70;"	d
DM_HEIGHTMASK	core/gimpimage-convert-data.h	71;"	d
DM_ORIGINAL	core/gimpimage-convert-data.h	/^static const guchar DM_ORIGINAL[32][32] = {$/;"	v
DM_WIDTH	core/gimpimage-convert-data.h	68;"	d
DM_WIDTHMASK	core/gimpimage-convert-data.h	69;"	d
DND_WIDGET_ICON_SIZE	widgets/gimpdockbook.c	49;"	d	file:
DOCKABLE	dialogs/dialogs.c	113;"	d	file:
DOCKABLE_ADDED	widgets/gimpdockbook.c	/^  DOCKABLE_ADDED,$/;"	e	enum:__anon349	file:
DOCKABLE_REMOVED	widgets/gimpdockbook.c	/^  DOCKABLE_REMOVED,$/;"	e	enum:__anon349	file:
DOCKABLE_REORDERED	widgets/gimpdockbook.c	/^  DOCKABLE_REORDERED,$/;"	e	enum:__anon349	file:
DOCK_WINDOW_HINT_BLURB	config/gimprc-blurbs.h	91;"	d
DODGE_BURN_DEFAULT_EXPOSURE	paint/gimpdodgeburnoptions.c	32;"	d	file:
DODGE_BURN_DEFAULT_MODE	paint/gimpdodgeburnoptions.c	31;"	d	file:
DODGE_BURN_DEFAULT_TYPE	paint/gimpdodgeburnoptions.c	30;"	d	file:
DOUBLE2FIXED	core/gimp-transform-region.c	842;"	d	file:
DOUBLE_CLICKED	widgets/gimpview.c	/^  DOUBLE_CLICKED,$/;"	e	enum:__anon365	file:
DO_COMPONENT	display/gimpdisplayshell-render.c	914;"	d	file:
DRAG_ICON_OFFSET	widgets/gimpdnd.c	61;"	d	file:
DRAG_PREVIEW_SIZE	widgets/gimpdnd.c	60;"	d	file:
DRAW	tools/gimpcolorizetool.c	50;"	d	file:
DRAW	tools/gimphuesaturationtool.c	51;"	d	file:
DRAW_ACTIVE_CURVE	tools/gimpiscissorstool.h	/^  DRAW_ACTIVE_CURVE = 0x4,$/;"	e	enum:__anon269
DRAW_CURRENT_SEED	tools/gimpiscissorstool.h	/^  DRAW_CURRENT_SEED = 0x1,$/;"	e	enum:__anon269
DRAW_CURVE	tools/gimpiscissorstool.h	/^  DRAW_CURVE        = 0x2,$/;"	e	enum:__anon269
DRAW_LIVEWIRE	tools/gimpiscissorstool.h	/^  DRAW_LIVEWIRE     = 0x8$/;"	e	enum:__anon269
DRAW_NOTHING	tools/gimpiscissorstool.h	/^  DRAW_NOTHING      = 0x0,$/;"	e	enum:__anon269
DUMMY_0	core/gimpcontext.c	/^  DUMMY_0,$/;"	e	enum:__anon103	file:
DUMMY_1	core/gimpcontext.c	/^  DUMMY_1,$/;"	e	enum:__anon103	file:
DX	vectors/gimpvectors-warp.c	40;"	d	file:
DesaturateDialog	dialogs/desaturate-dialog.h	/^typedef struct _DesaturateDialog DesaturateDialog;$/;"	t	typeref:struct:_DesaturateDialog
EDGE_LEFT	paint/gimpink-blob.c	/^  EDGE_LEFT  = 1 << 0,$/;"	e	enum:__anon205	file:
EDGE_NONE	paint/gimpink-blob.c	/^  EDGE_NONE  = 0,$/;"	e	enum:__anon205	file:
EDGE_RIGHT	paint/gimpink-blob.c	/^  EDGE_RIGHT = 1 << 1$/;"	e	enum:__anon205	file:
EDIT_CHANGED	core/gimplayermask.c	/^  EDIT_CHANGED,$/;"	e	enum:__anon138	file:
EDIT_SELECT_SCROLL_LOCK	tools/gimpeditselectiontool.c	62;"	d	file:
ELEMENT_IS	file/gimprecentlist.c	202;"	d	file:
ELLIPSE_SHIFT	paint/gimpink-blob.c	219;"	d	file:
ENABLE_DEBUG_MENU	actions/debug-commands.h	24;"	d
ENTRY_ACTIVATED	widgets/gimppaletteview.c	/^  ENTRY_ACTIVATED,$/;"	e	enum:__anon360	file:
ENTRY_CLICKED	widgets/gimppaletteview.c	/^  ENTRY_CLICKED,$/;"	e	enum:__anon360	file:
ENTRY_CONTEXT	widgets/gimppaletteview.c	/^  ENTRY_CONTEXT,$/;"	e	enum:__anon360	file:
ENTRY_HEIGHT	widgets/gimppaletteeditor.c	52;"	d	file:
ENTRY_SELECTED	widgets/gimppaletteview.c	/^  ENTRY_SELECTED,$/;"	e	enum:__anon360	file:
ENTRY_WIDTH	widgets/gimppaletteeditor.c	51;"	d	file:
ENVIRON_PATH_BLURB	config/gimprc-blurbs.h	95;"	d
EPSILON	core/gimp-transform-resize.c	39;"	d	file:
EPSILON	core/gimpgradient.c	38;"	d	file:
EPSILON	core/gimppalette.c	39;"	d	file:
EPSILON	paint-funcs/paint-funcs.c	43;"	d	file:
EPSILON	paint-funcs/scale-region.c	34;"	d	file:
EPSILON	paint-funcs/subsample-region.c	32;"	d	file:
EPSILON	paint/gimpbrushcore.c	45;"	d	file:
EPSILON	paint/gimpheal.c	323;"	d	file:
EPSILON	tools/gimpaligntool.c	321;"	d	file:
EPSILON	tools/gimpbrushtool.c	299;"	d	file:
EPSILON	tools/gimpbrushtool.c	308;"	d	file:
EPSILON	vectors/gimpvectors-warp.c	39;"	d	file:
EPSILON	widgets/gimpcolormapeditor.c	66;"	d	file:
EPSILON	widgets/gimpgradienteditor.c	77;"	d	file:
ERASER_DEFAULT_ANTI_ERASE	paint/gimperaseroptions.c	30;"	d	file:
ERASE_INDEXED	paint-funcs/paint-funcs-types.h	/^  ERASE_INDEXED,$/;"	e	enum:__anon228
ERASE_INTEN	paint-funcs/paint-funcs-types.h	/^  ERASE_INTEN,$/;"	e	enum:__anon228
ERRMSG_SHM_DISABLE	plug-in/gimppluginshm.c	74;"	d	file:
EVENT_MAPPED	widgets/gimpcontrollerinfo.c	/^  EVENT_MAPPED,$/;"	e	enum:__anon337	file:
EXIT	core/gimp.c	/^  EXIT,$/;"	e	enum:__anon123	file:
EXTEND_BY	tools/gimpiscissorstool.c	90;"	d	file:
EXTEND_EDITABLE	vectors/vectors-enums.h	/^  EXTEND_EDITABLE$/;"	e	enum:__anon301
EXTEND_SIMPLE	vectors/vectors-enums.h	/^  EXTEND_SIMPLE,$/;"	e	enum:__anon301
EXTENSION	plug-in/plug-in-rc.c	/^  EXTENSION,$/;"	e	enum:__anon237	file:
EdgeType	paint/gimpink-blob.c	/^} EdgeType;$/;"	t	typeref:enum:__anon205	file:
ExtendedAction	widgets/gimpeditor.c	/^} ExtendedAction;$/;"	t	typeref:struct:__anon346	file:
FC_REQUIRED_MAJOR	sanity.c	127;"	d	file:
FC_REQUIRED_MAJOR	sanity.c	146;"	d	file:
FC_REQUIRED_MICRO	sanity.c	129;"	d	file:
FC_REQUIRED_MICRO	sanity.c	148;"	d	file:
FC_REQUIRED_MINOR	sanity.c	128;"	d	file:
FC_REQUIRED_MINOR	sanity.c	147;"	d	file:
FG_BG_HSV_CCW_KEY	core/gimp-gradients.c	39;"	d	file:
FG_BG_HSV_CW_KEY	core/gimp-gradients.c	40;"	d	file:
FG_BG_RGB_KEY	core/gimp-gradients.c	38;"	d	file:
FG_TRANSPARENT_KEY	core/gimp-gradients.c	41;"	d	file:
FIELD_COLS	paint/gimpconvolve.c	42;"	d	file:
FIFTEEN_DEG	tools/gimprotatetool.c	49;"	d	file:
FILE_IMPORT	dialogs/palette-import-dialog.c	/^  FILE_IMPORT$/;"	e	enum:__anon177	file:
FILE_MATCH_MAGIC	file/file-procedure.c	/^  FILE_MATCH_MAGIC,$/;"	e	enum:__anon200	file:
FILE_MATCH_NONE	file/file-procedure.c	/^  FILE_MATCH_NONE,$/;"	e	enum:__anon200	file:
FILE_MATCH_SIZE	file/file-procedure.c	/^  FILE_MATCH_SIZE$/;"	e	enum:__anon200	file:
FILL_MASK	dialogs/offset-dialog.c	47;"	d	file:
FILTER_MAX_KEYS	tools/gimpeditselectiontool.c	872;"	d	file:
FILTER_MAX_KEYS	tools/gimpeditselectiontool.c	959;"	d	file:
FIND_BLOB_FINAL	base/siox.c	470;"	d	file:
FIND_BLOB_FORCEFG	base/siox.c	468;"	d	file:
FIND_BLOB_SELECTED	base/siox.c	467;"	d	file:
FIND_BLOB_VISITED	base/siox.c	469;"	d	file:
FINISHED	tools/gimpmeasuretool.h	/^  FINISHED$/;"	e	enum:__anon280
FINITE	core/gimp-transform-resize.c	31;"	d	file:
FINITE	core/gimp-transform-resize.c	33;"	d	file:
FINITE	core/gimp-transform-resize.c	35;"	d	file:
FINITE	core/gimpdrawable-transform.c	54;"	d	file:
FINITE	core/gimpdrawable-transform.c	56;"	d	file:
FINITE	core/gimpdrawable-transform.c	58;"	d	file:
FINITE	pdb/image_cmds.c	63;"	d	file:
FINITE	pdb/image_cmds.c	65;"	d	file:
FINITE	pdb/image_cmds.c	67;"	d	file:
FIXED	tools/gimpiscissorstool.c	91;"	d	file:
FIXED2DOUBLE	core/gimp-transform-region.c	843;"	d	file:
FIXED_RULE_ENTRY_OFFSET	tools/gimprectangleoptions.c	72;"	d	file:
FIXED_SHIFT	core/gimp-transform-region.c	840;"	d	file:
FIXED_UNIT	core/gimp-transform-region.c	841;"	d	file:
FLOATING_SELECTION_CHANGED	core/gimpimage.c	/^  FLOATING_SELECTION_CHANGED,$/;"	e	enum:__anon126	file:
FLUSH	core/gimpimage.c	/^  FLUSH,$/;"	e	enum:__anon126	file:
FLUSH	core/gimpimagemap.c	/^  FLUSH,$/;"	e	enum:__anon141	file:
FONT_CHANGED	core/gimpcontext.c	/^  FONT_CHANGED,$/;"	e	enum:__anon103	file:
FONT_PATH_BLURB	config/gimprc-blurbs.h	142;"	d
FOREGROUND_AREA	widgets/gimpfgbgeditor.c	/^  FOREGROUND_AREA,$/;"	e	enum:__anon386	file:
FOREGROUND_CHANGED	core/gimpcontext.c	/^  FOREGROUND_CHANGED,$/;"	e	enum:__anon103	file:
FOREIGN	dialogs/dialogs.c	45;"	d	file:
FORMAT_STRING	widgets/gimpcursorview.c	400;"	d	file:
FRACTALEXPLORER_PATH_BLURB	config/gimprc-blurbs.h	98;"	d
FREE	core/gimpundo.c	/^  FREE,$/;"	e	enum:__anon157	file:
FREEZE	core/gimpcontainer.c	/^  FREEZE,$/;"	e	enum:__anon56	file:
FREEZE	vectors/gimpvectors.c	/^  FREEZE,$/;"	e	enum:__anon302	file:
FT_GLYPH_FORMAT_OUTLINE	text/gimptext-vectors.c	50;"	d	file:
FT_LOAD_TARGET_MONO	text/gimptext-bitmap.c	36;"	d	file:
FT_LOAD_TARGET_MONO	text/gimptextlayout-render.c	43;"	d	file:
FT_REQUIRED_MAJOR	sanity.c	162;"	d	file:
FT_REQUIRED_MAJOR	sanity.c	197;"	d	file:
FT_REQUIRED_MICRO	sanity.c	164;"	d	file:
FT_REQUIRED_MICRO	sanity.c	199;"	d	file:
FT_REQUIRED_MINOR	sanity.c	163;"	d	file:
FT_REQUIRED_MINOR	sanity.c	198;"	d	file:
FUNSCALEX	display/gimpdisplayshell.h	45;"	d
FUNSCALEY	display/gimpdisplayshell.h	46;"	d
FadeDialog	dialogs/fade-dialog.c	/^} FadeDialog;$/;"	t	typeref:struct:__anon180	file:
FgBgTarget	widgets/gimpfgbgeditor.c	/^} FgBgTarget;$/;"	t	typeref:enum:__anon386	file:
FgSelectStroke	tools/gimpforegroundselecttool.c	/^} FgSelectStroke;$/;"	t	typeref:struct:__anon286	file:
FileMatchType	file/file-procedure.c	/^} FileMatchType;$/;"	t	typeref:enum:__anon200	file:
GAMMA	tools/gimplevelstool.c	58;"	d	file:
GAMMA_CORRECTION_BLURB	config/gimprc-blurbs.h	101;"	d
GBRUSH_FILE_VERSION	core/gimpbrush-header.h	22;"	d
GBRUSH_MAGIC	core/gimpbrush-header.h	23;"	d
GET_OPTIONS	display/gimpdisplayshell-appearance.c	47;"	d	file:
GFIG_PATH_BLURB	config/gimprc-blurbs.h	113;"	d
GFLARE_PATH_BLURB	config/gimprc-blurbs.h	116;"	d
GIMP	core/gimp.h	28;"	d
GIMPRESSIONIST_PATH_BLURB	config/gimprc-blurbs.h	119;"	d
GIMP_ABSOLUTE_CONVOL	base/base-enums.h	/^  GIMP_ABSOLUTE_CONVOL,    \/*  Absolute value              *\/$/;"	e	enum:__anon13
GIMP_ACRONYM	about.h	23;"	d
GIMP_ACTION	widgets/gimpaction.h	30;"	d
GIMP_ACTION_CLASS	widgets/gimpaction.h	31;"	d
GIMP_ACTION_FACTORY	widgets/gimpactionfactory.h	42;"	d
GIMP_ACTION_FACTORY_CLASS	widgets/gimpactionfactory.h	43;"	d
GIMP_ACTION_FACTORY_GET_CLASS	widgets/gimpactionfactory.h	46;"	d
GIMP_ACTION_GET_CLASS	widgets/gimpaction.h	34;"	d
GIMP_ACTION_GROUP	widgets/gimpactiongroup.h	29;"	d
GIMP_ACTION_GROUP_CLASS	widgets/gimpactiongroup.h	30;"	d
GIMP_ACTION_GROUP_GET_CLASS	widgets/gimpactiongroup.h	33;"	d
GIMP_ACTION_SELECT_FIRST	actions/actions-types.h	/^  GIMP_ACTION_SELECT_FIRST            = -1,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_LAST	actions/actions-types.h	/^  GIMP_ACTION_SELECT_LAST             = -2,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_NEXT	actions/actions-types.h	/^  GIMP_ACTION_SELECT_NEXT             = -6,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_PERCENT_NEXT	actions/actions-types.h	/^  GIMP_ACTION_SELECT_PERCENT_NEXT     = -10$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_PERCENT_PREVIOUS	actions/actions-types.h	/^  GIMP_ACTION_SELECT_PERCENT_PREVIOUS = -9,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_PREVIOUS	actions/actions-types.h	/^  GIMP_ACTION_SELECT_PREVIOUS         = -5,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_SET	actions/actions-types.h	/^  GIMP_ACTION_SELECT_SET              =  0,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_SKIP_NEXT	actions/actions-types.h	/^  GIMP_ACTION_SELECT_SKIP_NEXT        = -8,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_SKIP_PREVIOUS	actions/actions-types.h	/^  GIMP_ACTION_SELECT_SKIP_PREVIOUS    = -7,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_SMALL_NEXT	actions/actions-types.h	/^  GIMP_ACTION_SELECT_SMALL_NEXT       = -4,$/;"	e	enum:__anon3
GIMP_ACTION_SELECT_SMALL_PREVIOUS	actions/actions-types.h	/^  GIMP_ACTION_SELECT_SMALL_PREVIOUS   = -3,$/;"	e	enum:__anon3
GIMP_ACTION_VIEW	widgets/gimpactionview.h	43;"	d
GIMP_ACTION_VIEW_CLASS	widgets/gimpactionview.h	44;"	d
GIMP_ACTION_VIEW_COLUMN_ACCEL_CLOSURE	widgets/gimpactionview.h	/^  GIMP_ACTION_VIEW_COLUMN_ACCEL_CLOSURE,$/;"	e	enum:__anon329
GIMP_ACTION_VIEW_COLUMN_ACCEL_KEY	widgets/gimpactionview.h	/^  GIMP_ACTION_VIEW_COLUMN_ACCEL_KEY,$/;"	e	enum:__anon329
GIMP_ACTION_VIEW_COLUMN_ACCEL_MASK	widgets/gimpactionview.h	/^  GIMP_ACTION_VIEW_COLUMN_ACCEL_MASK,$/;"	e	enum:__anon329
GIMP_ACTION_VIEW_COLUMN_ACTION	widgets/gimpactionview.h	/^  GIMP_ACTION_VIEW_COLUMN_ACTION,$/;"	e	enum:__anon329
GIMP_ACTION_VIEW_COLUMN_LABEL	widgets/gimpactionview.h	/^  GIMP_ACTION_VIEW_COLUMN_LABEL,$/;"	e	enum:__anon329
GIMP_ACTION_VIEW_COLUMN_NAME	widgets/gimpactionview.h	/^  GIMP_ACTION_VIEW_COLUMN_NAME,$/;"	e	enum:__anon329
GIMP_ACTION_VIEW_COLUMN_STOCK_ID	widgets/gimpactionview.h	/^  GIMP_ACTION_VIEW_COLUMN_STOCK_ID,$/;"	e	enum:__anon329
GIMP_ACTION_VIEW_GET_CLASS	widgets/gimpactionview.h	47;"	d
GIMP_ACTION_VIEW_NUM_COLUMNS	widgets/gimpactionview.h	/^  GIMP_ACTION_VIEW_NUM_COLUMNS$/;"	e	enum:__anon329
GIMP_ACTIVE_COLOR_BACKGROUND	widgets/widgets-enums.h	/^  GIMP_ACTIVE_COLOR_BACKGROUND  \/*< desc="Background" >*\/$/;"	e	enum:__anon398
GIMP_ACTIVE_COLOR_FOREGROUND	widgets/widgets-enums.h	/^  GIMP_ACTIVE_COLOR_FOREGROUND, \/*< desc="Foreground" >*\/$/;"	e	enum:__anon398
GIMP_ADDITION_MODE	base/base-enums.h	/^  GIMP_ADDITION_MODE,        \/*< desc="Addition"             >*\/$/;"	e	enum:__anon11
GIMP_AIRBRUSH	paint/gimpairbrush.h	27;"	d
GIMP_AIRBRUSH_CLASS	paint/gimpairbrush.h	28;"	d
GIMP_AIRBRUSH_GET_CLASS	paint/gimpairbrush.h	31;"	d
GIMP_AIRBRUSH_OPTIONS	paint/gimpairbrushoptions.h	27;"	d
GIMP_AIRBRUSH_OPTIONS_CLASS	paint/gimpairbrushoptions.h	28;"	d
GIMP_AIRBRUSH_OPTIONS_GET_CLASS	paint/gimpairbrushoptions.h	31;"	d
GIMP_AIRBRUSH_TOOL	tools/gimpairbrushtool.h	27;"	d
GIMP_AIRBRUSH_TOOL_CLASS	tools/gimpairbrushtool.h	28;"	d
GIMP_AIRBRUSH_TOOL_GET_CLASS	tools/gimpairbrushtool.h	31;"	d
GIMP_ALIGN_BOTTOM	core/core-enums.h	/^  GIMP_ALIGN_BOTTOM,$/;"	e	enum:__anon64
GIMP_ALIGN_HCENTER	core/core-enums.h	/^  GIMP_ALIGN_HCENTER,$/;"	e	enum:__anon64
GIMP_ALIGN_LEFT	core/core-enums.h	/^  GIMP_ALIGN_LEFT,$/;"	e	enum:__anon64
GIMP_ALIGN_OPTIONS	tools/gimpalignoptions.h	27;"	d
GIMP_ALIGN_OPTIONS_CLASS	tools/gimpalignoptions.h	28;"	d
GIMP_ALIGN_OPTIONS_GET_CLASS	tools/gimpalignoptions.h	31;"	d
GIMP_ALIGN_REFERENCE_ACTIVE_CHANNEL	core/core-enums.h	/^  GIMP_ALIGN_REFERENCE_ACTIVE_CHANNEL, \/*< desc="Active channel" >*\/$/;"	e	enum:__anon65
GIMP_ALIGN_REFERENCE_ACTIVE_LAYER	core/core-enums.h	/^  GIMP_ALIGN_REFERENCE_ACTIVE_LAYER,   \/*< desc="Active layer"   >*\/$/;"	e	enum:__anon65
GIMP_ALIGN_REFERENCE_ACTIVE_PATH	core/core-enums.h	/^  GIMP_ALIGN_REFERENCE_ACTIVE_PATH     \/*< desc="Active path"    >*\/$/;"	e	enum:__anon65
GIMP_ALIGN_REFERENCE_FIRST	core/core-enums.h	/^  GIMP_ALIGN_REFERENCE_FIRST,          \/*< desc="First item"     >*\/$/;"	e	enum:__anon65
GIMP_ALIGN_REFERENCE_IMAGE	core/core-enums.h	/^  GIMP_ALIGN_REFERENCE_IMAGE,          \/*< desc="Image"          >*\/$/;"	e	enum:__anon65
GIMP_ALIGN_REFERENCE_SELECTION	core/core-enums.h	/^  GIMP_ALIGN_REFERENCE_SELECTION,      \/*< desc="Selection"      >*\/$/;"	e	enum:__anon65
GIMP_ALIGN_RIGHT	core/core-enums.h	/^  GIMP_ALIGN_RIGHT,$/;"	e	enum:__anon64
GIMP_ALIGN_TOOL	tools/gimpaligntool.h	27;"	d
GIMP_ALIGN_TOOL_CLASS	tools/gimpaligntool.h	28;"	d
GIMP_ALIGN_TOOL_GET_CLASS	tools/gimpaligntool.h	31;"	d
GIMP_ALIGN_TOP	core/core-enums.h	/^  GIMP_ALIGN_TOP,$/;"	e	enum:__anon64
GIMP_ALIGN_VCENTER	core/core-enums.h	/^  GIMP_ALIGN_VCENTER,$/;"	e	enum:__anon64
GIMP_ALL_HUES	base/base-enums.h	/^  GIMP_ALL_HUES,$/;"	e	enum:__anon12
GIMP_ANCHOR	vectors/gimpanchor.h	25;"	d
GIMP_ANCHOR_ANCHOR	vectors/vectors-enums.h	/^  GIMP_ANCHOR_ANCHOR,$/;"	e	enum:__anon299
GIMP_ANCHOR_CONTROL	vectors/vectors-enums.h	/^  GIMP_ANCHOR_CONTROL$/;"	e	enum:__anon299
GIMP_ANCHOR_FEATURE_ALIGNED	vectors/vectors-enums.h	/^  GIMP_ANCHOR_FEATURE_ALIGNED,$/;"	e	enum:__anon300
GIMP_ANCHOR_FEATURE_EDGE	vectors/vectors-enums.h	/^  GIMP_ANCHOR_FEATURE_EDGE,$/;"	e	enum:__anon300
GIMP_ANCHOR_FEATURE_NONE	vectors/vectors-enums.h	/^  GIMP_ANCHOR_FEATURE_NONE,$/;"	e	enum:__anon300
GIMP_ANCHOR_FEATURE_SYMMETRIC	vectors/vectors-enums.h	/^  GIMP_ANCHOR_FEATURE_SYMMETRIC$/;"	e	enum:__anon300
GIMP_ANTI_ERASE_MODE	base/base-enums.h	/^  GIMP_ANTI_ERASE_MODE       \/*< pdb-skip, desc="Anti erase" >*\/$/;"	e	enum:__anon11
GIMP_ARRANGE_BOTTOM	core/core-enums.h	/^  GIMP_ARRANGE_BOTTOM$/;"	e	enum:__anon64
GIMP_ARRANGE_HCENTER	core/core-enums.h	/^  GIMP_ARRANGE_HCENTER,$/;"	e	enum:__anon64
GIMP_ARRANGE_LEFT	core/core-enums.h	/^  GIMP_ARRANGE_LEFT,$/;"	e	enum:__anon64
GIMP_ARRANGE_RIGHT	core/core-enums.h	/^  GIMP_ARRANGE_RIGHT,$/;"	e	enum:__anon64
GIMP_ARRANGE_TOP	core/core-enums.h	/^  GIMP_ARRANGE_TOP,$/;"	e	enum:__anon64
GIMP_ARRANGE_VCENTER	core/core-enums.h	/^  GIMP_ARRANGE_VCENTER,$/;"	e	enum:__anon64
GIMP_BACKGROUND_FILL	core/core-enums.h	/^  GIMP_BACKGROUND_FILL,   \/*< desc="Background color" >*\/$/;"	e	enum:__anon66
GIMP_BASE_CONFIG	config/gimpbaseconfig.h	29;"	d
GIMP_BASE_CONFIG_CLASS	config/gimpbaseconfig.h	30;"	d
GIMP_BEHIND_MODE	base/base-enums.h	/^  GIMP_BEHIND_MODE,          \/*< desc="Behind"               >*\/$/;"	e	enum:__anon11
GIMP_BEZIER_STROKE	vectors/gimpbezierstroke.h	29;"	d
GIMP_BEZIER_STROKE_CLASS	vectors/gimpbezierstroke.h	30;"	d
GIMP_BEZIER_STROKE_GET_CLASS	vectors/gimpbezierstroke.h	33;"	d
GIMP_BLEND_OPTIONS	tools/gimpblendoptions.h	27;"	d
GIMP_BLEND_OPTIONS_CLASS	tools/gimpblendoptions.h	28;"	d
GIMP_BLEND_OPTIONS_GET_CLASS	tools/gimpblendoptions.h	31;"	d
GIMP_BLEND_TOOL	tools/gimpblendtool.h	27;"	d
GIMP_BLEND_TOOL_CLASS	tools/gimpblendtool.h	28;"	d
GIMP_BLEND_TOOL_GET_CLASS	tools/gimpblendtool.h	31;"	d
GIMP_BLEND_TOOL_GET_OPTIONS	tools/gimpblendtool.h	33;"	d
GIMP_BLOB_EDITOR	widgets/gimpblobeditor.h	29;"	d
GIMP_BLOB_EDITOR_CLASS	widgets/gimpblobeditor.h	30;"	d
GIMP_BLOB_EDITOR_GET_CLASS	widgets/gimpblobeditor.h	33;"	d
GIMP_BLUE_HUES	base/base-enums.h	/^  GIMP_BLUE_HUES,$/;"	e	enum:__anon12
GIMP_BLUR_CONVOLVE	paint/paint-enums.h	/^  GIMP_BLUR_CONVOLVE,     \/*< desc="Blur"    >*\/$/;"	e	enum:__anon216
GIMP_BRIGHTNESS_CONTRAST_TOOL	tools/gimpbrightnesscontrasttool.h	27;"	d
GIMP_BRIGHTNESS_CONTRAST_TOOL_CLASS	tools/gimpbrightnesscontrasttool.h	28;"	d
GIMP_BRIGHTNESS_CONTRAST_TOOL_GET_CLASS	tools/gimpbrightnesscontrasttool.h	31;"	d
GIMP_BRUSH	core/gimpbrush.h	28;"	d
GIMP_BRUSH_CLASS	core/gimpbrush.h	29;"	d
GIMP_BRUSH_CLIPBOARD	core/gimpbrushclipboard.h	30;"	d
GIMP_BRUSH_CLIPBOARD_CLASS	core/gimpbrushclipboard.h	31;"	d
GIMP_BRUSH_CLIPBOARD_GET_CLASS	core/gimpbrushclipboard.h	34;"	d
GIMP_BRUSH_CORE	paint/gimpbrushcore.h	34;"	d
GIMP_BRUSH_CORE_CLASS	paint/gimpbrushcore.h	35;"	d
GIMP_BRUSH_CORE_GET_CLASS	paint/gimpbrushcore.h	38;"	d
GIMP_BRUSH_EDITOR	widgets/gimpbrusheditor.h	30;"	d
GIMP_BRUSH_EDITOR_CLASS	widgets/gimpbrusheditor.h	31;"	d
GIMP_BRUSH_EDITOR_GET_CLASS	widgets/gimpbrusheditor.h	34;"	d
GIMP_BRUSH_FACTORY_VIEW	widgets/gimpbrushfactoryview.h	29;"	d
GIMP_BRUSH_FACTORY_VIEW_CLASS	widgets/gimpbrushfactoryview.h	30;"	d
GIMP_BRUSH_FACTORY_VIEW_GET_CLASS	widgets/gimpbrushfactoryview.h	33;"	d
GIMP_BRUSH_FILE_EXTENSION	core/gimpbrush-load.h	23;"	d
GIMP_BRUSH_GENERATED	core/gimpbrushgenerated.h	29;"	d
GIMP_BRUSH_GENERATED_CIRCLE	core/core-enums.h	/^  GIMP_BRUSH_GENERATED_CIRCLE,  \/*< desc="Circle"  >*\/$/;"	e	enum:__anon72
GIMP_BRUSH_GENERATED_CLASS	core/gimpbrushgenerated.h	30;"	d
GIMP_BRUSH_GENERATED_DIAMOND	core/core-enums.h	/^  GIMP_BRUSH_GENERATED_DIAMOND  \/*< desc="Diamond" >*\/$/;"	e	enum:__anon72
GIMP_BRUSH_GENERATED_FILE_EXTENSION	core/gimpbrushgenerated-load.h	25;"	d
GIMP_BRUSH_GENERATED_GET_CLASS	core/gimpbrushgenerated.h	33;"	d
GIMP_BRUSH_GENERATED_SQUARE	core/core-enums.h	/^  GIMP_BRUSH_GENERATED_SQUARE,  \/*< desc="Square"  >*\/$/;"	e	enum:__anon72
GIMP_BRUSH_GET_CLASS	core/gimpbrush.h	32;"	d
GIMP_BRUSH_HARD	paint/paint-enums.h	/^  GIMP_BRUSH_HARD,$/;"	e	enum:__anon213
GIMP_BRUSH_PIPE	core/gimpbrushpipe.h	28;"	d
GIMP_BRUSH_PIPE_CLASS	core/gimpbrushpipe.h	29;"	d
GIMP_BRUSH_PIPE_FILE_EXTENSION	core/gimpbrushpipe-load.h	24;"	d
GIMP_BRUSH_PIPE_GET_CLASS	core/gimpbrushpipe.h	32;"	d
GIMP_BRUSH_PIXMAP_FILE_EXTENSION	core/gimpbrush-load.h	24;"	d
GIMP_BRUSH_PRESSURE	paint/paint-enums.h	/^  GIMP_BRUSH_PRESSURE  \/*< pdb-skip, skip >*\/$/;"	e	enum:__anon213
GIMP_BRUSH_PSP_FILE_EXTENSION	core/gimpbrush-load.h	26;"	d
GIMP_BRUSH_PS_FILE_EXTENSION	core/gimpbrush-load.h	25;"	d
GIMP_BRUSH_SELECT	widgets/gimpbrushselect.h	31;"	d
GIMP_BRUSH_SELECT_CLASS	widgets/gimpbrushselect.h	32;"	d
GIMP_BRUSH_SELECT_GET_CLASS	widgets/gimpbrushselect.h	35;"	d
GIMP_BRUSH_SOFT	paint/paint-enums.h	/^  GIMP_BRUSH_SOFT,$/;"	e	enum:__anon213
GIMP_BRUSH_TOOL	tools/gimpbrushtool.h	27;"	d
GIMP_BRUSH_TOOL_CLASS	tools/gimpbrushtool.h	28;"	d
GIMP_BRUSH_TOOL_GET_CLASS	tools/gimpbrushtool.h	31;"	d
GIMP_BUCKET_FILL_OPTIONS	tools/gimpbucketfilloptions.h	27;"	d
GIMP_BUCKET_FILL_OPTIONS_CLASS	tools/gimpbucketfilloptions.h	28;"	d
GIMP_BUCKET_FILL_OPTIONS_GET_CLASS	tools/gimpbucketfilloptions.h	31;"	d
GIMP_BUCKET_FILL_TOOL	tools/gimpbucketfilltool.h	27;"	d
GIMP_BUCKET_FILL_TOOL_CLASS	tools/gimpbucketfilltool.h	28;"	d
GIMP_BUCKET_FILL_TOOL_GET_CLASS	tools/gimpbucketfilltool.h	31;"	d
GIMP_BUCKET_FILL_TOOL_GET_OPTIONS	tools/gimpbucketfilltool.h	33;"	d
GIMP_BUFFER	core/gimpbuffer.h	27;"	d
GIMP_BUFFER_CLASS	core/gimpbuffer.h	28;"	d
GIMP_BUFFER_GET_CLASS	core/gimpbuffer.h	31;"	d
GIMP_BUFFER_VIEW	widgets/gimpbufferview.h	30;"	d
GIMP_BUFFER_VIEW_CLASS	widgets/gimpbufferview.h	31;"	d
GIMP_BUFFER_VIEW_GET_CLASS	widgets/gimpbufferview.h	34;"	d
GIMP_BURN_MODE	base/base-enums.h	/^  GIMP_BURN_MODE,            \/*< desc="Burn"                 >*\/$/;"	e	enum:__anon11
GIMP_BUTTON_RELEASE_CANCEL	tools/tools-enums.h	/^  GIMP_BUTTON_RELEASE_CANCEL,$/;"	e	enum:__anon252
GIMP_BUTTON_RELEASE_CLICK	tools/tools-enums.h	/^  GIMP_BUTTON_RELEASE_CLICK,$/;"	e	enum:__anon252
GIMP_BUTTON_RELEASE_NORMAL	tools/tools-enums.h	/^  GIMP_BUTTON_RELEASE_NORMAL,$/;"	e	enum:__anon252
GIMP_BUTTON_RELEASE_NO_MOTION	tools/tools-enums.h	/^  GIMP_BUTTON_RELEASE_NO_MOTION$/;"	e	enum:__anon252
GIMP_BY_COLOR_SELECT_TOOL	tools/gimpbycolorselecttool.h	29;"	d
GIMP_BY_COLOR_SELECT_TOOL_CLASS	tools/gimpbycolorselecttool.h	30;"	d
GIMP_BY_COLOR_SELECT_TOOL_GET_CLASS	tools/gimpbycolorselecttool.h	33;"	d
GIMP_CANVAS	display/gimpcanvas.h	50;"	d
GIMP_CANVAS_CLASS	display/gimpcanvas.h	51;"	d
GIMP_CANVAS_GET_CLASS	display/gimpcanvas.h	54;"	d
GIMP_CANVAS_NUM_STIPPLES	display/gimpcanvas.h	46;"	d
GIMP_CANVAS_NUM_STYLES	display/gimpcanvas.h	/^  GIMP_CANVAS_NUM_STYLES$/;"	e	enum:__anon197
GIMP_CANVAS_PADDING_MODE_CUSTOM	display/display-enums.h	/^  GIMP_CANVAS_PADDING_MODE_CUSTOM,       \/*< desc="Custom color"      >*\/$/;"	e	enum:__anon186
GIMP_CANVAS_PADDING_MODE_DARK_CHECK	display/display-enums.h	/^  GIMP_CANVAS_PADDING_MODE_DARK_CHECK,   \/*< desc="Dark check color"  >*\/$/;"	e	enum:__anon186
GIMP_CANVAS_PADDING_MODE_DEFAULT	display/display-enums.h	/^  GIMP_CANVAS_PADDING_MODE_DEFAULT,      \/*< desc="From theme"        >*\/$/;"	e	enum:__anon186
GIMP_CANVAS_PADDING_MODE_LIGHT_CHECK	display/display-enums.h	/^  GIMP_CANVAS_PADDING_MODE_LIGHT_CHECK,  \/*< desc="Light check color" >*\/$/;"	e	enum:__anon186
GIMP_CANVAS_PADDING_MODE_RESET	display/display-enums.h	/^  GIMP_CANVAS_PADDING_MODE_RESET = -1    \/*< skip >*\/$/;"	e	enum:__anon186
GIMP_CANVAS_STYLE_BLACK	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_BLACK,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_CUSTOM	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_CUSTOM,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_GUIDE_ACTIVE	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_GUIDE_ACTIVE,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_GUIDE_NORMAL	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_GUIDE_NORMAL,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_LAYER_BOUNDARY	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_LAYER_BOUNDARY,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_RENDER	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_RENDER,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_SAMPLE_POINT_ACTIVE	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_SAMPLE_POINT_ACTIVE,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_SAMPLE_POINT_NORMAL	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_SAMPLE_POINT_NORMAL,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_SELECTION_IN	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_SELECTION_IN,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_SELECTION_OUT	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_SELECTION_OUT,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_WHITE	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_WHITE,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_XOR	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_XOR,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_XOR_DASHED	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_XOR_DASHED,$/;"	e	enum:__anon197
GIMP_CANVAS_STYLE_XOR_DOTTED	display/gimpcanvas.h	/^  GIMP_CANVAS_STYLE_XOR_DOTTED,$/;"	e	enum:__anon197
GIMP_CAP_BUTT	core/core-enums.h	/^  GIMP_CAP_BUTT,   \/*< desc="Butt"   >*\/$/;"	e	enum:__anon70
GIMP_CAP_ROUND	core/core-enums.h	/^  GIMP_CAP_ROUND,  \/*< desc="Round"  >*\/$/;"	e	enum:__anon70
GIMP_CAP_SQUARE	core/core-enums.h	/^  GIMP_CAP_SQUARE  \/*< desc="Square" >*\/$/;"	e	enum:__anon70
GIMP_CELL_RENDERER_DASHES	widgets/gimpcellrendererdashes.h	30;"	d
GIMP_CELL_RENDERER_DASHES_CLASS	widgets/gimpcellrendererdashes.h	31;"	d
GIMP_CELL_RENDERER_DASHES_GET_CLASS	widgets/gimpcellrendererdashes.h	34;"	d
GIMP_CELL_RENDERER_VIEWABLE	widgets/gimpcellrendererviewable.h	30;"	d
GIMP_CELL_RENDERER_VIEWABLE_CLASS	widgets/gimpcellrendererviewable.h	31;"	d
GIMP_CELL_RENDERER_VIEWABLE_GET_CLASS	widgets/gimpcellrendererviewable.h	34;"	d
GIMP_CHANNEL	core/gimpchannel.h	26;"	d
GIMP_CHANNEL_CLASS	core/gimpchannel.h	27;"	d
GIMP_CHANNEL_GET_CLASS	core/gimpchannel.h	30;"	d
GIMP_CHANNEL_PROP_UNDO	core/gimpchannelpropundo.h	27;"	d
GIMP_CHANNEL_PROP_UNDO_CLASS	core/gimpchannelpropundo.h	28;"	d
GIMP_CHANNEL_PROP_UNDO_GET_CLASS	core/gimpchannelpropundo.h	31;"	d
GIMP_CHANNEL_TREE_VIEW	widgets/gimpchanneltreeview.h	30;"	d
GIMP_CHANNEL_TREE_VIEW_CLASS	widgets/gimpchanneltreeview.h	31;"	d
GIMP_CHANNEL_TREE_VIEW_GET_CLASS	widgets/gimpchanneltreeview.h	34;"	d
GIMP_CHANNEL_UNDO	core/gimpchannelundo.h	27;"	d
GIMP_CHANNEL_UNDO_CLASS	core/gimpchannelundo.h	28;"	d
GIMP_CHANNEL_UNDO_GET_CLASS	core/gimpchannelundo.h	31;"	d
GIMP_CLASS	core/gimp.h	29;"	d
GIMP_CLIPBOARD_KEY	widgets/gimpclipboard.c	37;"	d	file:
GIMP_CLIP_TO_BOTTOM_LAYER	core/core-enums.h	/^  GIMP_CLIP_TO_BOTTOM_LAYER,$/;"	e	enum:__anon89
GIMP_CLIP_TO_IMAGE	core/core-enums.h	/^  GIMP_CLIP_TO_IMAGE,$/;"	e	enum:__anon89
GIMP_CLONE	paint/gimpclone.h	27;"	d
GIMP_CLONE_CLASS	paint/gimpclone.h	28;"	d
GIMP_CLONE_GET_CLASS	paint/gimpclone.h	31;"	d
GIMP_CLONE_OPTIONS	paint/gimpcloneoptions.h	27;"	d
GIMP_CLONE_OPTIONS_CLASS	paint/gimpcloneoptions.h	28;"	d
GIMP_CLONE_OPTIONS_GET_CLASS	paint/gimpcloneoptions.h	31;"	d
GIMP_CLONE_TOOL	tools/gimpclonetool.h	27;"	d
GIMP_CLONE_TOOL_CLASS	tools/gimpclonetool.h	28;"	d
GIMP_CLONE_TOOL_GET_CLASS	tools/gimpclonetool.h	31;"	d
GIMP_COLORIZE_TOOL	tools/gimpcolorizetool.h	27;"	d
GIMP_COLORIZE_TOOL_CLASS	tools/gimpcolorizetool.h	28;"	d
GIMP_COLORIZE_TOOL_GET_CLASS	tools/gimpcolorizetool.h	31;"	d
GIMP_COLORMAP_EDITOR	widgets/gimpcolormapeditor.h	27;"	d
GIMP_COLORMAP_EDITOR_CLASS	widgets/gimpcolormapeditor.h	28;"	d
GIMP_COLORMAP_EDITOR_GET_CLASS	widgets/gimpcolormapeditor.h	31;"	d
GIMP_COLOR_BALANCE_TOOL	tools/gimpcolorbalancetool.h	27;"	d
GIMP_COLOR_BALANCE_TOOL_CLASS	tools/gimpcolorbalancetool.h	28;"	d
GIMP_COLOR_BALANCE_TOOL_CLASS	tools/gimpcolorbalancetool.h	30;"	d
GIMP_COLOR_BALANCE_TOOL_GET_CLASS	tools/gimpcolorbalancetool.h	32;"	d
GIMP_COLOR_BAR	widgets/gimpcolorbar.h	27;"	d
GIMP_COLOR_BAR_CLASS	widgets/gimpcolorbar.h	28;"	d
GIMP_COLOR_BAR_GET_CLASS	widgets/gimpcolorbar.h	31;"	d
GIMP_COLOR_DIALOG	widgets/gimpcolordialog.h	31;"	d
GIMP_COLOR_DIALOG_CANCEL	widgets/widgets-enums.h	/^  GIMP_COLOR_DIALOG_CANCEL,$/;"	e	enum:__anon399
GIMP_COLOR_DIALOG_CLASS	widgets/gimpcolordialog.h	32;"	d
GIMP_COLOR_DIALOG_GET_CLASS	widgets/gimpcolordialog.h	35;"	d
GIMP_COLOR_DIALOG_OK	widgets/widgets-enums.h	/^  GIMP_COLOR_DIALOG_OK,$/;"	e	enum:__anon399
GIMP_COLOR_DIALOG_UPDATE	widgets/widgets-enums.h	/^  GIMP_COLOR_DIALOG_UPDATE$/;"	e	enum:__anon399
GIMP_COLOR_DISPLAY_EDITOR	widgets/gimpcolordisplayeditor.h	30;"	d
GIMP_COLOR_DISPLAY_EDITOR_CLASS	widgets/gimpcolordisplayeditor.h	31;"	d
GIMP_COLOR_DISPLAY_EDITOR_GET_CLASS	widgets/gimpcolordisplayeditor.h	34;"	d
GIMP_COLOR_EDITOR	widgets/gimpcoloreditor.h	30;"	d
GIMP_COLOR_EDITOR_CLASS	widgets/gimpcoloreditor.h	31;"	d
GIMP_COLOR_EDITOR_GET_CLASS	widgets/gimpcoloreditor.h	34;"	d
GIMP_COLOR_ERASE_MODE	base/base-enums.h	/^  GIMP_COLOR_ERASE_MODE,     \/*< desc="Color erase"          >*\/$/;"	e	enum:__anon11
GIMP_COLOR_FRAME	widgets/gimpcolorframe.h	30;"	d
GIMP_COLOR_FRAME_CLASS	widgets/gimpcolorframe.h	31;"	d
GIMP_COLOR_FRAME_GET_CLASS	widgets/gimpcolorframe.h	34;"	d
GIMP_COLOR_FRAME_MODE_CMYK	widgets/widgets-enums.h	/^  GIMP_COLOR_FRAME_MODE_CMYK    \/*< desc="CMYK"  >*\/$/;"	e	enum:__anon400
GIMP_COLOR_FRAME_MODE_HSV	widgets/widgets-enums.h	/^  GIMP_COLOR_FRAME_MODE_HSV,    \/*< desc="HSV"   >*\/$/;"	e	enum:__anon400
GIMP_COLOR_FRAME_MODE_PIXEL	widgets/widgets-enums.h	/^  GIMP_COLOR_FRAME_MODE_PIXEL,  \/*< desc="Pixel" >*\/$/;"	e	enum:__anon400
GIMP_COLOR_FRAME_MODE_RGB	widgets/widgets-enums.h	/^  GIMP_COLOR_FRAME_MODE_RGB,    \/*< desc="RGB"   >*\/$/;"	e	enum:__anon400
GIMP_COLOR_FRAME_ROWS	widgets/gimpcolorframe.h	26;"	d
GIMP_COLOR_MODE	base/base-enums.h	/^  GIMP_COLOR_MODE,           \/*< desc="Color"                >*\/$/;"	e	enum:__anon11
GIMP_COLOR_OPTIONS	tools/gimpcoloroptions.h	27;"	d
GIMP_COLOR_OPTIONS_CLASS	tools/gimpcoloroptions.h	28;"	d
GIMP_COLOR_OPTIONS_GET_CLASS	tools/gimpcoloroptions.h	31;"	d
GIMP_COLOR_PANEL	widgets/gimpcolorpanel.h	27;"	d
GIMP_COLOR_PANEL_CLASS	widgets/gimpcolorpanel.h	28;"	d
GIMP_COLOR_PANEL_GET_CLASS	widgets/gimpcolorpanel.h	31;"	d
GIMP_COLOR_PICKER_OPTIONS	tools/gimpcolorpickeroptions.h	27;"	d
GIMP_COLOR_PICKER_OPTIONS_CLASS	tools/gimpcolorpickeroptions.h	28;"	d
GIMP_COLOR_PICKER_OPTIONS_GET_CLASS	tools/gimpcolorpickeroptions.h	31;"	d
GIMP_COLOR_PICKER_TOOL	tools/gimpcolorpickertool.h	27;"	d
GIMP_COLOR_PICKER_TOOL_CLASS	tools/gimpcolorpickertool.h	28;"	d
GIMP_COLOR_PICKER_TOOL_GET_CLASS	tools/gimpcolorpickertool.h	31;"	d
GIMP_COLOR_PICKER_TOOL_GET_OPTIONS	tools/gimpcolorpickertool.h	33;"	d
GIMP_COLOR_PICK_MODE_BACKGROUND	widgets/widgets-enums.h	/^  GIMP_COLOR_PICK_MODE_BACKGROUND, \/*< desc="Set background color" >*\/$/;"	e	enum:__anon401
GIMP_COLOR_PICK_MODE_FOREGROUND	widgets/widgets-enums.h	/^  GIMP_COLOR_PICK_MODE_FOREGROUND, \/*< desc="Set foreground color" >*\/$/;"	e	enum:__anon401
GIMP_COLOR_PICK_MODE_NONE	widgets/widgets-enums.h	/^  GIMP_COLOR_PICK_MODE_NONE,       \/*< desc="Pick only"            >*\/$/;"	e	enum:__anon401
GIMP_COLOR_PICK_MODE_PALETTE	widgets/widgets-enums.h	/^  GIMP_COLOR_PICK_MODE_PALETTE     \/*< desc="Add to palette"       >*\/$/;"	e	enum:__anon401
GIMP_COLOR_PICK_STATE_NEW	widgets/widgets-enums.h	/^  GIMP_COLOR_PICK_STATE_NEW,$/;"	e	enum:__anon402
GIMP_COLOR_PICK_STATE_UPDATE	widgets/widgets-enums.h	/^  GIMP_COLOR_PICK_STATE_UPDATE$/;"	e	enum:__anon402
GIMP_COLOR_PROFILE_POLICY_ASK	core/core-enums.h	/^  GIMP_COLOR_PROFILE_POLICY_ASK,    \/*< desc="Ask what to do"           >*\/$/;"	e	enum:__anon92
GIMP_COLOR_PROFILE_POLICY_CONVERT	core/core-enums.h	/^  GIMP_COLOR_PROFILE_POLICY_CONVERT \/*< desc="Convert to RGB workspace" >*\/$/;"	e	enum:__anon92
GIMP_COLOR_PROFILE_POLICY_KEEP	core/core-enums.h	/^  GIMP_COLOR_PROFILE_POLICY_KEEP,   \/*< desc="Keep embedded profile"    >*\/$/;"	e	enum:__anon92
GIMP_COLOR_SELECTOR_PALETTE	widgets/gimpcolorselectorpalette.h	30;"	d
GIMP_COLOR_SELECTOR_PALETTE_CLASS	widgets/gimpcolorselectorpalette.h	32;"	d
GIMP_COLOR_SELECTOR_PALETTE_GET_CLASS	widgets/gimpcolorselectorpalette.h	34;"	d
GIMP_COLOR_TOOL	tools/gimpcolortool.h	27;"	d
GIMP_COLOR_TOOL_CLASS	tools/gimpcolortool.h	28;"	d
GIMP_COLOR_TOOL_GET_CLASS	tools/gimpcolortool.h	31;"	d
GIMP_COLOR_TOOL_GET_OPTIONS	tools/gimpcolortool.h	33;"	d
GIMP_COMPONENT_EDITOR	widgets/gimpcomponenteditor.h	30;"	d
GIMP_COMPONENT_EDITOR_CLASS	widgets/gimpcomponenteditor.h	31;"	d
GIMP_COMPONENT_EDITOR_GET_CLASS	widgets/gimpcomponenteditor.h	34;"	d
GIMP_COMPOSITE_ADDITION	composite/gimp-composite.h	/^  GIMP_COMPOSITE_ADDITION      = GIMP_ADDITION_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_ALPHA_OPAQUE	composite/gimp-composite.h	63;"	d
GIMP_COMPOSITE_ALPHA_TRANSPARENT	composite/gimp-composite.h	64;"	d
GIMP_COMPOSITE_ANTI_ERASE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_ANTI_ERASE    = GIMP_ANTI_ERASE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_BEHIND	composite/gimp-composite.h	/^  GIMP_COMPOSITE_BEHIND        = GIMP_BEHIND_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_BLEND	composite/gimp-composite.h	/^  GIMP_COMPOSITE_BLEND,$/;"	e	enum:__anon32
GIMP_COMPOSITE_BURN	composite/gimp-composite.h	/^  GIMP_COMPOSITE_BURN          = GIMP_BURN_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_COLOR_ERASE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_COLOR_ERASE   = GIMP_COLOR_ERASE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_COLOR_ONLY	composite/gimp-composite.h	/^  GIMP_COMPOSITE_COLOR_ONLY    = GIMP_COLOR_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_CONVERT	composite/gimp-composite.h	/^  GIMP_COMPOSITE_CONVERT,$/;"	e	enum:__anon32
GIMP_COMPOSITE_DARKEN	composite/gimp-composite.h	/^  GIMP_COMPOSITE_DARKEN        = GIMP_DARKEN_ONLY_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_DIFFERENCE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_DIFFERENCE    = GIMP_DIFFERENCE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_DISSOLVE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_DISSOLVE      = GIMP_DISSOLVE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_DIVIDE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_DIVIDE        = GIMP_DIVIDE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_DODGE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_DODGE         = GIMP_DODGE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_ERASE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_ERASE         = GIMP_ERASE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_GRAIN_EXTRACT	composite/gimp-composite.h	/^  GIMP_COMPOSITE_GRAIN_EXTRACT = GIMP_GRAIN_EXTRACT_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_GRAIN_MERGE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_GRAIN_MERGE   = GIMP_GRAIN_MERGE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_HARDLIGHT	composite/gimp-composite.h	/^  GIMP_COMPOSITE_HARDLIGHT     = GIMP_HARDLIGHT_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_HUE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_HUE           = GIMP_HUE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_LIGHTEN	composite/gimp-composite.h	/^  GIMP_COMPOSITE_LIGHTEN       = GIMP_LIGHTEN_ONLY_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_MULTIPLY	composite/gimp-composite.h	/^  GIMP_COMPOSITE_MULTIPLY      = GIMP_MULTIPLY_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_N	composite/gimp-composite.h	/^  GIMP_COMPOSITE_N$/;"	e	enum:__anon32
GIMP_COMPOSITE_NORMAL	composite/gimp-composite.h	/^  GIMP_COMPOSITE_NORMAL        = GIMP_NORMAL_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_OPTION_NOEXTENSIONS	composite/gimp-composite.h	153;"	d
GIMP_COMPOSITE_OPTION_USE	composite/gimp-composite.h	152;"	d
GIMP_COMPOSITE_OPTION_VERBOSE	composite/gimp-composite.h	154;"	d
GIMP_COMPOSITE_OVERLAY	composite/gimp-composite.h	/^  GIMP_COMPOSITE_OVERLAY       = GIMP_OVERLAY_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_REPLACE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_REPLACE       = GIMP_REPLACE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_SATURATION	composite/gimp-composite.h	/^  GIMP_COMPOSITE_SATURATION    = GIMP_SATURATION_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_SCALE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_SCALE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_SCREEN	composite/gimp-composite.h	/^  GIMP_COMPOSITE_SCREEN        = GIMP_SCREEN_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_SHADE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_SHADE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_SOFTLIGHT	composite/gimp-composite.h	/^  GIMP_COMPOSITE_SOFTLIGHT     = GIMP_SOFTLIGHT_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_SUBTRACT	composite/gimp-composite.h	/^  GIMP_COMPOSITE_SUBTRACT      = GIMP_SUBTRACT_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_SWAP	composite/gimp-composite.h	/^  GIMP_COMPOSITE_SWAP,$/;"	e	enum:__anon32
GIMP_COMPOSITE_VALUE	composite/gimp-composite.h	/^  GIMP_COMPOSITE_VALUE         = GIMP_VALUE_MODE,$/;"	e	enum:__anon32
GIMP_COMPOSITE_XOR	composite/gimp-composite.h	/^  GIMP_COMPOSITE_XOR,$/;"	e	enum:__anon32
GIMP_CONFIG_DEFAULT_IMAGE_STATUS_FORMAT	config/gimpdisplayconfig.h	31;"	d
GIMP_CONFIG_DEFAULT_IMAGE_TITLE_FORMAT	config/gimpdisplayconfig.h	30;"	d
GIMP_CONFIG_DUMP_GIMPRC	config/gimpconfig-dump.h	/^  GIMP_CONFIG_DUMP_GIMPRC,$/;"	e	enum:__anon50
GIMP_CONFIG_DUMP_GIMPRC_MANPAGE	config/gimpconfig-dump.h	/^  GIMP_CONFIG_DUMP_GIMPRC_MANPAGE$/;"	e	enum:__anon50
GIMP_CONFIG_DUMP_GIMPRC_SYSTEM	config/gimpconfig-dump.h	/^  GIMP_CONFIG_DUMP_GIMPRC_SYSTEM,$/;"	e	enum:__anon50
GIMP_CONFIG_DUMP_NONE	config/gimpconfig-dump.h	/^  GIMP_CONFIG_DUMP_NONE,$/;"	e	enum:__anon50
GIMP_CONTAINER	core/gimpcontainer.h	30;"	d
GIMP_CONTAINER_BOX	widgets/gimpcontainerbox.h	30;"	d
GIMP_CONTAINER_BOX_CLASS	widgets/gimpcontainerbox.h	31;"	d
GIMP_CONTAINER_BOX_GET_CLASS	widgets/gimpcontainerbox.h	34;"	d
GIMP_CONTAINER_CLASS	core/gimpcontainer.h	31;"	d
GIMP_CONTAINER_COMBO_BOX	widgets/gimpcontainercombobox.h	30;"	d
GIMP_CONTAINER_COMBO_BOX_CLASS	widgets/gimpcontainercombobox.h	31;"	d
GIMP_CONTAINER_COMBO_BOX_GET_CLASS	widgets/gimpcontainercombobox.h	34;"	d
GIMP_CONTAINER_EDITOR	widgets/gimpcontainereditor.h	30;"	d
GIMP_CONTAINER_EDITOR_CLASS	widgets/gimpcontainereditor.h	31;"	d
GIMP_CONTAINER_EDITOR_GET_CLASS	widgets/gimpcontainereditor.h	34;"	d
GIMP_CONTAINER_ENTRY	widgets/gimpcontainerentry.h	38;"	d
GIMP_CONTAINER_ENTRY_CLASS	widgets/gimpcontainerentry.h	39;"	d
GIMP_CONTAINER_ENTRY_COLUMN_NAME	widgets/gimpcontainerentry.h	/^  GIMP_CONTAINER_ENTRY_COLUMN_NAME,$/;"	e	enum:__anon351
GIMP_CONTAINER_ENTRY_COLUMN_RENDERER	widgets/gimpcontainerentry.h	/^  GIMP_CONTAINER_ENTRY_COLUMN_RENDERER,$/;"	e	enum:__anon351
GIMP_CONTAINER_ENTRY_GET_CLASS	widgets/gimpcontainerentry.h	42;"	d
GIMP_CONTAINER_ENTRY_NUM_COLUMNS	widgets/gimpcontainerentry.h	/^  GIMP_CONTAINER_ENTRY_NUM_COLUMNS$/;"	e	enum:__anon351
GIMP_CONTAINER_GET_CLASS	core/gimpcontainer.h	34;"	d
GIMP_CONTAINER_GRID_VIEW	widgets/gimpcontainergridview.h	30;"	d
GIMP_CONTAINER_GRID_VIEW_CLASS	widgets/gimpcontainergridview.h	31;"	d
GIMP_CONTAINER_GRID_VIEW_GET_CLASS	widgets/gimpcontainergridview.h	34;"	d
GIMP_CONTAINER_POLICY_STRONG	core/core-enums.h	/^  GIMP_CONTAINER_POLICY_STRONG,$/;"	e	enum:__anon60
GIMP_CONTAINER_POLICY_WEAK	core/core-enums.h	/^  GIMP_CONTAINER_POLICY_WEAK$/;"	e	enum:__anon60
GIMP_CONTAINER_POPUP	widgets/gimpcontainerpopup.h	30;"	d
GIMP_CONTAINER_POPUP_CLASS	widgets/gimpcontainerpopup.h	31;"	d
GIMP_CONTAINER_POPUP_GET_CLASS	widgets/gimpcontainerpopup.h	34;"	d
GIMP_CONTAINER_TREE_VIEW	widgets/gimpcontainertreeview.h	30;"	d
GIMP_CONTAINER_TREE_VIEW_CLASS	widgets/gimpcontainertreeview.h	31;"	d
GIMP_CONTAINER_TREE_VIEW_GET_CLASS	widgets/gimpcontainertreeview.h	34;"	d
GIMP_CONTAINER_VIEW	widgets/gimpcontainerview.h	39;"	d
GIMP_CONTAINER_VIEW_GET_INTERFACE	widgets/gimpcontainerview.h	41;"	d
GIMP_CONTAINER_VIEW_GET_PRIVATE	widgets/gimpcontainerview.c	51;"	d	file:
GIMP_CONTAINER_VIEW_PROP_0	widgets/gimpcontainerview.h	/^  GIMP_CONTAINER_VIEW_PROP_0,$/;"	e	enum:__anon344
GIMP_CONTAINER_VIEW_PROP_CONTAINER	widgets/gimpcontainerview.h	/^  GIMP_CONTAINER_VIEW_PROP_CONTAINER,$/;"	e	enum:__anon344
GIMP_CONTAINER_VIEW_PROP_CONTEXT	widgets/gimpcontainerview.h	/^  GIMP_CONTAINER_VIEW_PROP_CONTEXT,$/;"	e	enum:__anon344
GIMP_CONTAINER_VIEW_PROP_LAST	widgets/gimpcontainerview.h	/^  GIMP_CONTAINER_VIEW_PROP_LAST = GIMP_CONTAINER_VIEW_PROP_VIEW_BORDER_WIDTH$/;"	e	enum:__anon344
GIMP_CONTAINER_VIEW_PROP_REORDERABLE	widgets/gimpcontainerview.h	/^  GIMP_CONTAINER_VIEW_PROP_REORDERABLE,$/;"	e	enum:__anon344
GIMP_CONTAINER_VIEW_PROP_VIEW_BORDER_WIDTH	widgets/gimpcontainerview.h	/^  GIMP_CONTAINER_VIEW_PROP_VIEW_BORDER_WIDTH,$/;"	e	enum:__anon344
GIMP_CONTAINER_VIEW_PROP_VIEW_SIZE	widgets/gimpcontainerview.h	/^  GIMP_CONTAINER_VIEW_PROP_VIEW_SIZE,$/;"	e	enum:__anon344
GIMP_CONTEXT	core/gimpcontext.h	30;"	d
GIMP_CONTEXT_ALL_PROPS_MASK	core/core-enums.h	/^  GIMP_CONTEXT_ALL_PROPS_MASK   = (GIMP_CONTEXT_IMAGE_MASK      |$/;"	e	enum:__anon94
GIMP_CONTEXT_BACKGROUND_MASK	core/core-enums.h	/^  GIMP_CONTEXT_BACKGROUND_MASK = 1 <<  7,$/;"	e	enum:__anon94
GIMP_CONTEXT_BRUSH_MASK	core/core-enums.h	/^  GIMP_CONTEXT_BRUSH_MASK      = 1 << 10,$/;"	e	enum:__anon94
GIMP_CONTEXT_BUFFER_MASK	core/core-enums.h	/^  GIMP_CONTEXT_BUFFER_MASK     = 1 << 15,$/;"	e	enum:__anon94
GIMP_CONTEXT_CLASS	core/gimpcontext.h	31;"	d
GIMP_CONTEXT_DISPLAY_MASK	core/core-enums.h	/^  GIMP_CONTEXT_DISPLAY_MASK    = 1 <<  3,$/;"	e	enum:__anon94
GIMP_CONTEXT_FIRST_PROP	core/core-enums.h	/^  GIMP_CONTEXT_FIRST_PROP      =  2,$/;"	e	enum:__anon93
GIMP_CONTEXT_FONT_MASK	core/core-enums.h	/^  GIMP_CONTEXT_FONT_MASK       = 1 << 14,$/;"	e	enum:__anon94
GIMP_CONTEXT_FOREGROUND_MASK	core/core-enums.h	/^  GIMP_CONTEXT_FOREGROUND_MASK = 1 <<  6,$/;"	e	enum:__anon94
GIMP_CONTEXT_GET_CLASS	core/gimpcontext.h	34;"	d
GIMP_CONTEXT_GRADIENT_MASK	core/core-enums.h	/^  GIMP_CONTEXT_GRADIENT_MASK   = 1 << 12,$/;"	e	enum:__anon94
GIMP_CONTEXT_IMAGEFILE_MASK	core/core-enums.h	/^  GIMP_CONTEXT_IMAGEFILE_MASK  = 1 << 16,$/;"	e	enum:__anon94
GIMP_CONTEXT_IMAGE_MASK	core/core-enums.h	/^  GIMP_CONTEXT_IMAGE_MASK      = 1 <<  2,$/;"	e	enum:__anon94
GIMP_CONTEXT_LAST_PROP	core/core-enums.h	/^  GIMP_CONTEXT_LAST_PROP       = GIMP_CONTEXT_PROP_TEMPLATE$/;"	e	enum:__anon93
GIMP_CONTEXT_OPACITY_MASK	core/core-enums.h	/^  GIMP_CONTEXT_OPACITY_MASK    = 1 <<  8,$/;"	e	enum:__anon94
GIMP_CONTEXT_PAINT_INFO_MASK	core/core-enums.h	/^  GIMP_CONTEXT_PAINT_INFO_MASK = 1 <<  5,$/;"	e	enum:__anon94
GIMP_CONTEXT_PAINT_MODE_MASK	core/core-enums.h	/^  GIMP_CONTEXT_PAINT_MODE_MASK = 1 <<  9,$/;"	e	enum:__anon94
GIMP_CONTEXT_PAINT_PROPS_MASK	core/core-enums.h	/^  GIMP_CONTEXT_PAINT_PROPS_MASK = (GIMP_CONTEXT_FOREGROUND_MASK |$/;"	e	enum:__anon94
GIMP_CONTEXT_PALETTE_MASK	core/core-enums.h	/^  GIMP_CONTEXT_PALETTE_MASK    = 1 << 13,$/;"	e	enum:__anon94
GIMP_CONTEXT_PATTERN_MASK	core/core-enums.h	/^  GIMP_CONTEXT_PATTERN_MASK    = 1 << 11,$/;"	e	enum:__anon94
GIMP_CONTEXT_PROP_0	core/gimpcontext.c	/^  GIMP_CONTEXT_PROP_0,$/;"	e	enum:__anon102	file:
GIMP_CONTEXT_PROP_BACKGROUND	core/core-enums.h	/^  GIMP_CONTEXT_PROP_BACKGROUND =  7,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_BRUSH	core/core-enums.h	/^  GIMP_CONTEXT_PROP_BRUSH      = 10,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_BUFFER	core/core-enums.h	/^  GIMP_CONTEXT_PROP_BUFFER     = 15,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_DISPLAY	core/core-enums.h	/^  GIMP_CONTEXT_PROP_DISPLAY    =  3,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_FONT	core/core-enums.h	/^  GIMP_CONTEXT_PROP_FONT       = 14,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_FOREGROUND	core/core-enums.h	/^  GIMP_CONTEXT_PROP_FOREGROUND =  6,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_GIMP	core/gimpcontext.c	/^  GIMP_CONTEXT_PROP_GIMP$/;"	e	enum:__anon102	file:
GIMP_CONTEXT_PROP_GRADIENT	core/core-enums.h	/^  GIMP_CONTEXT_PROP_GRADIENT   = 12,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_IMAGE	core/core-enums.h	/^  GIMP_CONTEXT_PROP_IMAGE      =  GIMP_CONTEXT_FIRST_PROP,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_IMAGEFILE	core/core-enums.h	/^  GIMP_CONTEXT_PROP_IMAGEFILE  = 16,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_OPACITY	core/core-enums.h	/^  GIMP_CONTEXT_PROP_OPACITY    =  8,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_PAINT_INFO	core/core-enums.h	/^  GIMP_CONTEXT_PROP_PAINT_INFO =  5,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_PAINT_MODE	core/core-enums.h	/^  GIMP_CONTEXT_PROP_PAINT_MODE =  9,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_PALETTE	core/core-enums.h	/^  GIMP_CONTEXT_PROP_PALETTE    = 13,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_PATTERN	core/core-enums.h	/^  GIMP_CONTEXT_PROP_PATTERN    = 11,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_TEMPLATE	core/core-enums.h	/^  GIMP_CONTEXT_PROP_TEMPLATE   = 17,$/;"	e	enum:__anon93
GIMP_CONTEXT_PROP_TOOL	core/core-enums.h	/^  GIMP_CONTEXT_PROP_TOOL       =  4,$/;"	e	enum:__anon93
GIMP_CONTEXT_TEMPLATE_MASK	core/core-enums.h	/^  GIMP_CONTEXT_TEMPLATE_MASK   = 1 << 17,$/;"	e	enum:__anon94
GIMP_CONTEXT_TOOL_MASK	core/core-enums.h	/^  GIMP_CONTEXT_TOOL_MASK       = 1 <<  4,$/;"	e	enum:__anon94
GIMP_CONTROLLER_EDITOR	widgets/gimpcontrollereditor.h	30;"	d
GIMP_CONTROLLER_EDITOR_CLASS	widgets/gimpcontrollereditor.h	31;"	d
GIMP_CONTROLLER_EDITOR_GET_CLASS	widgets/gimpcontrollereditor.h	34;"	d
GIMP_CONTROLLER_INFO	widgets/gimpcontrollerinfo.h	36;"	d
GIMP_CONTROLLER_INFO_CLASS	widgets/gimpcontrollerinfo.h	37;"	d
GIMP_CONTROLLER_INFO_GET_CLASS	widgets/gimpcontrollerinfo.h	40;"	d
GIMP_CONTROLLER_KEYBOARD	widgets/gimpcontrollerkeyboard.h	31;"	d
GIMP_CONTROLLER_KEYBOARD_CLASS	widgets/gimpcontrollerkeyboard.h	32;"	d
GIMP_CONTROLLER_KEYBOARD_GET_CLASS	widgets/gimpcontrollerkeyboard.h	35;"	d
GIMP_CONTROLLER_LIST	widgets/gimpcontrollerlist.h	30;"	d
GIMP_CONTROLLER_LIST_CLASS	widgets/gimpcontrollerlist.h	31;"	d
GIMP_CONTROLLER_LIST_GET_CLASS	widgets/gimpcontrollerlist.h	34;"	d
GIMP_CONTROLLER_MANAGER_DATA_KEY	widgets/gimpcontrollers.c	45;"	d	file:
GIMP_CONTROLLER_WHEEL	widgets/gimpcontrollerwheel.h	31;"	d
GIMP_CONTROLLER_WHEEL_CLASS	widgets/gimpcontrollerwheel.h	32;"	d
GIMP_CONTROLLER_WHEEL_GET_CLASS	widgets/gimpcontrollerwheel.h	35;"	d
GIMP_CONVOLVE	paint/gimpconvolve.h	27;"	d
GIMP_CONVOLVE_CLASS	paint/gimpconvolve.h	28;"	d
GIMP_CONVOLVE_GET_CLASS	paint/gimpconvolve.h	31;"	d
GIMP_CONVOLVE_OPTIONS	paint/gimpconvolveoptions.h	27;"	d
GIMP_CONVOLVE_OPTIONS_CLASS	paint/gimpconvolveoptions.h	28;"	d
GIMP_CONVOLVE_OPTIONS_GET_CLASS	paint/gimpconvolveoptions.h	31;"	d
GIMP_CONVOLVE_TOOL	tools/gimpconvolvetool.h	27;"	d
GIMP_CONVOLVE_TOOL_CLASS	tools/gimpconvolvetool.h	28;"	d
GIMP_CONVOLVE_TOOL_GET_CLASS	tools/gimpconvolvetool.h	31;"	d
GIMP_CONVOLVE_TOOL_GET_OPTIONS	tools/gimpconvolvetool.h	33;"	d
GIMP_COORDS_DEFAULT_PRESSURE	core/core-types.h	38;"	d
GIMP_COORDS_DEFAULT_TILT	core/core-types.h	42;"	d
GIMP_COORDS_DEFAULT_VALUES	core/core-types.h	48;"	d
GIMP_COORDS_DEFAULT_WHEEL	core/core-types.h	46;"	d
GIMP_COORDS_MAX_PRESSURE	core/core-types.h	37;"	d
GIMP_COORDS_MAX_TILT	core/core-types.h	41;"	d
GIMP_COORDS_MAX_WHEEL	core/core-types.h	45;"	d
GIMP_COORDS_MIN_PRESSURE	core/core-types.h	36;"	d
GIMP_COORDS_MIN_TILT	core/core-types.h	40;"	d
GIMP_COORDS_MIN_WHEEL	core/core-types.h	44;"	d
GIMP_COPYRIGHT	about.h	29;"	d
GIMP_CORE_CONFIG	config/gimpcoreconfig.h	31;"	d
GIMP_CORE_CONFIG_CLASS	config/gimpcoreconfig.h	32;"	d
GIMP_CROP_OPTIONS	tools/gimpcropoptions.h	27;"	d
GIMP_CROP_OPTIONS_CLASS	tools/gimpcropoptions.h	28;"	d
GIMP_CROP_OPTIONS_GET_CLASS	tools/gimpcropoptions.h	31;"	d
GIMP_CROP_TOOL	tools/gimpcroptool.h	27;"	d
GIMP_CROP_TOOL_CLASS	tools/gimpcroptool.h	28;"	d
GIMP_CROP_TOOL_GET_CLASS	tools/gimpcroptool.h	31;"	d
GIMP_CROP_TOOL_GET_OPTIONS	tools/gimpcroptool.h	33;"	d
GIMP_CURSOR_BAD	widgets/widgets-enums.h	/^  GIMP_CURSOR_BAD,$/;"	e	enum:__anon412
GIMP_CURSOR_COLOR_PICKER	widgets/widgets-enums.h	/^  GIMP_CURSOR_COLOR_PICKER,$/;"	e	enum:__anon412
GIMP_CURSOR_CORNER_BOTTOM_LEFT	widgets/widgets-enums.h	/^  GIMP_CURSOR_CORNER_BOTTOM_LEFT,$/;"	e	enum:__anon412
GIMP_CURSOR_CORNER_BOTTOM_RIGHT	widgets/widgets-enums.h	/^  GIMP_CURSOR_CORNER_BOTTOM_RIGHT,$/;"	e	enum:__anon412
GIMP_CURSOR_CORNER_TOP_LEFT	widgets/widgets-enums.h	/^  GIMP_CURSOR_CORNER_TOP_LEFT,$/;"	e	enum:__anon412
GIMP_CURSOR_CORNER_TOP_RIGHT	widgets/widgets-enums.h	/^  GIMP_CURSOR_CORNER_TOP_RIGHT,$/;"	e	enum:__anon412
GIMP_CURSOR_CROSSHAIR	widgets/widgets-enums.h	/^  GIMP_CURSOR_CROSSHAIR,$/;"	e	enum:__anon412
GIMP_CURSOR_CROSSHAIR_SMALL	widgets/widgets-enums.h	/^  GIMP_CURSOR_CROSSHAIR_SMALL,$/;"	e	enum:__anon412
GIMP_CURSOR_FORMAT_BITMAP	widgets/widgets-enums.h	/^  GIMP_CURSOR_FORMAT_BITMAP, \/*< desc="Black & white" >*\/$/;"	e	enum:__anon403
GIMP_CURSOR_FORMAT_PIXBUF	widgets/widgets-enums.h	/^  GIMP_CURSOR_FORMAT_PIXBUF  \/*< desc="Fancy"         >*\/$/;"	e	enum:__anon403
GIMP_CURSOR_LAST	widgets/widgets-enums.h	/^  GIMP_CURSOR_LAST$/;"	e	enum:__anon412
GIMP_CURSOR_MODE_CROSSHAIR	display/display-enums.h	/^  GIMP_CURSOR_MODE_CROSSHAIR        \/*< desc="Crosshair only"           >*\/$/;"	e	enum:__anon185
GIMP_CURSOR_MODE_TOOL_CROSSHAIR	display/display-enums.h	/^  GIMP_CURSOR_MODE_TOOL_CROSSHAIR,  \/*< desc="Tool icon with crosshair" >*\/$/;"	e	enum:__anon185
GIMP_CURSOR_MODE_TOOL_ICON	display/display-enums.h	/^  GIMP_CURSOR_MODE_TOOL_ICON,       \/*< desc="Tool icon"                >*\/$/;"	e	enum:__anon185
GIMP_CURSOR_MODIFIER_ANCHOR	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_ANCHOR,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_BACKGROUND	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_BACKGROUND,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_BAD	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_BAD,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_CONTROL	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_CONTROL,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_FOREGROUND	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_FOREGROUND,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_INTERSECT	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_INTERSECT,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_JOIN	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_JOIN,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_LAST	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_LAST$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_MINUS	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_MINUS,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_MOVE	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_MOVE,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_NONE	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_NONE,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_PATTERN	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_PATTERN,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_PLUS	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_PLUS,$/;"	e	enum:__anon414
GIMP_CURSOR_MODIFIER_RESIZE	widgets/widgets-enums.h	/^  GIMP_CURSOR_MODIFIER_RESIZE,$/;"	e	enum:__anon414
GIMP_CURSOR_MOUSE	widgets/widgets-enums.h	/^  GIMP_CURSOR_MOUSE,$/;"	e	enum:__anon412
GIMP_CURSOR_MOVE	widgets/widgets-enums.h	/^  GIMP_CURSOR_MOVE,$/;"	e	enum:__anon412
GIMP_CURSOR_NONE	widgets/widgets-enums.h	/^  GIMP_CURSOR_NONE = 1024,  \/* (GDK_LAST_CURSOR + 2) yes, this is insane *\/$/;"	e	enum:__anon412
GIMP_CURSOR_SIDE_BOTTOM	widgets/widgets-enums.h	/^  GIMP_CURSOR_SIDE_BOTTOM,$/;"	e	enum:__anon412
GIMP_CURSOR_SIDE_LEFT	widgets/widgets-enums.h	/^  GIMP_CURSOR_SIDE_LEFT,$/;"	e	enum:__anon412
GIMP_CURSOR_SIDE_RIGHT	widgets/widgets-enums.h	/^  GIMP_CURSOR_SIDE_RIGHT,$/;"	e	enum:__anon412
GIMP_CURSOR_SIDE_TOP	widgets/widgets-enums.h	/^  GIMP_CURSOR_SIDE_TOP,$/;"	e	enum:__anon412
GIMP_CURSOR_VIEW	widgets/gimpcursorview.h	30;"	d
GIMP_CURSOR_VIEW_CLASS	widgets/gimpcursorview.h	31;"	d
GIMP_CURSOR_VIEW_GET_CLASS	widgets/gimpcursorview.h	34;"	d
GIMP_CURSOR_ZOOM	widgets/widgets-enums.h	/^  GIMP_CURSOR_ZOOM,$/;"	e	enum:__anon412
GIMP_CURVES_TOOL	tools/gimpcurvestool.h	27;"	d
GIMP_CURVES_TOOL_CLASS	tools/gimpcurvestool.h	29;"	d
GIMP_CURVE_FREE	base/base-enums.h	/^  GIMP_CURVE_FREE      \/*< desc="Freehand" >*\/$/;"	e	enum:__anon9
GIMP_CURVE_SMOOTH	base/base-enums.h	/^  GIMP_CURVE_SMOOTH,   \/*< desc="Smooth"   >*\/$/;"	e	enum:__anon9
GIMP_CUSTOM_CONVOLVE	paint/paint-enums.h	/^  GIMP_CUSTOM_CONVOLVE    \/*< pdb-skip, skip >*\/$/;"	e	enum:__anon216
GIMP_CUSTOM_PALETTE	core/core-enums.h	/^  GIMP_CUSTOM_PALETTE   \/*< desc="Use custom palette"                  >*\/$/;"	e	enum:__anon62
GIMP_CYAN_HUES	base/base-enums.h	/^  GIMP_CYAN_HUES,$/;"	e	enum:__anon12
GIMP_DARKEN_ONLY_MODE	base/base-enums.h	/^  GIMP_DARKEN_ONLY_MODE,     \/*< desc="Darken only"          >*\/$/;"	e	enum:__anon11
GIMP_DASH_CUSTOM	core/core-enums.h	/^  GIMP_DASH_CUSTOM,       \/*< desc="Custom"         >*\/$/;"	e	enum:__anon71
GIMP_DASH_DASH_DOT	core/core-enums.h	/^  GIMP_DASH_DASH_DOT,     \/*< desc="Dash, dot"      >*\/$/;"	e	enum:__anon71
GIMP_DASH_DASH_DOT_DOT	core/core-enums.h	/^  GIMP_DASH_DASH_DOT_DOT  \/*< desc="Dash, dot, dot" >*\/$/;"	e	enum:__anon71
GIMP_DASH_DENSE_DOTS	core/core-enums.h	/^  GIMP_DASH_DENSE_DOTS,   \/*< desc="Dense dots"     >*\/$/;"	e	enum:__anon71
GIMP_DASH_EDITOR	widgets/gimpdasheditor.h	30;"	d
GIMP_DASH_EDITOR_CLASS	widgets/gimpdasheditor.h	31;"	d
GIMP_DASH_EDITOR_GET_CLASS	widgets/gimpdasheditor.h	34;"	d
GIMP_DASH_LINE	core/core-enums.h	/^  GIMP_DASH_LINE,         \/*< desc="Line"           >*\/$/;"	e	enum:__anon71
GIMP_DASH_LONG_DASH	core/core-enums.h	/^  GIMP_DASH_LONG_DASH,    \/*< desc="Long dashes"    >*\/$/;"	e	enum:__anon71
GIMP_DASH_MEDIUM_DASH	core/core-enums.h	/^  GIMP_DASH_MEDIUM_DASH,  \/*< desc="Medium dashes"  >*\/$/;"	e	enum:__anon71
GIMP_DASH_NORMAL_DOTS	core/core-enums.h	/^  GIMP_DASH_NORMAL_DOTS,  \/*< desc="Normal dots"    >*\/$/;"	e	enum:__anon71
GIMP_DASH_SHORT_DASH	core/core-enums.h	/^  GIMP_DASH_SHORT_DASH,   \/*< desc="Short dashes"   >*\/$/;"	e	enum:__anon71
GIMP_DASH_SPARSE_DOTS	core/core-enums.h	/^  GIMP_DASH_SPARSE_DOTS,  \/*< desc="Sparse dots"    >*\/$/;"	e	enum:__anon71
GIMP_DASH_STIPPLES	core/core-enums.h	/^  GIMP_DASH_STIPPLES,     \/*< desc="Stipples"       >*\/$/;"	e	enum:__anon71
GIMP_DATA	core/gimpdata.h	40;"	d
GIMP_DATA_CLASS	core/gimpdata.h	41;"	d
GIMP_DATA_EDITOR	widgets/gimpdataeditor.h	30;"	d
GIMP_DATA_EDITOR_CLASS	widgets/gimpdataeditor.h	31;"	d
GIMP_DATA_EDITOR_GET_CLASS	widgets/gimpdataeditor.h	34;"	d
GIMP_DATA_ERROR	core/gimpdata.h	108;"	d
GIMP_DATA_ERROR_DELETE	core/gimpdata.h	/^  GIMP_DATA_ERROR_DELETE  \/*  deleting data file failed  *\/$/;"	e	enum:__anon139
GIMP_DATA_ERROR_OPEN	core/gimpdata.h	/^  GIMP_DATA_ERROR_OPEN,   \/*  opening data file failed   *\/$/;"	e	enum:__anon139
GIMP_DATA_ERROR_READ	core/gimpdata.h	/^  GIMP_DATA_ERROR_READ,   \/*  reading data file failed   *\/$/;"	e	enum:__anon139
GIMP_DATA_ERROR_WRITE	core/gimpdata.h	/^  GIMP_DATA_ERROR_WRITE,  \/*  writing data file failed   *\/$/;"	e	enum:__anon139
GIMP_DATA_FACTORY	core/gimpdatafactory.h	46;"	d
GIMP_DATA_FACTORY_CLASS	core/gimpdatafactory.h	47;"	d
GIMP_DATA_FACTORY_GET_CLASS	core/gimpdatafactory.h	50;"	d
GIMP_DATA_FACTORY_VIEW	widgets/gimpdatafactoryview.h	30;"	d
GIMP_DATA_FACTORY_VIEW_CLASS	widgets/gimpdatafactoryview.h	31;"	d
GIMP_DATA_FACTORY_VIEW_GET_CLASS	widgets/gimpdatafactoryview.h	34;"	d
GIMP_DATA_GET_CLASS	core/gimpdata.h	44;"	d
GIMP_DBUS_SERVICE	widgets/gimpdbusservice.h	34;"	d
GIMP_DBUS_SERVICE_CLASS	widgets/gimpdbusservice.h	35;"	d
GIMP_DBUS_SERVICE_GET_CLASS	widgets/gimpdbusservice.h	38;"	d
GIMP_DBUS_SERVICE_INTERFACE	widgets/gimpdbusservice.h	30;"	d
GIMP_DBUS_SERVICE_NAME	widgets/gimpdbusservice.h	28;"	d
GIMP_DBUS_SERVICE_PATH	widgets/gimpdbusservice.h	29;"	d
GIMP_DEBUG_WRAP_DEFAULT	plug-in/gimpplugindebug.h	/^  GIMP_DEBUG_WRAP_DEFAULT = GIMP_DEBUG_WRAP_RUN$/;"	e	enum:__anon231
GIMP_DEBUG_WRAP_INIT	plug-in/gimpplugindebug.h	/^  GIMP_DEBUG_WRAP_INIT  = 1 << 1,$/;"	e	enum:__anon231
GIMP_DEBUG_WRAP_QUERY	plug-in/gimpplugindebug.h	/^  GIMP_DEBUG_WRAP_QUERY = 1 << 0,$/;"	e	enum:__anon231
GIMP_DEBUG_WRAP_RUN	plug-in/gimpplugindebug.h	/^  GIMP_DEBUG_WRAP_RUN   = 1 << 2,$/;"	e	enum:__anon231
GIMP_DEVICE_INFO	widgets/gimpdeviceinfo.h	41;"	d
GIMP_DEVICE_INFO_CLASS	widgets/gimpdeviceinfo.h	42;"	d
GIMP_DEVICE_INFO_CONTEXT_MASK	widgets/gimpdeviceinfo.h	31;"	d
GIMP_DEVICE_INFO_DATA_KEY	widgets/gimpdeviceinfo.c	37;"	d	file:
GIMP_DEVICE_INFO_GET_CLASS	widgets/gimpdeviceinfo.h	45;"	d
GIMP_DEVICE_MANAGER_DATA_KEY	widgets/gimpdevices.c	53;"	d	file:
GIMP_DEVICE_STATUS	widgets/gimpdevicestatus.h	30;"	d
GIMP_DEVICE_STATUS_CLASS	widgets/gimpdevicestatus.h	31;"	d
GIMP_DEVICE_STATUS_GET_CLASS	widgets/gimpdevicestatus.h	34;"	d
GIMP_DEVICE_VALUE_AXES	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_AXES       = 1 << 1,$/;"	e	enum:__anon415
GIMP_DEVICE_VALUE_BACKGROUND	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_BACKGROUND = 1 << 5,$/;"	e	enum:__anon415
GIMP_DEVICE_VALUE_BRUSH	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_BRUSH      = 1 << 6,$/;"	e	enum:__anon415
GIMP_DEVICE_VALUE_FOREGROUND	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_FOREGROUND = 1 << 4,$/;"	e	enum:__anon415
GIMP_DEVICE_VALUE_GRADIENT	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_GRADIENT   = 1 << 8$/;"	e	enum:__anon415
GIMP_DEVICE_VALUE_KEYS	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_KEYS       = 1 << 2,$/;"	e	enum:__anon415
GIMP_DEVICE_VALUE_MODE	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_MODE       = 1 << 0,$/;"	e	enum:__anon415
GIMP_DEVICE_VALUE_PATTERN	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_PATTERN    = 1 << 7,$/;"	e	enum:__anon415
GIMP_DEVICE_VALUE_TOOL	widgets/widgets-enums.h	/^  GIMP_DEVICE_VALUE_TOOL       = 1 << 3,$/;"	e	enum:__anon415
GIMP_DIALOG_FACTORY	widgets/gimpdialogfactory.h	66;"	d
GIMP_DIALOG_FACTORY_CLASS	widgets/gimpdialogfactory.h	67;"	d
GIMP_DIALOG_FACTORY_GET_CLASS	widgets/gimpdialogfactory.h	70;"	d
GIMP_DIALOG_VISIBILITY_INVISIBLE	widgets/gimpdialogfactory.h	/^  GIMP_DIALOG_VISIBILITY_INVISIBLE,$/;"	e	enum:__anon371
GIMP_DIALOG_VISIBILITY_KEY	widgets/gimpdialogfactory.h	28;"	d
GIMP_DIALOG_VISIBILITY_UNKNOWN	widgets/gimpdialogfactory.h	/^  GIMP_DIALOG_VISIBILITY_UNKNOWN = 0,$/;"	e	enum:__anon371
GIMP_DIALOG_VISIBILITY_VISIBLE	widgets/gimpdialogfactory.h	/^  GIMP_DIALOG_VISIBILITY_VISIBLE$/;"	e	enum:__anon371
GIMP_DIFFERENCE_MODE	base/base-enums.h	/^  GIMP_DIFFERENCE_MODE,      \/*< desc="Difference"           >*\/$/;"	e	enum:__anon11
GIMP_DIRTY_ALL	core/core-enums.h	/^  GIMP_DIRTY_ALL             = 0xffff$/;"	e	enum:__anon83
GIMP_DIRTY_DRAWABLE	core/core-enums.h	/^  GIMP_DIRTY_DRAWABLE        = 1 << 6,$/;"	e	enum:__anon83
GIMP_DIRTY_IMAGE	core/core-enums.h	/^  GIMP_DIRTY_IMAGE           = 1 << 0,$/;"	e	enum:__anon83
GIMP_DIRTY_IMAGE_META	core/core-enums.h	/^  GIMP_DIRTY_IMAGE_META      = 1 << 2,$/;"	e	enum:__anon83
GIMP_DIRTY_IMAGE_SIZE	core/core-enums.h	/^  GIMP_DIRTY_IMAGE_SIZE      = 1 << 1,$/;"	e	enum:__anon83
GIMP_DIRTY_IMAGE_STRUCTURE	core/core-enums.h	/^  GIMP_DIRTY_IMAGE_STRUCTURE = 1 << 3,$/;"	e	enum:__anon83
GIMP_DIRTY_ITEM	core/core-enums.h	/^  GIMP_DIRTY_ITEM            = 1 << 4,$/;"	e	enum:__anon83
GIMP_DIRTY_ITEM_META	core/core-enums.h	/^  GIMP_DIRTY_ITEM_META       = 1 << 5,$/;"	e	enum:__anon83
GIMP_DIRTY_NONE	core/core-enums.h	/^  GIMP_DIRTY_NONE            = 0,$/;"	e	enum:__anon83
GIMP_DIRTY_SELECTION	core/core-enums.h	/^  GIMP_DIRTY_SELECTION       = 1 << 8,$/;"	e	enum:__anon83
GIMP_DIRTY_VECTORS	core/core-enums.h	/^  GIMP_DIRTY_VECTORS         = 1 << 7,$/;"	e	enum:__anon83
GIMP_DISPLAY	display/gimpdisplay.h	27;"	d
GIMP_DISPLAY_CLASS	display/gimpdisplay.h	28;"	d
GIMP_DISPLAY_CONFIG	config/gimpdisplayconfig.h	35;"	d
GIMP_DISPLAY_CONFIG_CLASS	config/gimpdisplayconfig.h	36;"	d
GIMP_DISPLAY_GET_CLASS	display/gimpdisplay.h	31;"	d
GIMP_DISPLAY_OPTIONS	display/gimpdisplayoptions.h	29;"	d
GIMP_DISPLAY_OPTIONS_CLASS	display/gimpdisplayoptions.h	30;"	d
GIMP_DISPLAY_OPTIONS_GET_CLASS	display/gimpdisplayoptions.h	33;"	d
GIMP_DISPLAY_SHELL	display/gimpdisplayshell.h	50;"	d
GIMP_DISPLAY_SHELL_CANVAS_EVENT_MASK	display/gimpdisplayshell-callbacks.h	23;"	d
GIMP_DISPLAY_SHELL_CLASS	display/gimpdisplayshell.h	51;"	d
GIMP_DISPLAY_SHELL_DIM_PIXEL	display/gimpdisplayshell-render.c	305;"	d	file:
GIMP_DISPLAY_SHELL_GET_CLASS	display/gimpdisplayshell.h	54;"	d
GIMP_DISPLAY_UPDATE_ICON_TIMEOUT	display/gimpdisplayshell-handlers.c	49;"	d	file:
GIMP_DISSOLVE_MODE	base/base-enums.h	/^  GIMP_DISSOLVE_MODE,        \/*< desc="Dissolve"             >*\/$/;"	e	enum:__anon11
GIMP_DIVIDE_MODE	base/base-enums.h	/^  GIMP_DIVIDE_MODE,          \/*< desc="Divide"               >*\/$/;"	e	enum:__anon11
GIMP_DND_TYPE_BRUSH	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_BRUSH        = 15,$/;"	e	enum:__anon410
GIMP_DND_TYPE_BUFFER	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_BUFFER       = 20,$/;"	e	enum:__anon410
GIMP_DND_TYPE_CHANNEL	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_CHANNEL      = 12,$/;"	e	enum:__anon410
GIMP_DND_TYPE_COLOR	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_COLOR        = 5,$/;"	e	enum:__anon410
GIMP_DND_TYPE_COMPONENT	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_COMPONENT    = 10,$/;"	e	enum:__anon410
GIMP_DND_TYPE_DIALOG	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_DIALOG       = 24,$/;"	e	enum:__anon410
GIMP_DND_TYPE_FONT	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_FONT         = 19,$/;"	e	enum:__anon410
GIMP_DND_TYPE_GRADIENT	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_GRADIENT     = 17,$/;"	e	enum:__anon410
GIMP_DND_TYPE_IMAGE	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_IMAGE        = 9,$/;"	e	enum:__anon410
GIMP_DND_TYPE_IMAGEFILE	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_IMAGEFILE    = 21,$/;"	e	enum:__anon410
GIMP_DND_TYPE_LAST	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_LAST         = GIMP_DND_TYPE_DIALOG$/;"	e	enum:__anon410
GIMP_DND_TYPE_LAYER	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_LAYER        = 11,$/;"	e	enum:__anon410
GIMP_DND_TYPE_LAYER_MASK	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_LAYER_MASK   = 13,$/;"	e	enum:__anon410
GIMP_DND_TYPE_NETSCAPE_URL	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_NETSCAPE_URL = 3,$/;"	e	enum:__anon410
GIMP_DND_TYPE_NONE	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_NONE         = 0,$/;"	e	enum:__anon410
GIMP_DND_TYPE_PALETTE	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_PALETTE      = 18,$/;"	e	enum:__anon410
GIMP_DND_TYPE_PATTERN	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_PATTERN      = 16,$/;"	e	enum:__anon410
GIMP_DND_TYPE_PIXBUF	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_PIXBUF       = 8,$/;"	e	enum:__anon410
GIMP_DND_TYPE_SVG	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_SVG          = 6,$/;"	e	enum:__anon410
GIMP_DND_TYPE_SVG_XML	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_SVG_XML      = 7,$/;"	e	enum:__anon410
GIMP_DND_TYPE_TEMPLATE	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_TEMPLATE     = 22,$/;"	e	enum:__anon410
GIMP_DND_TYPE_TEXT_PLAIN	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_TEXT_PLAIN   = 2,$/;"	e	enum:__anon410
GIMP_DND_TYPE_TOOL_INFO	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_TOOL_INFO    = 23,$/;"	e	enum:__anon410
GIMP_DND_TYPE_URI_LIST	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_URI_LIST     = 1,$/;"	e	enum:__anon410
GIMP_DND_TYPE_VECTORS	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_VECTORS      = 14,$/;"	e	enum:__anon410
GIMP_DND_TYPE_XDS	widgets/widgets-enums.h	/^  GIMP_DND_TYPE_XDS          = 4,$/;"	e	enum:__anon410
GIMP_DOCK	widgets/gimpdock.h	30;"	d
GIMP_DOCKABLE	widgets/gimpdockable.h	33;"	d
GIMP_DOCKABLE_CLASS	widgets/gimpdockable.h	34;"	d
GIMP_DOCKABLE_DETACH_REF_KEY	widgets/gimpdockable.c	942;"	d	file:
GIMP_DOCKABLE_DRAG_OFFSET	widgets/gimpdockable.h	29;"	d
GIMP_DOCKABLE_GET_CLASS	widgets/gimpdockable.h	37;"	d
GIMP_DOCKBOOK	widgets/gimpdockbook.h	30;"	d
GIMP_DOCKBOOK_CLASS	widgets/gimpdockbook.h	31;"	d
GIMP_DOCKBOOK_GET_CLASS	widgets/gimpdockbook.h	34;"	d
GIMP_DOCKED	widgets/gimpdocked.h	28;"	d
GIMP_DOCKED_GET_INTERFACE	widgets/gimpdocked.h	29;"	d
GIMP_DOCK_CLASS	widgets/gimpdock.h	31;"	d
GIMP_DOCK_GET_CLASS	widgets/gimpdock.h	34;"	d
GIMP_DOCK_SEPARATOR	widgets/gimpdockseparator.h	30;"	d
GIMP_DOCK_SEPARATOR_CLASS	widgets/gimpdockseparator.h	31;"	d
GIMP_DOCK_SEPARATOR_GET_CLASS	widgets/gimpdockseparator.h	34;"	d
GIMP_DOCUMENT_LIST	core/gimpdocumentlist.h	26;"	d
GIMP_DOCUMENT_LIST_CLASS	core/gimpdocumentlist.h	27;"	d
GIMP_DOCUMENT_VIEW	widgets/gimpdocumentview.h	30;"	d
GIMP_DOCUMENT_VIEW_CLASS	widgets/gimpdocumentview.h	31;"	d
GIMP_DOCUMENT_VIEW_GET_CLASS	widgets/gimpdocumentview.h	34;"	d
GIMP_DODGE_BURN	paint/gimpdodgeburn.h	27;"	d
GIMP_DODGE_BURN_CLASS	paint/gimpdodgeburn.h	29;"	d
GIMP_DODGE_BURN_OPTIONS	paint/gimpdodgeburnoptions.h	27;"	d
GIMP_DODGE_BURN_OPTIONS_CLASS	paint/gimpdodgeburnoptions.h	28;"	d
GIMP_DODGE_BURN_OPTIONS_GET_CLASS	paint/gimpdodgeburnoptions.h	31;"	d
GIMP_DODGE_BURN_TOOL	tools/gimpdodgeburntool.h	27;"	d
GIMP_DODGE_BURN_TOOL_CLASS	tools/gimpdodgeburntool.h	29;"	d
GIMP_DODGE_BURN_TOOL_GET_OPTIONS	tools/gimpdodgeburntool.h	32;"	d
GIMP_DODGE_MODE	base/base-enums.h	/^  GIMP_DODGE_MODE,           \/*< desc="Dodge"                >*\/$/;"	e	enum:__anon11
GIMP_DRAWABLE	core/gimpdrawable.h	27;"	d
GIMP_DRAWABLE_CLASS	core/gimpdrawable.h	28;"	d
GIMP_DRAWABLE_GET_CLASS	core/gimpdrawable.h	31;"	d
GIMP_DRAWABLE_MOD_UNDO	core/gimpdrawablemodundo.h	27;"	d
GIMP_DRAWABLE_MOD_UNDO_CLASS	core/gimpdrawablemodundo.h	28;"	d
GIMP_DRAWABLE_MOD_UNDO_GET_CLASS	core/gimpdrawablemodundo.h	31;"	d
GIMP_DRAWABLE_TREE_VIEW	widgets/gimpdrawabletreeview.h	30;"	d
GIMP_DRAWABLE_TREE_VIEW_CLASS	widgets/gimpdrawabletreeview.h	31;"	d
GIMP_DRAWABLE_TREE_VIEW_GET_CLASS	widgets/gimpdrawabletreeview.h	34;"	d
GIMP_DRAWABLE_UNDO	core/gimpdrawableundo.h	27;"	d
GIMP_DRAWABLE_UNDO_CLASS	core/gimpdrawableundo.h	28;"	d
GIMP_DRAWABLE_UNDO_GET_CLASS	core/gimpdrawableundo.h	31;"	d
GIMP_DRAW_TOOL	tools/gimpdrawtool.h	37;"	d
GIMP_DRAW_TOOL_CLASS	tools/gimpdrawtool.h	38;"	d
GIMP_DRAW_TOOL_GET_CLASS	tools/gimpdrawtool.h	41;"	d
GIMP_DROP_ABOVE	widgets/widgets-enums.h	/^  GIMP_DROP_ABOVE,$/;"	e	enum:__anon411
GIMP_DROP_BELOW	widgets/widgets-enums.h	/^  GIMP_DROP_BELOW$/;"	e	enum:__anon411
GIMP_DROP_NONE	widgets/widgets-enums.h	/^  GIMP_DROP_NONE,$/;"	e	enum:__anon411
GIMP_EDITOR	widgets/gimpeditor.h	30;"	d
GIMP_EDITOR_CLASS	widgets/gimpeditor.h	31;"	d
GIMP_EDITOR_GET_CLASS	widgets/gimpeditor.h	34;"	d
GIMP_EDIT_SELECTION_TOOL	tools/gimpeditselectiontool.h	27;"	d
GIMP_EDIT_SELECTION_TOOL_CLASS	tools/gimpeditselectiontool.h	28;"	d
GIMP_ELLIPSE_SELECT_TOOL	tools/gimpellipseselecttool.h	27;"	d
GIMP_ELLIPSE_SELECT_TOOL_CLASS	tools/gimpellipseselecttool.h	28;"	d
GIMP_ELLIPSE_SELECT_TOOL_GET_CLASS	tools/gimpellipseselecttool.h	31;"	d
GIMP_ENABLE_CONTROLLER_UNDER_CONSTRUCTION	widgets/gimpcontrollereditor.c	30;"	d	file:
GIMP_ENABLE_CONTROLLER_UNDER_CONSTRUCTION	widgets/gimpcontrollerinfo.c	31;"	d	file:
GIMP_ENABLE_CONTROLLER_UNDER_CONSTRUCTION	widgets/gimpcontrollerkeyboard.h	26;"	d
GIMP_ENABLE_CONTROLLER_UNDER_CONSTRUCTION	widgets/gimpcontrollerlist.c	30;"	d	file:
GIMP_ENABLE_CONTROLLER_UNDER_CONSTRUCTION	widgets/gimpcontrollers.c	27;"	d	file:
GIMP_ENABLE_CONTROLLER_UNDER_CONSTRUCTION	widgets/gimpcontrollerwheel.h	26;"	d
GIMP_ENUM_ACTION	widgets/gimpenumaction.h	30;"	d
GIMP_ENUM_ACTION_CLASS	widgets/gimpenumaction.h	31;"	d
GIMP_ENUM_ACTION_GET_CLASS	widgets/gimpenumaction.h	34;"	d
GIMP_ENVIRON_TABLE	plug-in/gimpenvirontable.h	27;"	d
GIMP_ENVIRON_TABLE_CLASS	plug-in/gimpenvirontable.h	28;"	d
GIMP_ENVIRON_TABLE_GET_CLASS	plug-in/gimpenvirontable.h	31;"	d
GIMP_ERASER	paint/gimperaser.h	27;"	d
GIMP_ERASER_CLASS	paint/gimperaser.h	28;"	d
GIMP_ERASER_GET_CLASS	paint/gimperaser.h	31;"	d
GIMP_ERASER_OPTIONS	paint/gimperaseroptions.h	27;"	d
GIMP_ERASER_OPTIONS_CLASS	paint/gimperaseroptions.h	28;"	d
GIMP_ERASER_OPTIONS_GET_CLASS	paint/gimperaseroptions.h	31;"	d
GIMP_ERASER_TOOL	tools/gimperasertool.h	27;"	d
GIMP_ERASER_TOOL_CLASS	tools/gimperasertool.h	28;"	d
GIMP_ERASER_TOOL_GET_CLASS	tools/gimperasertool.h	31;"	d
GIMP_ERASER_TOOL_GET_OPTIONS	tools/gimperasertool.h	33;"	d
GIMP_ERASE_MODE	base/base-enums.h	/^  GIMP_ERASE_MODE,           \/*< pdb-skip, desc="Erase"      >*\/$/;"	e	enum:__anon11
GIMP_ERROR_CONSOLE	widgets/gimperrorconsole.h	30;"	d
GIMP_ERROR_CONSOLE_CLASS	widgets/gimperrorconsole.h	31;"	d
GIMP_ERROR_CONSOLE_GET_CLASS	widgets/gimperrorconsole.h	34;"	d
GIMP_ERROR_DIALOG	widgets/gimperrordialog.h	29;"	d
GIMP_ERROR_DIALOG_CLASS	widgets/gimperrordialog.h	30;"	d
GIMP_ERROR_DIALOG_GET_CLASS	widgets/gimperrordialog.h	33;"	d
GIMP_ERROR_DIALOG_MAX_MESSAGES	widgets/gimperrordialog.c	37;"	d	file:
GIMP_EXPAND_AS_NECESSARY	core/core-enums.h	/^  GIMP_EXPAND_AS_NECESSARY,$/;"	e	enum:__anon89
GIMP_FG_BG_EDITOR	widgets/gimpfgbgeditor.h	30;"	d
GIMP_FG_BG_EDITOR_CLASS	widgets/gimpfgbgeditor.h	31;"	d
GIMP_FG_BG_EDITOR_GET_CLASS	widgets/gimpfgbgeditor.h	34;"	d
GIMP_FG_BG_VIEW	widgets/gimpfgbgview.h	30;"	d
GIMP_FG_BG_VIEW_CLASS	widgets/gimpfgbgview.h	31;"	d
GIMP_FG_BG_VIEW_GET_CLASS	widgets/gimpfgbgview.h	34;"	d
GIMP_FILE_DIALOG	widgets/gimpfiledialog.h	29;"	d
GIMP_FILE_DIALOG_CLASS	widgets/gimpfiledialog.h	30;"	d
GIMP_FILE_DIALOG_GET_CLASS	widgets/gimpfiledialog.h	33;"	d
GIMP_FILE_PROC_VIEW	widgets/gimpfileprocview.h	30;"	d
GIMP_FILE_PROC_VIEW_CLASS	widgets/gimpfileprocview.h	31;"	d
GIMP_FILE_PROC_VIEW_GET_CLASS	widgets/gimpfileprocview.h	34;"	d
GIMP_FIXED_DITHER	core/core-enums.h	/^  GIMP_FIXED_DITHER,      \/*< desc="Positioned"                               >*\/$/;"	e	enum:__anon61
GIMP_FLATTEN_IMAGE	core/core-enums.h	/^  GIMP_FLATTEN_IMAGE$/;"	e	enum:__anon89
GIMP_FLIP_OPTIONS	tools/gimpflipoptions.h	27;"	d
GIMP_FLIP_OPTIONS_CLASS	tools/gimpflipoptions.h	28;"	d
GIMP_FLIP_OPTIONS_GET_CLASS	tools/gimpflipoptions.h	31;"	d
GIMP_FLIP_TOOL	tools/gimpfliptool.h	27;"	d
GIMP_FLIP_TOOL_CLASS	tools/gimpfliptool.h	28;"	d
GIMP_FLIP_TOOL_GET_CLASS	tools/gimpfliptool.h	31;"	d
GIMP_FLIP_TOOL_GET_OPTIONS	tools/gimpfliptool.h	33;"	d
GIMP_FLOATING_SEL_UNDO	core/gimpfloatingselundo.h	27;"	d
GIMP_FLOATING_SEL_UNDO_CLASS	core/gimpfloatingselundo.h	28;"	d
GIMP_FLOATING_SEL_UNDO_GET_CLASS	core/gimpfloatingselundo.h	31;"	d
GIMP_FONT	text/gimpfont.h	31;"	d
GIMP_FONT_CLASS	text/gimpfont.h	32;"	d
GIMP_FONT_GET_CLASS	text/gimpfont.h	35;"	d
GIMP_FONT_LIST	text/gimpfontlist.h	31;"	d
GIMP_FONT_LIST_CLASS	text/gimpfontlist.h	32;"	d
GIMP_FONT_LIST_GET_CLASS	text/gimpfontlist.h	35;"	d
GIMP_FONT_POPUP_SIZE	text/gimpfont.c	44;"	d	file:
GIMP_FONT_SELECT	widgets/gimpfontselect.h	31;"	d
GIMP_FONT_SELECT_CLASS	widgets/gimpfontselect.h	32;"	d
GIMP_FONT_SELECT_GET_CLASS	widgets/gimpfontselect.h	35;"	d
GIMP_FONT_VIEW	widgets/gimpfontview.h	30;"	d
GIMP_FONT_VIEW_CLASS	widgets/gimpfontview.h	31;"	d
GIMP_FONT_VIEW_GET_CLASS	widgets/gimpfontview.h	34;"	d
GIMP_FOREGROUND_FILL	core/core-enums.h	/^  GIMP_FOREGROUND_FILL,   \/*< desc="Foreground color" >*\/$/;"	e	enum:__anon66
GIMP_FOREGROUND_SELECT_OPTIONS	tools/gimpforegroundselectoptions.h	27;"	d
GIMP_FOREGROUND_SELECT_OPTIONS_CLASS	tools/gimpforegroundselectoptions.h	28;"	d
GIMP_FOREGROUND_SELECT_OPTIONS_GET_CLASS	tools/gimpforegroundselectoptions.h	31;"	d
GIMP_FOREGROUND_SELECT_TOOL	tools/gimpforegroundselecttool.h	27;"	d
GIMP_FOREGROUND_SELECT_TOOL_CLASS	tools/gimpforegroundselecttool.h	28;"	d
GIMP_FOREGROUND_SELECT_TOOL_GET_CLASS	tools/gimpforegroundselecttool.h	31;"	d
GIMP_FOREGROUND_SELECT_TOOL_GET_OPTIONS	tools/gimpforegroundselecttool.h	33;"	d
GIMP_FOREGROUND_SELECT_TOOL_UNDO	tools/gimpforegroundselecttoolundo.h	27;"	d
GIMP_FOREGROUND_SELECT_TOOL_UNDO_CLASS	tools/gimpforegroundselecttoolundo.h	28;"	d
GIMP_FOREGROUND_SELECT_TOOL_UNDO_GET_CLASS	tools/gimpforegroundselecttoolundo.h	31;"	d
GIMP_FREE_SELECT_TOOL	tools/gimpfreeselecttool.h	27;"	d
GIMP_FREE_SELECT_TOOL_CLASS	tools/gimpfreeselecttool.h	28;"	d
GIMP_FREE_SELECT_TOOL_GET_CLASS	tools/gimpfreeselecttool.h	31;"	d
GIMP_FSLOWBLEED_DITHER	core/core-enums.h	/^  GIMP_FSLOWBLEED_DITHER, \/*< desc="Floyd-Steinberg (reduced color bleeding)" >*\/$/;"	e	enum:__anon61
GIMP_FS_DITHER	core/core-enums.h	/^  GIMP_FS_DITHER,         \/*< desc="Floyd-Steinberg (normal)"                 >*\/$/;"	e	enum:__anon61
GIMP_FUZZY_SELECT_TOOL	tools/gimpfuzzyselecttool.h	29;"	d
GIMP_FUZZY_SELECT_TOOL_CLASS	tools/gimpfuzzyselecttool.h	30;"	d
GIMP_FUZZY_SELECT_TOOL_GET_CLASS	tools/gimpfuzzyselecttool.h	33;"	d
GIMP_GRADIENT	core/gimpgradient.h	47;"	d
GIMP_GRADIENT_CLASS	core/gimpgradient.h	48;"	d
GIMP_GRADIENT_COLOR_BACKGROUND	core/core-enums.h	/^  GIMP_GRADIENT_COLOR_BACKGROUND,$/;"	e	enum:__anon85
GIMP_GRADIENT_COLOR_BACKGROUND_TRANSPARENT	core/core-enums.h	/^  GIMP_GRADIENT_COLOR_BACKGROUND_TRANSPARENT$/;"	e	enum:__anon85
GIMP_GRADIENT_COLOR_FIXED	core/core-enums.h	/^  GIMP_GRADIENT_COLOR_FIXED,$/;"	e	enum:__anon85
GIMP_GRADIENT_COLOR_FOREGROUND	core/core-enums.h	/^  GIMP_GRADIENT_COLOR_FOREGROUND,$/;"	e	enum:__anon85
GIMP_GRADIENT_COLOR_FOREGROUND_TRANSPARENT	core/core-enums.h	/^  GIMP_GRADIENT_COLOR_FOREGROUND_TRANSPARENT,$/;"	e	enum:__anon85
GIMP_GRADIENT_DEFAULT_SAMPLE_SIZE	core/gimpgradient.h	26;"	d
GIMP_GRADIENT_EDITOR	widgets/gimpgradienteditor.h	42;"	d
GIMP_GRADIENT_EDITOR_CLASS	widgets/gimpgradienteditor.h	43;"	d
GIMP_GRADIENT_EDITOR_GET_CLASS	widgets/gimpgradienteditor.h	46;"	d
GIMP_GRADIENT_FILE_EXTENSION	core/gimpgradient-load.h	23;"	d
GIMP_GRADIENT_GET_CLASS	core/gimpgradient.h	51;"	d
GIMP_GRADIENT_SEGMENT_CURVED	core/core-enums.h	/^  GIMP_GRADIENT_SEGMENT_CURVED,$/;"	e	enum:__anon86
GIMP_GRADIENT_SEGMENT_HSV_CCW	core/core-enums.h	/^  GIMP_GRADIENT_SEGMENT_HSV_CCW,  \/* counterclockwise hue *\/$/;"	e	enum:__anon87
GIMP_GRADIENT_SEGMENT_HSV_CW	core/core-enums.h	/^  GIMP_GRADIENT_SEGMENT_HSV_CW    \/* clockwise hue        *\/$/;"	e	enum:__anon87
GIMP_GRADIENT_SEGMENT_LINEAR	core/core-enums.h	/^  GIMP_GRADIENT_SEGMENT_LINEAR,$/;"	e	enum:__anon86
GIMP_GRADIENT_SEGMENT_RGB	core/core-enums.h	/^  GIMP_GRADIENT_SEGMENT_RGB,      \/* normal RGB           *\/$/;"	e	enum:__anon87
GIMP_GRADIENT_SEGMENT_SINE	core/core-enums.h	/^  GIMP_GRADIENT_SEGMENT_SINE,$/;"	e	enum:__anon86
GIMP_GRADIENT_SEGMENT_SPHERE_DECREASING	core/core-enums.h	/^  GIMP_GRADIENT_SEGMENT_SPHERE_DECREASING$/;"	e	enum:__anon86
GIMP_GRADIENT_SEGMENT_SPHERE_INCREASING	core/core-enums.h	/^  GIMP_GRADIENT_SEGMENT_SPHERE_INCREASING,$/;"	e	enum:__anon86
GIMP_GRADIENT_SELECT	widgets/gimpgradientselect.h	31;"	d
GIMP_GRADIENT_SELECT_CLASS	widgets/gimpgradientselect.h	32;"	d
GIMP_GRADIENT_SELECT_GET_CLASS	widgets/gimpgradientselect.h	35;"	d
GIMP_GRADIENT_SVG_FILE_EXTENSION	core/gimpgradient-load.h	24;"	d
GIMP_GRAIN_EXTRACT_MODE	base/base-enums.h	/^  GIMP_GRAIN_EXTRACT_MODE,   \/*< desc="Grain extract"        >*\/$/;"	e	enum:__anon11
GIMP_GRAIN_MERGE_MODE	base/base-enums.h	/^  GIMP_GRAIN_MERGE_MODE,     \/*< desc="Grain merge"          >*\/$/;"	e	enum:__anon11
GIMP_GRAVITY_CENTER	core/core-enums.h	/^  GIMP_GRAVITY_CENTER,$/;"	e	enum:__anon63
GIMP_GRAVITY_EAST	core/core-enums.h	/^  GIMP_GRAVITY_EAST,$/;"	e	enum:__anon63
GIMP_GRAVITY_NONE	core/core-enums.h	/^  GIMP_GRAVITY_NONE,$/;"	e	enum:__anon63
GIMP_GRAVITY_NORTH	core/core-enums.h	/^  GIMP_GRAVITY_NORTH,$/;"	e	enum:__anon63
GIMP_GRAVITY_NORTH_EAST	core/core-enums.h	/^  GIMP_GRAVITY_NORTH_EAST,$/;"	e	enum:__anon63
GIMP_GRAVITY_NORTH_WEST	core/core-enums.h	/^  GIMP_GRAVITY_NORTH_WEST,$/;"	e	enum:__anon63
GIMP_GRAVITY_SOUTH	core/core-enums.h	/^  GIMP_GRAVITY_SOUTH,$/;"	e	enum:__anon63
GIMP_GRAVITY_SOUTH_EAST	core/core-enums.h	/^  GIMP_GRAVITY_SOUTH_EAST$/;"	e	enum:__anon63
GIMP_GRAVITY_SOUTH_WEST	core/core-enums.h	/^  GIMP_GRAVITY_SOUTH_WEST,$/;"	e	enum:__anon63
GIMP_GRAVITY_WEST	core/core-enums.h	/^  GIMP_GRAVITY_WEST,$/;"	e	enum:__anon63
GIMP_GREEN_HUES	base/base-enums.h	/^  GIMP_GREEN_HUES,$/;"	e	enum:__anon12
GIMP_GRID	core/gimpgrid.h	30;"	d
GIMP_GRID_CLASS	core/gimpgrid.h	31;"	d
GIMP_GRID_EDITOR	widgets/gimpgrideditor.h	30;"	d
GIMP_GRID_EDITOR_CLASS	widgets/gimpgrideditor.h	31;"	d
GIMP_GRID_EDITOR_GET_CLASS	widgets/gimpgrideditor.h	34;"	d
GIMP_GRID_GET_CLASS	core/gimpgrid.h	34;"	d
GIMP_GUIDE	core/gimpguide.h	30;"	d
GIMP_GUIDE_CLASS	core/gimpguide.h	31;"	d
GIMP_GUIDE_GET_CLASS	core/gimpguide.h	34;"	d
GIMP_GUIDE_UNDO	core/gimpguideundo.h	27;"	d
GIMP_GUIDE_UNDO_CLASS	core/gimpguideundo.h	28;"	d
GIMP_GUIDE_UNDO_GET_CLASS	core/gimpguideundo.h	31;"	d
GIMP_GUI_CONFIG	config/gimpguiconfig.h	31;"	d
GIMP_GUI_CONFIG_CLASS	config/gimpguiconfig.h	32;"	d
GIMP_HANDLE_CIRCLE	tools/gimpdrawtool.h	/^  GIMP_HANDLE_CIRCLE,$/;"	e	enum:__anon278
GIMP_HANDLE_CROSS	tools/gimpdrawtool.h	/^  GIMP_HANDLE_CROSS$/;"	e	enum:__anon278
GIMP_HANDLE_FILLED_CIRCLE	tools/gimpdrawtool.h	/^  GIMP_HANDLE_FILLED_CIRCLE,$/;"	e	enum:__anon278
GIMP_HANDLE_FILLED_SQUARE	tools/gimpdrawtool.h	/^  GIMP_HANDLE_FILLED_SQUARE,$/;"	e	enum:__anon278
GIMP_HANDLE_SQUARE	tools/gimpdrawtool.h	/^  GIMP_HANDLE_SQUARE,$/;"	e	enum:__anon278
GIMP_HARDLIGHT_MODE	base/base-enums.h	/^  GIMP_HARDLIGHT_MODE,       \/*< desc="Hard light"           >*\/$/;"	e	enum:__anon11
GIMP_HEAL	paint/gimpheal.h	27;"	d
GIMP_HEAL_CLASS	paint/gimpheal.h	28;"	d
GIMP_HEAL_GET_CLASS	paint/gimpheal.h	31;"	d
GIMP_HEAL_TOOL	tools/gimphealtool.h	27;"	d
GIMP_HEAL_TOOL_CLASS	tools/gimphealtool.h	28;"	d
GIMP_HEAL_TOOL_GET_CLASS	tools/gimphealtool.h	31;"	d
GIMP_HELP_ABOUT_DIALOG	widgets/gimphelp-ids.h	462;"	d
GIMP_HELP_BROWSER_GIMP	widgets/widgets-enums.h	/^  GIMP_HELP_BROWSER_GIMP,        \/*< desc="GIMP help browser" >*\/$/;"	e	enum:__anon404
GIMP_HELP_BROWSER_WEB_BROWSER	widgets/widgets-enums.h	/^  GIMP_HELP_BROWSER_WEB_BROWSER  \/*< desc="Web browser"       >*\/$/;"	e	enum:__anon404
GIMP_HELP_BRUSH_COPY_LOCATION	widgets/gimphelp-ids.h	297;"	d
GIMP_HELP_BRUSH_DELETE	widgets/gimphelp-ids.h	298;"	d
GIMP_HELP_BRUSH_DIALOG	widgets/gimphelp-ids.h	292;"	d
GIMP_HELP_BRUSH_DUPLICATE	widgets/gimphelp-ids.h	296;"	d
GIMP_HELP_BRUSH_EDIT	widgets/gimphelp-ids.h	293;"	d
GIMP_HELP_BRUSH_EDITOR_DIALOG	widgets/gimphelp-ids.h	301;"	d
GIMP_HELP_BRUSH_EDITOR_EDIT_ACTIVE	widgets/gimphelp-ids.h	302;"	d
GIMP_HELP_BRUSH_NEW	widgets/gimphelp-ids.h	295;"	d
GIMP_HELP_BRUSH_OPEN_AS_IMAGE	widgets/gimphelp-ids.h	294;"	d
GIMP_HELP_BRUSH_REFRESH	widgets/gimphelp-ids.h	299;"	d
GIMP_HELP_BUFFER_COPY	widgets/gimphelp-ids.h	369;"	d
GIMP_HELP_BUFFER_CUT	widgets/gimphelp-ids.h	368;"	d
GIMP_HELP_BUFFER_DELETE	widgets/gimphelp-ids.h	373;"	d
GIMP_HELP_BUFFER_DIALOG	widgets/gimphelp-ids.h	367;"	d
GIMP_HELP_BUFFER_PASTE	widgets/gimphelp-ids.h	370;"	d
GIMP_HELP_BUFFER_PASTE_AS_NEW	widgets/gimphelp-ids.h	372;"	d
GIMP_HELP_BUFFER_PASTE_INTO	widgets/gimphelp-ids.h	371;"	d
GIMP_HELP_CHANNEL_DELETE	widgets/gimphelp-ids.h	202;"	d
GIMP_HELP_CHANNEL_DIALOG	widgets/gimphelp-ids.h	195;"	d
GIMP_HELP_CHANNEL_DUPLICATE	widgets/gimphelp-ids.h	201;"	d
GIMP_HELP_CHANNEL_EDIT	widgets/gimphelp-ids.h	207;"	d
GIMP_HELP_CHANNEL_LOWER	widgets/gimphelp-ids.h	199;"	d
GIMP_HELP_CHANNEL_LOWER_TO_BOTTOM	widgets/gimphelp-ids.h	200;"	d
GIMP_HELP_CHANNEL_NEW	widgets/gimphelp-ids.h	196;"	d
GIMP_HELP_CHANNEL_RAISE	widgets/gimphelp-ids.h	197;"	d
GIMP_HELP_CHANNEL_RAISE_TO_TOP	widgets/gimphelp-ids.h	198;"	d
GIMP_HELP_CHANNEL_SELECTION_ADD	widgets/gimphelp-ids.h	204;"	d
GIMP_HELP_CHANNEL_SELECTION_INTERSECT	widgets/gimphelp-ids.h	206;"	d
GIMP_HELP_CHANNEL_SELECTION_REPLACE	widgets/gimphelp-ids.h	203;"	d
GIMP_HELP_CHANNEL_SELECTION_SUBTRACT	widgets/gimphelp-ids.h	205;"	d
GIMP_HELP_COLORDISPLAY_COLORBLIND	widgets/gimphelp-ids.h	481;"	d
GIMP_HELP_COLORDISPLAY_CONTRAST	widgets/gimphelp-ids.h	482;"	d
GIMP_HELP_COLORDISPLAY_GAMMA	widgets/gimphelp-ids.h	483;"	d
GIMP_HELP_COLORDISPLAY_GIMP	widgets/gimphelp-ids.h	484;"	d
GIMP_HELP_COLORDISPLAY_PROOF	widgets/gimphelp-ids.h	485;"	d
GIMP_HELP_COLORSELECTOR_CMYK	widgets/gimphelp-ids.h	487;"	d
GIMP_HELP_COLORSELECTOR_TRIANGLE	widgets/gimphelp-ids.h	488;"	d
GIMP_HELP_COLORSELECTOR_WATER	widgets/gimphelp-ids.h	489;"	d
GIMP_HELP_COLOR_DIALOG	widgets/gimphelp-ids.h	463;"	d
GIMP_HELP_CONTROLLER_KEYBOARD	widgets/gimphelp-ids.h	491;"	d
GIMP_HELP_CONTROLLER_LINUX_INPUT	widgets/gimphelp-ids.h	492;"	d
GIMP_HELP_CONTROLLER_MIDI	widgets/gimphelp-ids.h	493;"	d
GIMP_HELP_CONTROLLER_WHEEL	widgets/gimphelp-ids.h	494;"	d
GIMP_HELP_DEVICE_STATUS_DIALOG	widgets/gimphelp-ids.h	464;"	d
GIMP_HELP_DISPLAY_FILTER_DIALOG	widgets/gimphelp-ids.h	465;"	d
GIMP_HELP_DOCK	widgets/gimphelp-ids.h	445;"	d
GIMP_HELP_DOCK_AUTO_BUTTON	widgets/gimphelp-ids.h	448;"	d
GIMP_HELP_DOCK_CHANGE_SCREEN	widgets/gimphelp-ids.h	449;"	d
GIMP_HELP_DOCK_CLOSE	widgets/gimphelp-ids.h	446;"	d
GIMP_HELP_DOCK_IMAGE_MENU	widgets/gimphelp-ids.h	447;"	d
GIMP_HELP_DOCK_PREVIEW_SIZE	widgets/gimphelp-ids.h	456;"	d
GIMP_HELP_DOCK_SEPARATOR	widgets/gimphelp-ids.h	450;"	d
GIMP_HELP_DOCK_SHOW_BUTTON_BAR	widgets/gimphelp-ids.h	460;"	d
GIMP_HELP_DOCK_TAB_ADD	widgets/gimphelp-ids.h	452;"	d
GIMP_HELP_DOCK_TAB_CLOSE	widgets/gimphelp-ids.h	453;"	d
GIMP_HELP_DOCK_TAB_DETACH	widgets/gimphelp-ids.h	455;"	d
GIMP_HELP_DOCK_TAB_MENU	widgets/gimphelp-ids.h	454;"	d
GIMP_HELP_DOCK_TAB_STYLE	widgets/gimphelp-ids.h	457;"	d
GIMP_HELP_DOCK_VIEW_AS_GRID	widgets/gimphelp-ids.h	459;"	d
GIMP_HELP_DOCK_VIEW_AS_LIST	widgets/gimphelp-ids.h	458;"	d
GIMP_HELP_DOCUMENT_CLEAR	widgets/gimphelp-ids.h	375;"	d
GIMP_HELP_DOCUMENT_COPY_LOCATION	widgets/gimphelp-ids.h	376;"	d
GIMP_HELP_DOCUMENT_DIALOG	widgets/gimphelp-ids.h	377;"	d
GIMP_HELP_DOCUMENT_OPEN	widgets/gimphelp-ids.h	378;"	d
GIMP_HELP_DOCUMENT_REFRESH	widgets/gimphelp-ids.h	380;"	d
GIMP_HELP_DOCUMENT_REMOVE	widgets/gimphelp-ids.h	379;"	d
GIMP_HELP_EDIT_CLEAR	widgets/gimphelp-ids.h	56;"	d
GIMP_HELP_EDIT_COPY	widgets/gimphelp-ids.h	51;"	d
GIMP_HELP_EDIT_COPY_VISIBLE	widgets/gimphelp-ids.h	52;"	d
GIMP_HELP_EDIT_CUT	widgets/gimphelp-ids.h	50;"	d
GIMP_HELP_EDIT_FADE	widgets/gimphelp-ids.h	49;"	d
GIMP_HELP_EDIT_FILL_BG	widgets/gimphelp-ids.h	58;"	d
GIMP_HELP_EDIT_FILL_FG	widgets/gimphelp-ids.h	57;"	d
GIMP_HELP_EDIT_FILL_PATTERN	widgets/gimphelp-ids.h	59;"	d
GIMP_HELP_EDIT_PASTE	widgets/gimphelp-ids.h	53;"	d
GIMP_HELP_EDIT_PASTE_AS_NEW	widgets/gimphelp-ids.h	55;"	d
GIMP_HELP_EDIT_PASTE_INTO	widgets/gimphelp-ids.h	54;"	d
GIMP_HELP_EDIT_REDO	widgets/gimphelp-ids.h	45;"	d
GIMP_HELP_EDIT_STRONG_REDO	widgets/gimphelp-ids.h	47;"	d
GIMP_HELP_EDIT_STRONG_UNDO	widgets/gimphelp-ids.h	46;"	d
GIMP_HELP_EDIT_UNDO	widgets/gimphelp-ids.h	44;"	d
GIMP_HELP_EDIT_UNDO_CLEAR	widgets/gimphelp-ids.h	48;"	d
GIMP_HELP_ERRORS_CLEAR	widgets/gimphelp-ids.h	397;"	d
GIMP_HELP_ERRORS_DIALOG	widgets/gimphelp-ids.h	396;"	d
GIMP_HELP_ERRORS_SAVE	widgets/gimphelp-ids.h	398;"	d
GIMP_HELP_ERRORS_SELECT_ALL	widgets/gimphelp-ids.h	399;"	d
GIMP_HELP_EXPORT_CONFIRM_DIALOG	widgets/gimphelp-ids.h	475;"	d
GIMP_HELP_EXPORT_DIALOG	widgets/gimphelp-ids.h	474;"	d
GIMP_HELP_FILE_CLOSE	widgets/gimphelp-ids.h	40;"	d
GIMP_HELP_FILE_CLOSE_ALL	widgets/gimphelp-ids.h	41;"	d
GIMP_HELP_FILE_NEW	widgets/gimphelp-ids.h	28;"	d
GIMP_HELP_FILE_OPEN	widgets/gimphelp-ids.h	29;"	d
GIMP_HELP_FILE_OPEN_AS_LAYER	widgets/gimphelp-ids.h	30;"	d
GIMP_HELP_FILE_OPEN_BY_EXTENSION	widgets/gimphelp-ids.h	32;"	d
GIMP_HELP_FILE_OPEN_LOCATION	widgets/gimphelp-ids.h	31;"	d
GIMP_HELP_FILE_OPEN_RECENT	widgets/gimphelp-ids.h	33;"	d
GIMP_HELP_FILE_QUIT	widgets/gimphelp-ids.h	42;"	d
GIMP_HELP_FILE_REVERT	widgets/gimphelp-ids.h	39;"	d
GIMP_HELP_FILE_SAVE	widgets/gimphelp-ids.h	34;"	d
GIMP_HELP_FILE_SAVE_AS	widgets/gimphelp-ids.h	35;"	d
GIMP_HELP_FILE_SAVE_AS_TEMPLATE	widgets/gimphelp-ids.h	37;"	d
GIMP_HELP_FILE_SAVE_A_COPY	widgets/gimphelp-ids.h	36;"	d
GIMP_HELP_FILE_SAVE_BY_EXTENSION	widgets/gimphelp-ids.h	38;"	d
GIMP_HELP_FILTER_REPEAT	widgets/gimphelp-ids.h	281;"	d
GIMP_HELP_FILTER_RESET_ALL	widgets/gimphelp-ids.h	283;"	d
GIMP_HELP_FILTER_RESHOW	widgets/gimphelp-ids.h	282;"	d
GIMP_HELP_FONT_DIALOG	widgets/gimphelp-ids.h	364;"	d
GIMP_HELP_FONT_REFRESH	widgets/gimphelp-ids.h	365;"	d
GIMP_HELP_GRADIENT_COPY_LOCATION	widgets/gimphelp-ids.h	317;"	d
GIMP_HELP_GRADIENT_DELETE	widgets/gimphelp-ids.h	318;"	d
GIMP_HELP_GRADIENT_DIALOG	widgets/gimphelp-ids.h	313;"	d
GIMP_HELP_GRADIENT_DUPLICATE	widgets/gimphelp-ids.h	316;"	d
GIMP_HELP_GRADIENT_EDIT	widgets/gimphelp-ids.h	314;"	d
GIMP_HELP_GRADIENT_EDITOR_BLENDING	widgets/gimphelp-ids.h	329;"	d
GIMP_HELP_GRADIENT_EDITOR_BLEND_COLOR	widgets/gimphelp-ids.h	338;"	d
GIMP_HELP_GRADIENT_EDITOR_BLEND_OPACITY	widgets/gimphelp-ids.h	339;"	d
GIMP_HELP_GRADIENT_EDITOR_COLORING	widgets/gimphelp-ids.h	330;"	d
GIMP_HELP_GRADIENT_EDITOR_DELETE	widgets/gimphelp-ids.h	335;"	d
GIMP_HELP_GRADIENT_EDITOR_DIALOG	widgets/gimphelp-ids.h	322;"	d
GIMP_HELP_GRADIENT_EDITOR_EDIT_ACTIVE	widgets/gimphelp-ids.h	343;"	d
GIMP_HELP_GRADIENT_EDITOR_FLIP	widgets/gimphelp-ids.h	331;"	d
GIMP_HELP_GRADIENT_EDITOR_LEFT_COLOR	widgets/gimphelp-ids.h	323;"	d
GIMP_HELP_GRADIENT_EDITOR_LEFT_LOAD	widgets/gimphelp-ids.h	324;"	d
GIMP_HELP_GRADIENT_EDITOR_LEFT_SAVE	widgets/gimphelp-ids.h	325;"	d
GIMP_HELP_GRADIENT_EDITOR_RECENTER	widgets/gimphelp-ids.h	336;"	d
GIMP_HELP_GRADIENT_EDITOR_REDISTRIBUTE	widgets/gimphelp-ids.h	337;"	d
GIMP_HELP_GRADIENT_EDITOR_REPLICATE	widgets/gimphelp-ids.h	332;"	d
GIMP_HELP_GRADIENT_EDITOR_RIGHT_COLOR	widgets/gimphelp-ids.h	326;"	d
GIMP_HELP_GRADIENT_EDITOR_RIGHT_LOAD	widgets/gimphelp-ids.h	327;"	d
GIMP_HELP_GRADIENT_EDITOR_RIGHT_SAVE	widgets/gimphelp-ids.h	328;"	d
GIMP_HELP_GRADIENT_EDITOR_SPLIT_MIDPOINT	widgets/gimphelp-ids.h	333;"	d
GIMP_HELP_GRADIENT_EDITOR_SPLIT_UNIFORM	widgets/gimphelp-ids.h	334;"	d
GIMP_HELP_GRADIENT_EDITOR_ZOOM_ALL	widgets/gimphelp-ids.h	342;"	d
GIMP_HELP_GRADIENT_EDITOR_ZOOM_IN	widgets/gimphelp-ids.h	341;"	d
GIMP_HELP_GRADIENT_EDITOR_ZOOM_OUT	widgets/gimphelp-ids.h	340;"	d
GIMP_HELP_GRADIENT_NEW	widgets/gimphelp-ids.h	315;"	d
GIMP_HELP_GRADIENT_REFRESH	widgets/gimphelp-ids.h	319;"	d
GIMP_HELP_GRADIENT_SAVE_AS_POV	widgets/gimphelp-ids.h	320;"	d
GIMP_HELP_HELP	widgets/gimphelp-ids.h	478;"	d
GIMP_HELP_HELP_CONTEXT	widgets/gimphelp-ids.h	479;"	d
GIMP_HELP_HISTOGRAM_DIALOG	widgets/gimphelp-ids.h	466;"	d
GIMP_HELP_IMAGE_CONVERT_GRAYSCALE	widgets/gimphelp-ids.h	113;"	d
GIMP_HELP_IMAGE_CONVERT_INDEXED	widgets/gimphelp-ids.h	114;"	d
GIMP_HELP_IMAGE_CONVERT_RGB	widgets/gimphelp-ids.h	112;"	d
GIMP_HELP_IMAGE_CROP	widgets/gimphelp-ids.h	126;"	d
GIMP_HELP_IMAGE_DIALOG	widgets/gimphelp-ids.h	111;"	d
GIMP_HELP_IMAGE_DUPLICATE	widgets/gimphelp-ids.h	127;"	d
GIMP_HELP_IMAGE_FLATTEN	widgets/gimphelp-ids.h	129;"	d
GIMP_HELP_IMAGE_FLIP_HORIZONTAL	widgets/gimphelp-ids.h	115;"	d
GIMP_HELP_IMAGE_FLIP_VERTICAL	widgets/gimphelp-ids.h	116;"	d
GIMP_HELP_IMAGE_GRID	widgets/gimphelp-ids.h	130;"	d
GIMP_HELP_IMAGE_MERGE_LAYERS	widgets/gimphelp-ids.h	128;"	d
GIMP_HELP_IMAGE_PRINT_SIZE	widgets/gimphelp-ids.h	123;"	d
GIMP_HELP_IMAGE_PROPERTIES	widgets/gimphelp-ids.h	131;"	d
GIMP_HELP_IMAGE_RESIZE	widgets/gimphelp-ids.h	120;"	d
GIMP_HELP_IMAGE_RESIZE_TO_LAYERS	widgets/gimphelp-ids.h	121;"	d
GIMP_HELP_IMAGE_RESIZE_TO_SELECTION	widgets/gimphelp-ids.h	122;"	d
GIMP_HELP_IMAGE_ROTATE_180	widgets/gimphelp-ids.h	118;"	d
GIMP_HELP_IMAGE_ROTATE_270	widgets/gimphelp-ids.h	119;"	d
GIMP_HELP_IMAGE_ROTATE_90	widgets/gimphelp-ids.h	117;"	d
GIMP_HELP_IMAGE_SCALE	widgets/gimphelp-ids.h	124;"	d
GIMP_HELP_IMAGE_SCALE_WARNING	widgets/gimphelp-ids.h	125;"	d
GIMP_HELP_IMAGE_WINDOW	widgets/gimphelp-ids.h	102;"	d
GIMP_HELP_IMAGE_WINDOW_NAV_BUTTON	widgets/gimphelp-ids.h	106;"	d
GIMP_HELP_IMAGE_WINDOW_ORIGIN	widgets/gimphelp-ids.h	103;"	d
GIMP_HELP_IMAGE_WINDOW_QUICK_MASK_BUTTON	widgets/gimphelp-ids.h	105;"	d
GIMP_HELP_IMAGE_WINDOW_RULER	widgets/gimphelp-ids.h	107;"	d
GIMP_HELP_IMAGE_WINDOW_STATUS_BAR	widgets/gimphelp-ids.h	108;"	d
GIMP_HELP_IMAGE_WINDOW_ZOOM_FOLLOW_BUTTON	widgets/gimphelp-ids.h	104;"	d
GIMP_HELP_INDEXED_PALETTE_ADD	widgets/gimphelp-ids.h	437;"	d
GIMP_HELP_INDEXED_PALETTE_DIALOG	widgets/gimphelp-ids.h	435;"	d
GIMP_HELP_INDEXED_PALETTE_EDIT	widgets/gimphelp-ids.h	436;"	d
GIMP_HELP_INFO_DIALOG	widgets/gimphelp-ids.h	467;"	d
GIMP_HELP_KEYBOARD_SHORTCUTS	widgets/gimphelp-ids.h	433;"	d
GIMP_HELP_LAYER_ALPHA_ADD	widgets/gimphelp-ids.h	177;"	d
GIMP_HELP_LAYER_ALPHA_REMOVE	widgets/gimphelp-ids.h	178;"	d
GIMP_HELP_LAYER_ALPHA_SELECTION_ADD	widgets/gimphelp-ids.h	180;"	d
GIMP_HELP_LAYER_ALPHA_SELECTION_INTERSECT	widgets/gimphelp-ids.h	182;"	d
GIMP_HELP_LAYER_ALPHA_SELECTION_REPLACE	widgets/gimphelp-ids.h	179;"	d
GIMP_HELP_LAYER_ALPHA_SELECTION_SUBTRACT	widgets/gimphelp-ids.h	181;"	d
GIMP_HELP_LAYER_ANCHOR	widgets/gimphelp-ids.h	140;"	d
GIMP_HELP_LAYER_BOTTOM	widgets/gimphelp-ids.h	153;"	d
GIMP_HELP_LAYER_CROP	widgets/gimphelp-ids.h	192;"	d
GIMP_HELP_LAYER_DELETE	widgets/gimphelp-ids.h	142;"	d
GIMP_HELP_LAYER_DESATURATE	widgets/gimphelp-ids.h	158;"	d
GIMP_HELP_LAYER_DIALOG	widgets/gimphelp-ids.h	133;"	d
GIMP_HELP_LAYER_DIALOG_LOCK_ALPHA_BUTTON	widgets/gimphelp-ids.h	136;"	d
GIMP_HELP_LAYER_DIALOG_OPACITY_SCALE	widgets/gimphelp-ids.h	135;"	d
GIMP_HELP_LAYER_DIALOG_PAINT_MODE_MENU	widgets/gimphelp-ids.h	134;"	d
GIMP_HELP_LAYER_DUPLICATE	widgets/gimphelp-ids.h	139;"	d
GIMP_HELP_LAYER_EDIT	widgets/gimphelp-ids.h	193;"	d
GIMP_HELP_LAYER_EQUALIZE	widgets/gimphelp-ids.h	161;"	d
GIMP_HELP_LAYER_FLIP_HORIZONTAL	widgets/gimphelp-ids.h	183;"	d
GIMP_HELP_LAYER_FLIP_VERTICAL	widgets/gimphelp-ids.h	184;"	d
GIMP_HELP_LAYER_INVERT	widgets/gimphelp-ids.h	159;"	d
GIMP_HELP_LAYER_LINKED	widgets/gimphelp-ids.h	163;"	d
GIMP_HELP_LAYER_LOCK_ALPHA	widgets/gimphelp-ids.h	166;"	d
GIMP_HELP_LAYER_LOWER	widgets/gimphelp-ids.h	156;"	d
GIMP_HELP_LAYER_LOWER_TO_BOTTOM	widgets/gimphelp-ids.h	157;"	d
GIMP_HELP_LAYER_MASK_ADD	widgets/gimphelp-ids.h	167;"	d
GIMP_HELP_LAYER_MASK_APPLY	widgets/gimphelp-ids.h	168;"	d
GIMP_HELP_LAYER_MASK_DELETE	widgets/gimphelp-ids.h	169;"	d
GIMP_HELP_LAYER_MASK_DISABLE	widgets/gimphelp-ids.h	172;"	d
GIMP_HELP_LAYER_MASK_EDIT	widgets/gimphelp-ids.h	170;"	d
GIMP_HELP_LAYER_MASK_SELECTION_ADD	widgets/gimphelp-ids.h	174;"	d
GIMP_HELP_LAYER_MASK_SELECTION_INTERSECT	widgets/gimphelp-ids.h	176;"	d
GIMP_HELP_LAYER_MASK_SELECTION_REPLACE	widgets/gimphelp-ids.h	173;"	d
GIMP_HELP_LAYER_MASK_SELECTION_SUBTRACT	widgets/gimphelp-ids.h	175;"	d
GIMP_HELP_LAYER_MASK_SHOW	widgets/gimphelp-ids.h	171;"	d
GIMP_HELP_LAYER_MERGE_DOWN	widgets/gimphelp-ids.h	141;"	d
GIMP_HELP_LAYER_MODE	widgets/gimphelp-ids.h	165;"	d
GIMP_HELP_LAYER_NEW	widgets/gimphelp-ids.h	138;"	d
GIMP_HELP_LAYER_NEXT	widgets/gimphelp-ids.h	151;"	d
GIMP_HELP_LAYER_OFFSET	widgets/gimphelp-ids.h	188;"	d
GIMP_HELP_LAYER_OPACITY	widgets/gimphelp-ids.h	164;"	d
GIMP_HELP_LAYER_PREVIOUS	widgets/gimphelp-ids.h	150;"	d
GIMP_HELP_LAYER_RAISE	widgets/gimphelp-ids.h	154;"	d
GIMP_HELP_LAYER_RAISE_TO_TOP	widgets/gimphelp-ids.h	155;"	d
GIMP_HELP_LAYER_RESIZE	widgets/gimphelp-ids.h	189;"	d
GIMP_HELP_LAYER_RESIZE_TO_IMAGE	widgets/gimphelp-ids.h	190;"	d
GIMP_HELP_LAYER_ROTATE_180	widgets/gimphelp-ids.h	186;"	d
GIMP_HELP_LAYER_ROTATE_270	widgets/gimphelp-ids.h	187;"	d
GIMP_HELP_LAYER_ROTATE_90	widgets/gimphelp-ids.h	185;"	d
GIMP_HELP_LAYER_SCALE	widgets/gimphelp-ids.h	191;"	d
GIMP_HELP_LAYER_TEXT_ALONG_PATH	widgets/gimphelp-ids.h	145;"	d
GIMP_HELP_LAYER_TEXT_DISCARD	widgets/gimphelp-ids.h	143;"	d
GIMP_HELP_LAYER_TEXT_SELECTION_ADD	widgets/gimphelp-ids.h	147;"	d
GIMP_HELP_LAYER_TEXT_SELECTION_INTERSECT	widgets/gimphelp-ids.h	149;"	d
GIMP_HELP_LAYER_TEXT_SELECTION_REPLACE	widgets/gimphelp-ids.h	146;"	d
GIMP_HELP_LAYER_TEXT_SELECTION_SUBTRACT	widgets/gimphelp-ids.h	148;"	d
GIMP_HELP_LAYER_TEXT_TO_PATH	widgets/gimphelp-ids.h	144;"	d
GIMP_HELP_LAYER_TOP	widgets/gimphelp-ids.h	152;"	d
GIMP_HELP_LAYER_VISIBLE	widgets/gimphelp-ids.h	162;"	d
GIMP_HELP_LAYER_WHITE_BALANCE	widgets/gimphelp-ids.h	160;"	d
GIMP_HELP_MAIN	widgets/gimphelp-ids.h	26;"	d
GIMP_HELP_MODULE_DIALOG	widgets/gimphelp-ids.h	468;"	d
GIMP_HELP_NAVIGATION_DIALOG	widgets/gimphelp-ids.h	469;"	d
GIMP_HELP_PALETTE_COPY_LOCATION	widgets/gimphelp-ids.h	349;"	d
GIMP_HELP_PALETTE_DELETE	widgets/gimphelp-ids.h	350;"	d
GIMP_HELP_PALETTE_DIALOG	widgets/gimphelp-ids.h	345;"	d
GIMP_HELP_PALETTE_DUPLICATE	widgets/gimphelp-ids.h	348;"	d
GIMP_HELP_PALETTE_EDIT	widgets/gimphelp-ids.h	346;"	d
GIMP_HELP_PALETTE_EDITOR_DELETE	widgets/gimphelp-ids.h	358;"	d
GIMP_HELP_PALETTE_EDITOR_DIALOG	widgets/gimphelp-ids.h	355;"	d
GIMP_HELP_PALETTE_EDITOR_EDIT	widgets/gimphelp-ids.h	357;"	d
GIMP_HELP_PALETTE_EDITOR_EDIT_ACTIVE	widgets/gimphelp-ids.h	362;"	d
GIMP_HELP_PALETTE_EDITOR_NEW	widgets/gimphelp-ids.h	356;"	d
GIMP_HELP_PALETTE_EDITOR_ZOOM_ALL	widgets/gimphelp-ids.h	361;"	d
GIMP_HELP_PALETTE_EDITOR_ZOOM_IN	widgets/gimphelp-ids.h	360;"	d
GIMP_HELP_PALETTE_EDITOR_ZOOM_OUT	widgets/gimphelp-ids.h	359;"	d
GIMP_HELP_PALETTE_IMPORT	widgets/gimphelp-ids.h	352;"	d
GIMP_HELP_PALETTE_MERGE	widgets/gimphelp-ids.h	353;"	d
GIMP_HELP_PALETTE_NEW	widgets/gimphelp-ids.h	347;"	d
GIMP_HELP_PALETTE_REFRESH	widgets/gimphelp-ids.h	351;"	d
GIMP_HELP_PATH_COPY	widgets/gimphelp-ids.h	230;"	d
GIMP_HELP_PATH_DELETE	widgets/gimphelp-ids.h	221;"	d
GIMP_HELP_PATH_DIALOG	widgets/gimphelp-ids.h	214;"	d
GIMP_HELP_PATH_DUPLICATE	widgets/gimphelp-ids.h	220;"	d
GIMP_HELP_PATH_EDIT	widgets/gimphelp-ids.h	234;"	d
GIMP_HELP_PATH_EXPORT	widgets/gimphelp-ids.h	233;"	d
GIMP_HELP_PATH_IMPORT	widgets/gimphelp-ids.h	232;"	d
GIMP_HELP_PATH_LINKED	widgets/gimphelp-ids.h	224;"	d
GIMP_HELP_PATH_LOWER	widgets/gimphelp-ids.h	218;"	d
GIMP_HELP_PATH_LOWER_TO_BOTTOM	widgets/gimphelp-ids.h	219;"	d
GIMP_HELP_PATH_MERGE_VISIBLE	widgets/gimphelp-ids.h	222;"	d
GIMP_HELP_PATH_NEW	widgets/gimphelp-ids.h	215;"	d
GIMP_HELP_PATH_PASTE	widgets/gimphelp-ids.h	231;"	d
GIMP_HELP_PATH_RAISE	widgets/gimphelp-ids.h	216;"	d
GIMP_HELP_PATH_RAISE_TO_TOP	widgets/gimphelp-ids.h	217;"	d
GIMP_HELP_PATH_SELECTION_ADD	widgets/gimphelp-ids.h	226;"	d
GIMP_HELP_PATH_SELECTION_INTERSECT	widgets/gimphelp-ids.h	228;"	d
GIMP_HELP_PATH_SELECTION_REPLACE	widgets/gimphelp-ids.h	225;"	d
GIMP_HELP_PATH_SELECTION_SUBTRACT	widgets/gimphelp-ids.h	227;"	d
GIMP_HELP_PATH_STROKE	widgets/gimphelp-ids.h	229;"	d
GIMP_HELP_PATH_VISIBLE	widgets/gimphelp-ids.h	223;"	d
GIMP_HELP_PATTERN_COPY_LOCATION	widgets/gimphelp-ids.h	309;"	d
GIMP_HELP_PATTERN_DELETE	widgets/gimphelp-ids.h	310;"	d
GIMP_HELP_PATTERN_DIALOG	widgets/gimphelp-ids.h	304;"	d
GIMP_HELP_PATTERN_DUPLICATE	widgets/gimphelp-ids.h	308;"	d
GIMP_HELP_PATTERN_EDIT	widgets/gimphelp-ids.h	305;"	d
GIMP_HELP_PATTERN_NEW	widgets/gimphelp-ids.h	307;"	d
GIMP_HELP_PATTERN_OPEN_AS_IMAGE	widgets/gimphelp-ids.h	306;"	d
GIMP_HELP_PATTERN_REFRESH	widgets/gimphelp-ids.h	311;"	d
GIMP_HELP_POINTER_INFO_DIALOG	widgets/gimphelp-ids.h	439;"	d
GIMP_HELP_POINTER_INFO_SAMPLE_MERGED	widgets/gimphelp-ids.h	440;"	d
GIMP_HELP_PREFS_COLOR_MANAGEMENT	widgets/gimphelp-ids.h	416;"	d
GIMP_HELP_PREFS_DEFAULT_GRID	widgets/gimphelp-ids.h	403;"	d
GIMP_HELP_PREFS_DIALOG	widgets/gimphelp-ids.h	401;"	d
GIMP_HELP_PREFS_DISPLAY	widgets/gimphelp-ids.h	414;"	d
GIMP_HELP_PREFS_ENVIRONMENT	widgets/gimphelp-ids.h	418;"	d
GIMP_HELP_PREFS_FOLDERS	widgets/gimphelp-ids.h	420;"	d
GIMP_HELP_PREFS_FOLDERS_BRUSHES	widgets/gimphelp-ids.h	421;"	d
GIMP_HELP_PREFS_FOLDERS_ENVIRONMENT	widgets/gimphelp-ids.h	430;"	d
GIMP_HELP_PREFS_FOLDERS_FONTS	widgets/gimphelp-ids.h	425;"	d
GIMP_HELP_PREFS_FOLDERS_GRADIENTS	widgets/gimphelp-ids.h	424;"	d
GIMP_HELP_PREFS_FOLDERS_INTERPRETERS	widgets/gimphelp-ids.h	429;"	d
GIMP_HELP_PREFS_FOLDERS_MODULES	widgets/gimphelp-ids.h	428;"	d
GIMP_HELP_PREFS_FOLDERS_PALETTES	widgets/gimphelp-ids.h	423;"	d
GIMP_HELP_PREFS_FOLDERS_PATTERNS	widgets/gimphelp-ids.h	422;"	d
GIMP_HELP_PREFS_FOLDERS_PLUG_INS	widgets/gimphelp-ids.h	426;"	d
GIMP_HELP_PREFS_FOLDERS_SCRIPTS	widgets/gimphelp-ids.h	427;"	d
GIMP_HELP_PREFS_FOLDERS_THEMES	widgets/gimphelp-ids.h	431;"	d
GIMP_HELP_PREFS_HELP	widgets/gimphelp-ids.h	405;"	d
GIMP_HELP_PREFS_IMAGE_WINDOW	widgets/gimphelp-ids.h	411;"	d
GIMP_HELP_PREFS_IMAGE_WINDOW_APPEARANCE	widgets/gimphelp-ids.h	412;"	d
GIMP_HELP_PREFS_IMAGE_WINDOW_TITLE	widgets/gimphelp-ids.h	413;"	d
GIMP_HELP_PREFS_INPUT_CONTROLLERS	widgets/gimphelp-ids.h	410;"	d
GIMP_HELP_PREFS_INPUT_DEVICES	widgets/gimphelp-ids.h	409;"	d
GIMP_HELP_PREFS_INTERFACE	widgets/gimphelp-ids.h	404;"	d
GIMP_HELP_PREFS_MONITOR	widgets/gimphelp-ids.h	415;"	d
GIMP_HELP_PREFS_NEW_IMAGE	widgets/gimphelp-ids.h	402;"	d
GIMP_HELP_PREFS_SESSION	widgets/gimphelp-ids.h	419;"	d
GIMP_HELP_PREFS_THEME	widgets/gimphelp-ids.h	406;"	d
GIMP_HELP_PREFS_TOOLBOX	widgets/gimphelp-ids.h	408;"	d
GIMP_HELP_PREFS_TOOL_OPTIONS	widgets/gimphelp-ids.h	407;"	d
GIMP_HELP_PREFS_WINDOW_MANAGEMENT	widgets/gimphelp-ids.h	417;"	d
GIMP_HELP_QUICK_MASK	widgets/gimphelp-ids.h	209;"	d
GIMP_HELP_QUICK_MASK_EDIT	widgets/gimphelp-ids.h	212;"	d
GIMP_HELP_QUICK_MASK_INVERT	widgets/gimphelp-ids.h	211;"	d
GIMP_HELP_QUICK_MASK_TOGGLE	widgets/gimphelp-ids.h	210;"	d
GIMP_HELP_SAMPLE_POINT_DIALOG	widgets/gimphelp-ids.h	442;"	d
GIMP_HELP_SAMPLE_POINT_SAMPLE_MERGED	widgets/gimphelp-ids.h	443;"	d
GIMP_HELP_SELECTION_ALL	widgets/gimphelp-ids.h	62;"	d
GIMP_HELP_SELECTION_BORDER	widgets/gimphelp-ids.h	70;"	d
GIMP_HELP_SELECTION_DIALOG	widgets/gimphelp-ids.h	61;"	d
GIMP_HELP_SELECTION_FEATHER	widgets/gimphelp-ids.h	66;"	d
GIMP_HELP_SELECTION_FLOAT	widgets/gimphelp-ids.h	65;"	d
GIMP_HELP_SELECTION_GROW	widgets/gimphelp-ids.h	69;"	d
GIMP_HELP_SELECTION_INVERT	widgets/gimphelp-ids.h	64;"	d
GIMP_HELP_SELECTION_NONE	widgets/gimphelp-ids.h	63;"	d
GIMP_HELP_SELECTION_SHARPEN	widgets/gimphelp-ids.h	67;"	d
GIMP_HELP_SELECTION_SHRINK	widgets/gimphelp-ids.h	68;"	d
GIMP_HELP_SELECTION_STROKE	widgets/gimphelp-ids.h	71;"	d
GIMP_HELP_SELECTION_TO_CHANNEL	widgets/gimphelp-ids.h	72;"	d
GIMP_HELP_SELECTION_TO_PATH	widgets/gimphelp-ids.h	73;"	d
GIMP_HELP_TEMPLATE_DELETE	widgets/gimphelp-ids.h	387;"	d
GIMP_HELP_TEMPLATE_DIALOG	widgets/gimphelp-ids.h	382;"	d
GIMP_HELP_TEMPLATE_DUPLICATE	widgets/gimphelp-ids.h	384;"	d
GIMP_HELP_TEMPLATE_EDIT	widgets/gimphelp-ids.h	385;"	d
GIMP_HELP_TEMPLATE_IMAGE_NEW	widgets/gimphelp-ids.h	386;"	d
GIMP_HELP_TEMPLATE_NEW	widgets/gimphelp-ids.h	383;"	d
GIMP_HELP_TEXT_EDITOR_DIALOG	widgets/gimphelp-ids.h	470;"	d
GIMP_HELP_TIPS_DIALOG	widgets/gimphelp-ids.h	471;"	d
GIMP_HELP_TOOLBOX	widgets/gimphelp-ids.h	285;"	d
GIMP_HELP_TOOLBOX_COLOR_AREA	widgets/gimphelp-ids.h	286;"	d
GIMP_HELP_TOOLBOX_DEFAULT_COLORS	widgets/gimphelp-ids.h	289;"	d
GIMP_HELP_TOOLBOX_IMAGE_AREA	widgets/gimphelp-ids.h	287;"	d
GIMP_HELP_TOOLBOX_INDICATOR_AREA	widgets/gimphelp-ids.h	288;"	d
GIMP_HELP_TOOLBOX_SWAP_COLORS	widgets/gimphelp-ids.h	290;"	d
GIMP_HELP_TOOLS_DIALOG	widgets/gimphelp-ids.h	236;"	d
GIMP_HELP_TOOL_AIRBRUSH	widgets/gimphelp-ids.h	238;"	d
GIMP_HELP_TOOL_BLEND	widgets/gimphelp-ids.h	239;"	d
GIMP_HELP_TOOL_BRIGHTNESS_CONTRAST	widgets/gimphelp-ids.h	240;"	d
GIMP_HELP_TOOL_BUCKET_FILL	widgets/gimphelp-ids.h	241;"	d
GIMP_HELP_TOOL_BY_COLOR_SELECT	widgets/gimphelp-ids.h	242;"	d
GIMP_HELP_TOOL_CLONE	widgets/gimphelp-ids.h	243;"	d
GIMP_HELP_TOOL_COLORIZE	widgets/gimphelp-ids.h	244;"	d
GIMP_HELP_TOOL_COLOR_BALANCE	widgets/gimphelp-ids.h	245;"	d
GIMP_HELP_TOOL_COLOR_PICKER	widgets/gimphelp-ids.h	246;"	d
GIMP_HELP_TOOL_CONVOLVE	widgets/gimphelp-ids.h	247;"	d
GIMP_HELP_TOOL_CROP	widgets/gimphelp-ids.h	248;"	d
GIMP_HELP_TOOL_CURVES	widgets/gimphelp-ids.h	249;"	d
GIMP_HELP_TOOL_CURVES	widgets/gimphelp-ids.h	250;"	d
GIMP_HELP_TOOL_DODGE_BURN	widgets/gimphelp-ids.h	251;"	d
GIMP_HELP_TOOL_ELLIPSE_SELECT	widgets/gimphelp-ids.h	252;"	d
GIMP_HELP_TOOL_ERASER	widgets/gimphelp-ids.h	253;"	d
GIMP_HELP_TOOL_FLIP	widgets/gimphelp-ids.h	254;"	d
GIMP_HELP_TOOL_FOREGROUND_SELECT	widgets/gimphelp-ids.h	256;"	d
GIMP_HELP_TOOL_FREE_SELECT	widgets/gimphelp-ids.h	255;"	d
GIMP_HELP_TOOL_FUZZY_SELECT	widgets/gimphelp-ids.h	257;"	d
GIMP_HELP_TOOL_HEAL	widgets/gimphelp-ids.h	258;"	d
GIMP_HELP_TOOL_HUE_SATURATION	widgets/gimphelp-ids.h	259;"	d
GIMP_HELP_TOOL_INK	widgets/gimphelp-ids.h	260;"	d
GIMP_HELP_TOOL_ISCISSORS	widgets/gimphelp-ids.h	261;"	d
GIMP_HELP_TOOL_LEVELS	widgets/gimphelp-ids.h	262;"	d
GIMP_HELP_TOOL_MEASURE	widgets/gimphelp-ids.h	263;"	d
GIMP_HELP_TOOL_MOVE	widgets/gimphelp-ids.h	264;"	d
GIMP_HELP_TOOL_OPTIONS_DELETE	widgets/gimphelp-ids.h	393;"	d
GIMP_HELP_TOOL_OPTIONS_DIALOG	widgets/gimphelp-ids.h	389;"	d
GIMP_HELP_TOOL_OPTIONS_RENAME	widgets/gimphelp-ids.h	392;"	d
GIMP_HELP_TOOL_OPTIONS_RESET	widgets/gimphelp-ids.h	394;"	d
GIMP_HELP_TOOL_OPTIONS_RESTORE	widgets/gimphelp-ids.h	391;"	d
GIMP_HELP_TOOL_OPTIONS_SAVE	widgets/gimphelp-ids.h	390;"	d
GIMP_HELP_TOOL_PAINTBRUSH	widgets/gimphelp-ids.h	266;"	d
GIMP_HELP_TOOL_PATH	widgets/gimphelp-ids.h	265;"	d
GIMP_HELP_TOOL_PENCIL	widgets/gimphelp-ids.h	267;"	d
GIMP_HELP_TOOL_PERSPECTIVE	widgets/gimphelp-ids.h	268;"	d
GIMP_HELP_TOOL_PERSPECTIVE_CLONE	widgets/gimphelp-ids.h	269;"	d
GIMP_HELP_TOOL_POSTERIZE	widgets/gimphelp-ids.h	270;"	d
GIMP_HELP_TOOL_RECT_SELECT	widgets/gimphelp-ids.h	271;"	d
GIMP_HELP_TOOL_ROTATE	widgets/gimphelp-ids.h	272;"	d
GIMP_HELP_TOOL_SCALE	widgets/gimphelp-ids.h	273;"	d
GIMP_HELP_TOOL_SHEAR	widgets/gimphelp-ids.h	274;"	d
GIMP_HELP_TOOL_SMUDGE	widgets/gimphelp-ids.h	275;"	d
GIMP_HELP_TOOL_TEXT	widgets/gimphelp-ids.h	276;"	d
GIMP_HELP_TOOL_THRESHOLD	widgets/gimphelp-ids.h	277;"	d
GIMP_HELP_TOOL_VECTORS	widgets/gimphelp-ids.h	278;"	d
GIMP_HELP_TOOL_ZOOM	widgets/gimphelp-ids.h	279;"	d
GIMP_HELP_UNDO_DIALOG	widgets/gimphelp-ids.h	472;"	d
GIMP_HELP_UNIT_DIALOG	widgets/gimphelp-ids.h	476;"	d
GIMP_HELP_VIEW_CHANGE_SCREEN	widgets/gimphelp-ids.h	100;"	d
GIMP_HELP_VIEW_DOT_FOR_DOT	widgets/gimphelp-ids.h	76;"	d
GIMP_HELP_VIEW_FULLSCREEN	widgets/gimphelp-ids.h	99;"	d
GIMP_HELP_VIEW_NEW	widgets/gimphelp-ids.h	75;"	d
GIMP_HELP_VIEW_PADDING_COLOR	widgets/gimphelp-ids.h	97;"	d
GIMP_HELP_VIEW_SHOW_GRID	widgets/gimphelp-ids.h	87;"	d
GIMP_HELP_VIEW_SHOW_GUIDES	widgets/gimphelp-ids.h	86;"	d
GIMP_HELP_VIEW_SHOW_LAYER_BOUNDARY	widgets/gimphelp-ids.h	85;"	d
GIMP_HELP_VIEW_SHOW_MENUBAR	widgets/gimphelp-ids.h	93;"	d
GIMP_HELP_VIEW_SHOW_RULERS	widgets/gimphelp-ids.h	94;"	d
GIMP_HELP_VIEW_SHOW_SAMPLE_POINTS	widgets/gimphelp-ids.h	88;"	d
GIMP_HELP_VIEW_SHOW_SCROLLBARS	widgets/gimphelp-ids.h	95;"	d
GIMP_HELP_VIEW_SHOW_SELECTION	widgets/gimphelp-ids.h	84;"	d
GIMP_HELP_VIEW_SHOW_STATUSBAR	widgets/gimphelp-ids.h	96;"	d
GIMP_HELP_VIEW_SHRINK_WRAP	widgets/gimphelp-ids.h	98;"	d
GIMP_HELP_VIEW_SNAP_TO_CANVAS	widgets/gimphelp-ids.h	91;"	d
GIMP_HELP_VIEW_SNAP_TO_GRID	widgets/gimphelp-ids.h	90;"	d
GIMP_HELP_VIEW_SNAP_TO_GUIDES	widgets/gimphelp-ids.h	89;"	d
GIMP_HELP_VIEW_SNAP_TO_VECTORS	widgets/gimphelp-ids.h	92;"	d
GIMP_HELP_VIEW_ZOOM_100	widgets/gimphelp-ids.h	80;"	d
GIMP_HELP_VIEW_ZOOM_FIT_IN	widgets/gimphelp-ids.h	81;"	d
GIMP_HELP_VIEW_ZOOM_FIT_TO	widgets/gimphelp-ids.h	82;"	d
GIMP_HELP_VIEW_ZOOM_IN	widgets/gimphelp-ids.h	79;"	d
GIMP_HELP_VIEW_ZOOM_OTHER	widgets/gimphelp-ids.h	83;"	d
GIMP_HELP_VIEW_ZOOM_OUT	widgets/gimphelp-ids.h	78;"	d
GIMP_HELP_VIEW_ZOOM_REVERT	widgets/gimphelp-ids.h	77;"	d
GIMP_HISTOGRAM_ALPHA	base/base-enums.h	/^  GIMP_HISTOGRAM_ALPHA = 4,  \/*< desc="Alpha" >*\/$/;"	e	enum:__anon10
GIMP_HISTOGRAM_BLUE	base/base-enums.h	/^  GIMP_HISTOGRAM_BLUE  = 3,  \/*< desc="Blue"  >*\/$/;"	e	enum:__anon10
GIMP_HISTOGRAM_BOX	widgets/gimphistogrambox.h	24;"	d
GIMP_HISTOGRAM_BOX_CLASS	widgets/gimphistogrambox.h	25;"	d
GIMP_HISTOGRAM_BOX_GET_CLASS	widgets/gimphistogrambox.h	28;"	d
GIMP_HISTOGRAM_EDITOR	widgets/gimphistogrameditor.h	27;"	d
GIMP_HISTOGRAM_EDITOR_CLASS	widgets/gimphistogrameditor.h	28;"	d
GIMP_HISTOGRAM_EDITOR_GET_CLASS	widgets/gimphistogrameditor.h	31;"	d
GIMP_HISTOGRAM_GREEN	base/base-enums.h	/^  GIMP_HISTOGRAM_GREEN = 2,  \/*< desc="Green" >*\/$/;"	e	enum:__anon10
GIMP_HISTOGRAM_OPTIONS	tools/gimphistogramoptions.h	27;"	d
GIMP_HISTOGRAM_OPTIONS_CLASS	tools/gimphistogramoptions.h	28;"	d
GIMP_HISTOGRAM_OPTIONS_GET_CLASS	tools/gimphistogramoptions.h	31;"	d
GIMP_HISTOGRAM_RED	base/base-enums.h	/^  GIMP_HISTOGRAM_RED   = 1,  \/*< desc="Red"   >*\/$/;"	e	enum:__anon10
GIMP_HISTOGRAM_RGB	base/base-enums.h	/^  GIMP_HISTOGRAM_RGB   = 5   \/*< desc="RGB", pdb-skip >*\/$/;"	e	enum:__anon10
GIMP_HISTOGRAM_SCALE_LINEAR	widgets/widgets-enums.h	/^  GIMP_HISTOGRAM_SCALE_LINEAR,       \/*< desc="Linear"      >*\/$/;"	e	enum:__anon405
GIMP_HISTOGRAM_SCALE_LOGARITHMIC	widgets/widgets-enums.h	/^  GIMP_HISTOGRAM_SCALE_LOGARITHMIC   \/*< desc="Logarithmic" >*\/$/;"	e	enum:__anon405
GIMP_HISTOGRAM_VALUE	base/base-enums.h	/^  GIMP_HISTOGRAM_VALUE = 0,  \/*< desc="Value" >*\/$/;"	e	enum:__anon10
GIMP_HISTOGRAM_VIEW	widgets/gimphistogramview.h	27;"	d
GIMP_HISTOGRAM_VIEW_CLASS	widgets/gimphistogramview.h	28;"	d
GIMP_HISTOGRAM_VIEW_GET_CLASS	widgets/gimphistogramview.h	31;"	d
GIMP_HUE_MODE	base/base-enums.h	/^  GIMP_HUE_MODE,             \/*< desc="Hue"                  >*\/$/;"	e	enum:__anon11
GIMP_HUE_SATURATION_TOOL	tools/gimphuesaturationtool.h	27;"	d
GIMP_HUE_SATURATION_TOOL_CLASS	tools/gimphuesaturationtool.h	28;"	d
GIMP_HUE_SATURATION_TOOL_GET_CLASS	tools/gimphuesaturationtool.h	31;"	d
GIMP_IMAGE	core/gimpimage.h	90;"	d
GIMP_IMAGEFILE	core/gimpimagefile.h	35;"	d
GIMP_IMAGEFILE_CLASS	core/gimpimagefile.h	36;"	d
GIMP_IMAGEFILE_GET_CLASS	core/gimpimagefile.h	39;"	d
GIMP_IMAGE_CLASS	core/gimpimage.h	91;"	d
GIMP_IMAGE_COLORMAP_SIZE	core/gimpimage-colormap.h	23;"	d
GIMP_IMAGE_COMMENT_EDITOR	widgets/gimpimagecommenteditor.h	30;"	d
GIMP_IMAGE_COMMENT_EDITOR_CLASS	widgets/gimpimagecommenteditor.h	31;"	d
GIMP_IMAGE_COMMENT_EDITOR_GET_CLASS	widgets/gimpimagecommenteditor.h	34;"	d
GIMP_IMAGE_COMMENT_PARASITE	widgets/gimpimagecommenteditor.c	38;"	d	file:
GIMP_IMAGE_DOCK	widgets/gimpimagedock.h	30;"	d
GIMP_IMAGE_DOCK_CLASS	widgets/gimpimagedock.h	31;"	d
GIMP_IMAGE_DOCK_GET_CLASS	widgets/gimpimagedock.h	34;"	d
GIMP_IMAGE_EDITOR	widgets/gimpimageeditor.h	27;"	d
GIMP_IMAGE_EDITOR_CLASS	widgets/gimpimageeditor.h	28;"	d
GIMP_IMAGE_EDITOR_GET_CLASS	widgets/gimpimageeditor.h	31;"	d
GIMP_IMAGE_GET_CLASS	core/gimpimage.h	94;"	d
GIMP_IMAGE_MAP	core/gimpimagemap.h	32;"	d
GIMP_IMAGE_MAP_CLASS	core/gimpimagemap.h	33;"	d
GIMP_IMAGE_MAP_GET_CLASS	core/gimpimagemap.h	36;"	d
GIMP_IMAGE_MAP_OPTIONS	tools/gimpimagemapoptions.h	27;"	d
GIMP_IMAGE_MAP_OPTIONS_CLASS	tools/gimpimagemapoptions.h	28;"	d
GIMP_IMAGE_MAP_OPTIONS_GET_CLASS	tools/gimpimagemapoptions.h	31;"	d
GIMP_IMAGE_MAP_TOOL	tools/gimpimagemaptool.h	27;"	d
GIMP_IMAGE_MAP_TOOL_CLASS	tools/gimpimagemaptool.h	28;"	d
GIMP_IMAGE_MAP_TOOL_GET_CLASS	tools/gimpimagemaptool.h	31;"	d
GIMP_IMAGE_MAP_TOOL_GET_OPTIONS	tools/gimpimagemaptool.h	33;"	d
GIMP_IMAGE_PARASITE_VIEW	widgets/gimpimageparasiteview.h	30;"	d
GIMP_IMAGE_PARASITE_VIEW_CLASS	widgets/gimpimageparasiteview.h	31;"	d
GIMP_IMAGE_PARASITE_VIEW_GET_CLASS	widgets/gimpimageparasiteview.h	34;"	d
GIMP_IMAGE_PROFILE_VIEW	widgets/gimpimageprofileview.h	30;"	d
GIMP_IMAGE_PROFILE_VIEW_CLASS	widgets/gimpimageprofileview.h	31;"	d
GIMP_IMAGE_PROFILE_VIEW_GET_CLASS	widgets/gimpimageprofileview.h	34;"	d
GIMP_IMAGE_PROP_VIEW	widgets/gimpimagepropview.h	30;"	d
GIMP_IMAGE_PROP_VIEW_CLASS	widgets/gimpimagepropview.h	31;"	d
GIMP_IMAGE_PROP_VIEW_GET_CLASS	widgets/gimpimagepropview.h	34;"	d
GIMP_IMAGE_QUICK_MASK_NAME	core/gimpimage-quick-mask.h	26;"	d
GIMP_IMAGE_SCALE_OK	core/core-enums.h	/^  GIMP_IMAGE_SCALE_OK,$/;"	e	enum:__anon95
GIMP_IMAGE_SCALE_TOO_BIG	core/core-enums.h	/^  GIMP_IMAGE_SCALE_TOO_BIG$/;"	e	enum:__anon95
GIMP_IMAGE_SCALE_TOO_SMALL	core/core-enums.h	/^  GIMP_IMAGE_SCALE_TOO_SMALL,$/;"	e	enum:__anon95
GIMP_IMAGE_TYPE_BASE_TYPE	core/gimpimage.h	61;"	d
GIMP_IMAGE_TYPE_BYTES	core/gimpimage.h	55;"	d
GIMP_IMAGE_TYPE_FROM_BASE_TYPE	core/gimpimage.h	71;"	d
GIMP_IMAGE_TYPE_HAS_ALPHA	core/gimpimage.h	33;"	d
GIMP_IMAGE_TYPE_IS_GRAY	core/gimpimage.h	28;"	d
GIMP_IMAGE_TYPE_IS_INDEXED	core/gimpimage.h	30;"	d
GIMP_IMAGE_TYPE_IS_RGB	core/gimpimage.h	26;"	d
GIMP_IMAGE_TYPE_WITHOUT_ALPHA	core/gimpimage.h	46;"	d
GIMP_IMAGE_TYPE_WITH_ALPHA	core/gimpimage.h	37;"	d
GIMP_IMAGE_UNDO	core/gimpimageundo.h	27;"	d
GIMP_IMAGE_UNDO_CLASS	core/gimpimageundo.h	28;"	d
GIMP_IMAGE_UNDO_GET_CLASS	core/gimpimageundo.h	31;"	d
GIMP_IMAGE_VIEW	widgets/gimpimageview.h	30;"	d
GIMP_IMAGE_VIEW_CLASS	widgets/gimpimageview.h	31;"	d
GIMP_IMAGE_VIEW_GET_CLASS	widgets/gimpimageview.h	34;"	d
GIMP_INK	paint/gimpink.h	32;"	d
GIMP_INK_BLOB_TYPE_DIAMOND	paint/paint-enums.h	/^  GIMP_INK_BLOB_TYPE_DIAMOND$/;"	e	enum:__anon217
GIMP_INK_BLOB_TYPE_ELLIPSE	paint/paint-enums.h	/^  GIMP_INK_BLOB_TYPE_ELLIPSE,$/;"	e	enum:__anon217
GIMP_INK_BLOB_TYPE_SQUARE	paint/paint-enums.h	/^  GIMP_INK_BLOB_TYPE_SQUARE,$/;"	e	enum:__anon217
GIMP_INK_CLASS	paint/gimpink.h	33;"	d
GIMP_INK_GET_CLASS	paint/gimpink.h	36;"	d
GIMP_INK_OPTIONS	paint/gimpinkoptions.h	27;"	d
GIMP_INK_OPTIONS_CLASS	paint/gimpinkoptions.h	28;"	d
GIMP_INK_OPTIONS_GET_CLASS	paint/gimpinkoptions.h	31;"	d
GIMP_INK_TOOL	tools/gimpinktool.h	27;"	d
GIMP_INK_TOOL_CLASS	tools/gimpinktool.h	28;"	d
GIMP_INK_TOOL_GET_CLASS	tools/gimpinktool.h	31;"	d
GIMP_INK_UNDO	paint/gimpinkundo.h	27;"	d
GIMP_INK_UNDO_CLASS	paint/gimpinkundo.h	28;"	d
GIMP_INK_UNDO_GET_CLASS	paint/gimpinkundo.h	31;"	d
GIMP_INTERPRETER_DB	plug-in/gimpinterpreterdb.h	27;"	d
GIMP_INTERPRETER_DB_CLASS	plug-in/gimpinterpreterdb.h	28;"	d
GIMP_INTERPRETER_DB_GET_CLASS	plug-in/gimpinterpreterdb.h	31;"	d
GIMP_ISCISSORS_TOOL	tools/gimpiscissorstool.h	60;"	d
GIMP_ISCISSORS_TOOL_CLASS	tools/gimpiscissorstool.h	61;"	d
GIMP_ISCISSORS_TOOL_GET_CLASS	tools/gimpiscissorstool.h	64;"	d
GIMP_IS_ACTION	widgets/gimpaction.h	32;"	d
GIMP_IS_ACTION_CLASS	widgets/gimpaction.h	33;"	d
GIMP_IS_ACTION_FACTORY	widgets/gimpactionfactory.h	44;"	d
GIMP_IS_ACTION_FACTORY_CLASS	widgets/gimpactionfactory.h	45;"	d
GIMP_IS_ACTION_GROUP	widgets/gimpactiongroup.h	31;"	d
GIMP_IS_ACTION_GROUP_CLASS	widgets/gimpactiongroup.h	32;"	d
GIMP_IS_ACTION_VIEW	widgets/gimpactionview.h	45;"	d
GIMP_IS_ACTION_VIEW_CLASS	widgets/gimpactionview.h	46;"	d
GIMP_IS_AIRBRUSH	paint/gimpairbrush.h	29;"	d
GIMP_IS_AIRBRUSH_CLASS	paint/gimpairbrush.h	30;"	d
GIMP_IS_AIRBRUSH_OPTIONS	paint/gimpairbrushoptions.h	29;"	d
GIMP_IS_AIRBRUSH_OPTIONS_CLASS	paint/gimpairbrushoptions.h	30;"	d
GIMP_IS_AIRBRUSH_TOOL	tools/gimpairbrushtool.h	29;"	d
GIMP_IS_AIRBRUSH_TOOL_CLASS	tools/gimpairbrushtool.h	30;"	d
GIMP_IS_ALIGN_OPTIONS	tools/gimpalignoptions.h	29;"	d
GIMP_IS_ALIGN_OPTIONS_CLASS	tools/gimpalignoptions.h	30;"	d
GIMP_IS_ALIGN_TOOL	tools/gimpaligntool.h	29;"	d
GIMP_IS_ALIGN_TOOL_CLASS	tools/gimpaligntool.h	30;"	d
GIMP_IS_BASE_CONFIG	config/gimpbaseconfig.h	31;"	d
GIMP_IS_BASE_CONFIG_CLASS	config/gimpbaseconfig.h	32;"	d
GIMP_IS_BEZIER_STROKE	vectors/gimpbezierstroke.h	31;"	d
GIMP_IS_BEZIER_STROKE_CLASS	vectors/gimpbezierstroke.h	32;"	d
GIMP_IS_BLEND_OPTIONS	tools/gimpblendoptions.h	29;"	d
GIMP_IS_BLEND_OPTIONS_CLASS	tools/gimpblendoptions.h	30;"	d
GIMP_IS_BLEND_TOOL	tools/gimpblendtool.h	29;"	d
GIMP_IS_BLEND_TOOL_CLASS	tools/gimpblendtool.h	30;"	d
GIMP_IS_BLOB_EDITOR	widgets/gimpblobeditor.h	31;"	d
GIMP_IS_BLOB_EDITOR_CLASS	widgets/gimpblobeditor.h	32;"	d
GIMP_IS_BRIGHTNESS_CONTRAST_TOOL	tools/gimpbrightnesscontrasttool.h	29;"	d
GIMP_IS_BRIGHTNESS_CONTRAST_TOOL_CLASS	tools/gimpbrightnesscontrasttool.h	30;"	d
GIMP_IS_BRUSH	core/gimpbrush.h	30;"	d
GIMP_IS_BRUSH_CLASS	core/gimpbrush.h	31;"	d
GIMP_IS_BRUSH_CLIPBOARD	core/gimpbrushclipboard.h	32;"	d
GIMP_IS_BRUSH_CLIPBOARD_CLASS	core/gimpbrushclipboard.h	33;"	d
GIMP_IS_BRUSH_CORE	paint/gimpbrushcore.h	36;"	d
GIMP_IS_BRUSH_CORE_CLASS	paint/gimpbrushcore.h	37;"	d
GIMP_IS_BRUSH_EDITOR	widgets/gimpbrusheditor.h	32;"	d
GIMP_IS_BRUSH_EDITOR_CLASS	widgets/gimpbrusheditor.h	33;"	d
GIMP_IS_BRUSH_FACTORY_VIEW	widgets/gimpbrushfactoryview.h	31;"	d
GIMP_IS_BRUSH_FACTORY_VIEW_CLASS	widgets/gimpbrushfactoryview.h	32;"	d
GIMP_IS_BRUSH_GENERATED	core/gimpbrushgenerated.h	31;"	d
GIMP_IS_BRUSH_GENERATED_CLASS	core/gimpbrushgenerated.h	32;"	d
GIMP_IS_BRUSH_PIPE	core/gimpbrushpipe.h	30;"	d
GIMP_IS_BRUSH_PIPE_CLASS	core/gimpbrushpipe.h	31;"	d
GIMP_IS_BRUSH_SELECT	widgets/gimpbrushselect.h	33;"	d
GIMP_IS_BRUSH_SELECT_CLASS	widgets/gimpbrushselect.h	34;"	d
GIMP_IS_BRUSH_TOOL	tools/gimpbrushtool.h	29;"	d
GIMP_IS_BRUSH_TOOL_CLASS	tools/gimpbrushtool.h	30;"	d
GIMP_IS_BUCKET_FILL_OPTIONS	tools/gimpbucketfilloptions.h	29;"	d
GIMP_IS_BUCKET_FILL_OPTIONS_CLASS	tools/gimpbucketfilloptions.h	30;"	d
GIMP_IS_BUCKET_FILL_TOOL	tools/gimpbucketfilltool.h	29;"	d
GIMP_IS_BUCKET_FILL_TOOL_CLASS	tools/gimpbucketfilltool.h	30;"	d
GIMP_IS_BUFFER	core/gimpbuffer.h	29;"	d
GIMP_IS_BUFFER_CLASS	core/gimpbuffer.h	30;"	d
GIMP_IS_BUFFER_VIEW	widgets/gimpbufferview.h	32;"	d
GIMP_IS_BUFFER_VIEW_CLASS	widgets/gimpbufferview.h	33;"	d
GIMP_IS_BY_COLOR_SELECT_TOOL	tools/gimpbycolorselecttool.h	31;"	d
GIMP_IS_BY_COLOR_SELECT_TOOL_CLASS	tools/gimpbycolorselecttool.h	32;"	d
GIMP_IS_CANVAS	display/gimpcanvas.h	52;"	d
GIMP_IS_CANVAS_CLASS	display/gimpcanvas.h	53;"	d
GIMP_IS_CELL_RENDERER_DASHES	widgets/gimpcellrendererdashes.h	32;"	d
GIMP_IS_CELL_RENDERER_DASHES_CLASS	widgets/gimpcellrendererdashes.h	33;"	d
GIMP_IS_CELL_RENDERER_VIEWABLE	widgets/gimpcellrendererviewable.h	32;"	d
GIMP_IS_CELL_RENDERER_VIEWABLE_CLASS	widgets/gimpcellrendererviewable.h	33;"	d
GIMP_IS_CHANNEL	core/gimpchannel.h	28;"	d
GIMP_IS_CHANNEL_CLASS	core/gimpchannel.h	29;"	d
GIMP_IS_CHANNEL_PROP_UNDO	core/gimpchannelpropundo.h	29;"	d
GIMP_IS_CHANNEL_PROP_UNDO_CLASS	core/gimpchannelpropundo.h	30;"	d
GIMP_IS_CHANNEL_TREE_VIEW	widgets/gimpchanneltreeview.h	32;"	d
GIMP_IS_CHANNEL_TREE_VIEW_CLASS	widgets/gimpchanneltreeview.h	33;"	d
GIMP_IS_CHANNEL_UNDO	core/gimpchannelundo.h	29;"	d
GIMP_IS_CHANNEL_UNDO_CLASS	core/gimpchannelundo.h	30;"	d
GIMP_IS_CLONE	paint/gimpclone.h	29;"	d
GIMP_IS_CLONE_CLASS	paint/gimpclone.h	30;"	d
GIMP_IS_CLONE_OPTIONS	paint/gimpcloneoptions.h	29;"	d
GIMP_IS_CLONE_OPTIONS_CLASS	paint/gimpcloneoptions.h	30;"	d
GIMP_IS_CLONE_TOOL	tools/gimpclonetool.h	29;"	d
GIMP_IS_CLONE_TOOL_CLASS	tools/gimpclonetool.h	30;"	d
GIMP_IS_COLORIZE_TOOL	tools/gimpcolorizetool.h	29;"	d
GIMP_IS_COLORIZE_TOOL_CLASS	tools/gimpcolorizetool.h	30;"	d
GIMP_IS_COLORMAP_EDITOR	widgets/gimpcolormapeditor.h	29;"	d
GIMP_IS_COLORMAP_EDITOR_CLASS	widgets/gimpcolormapeditor.h	30;"	d
GIMP_IS_COLOR_BALANCE_TOOL	tools/gimpcolorbalancetool.h	29;"	d
GIMP_IS_COLOR_BALANCE_TOOL_CLASS	tools/gimpcolorbalancetool.h	31;"	d
GIMP_IS_COLOR_BAR	widgets/gimpcolorbar.h	29;"	d
GIMP_IS_COLOR_BAR_CLASS	widgets/gimpcolorbar.h	30;"	d
GIMP_IS_COLOR_DIALOG	widgets/gimpcolordialog.h	33;"	d
GIMP_IS_COLOR_DIALOG_CLASS	widgets/gimpcolordialog.h	34;"	d
GIMP_IS_COLOR_DISPLAY_EDITOR	widgets/gimpcolordisplayeditor.h	32;"	d
GIMP_IS_COLOR_DISPLAY_EDITOR_CLASS	widgets/gimpcolordisplayeditor.h	33;"	d
GIMP_IS_COLOR_EDITOR	widgets/gimpcoloreditor.h	32;"	d
GIMP_IS_COLOR_EDITOR_CLASS	widgets/gimpcoloreditor.h	33;"	d
GIMP_IS_COLOR_FRAME	widgets/gimpcolorframe.h	32;"	d
GIMP_IS_COLOR_FRAME_CLASS	widgets/gimpcolorframe.h	33;"	d
GIMP_IS_COLOR_OPTIONS	tools/gimpcoloroptions.h	29;"	d
GIMP_IS_COLOR_OPTIONS_CLASS	tools/gimpcoloroptions.h	30;"	d
GIMP_IS_COLOR_PANEL	widgets/gimpcolorpanel.h	29;"	d
GIMP_IS_COLOR_PANEL_CLASS	widgets/gimpcolorpanel.h	30;"	d
GIMP_IS_COLOR_PICKER_OPTIONS	tools/gimpcolorpickeroptions.h	29;"	d
GIMP_IS_COLOR_PICKER_OPTIONS_CLASS	tools/gimpcolorpickeroptions.h	30;"	d
GIMP_IS_COLOR_PICKER_TOOL	tools/gimpcolorpickertool.h	29;"	d
GIMP_IS_COLOR_PICKER_TOOL_CLASS	tools/gimpcolorpickertool.h	30;"	d
GIMP_IS_COLOR_SELECTOR_PALETTE	widgets/gimpcolorselectorpalette.h	31;"	d
GIMP_IS_COLOR_SELECTOR_PALETTE_CLASS	widgets/gimpcolorselectorpalette.h	33;"	d
GIMP_IS_COLOR_TOOL	tools/gimpcolortool.h	29;"	d
GIMP_IS_COLOR_TOOL_CLASS	tools/gimpcolortool.h	30;"	d
GIMP_IS_COMPONENT_EDITOR	widgets/gimpcomponenteditor.h	32;"	d
GIMP_IS_COMPONENT_EDITOR_CLASS	widgets/gimpcomponenteditor.h	33;"	d
GIMP_IS_CONTAINER	core/gimpcontainer.h	32;"	d
GIMP_IS_CONTAINER_BOX	widgets/gimpcontainerbox.h	32;"	d
GIMP_IS_CONTAINER_BOX_CLASS	widgets/gimpcontainerbox.h	33;"	d
GIMP_IS_CONTAINER_CLASS	core/gimpcontainer.h	33;"	d
GIMP_IS_CONTAINER_COMBO_BOX	widgets/gimpcontainercombobox.h	32;"	d
GIMP_IS_CONTAINER_COMBO_BOX_CLASS	widgets/gimpcontainercombobox.h	33;"	d
GIMP_IS_CONTAINER_EDITOR	widgets/gimpcontainereditor.h	32;"	d
GIMP_IS_CONTAINER_EDITOR_CLASS	widgets/gimpcontainereditor.h	33;"	d
GIMP_IS_CONTAINER_ENTRY	widgets/gimpcontainerentry.h	40;"	d
GIMP_IS_CONTAINER_ENTRY_CLASS	widgets/gimpcontainerentry.h	41;"	d
GIMP_IS_CONTAINER_GRID_VIEW	widgets/gimpcontainergridview.h	32;"	d
GIMP_IS_CONTAINER_GRID_VIEW_CLASS	widgets/gimpcontainergridview.h	33;"	d
GIMP_IS_CONTAINER_POPUP	widgets/gimpcontainerpopup.h	32;"	d
GIMP_IS_CONTAINER_POPUP_CLASS	widgets/gimpcontainerpopup.h	33;"	d
GIMP_IS_CONTAINER_TREE_VIEW	widgets/gimpcontainertreeview.h	32;"	d
GIMP_IS_CONTAINER_TREE_VIEW_CLASS	widgets/gimpcontainertreeview.h	33;"	d
GIMP_IS_CONTAINER_VIEW	widgets/gimpcontainerview.h	40;"	d
GIMP_IS_CONTEXT	core/gimpcontext.h	32;"	d
GIMP_IS_CONTEXT_CLASS	core/gimpcontext.h	33;"	d
GIMP_IS_CONTROLLER_EDITOR	widgets/gimpcontrollereditor.h	32;"	d
GIMP_IS_CONTROLLER_EDITOR_CLASS	widgets/gimpcontrollereditor.h	33;"	d
GIMP_IS_CONTROLLER_INFO	widgets/gimpcontrollerinfo.h	38;"	d
GIMP_IS_CONTROLLER_INFO_CLASS	widgets/gimpcontrollerinfo.h	39;"	d
GIMP_IS_CONTROLLER_KEYBOARD	widgets/gimpcontrollerkeyboard.h	33;"	d
GIMP_IS_CONTROLLER_KEYBOARD_CLASS	widgets/gimpcontrollerkeyboard.h	34;"	d
GIMP_IS_CONTROLLER_LIST	widgets/gimpcontrollerlist.h	32;"	d
GIMP_IS_CONTROLLER_LIST_CLASS	widgets/gimpcontrollerlist.h	33;"	d
GIMP_IS_CONTROLLER_WHEEL	widgets/gimpcontrollerwheel.h	33;"	d
GIMP_IS_CONTROLLER_WHEEL_CLASS	widgets/gimpcontrollerwheel.h	34;"	d
GIMP_IS_CONVOLVE	paint/gimpconvolve.h	29;"	d
GIMP_IS_CONVOLVE_CLASS	paint/gimpconvolve.h	30;"	d
GIMP_IS_CONVOLVE_OPTIONS	paint/gimpconvolveoptions.h	29;"	d
GIMP_IS_CONVOLVE_OPTIONS_CLASS	paint/gimpconvolveoptions.h	30;"	d
GIMP_IS_CONVOLVE_TOOL	tools/gimpconvolvetool.h	29;"	d
GIMP_IS_CONVOLVE_TOOL_CLASS	tools/gimpconvolvetool.h	30;"	d
GIMP_IS_CORE_CONFIG	config/gimpcoreconfig.h	33;"	d
GIMP_IS_CORE_CONFIG_CLASS	config/gimpcoreconfig.h	34;"	d
GIMP_IS_CROP_OPTIONS	tools/gimpcropoptions.h	29;"	d
GIMP_IS_CROP_OPTIONS_CLASS	tools/gimpcropoptions.h	30;"	d
GIMP_IS_CROP_TOOL	tools/gimpcroptool.h	29;"	d
GIMP_IS_CROP_TOOL_CLASS	tools/gimpcroptool.h	30;"	d
GIMP_IS_CURSOR_VIEW	widgets/gimpcursorview.h	32;"	d
GIMP_IS_CURSOR_VIEW_CLASS	widgets/gimpcursorview.h	33;"	d
GIMP_IS_CURVES_TOOL	tools/gimpcurvestool.h	28;"	d
GIMP_IS_CURVES_TOOL_CLASS	tools/gimpcurvestool.h	30;"	d
GIMP_IS_DASH_EDITOR	widgets/gimpdasheditor.h	32;"	d
GIMP_IS_DASH_EDITOR_CLASS	widgets/gimpdasheditor.h	33;"	d
GIMP_IS_DATA	core/gimpdata.h	42;"	d
GIMP_IS_DATA_CLASS	core/gimpdata.h	43;"	d
GIMP_IS_DATA_EDITOR	widgets/gimpdataeditor.h	32;"	d
GIMP_IS_DATA_EDITOR_CLASS	widgets/gimpdataeditor.h	33;"	d
GIMP_IS_DATA_FACTORY	core/gimpdatafactory.h	48;"	d
GIMP_IS_DATA_FACTORY_CLASS	core/gimpdatafactory.h	49;"	d
GIMP_IS_DATA_FACTORY_VIEW	widgets/gimpdatafactoryview.h	32;"	d
GIMP_IS_DATA_FACTORY_VIEW_CLASS	widgets/gimpdatafactoryview.h	33;"	d
GIMP_IS_DBUS_SERVICE	widgets/gimpdbusservice.h	36;"	d
GIMP_IS_DBUS_SERVICE_CLASS	widgets/gimpdbusservice.h	37;"	d
GIMP_IS_DEVICE_INFO	widgets/gimpdeviceinfo.h	43;"	d
GIMP_IS_DEVICE_INFO_CLASS	widgets/gimpdeviceinfo.h	44;"	d
GIMP_IS_DEVICE_STATUS	widgets/gimpdevicestatus.h	32;"	d
GIMP_IS_DEVICE_STATUS_CLASS	widgets/gimpdevicestatus.h	33;"	d
GIMP_IS_DIALOG_FACTORY	widgets/gimpdialogfactory.h	68;"	d
GIMP_IS_DIALOG_FACTORY_CLASS	widgets/gimpdialogfactory.h	69;"	d
GIMP_IS_DISPLAY	display/gimpdisplay.h	29;"	d
GIMP_IS_DISPLAY_CLASS	display/gimpdisplay.h	30;"	d
GIMP_IS_DISPLAY_CONFIG	config/gimpdisplayconfig.h	37;"	d
GIMP_IS_DISPLAY_CONFIG_CLASS	config/gimpdisplayconfig.h	38;"	d
GIMP_IS_DISPLAY_OPTIONS	display/gimpdisplayoptions.h	31;"	d
GIMP_IS_DISPLAY_OPTIONS_CLASS	display/gimpdisplayoptions.h	32;"	d
GIMP_IS_DISPLAY_SHELL	display/gimpdisplayshell.h	52;"	d
GIMP_IS_DISPLAY_SHELL_CLASS	display/gimpdisplayshell.h	53;"	d
GIMP_IS_DOCK	widgets/gimpdock.h	32;"	d
GIMP_IS_DOCKABLE	widgets/gimpdockable.h	35;"	d
GIMP_IS_DOCKABLE_CLASS	widgets/gimpdockable.h	36;"	d
GIMP_IS_DOCKBOOK	widgets/gimpdockbook.h	32;"	d
GIMP_IS_DOCKBOOK_CLASS	widgets/gimpdockbook.h	33;"	d
GIMP_IS_DOCKED	widgets/gimpdocked.h	27;"	d
GIMP_IS_DOCK_CLASS	widgets/gimpdock.h	33;"	d
GIMP_IS_DOCK_SEPARATOR	widgets/gimpdockseparator.h	32;"	d
GIMP_IS_DOCK_SEPARATOR_CLASS	widgets/gimpdockseparator.h	33;"	d
GIMP_IS_DOCUMENT_LIST	core/gimpdocumentlist.h	28;"	d
GIMP_IS_DOCUMENT_LIST_CLASS	core/gimpdocumentlist.h	29;"	d
GIMP_IS_DOCUMENT_VIEW	widgets/gimpdocumentview.h	32;"	d
GIMP_IS_DOCUMENT_VIEW_CLASS	widgets/gimpdocumentview.h	33;"	d
GIMP_IS_DODGE_BURN	paint/gimpdodgeburn.h	28;"	d
GIMP_IS_DODGE_BURN_CLASS	paint/gimpdodgeburn.h	30;"	d
GIMP_IS_DODGE_BURN_OPTIONS	paint/gimpdodgeburnoptions.h	29;"	d
GIMP_IS_DODGE_BURN_OPTIONS_CLASS	paint/gimpdodgeburnoptions.h	30;"	d
GIMP_IS_DODGE_BURN_TOOL	tools/gimpdodgeburntool.h	28;"	d
GIMP_IS_DODGE_BURN_TOOL_CLASS	tools/gimpdodgeburntool.h	30;"	d
GIMP_IS_DRAWABLE	core/gimpdrawable.h	29;"	d
GIMP_IS_DRAWABLE_CLASS	core/gimpdrawable.h	30;"	d
GIMP_IS_DRAWABLE_MOD_UNDO	core/gimpdrawablemodundo.h	29;"	d
GIMP_IS_DRAWABLE_MOD_UNDO_CLASS	core/gimpdrawablemodundo.h	30;"	d
GIMP_IS_DRAWABLE_TREE_VIEW	widgets/gimpdrawabletreeview.h	32;"	d
GIMP_IS_DRAWABLE_TREE_VIEW_CLASS	widgets/gimpdrawabletreeview.h	33;"	d
GIMP_IS_DRAWABLE_UNDO	core/gimpdrawableundo.h	29;"	d
GIMP_IS_DRAWABLE_UNDO_CLASS	core/gimpdrawableundo.h	30;"	d
GIMP_IS_DRAW_TOOL	tools/gimpdrawtool.h	39;"	d
GIMP_IS_DRAW_TOOL_CLASS	tools/gimpdrawtool.h	40;"	d
GIMP_IS_EDITOR	widgets/gimpeditor.h	32;"	d
GIMP_IS_EDITOR_CLASS	widgets/gimpeditor.h	33;"	d
GIMP_IS_EDIT_SELECTION_TOOL	tools/gimpeditselectiontool.h	29;"	d
GIMP_IS_EDIT_SELECTION_TOOL_CLASS	tools/gimpeditselectiontool.h	30;"	d
GIMP_IS_ELLIPSE_SELECT_TOOL	tools/gimpellipseselecttool.h	29;"	d
GIMP_IS_ELLIPSE_SELECT_TOOL_CLASS	tools/gimpellipseselecttool.h	30;"	d
GIMP_IS_ENUM_ACTION	widgets/gimpenumaction.h	32;"	d
GIMP_IS_ENUM_ACTION_CLASS	widgets/gimpenumaction.h	33;"	d
GIMP_IS_ENVIRON_TABLE	plug-in/gimpenvirontable.h	29;"	d
GIMP_IS_ENVIRON_TABLE_CLASS	plug-in/gimpenvirontable.h	30;"	d
GIMP_IS_ERASER	paint/gimperaser.h	29;"	d
GIMP_IS_ERASER_CLASS	paint/gimperaser.h	30;"	d
GIMP_IS_ERASER_OPTIONS	paint/gimperaseroptions.h	29;"	d
GIMP_IS_ERASER_OPTIONS_CLASS	paint/gimperaseroptions.h	30;"	d
GIMP_IS_ERASER_TOOL	tools/gimperasertool.h	29;"	d
GIMP_IS_ERASER_TOOL_CLASS	tools/gimperasertool.h	30;"	d
GIMP_IS_ERROR_CONSOLE	widgets/gimperrorconsole.h	32;"	d
GIMP_IS_ERROR_CONSOLE_CLASS	widgets/gimperrorconsole.h	33;"	d
GIMP_IS_ERROR_DIALOG	widgets/gimperrordialog.h	31;"	d
GIMP_IS_ERROR_DIALOG_CLASS	widgets/gimperrordialog.h	32;"	d
GIMP_IS_FG_BG_EDITOR	widgets/gimpfgbgeditor.h	32;"	d
GIMP_IS_FG_BG_EDITOR_CLASS	widgets/gimpfgbgeditor.h	33;"	d
GIMP_IS_FG_BG_VIEW	widgets/gimpfgbgview.h	32;"	d
GIMP_IS_FG_BG_VIEW_CLASS	widgets/gimpfgbgview.h	33;"	d
GIMP_IS_FILE_DIALOG	widgets/gimpfiledialog.h	31;"	d
GIMP_IS_FILE_DIALOG_CLASS	widgets/gimpfiledialog.h	32;"	d
GIMP_IS_FILE_PROC_VIEW	widgets/gimpfileprocview.h	32;"	d
GIMP_IS_FILE_PROC_VIEW_CLASS	widgets/gimpfileprocview.h	33;"	d
GIMP_IS_FLIP_OPTIONS	tools/gimpflipoptions.h	29;"	d
GIMP_IS_FLIP_OPTIONS_CLASS	tools/gimpflipoptions.h	30;"	d
GIMP_IS_FLIP_TOOL	tools/gimpfliptool.h	29;"	d
GIMP_IS_FLIP_TOOL_CLASS	tools/gimpfliptool.h	30;"	d
GIMP_IS_FLOATING_SEL_UNDO	core/gimpfloatingselundo.h	29;"	d
GIMP_IS_FLOATING_SEL_UNDO_CLASS	core/gimpfloatingselundo.h	30;"	d
GIMP_IS_FONT	text/gimpfont.h	33;"	d
GIMP_IS_FONT_CLASS	text/gimpfont.h	34;"	d
GIMP_IS_FONT_LIST	text/gimpfontlist.h	33;"	d
GIMP_IS_FONT_LIST_CLASS	text/gimpfontlist.h	34;"	d
GIMP_IS_FONT_SELECT	widgets/gimpfontselect.h	33;"	d
GIMP_IS_FONT_SELECT_CLASS	widgets/gimpfontselect.h	34;"	d
GIMP_IS_FONT_VIEW	widgets/gimpfontview.h	32;"	d
GIMP_IS_FONT_VIEW_CLASS	widgets/gimpfontview.h	33;"	d
GIMP_IS_FOREGROUND_SELECT_OPTIONS	tools/gimpforegroundselectoptions.h	29;"	d
GIMP_IS_FOREGROUND_SELECT_OPTIONS_CLASS	tools/gimpforegroundselectoptions.h	30;"	d
GIMP_IS_FOREGROUND_SELECT_TOOL	tools/gimpforegroundselecttool.h	29;"	d
GIMP_IS_FOREGROUND_SELECT_TOOL_CLASS	tools/gimpforegroundselecttool.h	30;"	d
GIMP_IS_FOREGROUND_SELECT_TOOL_UNDO	tools/gimpforegroundselecttoolundo.h	29;"	d
GIMP_IS_FOREGROUND_SELECT_TOOL_UNDO_CLASS	tools/gimpforegroundselecttoolundo.h	30;"	d
GIMP_IS_FREE_SELECT_TOOL	tools/gimpfreeselecttool.h	29;"	d
GIMP_IS_FREE_SELECT_TOOL_CLASS	tools/gimpfreeselecttool.h	30;"	d
GIMP_IS_FUZZY_SELECT_TOOL	tools/gimpfuzzyselecttool.h	31;"	d
GIMP_IS_FUZZY_SELECT_TOOL_CLASS	tools/gimpfuzzyselecttool.h	32;"	d
GIMP_IS_GIMP	core/gimp.h	30;"	d
GIMP_IS_GIMP_CLASS	core/gimp.h	31;"	d
GIMP_IS_GRADIENT	core/gimpgradient.h	49;"	d
GIMP_IS_GRADIENT_CLASS	core/gimpgradient.h	50;"	d
GIMP_IS_GRADIENT_EDITOR	widgets/gimpgradienteditor.h	44;"	d
GIMP_IS_GRADIENT_EDITOR_CLASS	widgets/gimpgradienteditor.h	45;"	d
GIMP_IS_GRADIENT_SELECT	widgets/gimpgradientselect.h	33;"	d
GIMP_IS_GRADIENT_SELECT_CLASS	widgets/gimpgradientselect.h	34;"	d
GIMP_IS_GRID	core/gimpgrid.h	32;"	d
GIMP_IS_GRID_CLASS	core/gimpgrid.h	33;"	d
GIMP_IS_GRID_EDITOR	widgets/gimpgrideditor.h	32;"	d
GIMP_IS_GRID_EDITOR_CLASS	widgets/gimpgrideditor.h	33;"	d
GIMP_IS_GUIDE	core/gimpguide.h	32;"	d
GIMP_IS_GUIDE_CLASS	core/gimpguide.h	33;"	d
GIMP_IS_GUIDE_UNDO	core/gimpguideundo.h	29;"	d
GIMP_IS_GUIDE_UNDO_CLASS	core/gimpguideundo.h	30;"	d
GIMP_IS_GUI_CONFIG	config/gimpguiconfig.h	33;"	d
GIMP_IS_GUI_CONFIG_CLASS	config/gimpguiconfig.h	34;"	d
GIMP_IS_HEAL	paint/gimpheal.h	29;"	d
GIMP_IS_HEAL_CLASS	paint/gimpheal.h	30;"	d
GIMP_IS_HEAL_TOOL	tools/gimphealtool.h	29;"	d
GIMP_IS_HEAL_TOOL_CLASS	tools/gimphealtool.h	30;"	d
GIMP_IS_HISTOGRAM_BOX	widgets/gimphistogrambox.h	26;"	d
GIMP_IS_HISTOGRAM_BOX_CLASS	widgets/gimphistogrambox.h	27;"	d
GIMP_IS_HISTOGRAM_EDITOR	widgets/gimphistogrameditor.h	29;"	d
GIMP_IS_HISTOGRAM_EDITOR_CLASS	widgets/gimphistogrameditor.h	30;"	d
GIMP_IS_HISTOGRAM_OPTIONS	tools/gimphistogramoptions.h	29;"	d
GIMP_IS_HISTOGRAM_OPTIONS_CLASS	tools/gimphistogramoptions.h	30;"	d
GIMP_IS_HISTOGRAM_VIEW	widgets/gimphistogramview.h	29;"	d
GIMP_IS_HISTOGRAM_VIEW_CLASS	widgets/gimphistogramview.h	30;"	d
GIMP_IS_HUE_SATURATION_TOOL	tools/gimphuesaturationtool.h	29;"	d
GIMP_IS_HUE_SATURATION_TOOL_CLASS	tools/gimphuesaturationtool.h	30;"	d
GIMP_IS_IMAGE	core/gimpimage.h	92;"	d
GIMP_IS_IMAGEFILE	core/gimpimagefile.h	37;"	d
GIMP_IS_IMAGEFILE_CLASS	core/gimpimagefile.h	38;"	d
GIMP_IS_IMAGE_CLASS	core/gimpimage.h	93;"	d
GIMP_IS_IMAGE_COMMENT_EDITOR	widgets/gimpimagecommenteditor.h	32;"	d
GIMP_IS_IMAGE_COMMENT_EDITOR_CLASS	widgets/gimpimagecommenteditor.h	33;"	d
GIMP_IS_IMAGE_DOCK	widgets/gimpimagedock.h	32;"	d
GIMP_IS_IMAGE_DOCK_CLASS	widgets/gimpimagedock.h	33;"	d
GIMP_IS_IMAGE_EDITOR	widgets/gimpimageeditor.h	29;"	d
GIMP_IS_IMAGE_EDITOR_CLASS	widgets/gimpimageeditor.h	30;"	d
GIMP_IS_IMAGE_MAP	core/gimpimagemap.h	34;"	d
GIMP_IS_IMAGE_MAP_CLASS	core/gimpimagemap.h	35;"	d
GIMP_IS_IMAGE_MAP_OPTIONS	tools/gimpimagemapoptions.h	29;"	d
GIMP_IS_IMAGE_MAP_OPTIONS_CLASS	tools/gimpimagemapoptions.h	30;"	d
GIMP_IS_IMAGE_MAP_TOOL	tools/gimpimagemaptool.h	29;"	d
GIMP_IS_IMAGE_MAP_TOOL_CLASS	tools/gimpimagemaptool.h	30;"	d
GIMP_IS_IMAGE_PARASITE_VIEW	widgets/gimpimageparasiteview.h	32;"	d
GIMP_IS_IMAGE_PARASITE_VIEW_CLASS	widgets/gimpimageparasiteview.h	33;"	d
GIMP_IS_IMAGE_PROFILE_VIEW	widgets/gimpimageprofileview.h	32;"	d
GIMP_IS_IMAGE_PROFILE_VIEW_CLASS	widgets/gimpimageprofileview.h	33;"	d
GIMP_IS_IMAGE_PROP_VIEW	widgets/gimpimagepropview.h	32;"	d
GIMP_IS_IMAGE_PROP_VIEW_CLASS	widgets/gimpimagepropview.h	33;"	d
GIMP_IS_IMAGE_UNDO	core/gimpimageundo.h	29;"	d
GIMP_IS_IMAGE_UNDO_CLASS	core/gimpimageundo.h	30;"	d
GIMP_IS_IMAGE_VIEW	widgets/gimpimageview.h	32;"	d
GIMP_IS_IMAGE_VIEW_CLASS	widgets/gimpimageview.h	33;"	d
GIMP_IS_INK	paint/gimpink.h	34;"	d
GIMP_IS_INK_CLASS	paint/gimpink.h	35;"	d
GIMP_IS_INK_OPTIONS	paint/gimpinkoptions.h	29;"	d
GIMP_IS_INK_OPTIONS_CLASS	paint/gimpinkoptions.h	30;"	d
GIMP_IS_INK_TOOL	tools/gimpinktool.h	29;"	d
GIMP_IS_INK_TOOL_CLASS	tools/gimpinktool.h	30;"	d
GIMP_IS_INK_UNDO	paint/gimpinkundo.h	29;"	d
GIMP_IS_INK_UNDO_CLASS	paint/gimpinkundo.h	30;"	d
GIMP_IS_INTERPRETER_DB	plug-in/gimpinterpreterdb.h	29;"	d
GIMP_IS_INTERPRETER_DB_CLASS	plug-in/gimpinterpreterdb.h	30;"	d
GIMP_IS_ISCISSORS_TOOL	tools/gimpiscissorstool.h	62;"	d
GIMP_IS_ISCISSORS_TOOL_CLASS	tools/gimpiscissorstool.h	63;"	d
GIMP_IS_ITEM	core/gimpitem.h	29;"	d
GIMP_IS_ITEM_CLASS	core/gimpitem.h	30;"	d
GIMP_IS_ITEM_PROP_UNDO	core/gimpitempropundo.h	29;"	d
GIMP_IS_ITEM_PROP_UNDO_CLASS	core/gimpitempropundo.h	30;"	d
GIMP_IS_ITEM_TREE_VIEW	widgets/gimpitemtreeview.h	49;"	d
GIMP_IS_ITEM_TREE_VIEW_CLASS	widgets/gimpitemtreeview.h	50;"	d
GIMP_IS_ITEM_UNDO	core/gimpitemundo.h	29;"	d
GIMP_IS_ITEM_UNDO_CLASS	core/gimpitemundo.h	30;"	d
GIMP_IS_LAYER	core/gimplayer.h	29;"	d
GIMP_IS_LAYER_CLASS	core/gimplayer.h	30;"	d
GIMP_IS_LAYER_MASK	core/gimplayermask.h	29;"	d
GIMP_IS_LAYER_MASK_CLASS	core/gimplayermask.h	30;"	d
GIMP_IS_LAYER_MASK_PROP_UNDO	core/gimplayermaskpropundo.h	29;"	d
GIMP_IS_LAYER_MASK_PROP_UNDO_CLASS	core/gimplayermaskpropundo.h	30;"	d
GIMP_IS_LAYER_MASK_UNDO	core/gimplayermaskundo.h	29;"	d
GIMP_IS_LAYER_MASK_UNDO_CLASS	core/gimplayermaskundo.h	30;"	d
GIMP_IS_LAYER_PROP_UNDO	core/gimplayerpropundo.h	29;"	d
GIMP_IS_LAYER_PROP_UNDO_CLASS	core/gimplayerpropundo.h	30;"	d
GIMP_IS_LAYER_TREE_VIEW	widgets/gimplayertreeview.h	32;"	d
GIMP_IS_LAYER_TREE_VIEW_CLASS	widgets/gimplayertreeview.h	33;"	d
GIMP_IS_LAYER_UNDO	core/gimplayerundo.h	29;"	d
GIMP_IS_LAYER_UNDO_CLASS	core/gimplayerundo.h	30;"	d
GIMP_IS_LEVELS_TOOL	tools/gimplevelstool.h	29;"	d
GIMP_IS_LEVELS_TOOL_CLASS	tools/gimplevelstool.h	30;"	d
GIMP_IS_LIST	core/gimplist.h	32;"	d
GIMP_IS_LIST_CLASS	core/gimplist.h	33;"	d
GIMP_IS_MAGNIFY_OPTIONS	tools/gimpmagnifyoptions.h	29;"	d
GIMP_IS_MAGNIFY_OPTIONS_CLASS	tools/gimpmagnifyoptions.h	30;"	d
GIMP_IS_MAGNIFY_TOOL	tools/gimpmagnifytool.h	29;"	d
GIMP_IS_MAGNIFY_TOOL_CLASS	tools/gimpmagnifytool.h	30;"	d
GIMP_IS_MASK_UNDO	core/gimpmaskundo.h	29;"	d
GIMP_IS_MASK_UNDO_CLASS	core/gimpmaskundo.h	30;"	d
GIMP_IS_MEASURE_OPTIONS	tools/gimpmeasureoptions.h	29;"	d
GIMP_IS_MEASURE_OPTIONS_CLASS	tools/gimpmeasureoptions.h	30;"	d
GIMP_IS_MEASURE_TOOL	tools/gimpmeasuretool.h	41;"	d
GIMP_IS_MEASURE_TOOL_CLASS	tools/gimpmeasuretool.h	42;"	d
GIMP_IS_MENU_DOCK	widgets/gimpmenudock.h	32;"	d
GIMP_IS_MENU_DOCK_CLASS	widgets/gimpmenudock.h	33;"	d
GIMP_IS_MENU_FACTORY	widgets/gimpmenufactory.h	42;"	d
GIMP_IS_MENU_FACTORY_CLASS	widgets/gimpmenufactory.h	43;"	d
GIMP_IS_MESSAGE_BOX	widgets/gimpmessagebox.h	31;"	d
GIMP_IS_MESSAGE_BOX_CLASS	widgets/gimpmessagebox.h	32;"	d
GIMP_IS_MESSAGE_DIALOG	widgets/gimpmessagedialog.h	31;"	d
GIMP_IS_MESSAGE_DIALOG_CLASS	widgets/gimpmessagedialog.h	32;"	d
GIMP_IS_MOVE_OPTIONS	tools/gimpmoveoptions.h	29;"	d
GIMP_IS_MOVE_OPTIONS_CLASS	tools/gimpmoveoptions.h	30;"	d
GIMP_IS_MOVE_TOOL	tools/gimpmovetool.h	29;"	d
GIMP_IS_MOVE_TOOL_CLASS	tools/gimpmovetool.h	30;"	d
GIMP_IS_NAVIGATION_EDITOR	display/gimpnavigationeditor.h	35;"	d
GIMP_IS_NAVIGATION_EDITOR_CLASS	display/gimpnavigationeditor.h	36;"	d
GIMP_IS_NAVIGATION_VIEW	widgets/gimpnavigationview.h	34;"	d
GIMP_IS_NAVIGATION_VIEW_CLASS	widgets/gimpnavigationview.h	35;"	d
GIMP_IS_OBJECT	core/gimpobject.h	26;"	d
GIMP_IS_OBJECT_CLASS	core/gimpobject.h	27;"	d
GIMP_IS_PAINTBRUSH	paint/gimppaintbrush.h	29;"	d
GIMP_IS_PAINTBRUSH_CLASS	paint/gimppaintbrush.h	30;"	d
GIMP_IS_PAINTBRUSH_TOOL	tools/gimppaintbrushtool.h	29;"	d
GIMP_IS_PAINTBRUSH_TOOL_CLASS	tools/gimppaintbrushtool.h	30;"	d
GIMP_IS_PAINT_CORE	paint/gimppaintcore.h	30;"	d
GIMP_IS_PAINT_CORE_CLASS	paint/gimppaintcore.h	31;"	d
GIMP_IS_PAINT_CORE_UNDO	paint/gimppaintcoreundo.h	29;"	d
GIMP_IS_PAINT_CORE_UNDO_CLASS	paint/gimppaintcoreundo.h	30;"	d
GIMP_IS_PAINT_INFO	core/gimppaintinfo.h	29;"	d
GIMP_IS_PAINT_INFO_CLASS	core/gimppaintinfo.h	30;"	d
GIMP_IS_PAINT_OPTIONS	paint/gimppaintoptions.h	75;"	d
GIMP_IS_PAINT_OPTIONS_CLASS	paint/gimppaintoptions.h	76;"	d
GIMP_IS_PAINT_TOOL	tools/gimppainttool.h	29;"	d
GIMP_IS_PAINT_TOOL_CLASS	tools/gimppainttool.h	30;"	d
GIMP_IS_PALETTE	core/gimppalette.h	29;"	d
GIMP_IS_PALETTE_CLASS	core/gimppalette.h	30;"	d
GIMP_IS_PALETTE_EDITOR	widgets/gimppaletteeditor.h	29;"	d
GIMP_IS_PALETTE_EDITOR_CLASS	widgets/gimppaletteeditor.h	30;"	d
GIMP_IS_PALETTE_SELECT	widgets/gimppaletteselect.h	33;"	d
GIMP_IS_PALETTE_SELECT_CLASS	widgets/gimppaletteselect.h	34;"	d
GIMP_IS_PALETTE_VIEW	widgets/gimppaletteview.h	31;"	d
GIMP_IS_PALETTE_VIEW_CLASS	widgets/gimppaletteview.h	32;"	d
GIMP_IS_PARAM_SPEC_ARRAY	core/gimpparamspecs.h	615;"	d
GIMP_IS_PARAM_SPEC_CHANNEL_ID	core/gimpparamspecs.h	393;"	d
GIMP_IS_PARAM_SPEC_DISPLAY_ID	core/gimpparamspecs.h	557;"	d
GIMP_IS_PARAM_SPEC_DRAWABLE_ID	core/gimpparamspecs.h	311;"	d
GIMP_IS_PARAM_SPEC_ENUM	core/gimpparamspecs.h	178;"	d
GIMP_IS_PARAM_SPEC_FLOAT_ARRAY	core/gimpparamspecs.h	783;"	d
GIMP_IS_PARAM_SPEC_IMAGE_ID	core/gimpparamspecs.h	219;"	d
GIMP_IS_PARAM_SPEC_INT16	core/gimpparamspecs.h	83;"	d
GIMP_IS_PARAM_SPEC_INT16_ARRAY	core/gimpparamspecs.h	693;"	d
GIMP_IS_PARAM_SPEC_INT32	core/gimpparamspecs.h	46;"	d
GIMP_IS_PARAM_SPEC_INT32_ARRAY	core/gimpparamspecs.h	738;"	d
GIMP_IS_PARAM_SPEC_INT8	core/gimpparamspecs.h	120;"	d
GIMP_IS_PARAM_SPEC_INT8_ARRAY	core/gimpparamspecs.h	648;"	d
GIMP_IS_PARAM_SPEC_ITEM_ID	core/gimpparamspecs.h	264;"	d
GIMP_IS_PARAM_SPEC_LAYER_ID	core/gimpparamspecs.h	352;"	d
GIMP_IS_PARAM_SPEC_LAYER_MASK_ID	core/gimpparamspecs.h	434;"	d
GIMP_IS_PARAM_SPEC_SELECTION_ID	core/gimpparamspecs.h	475;"	d
GIMP_IS_PARAM_SPEC_STRING	core/gimpparamspecs.h	146;"	d
GIMP_IS_PARAM_SPEC_STRING_ARRAY	core/gimpparamspecs.h	834;"	d
GIMP_IS_PARAM_SPEC_VECTORS_ID	core/gimpparamspecs.h	516;"	d
GIMP_IS_PARASITE_LIST	core/gimpparasitelist.h	28;"	d
GIMP_IS_PARASITE_LIST_CLASS	core/gimpparasitelist.h	29;"	d
GIMP_IS_PATTERN	core/gimppattern.h	29;"	d
GIMP_IS_PATTERN_CLASS	core/gimppattern.h	30;"	d
GIMP_IS_PATTERN_CLIPBOARD	core/gimppatternclipboard.h	32;"	d
GIMP_IS_PATTERN_CLIPBOARD_CLASS	core/gimppatternclipboard.h	33;"	d
GIMP_IS_PATTERN_FACTORY_VIEW	widgets/gimppatternfactoryview.h	31;"	d
GIMP_IS_PATTERN_FACTORY_VIEW_CLASS	widgets/gimppatternfactoryview.h	32;"	d
GIMP_IS_PATTERN_SELECT	widgets/gimppatternselect.h	33;"	d
GIMP_IS_PATTERN_SELECT_CLASS	widgets/gimppatternselect.h	34;"	d
GIMP_IS_PDB	pdb/gimppdb.h	29;"	d
GIMP_IS_PDB_CLASS	pdb/gimppdb.h	30;"	d
GIMP_IS_PDB_DIALOG	widgets/gimppdbdialog.h	33;"	d
GIMP_IS_PDB_DIALOG_CLASS	widgets/gimppdbdialog.h	34;"	d
GIMP_IS_PDB_PROGRESS	core/gimppdbprogress.h	31;"	d
GIMP_IS_PDB_PROGRESS_CLASS	core/gimppdbprogress.h	32;"	d
GIMP_IS_PENCIL	paint/gimppencil.h	29;"	d
GIMP_IS_PENCIL_CLASS	paint/gimppencil.h	30;"	d
GIMP_IS_PENCIL_OPTIONS	paint/gimppenciloptions.h	29;"	d
GIMP_IS_PENCIL_OPTIONS_CLASS	paint/gimppenciloptions.h	30;"	d
GIMP_IS_PENCIL_TOOL	tools/gimppenciltool.h	29;"	d
GIMP_IS_PENCIL_TOOL_CLASS	tools/gimppenciltool.h	30;"	d
GIMP_IS_PERSPECTIVE_CLONE	paint/gimpperspectiveclone.h	30;"	d
GIMP_IS_PERSPECTIVE_CLONE_CLASS	paint/gimpperspectiveclone.h	31;"	d
GIMP_IS_PERSPECTIVE_CLONE_OPTIONS	paint/gimpperspectivecloneoptions.h	29;"	d
GIMP_IS_PERSPECTIVE_CLONE_OPTIONS_CLASS	paint/gimpperspectivecloneoptions.h	30;"	d
GIMP_IS_PERSPECTIVE_CLONE_TOOL	tools/gimpperspectiveclonetool.h	30;"	d
GIMP_IS_PERSPECTIVE_CLONE_TOOL_CLASS	tools/gimpperspectiveclonetool.h	31;"	d
GIMP_IS_PERSPECTIVE_TOOL	tools/gimpperspectivetool.h	29;"	d
GIMP_IS_PERSPECTIVE_TOOL_CLASS	tools/gimpperspectivetool.h	30;"	d
GIMP_IS_PICKABLE	core/gimppickable.h	27;"	d
GIMP_IS_PLUGIN_CONFIG	config/gimppluginconfig.h	33;"	d
GIMP_IS_PLUGIN_CONFIG_CLASS	config/gimppluginconfig.h	34;"	d
GIMP_IS_PLUG_IN	plug-in/gimpplugin.h	35;"	d
GIMP_IS_PLUG_IN_ACTION	widgets/gimppluginaction.h	32;"	d
GIMP_IS_PLUG_IN_ACTION_CLASS	widgets/gimppluginaction.h	33;"	d
GIMP_IS_PLUG_IN_CLASS	plug-in/gimpplugin.h	36;"	d
GIMP_IS_PLUG_IN_DEF	plug-in/gimpplugindef.h	33;"	d
GIMP_IS_PLUG_IN_DEF_CLASS	plug-in/gimpplugindef.h	34;"	d
GIMP_IS_PLUG_IN_MANAGER	plug-in/gimppluginmanager.h	31;"	d
GIMP_IS_PLUG_IN_MANAGER_CLASS	plug-in/gimppluginmanager.h	32;"	d
GIMP_IS_PLUG_IN_PROCEDURE	plug-in/gimppluginprocedure.h	34;"	d
GIMP_IS_PLUG_IN_PROCEDURE_CLASS	plug-in/gimppluginprocedure.h	35;"	d
GIMP_IS_POSTERIZE_TOOL	tools/gimpposterizetool.h	29;"	d
GIMP_IS_POSTERIZE_TOOL_CLASS	tools/gimpposterizetool.h	30;"	d
GIMP_IS_PROCEDURE	pdb/gimpprocedure.h	36;"	d
GIMP_IS_PROCEDURE_CLASS	pdb/gimpprocedure.h	37;"	d
GIMP_IS_PROFILE_CHOOSER_DIALOG	widgets/gimpprofilechooserdialog.h	31;"	d
GIMP_IS_PROFILE_CHOOSER_DIALOG_CLASS	widgets/gimpprofilechooserdialog.h	32;"	d
GIMP_IS_PROGRESS	core/gimpprogress.h	27;"	d
GIMP_IS_PROGRESS_BOX	widgets/gimpprogressbox.h	33;"	d
GIMP_IS_PROGRESS_BOX_CLASS	widgets/gimpprogressbox.h	34;"	d
GIMP_IS_PROGRESS_DIALOG	widgets/gimpprogressdialog.h	33;"	d
GIMP_IS_PROGRESS_DIALOG_CLASS	widgets/gimpprogressdialog.h	34;"	d
GIMP_IS_PROJECTION	core/gimpprojection.h	44;"	d
GIMP_IS_PROJECTION_CLASS	core/gimpprojection.h	45;"	d
GIMP_IS_RC	config/gimprc.h	31;"	d
GIMP_IS_RC_CLASS	config/gimprc.h	32;"	d
GIMP_IS_RECTANGLE_OPTIONS	tools/gimprectangleoptions.h	57;"	d
GIMP_IS_RECTANGLE_TOOL	tools/gimprectangletool.h	55;"	d
GIMP_IS_RECT_SELECT_OPTIONS	tools/gimprectangleselectoptions.h	29;"	d
GIMP_IS_RECT_SELECT_OPTIONS_CLASS	tools/gimprectangleselectoptions.h	30;"	d
GIMP_IS_RECT_SELECT_TOOL	tools/gimprectangleselecttool.h	29;"	d
GIMP_IS_RECT_SELECT_TOOL_CLASS	tools/gimprectangleselecttool.h	30;"	d
GIMP_IS_REGION_SELECT_TOOL	tools/gimpregionselecttool.h	31;"	d
GIMP_IS_REGION_SELECT_TOOL_CLASS	tools/gimpregionselecttool.h	32;"	d
GIMP_IS_ROTATE_TOOL	tools/gimprotatetool.h	29;"	d
GIMP_IS_ROTATE_TOOL_CLASS	tools/gimprotatetool.h	30;"	d
GIMP_IS_SAMPLE_POINT_EDITOR	widgets/gimpsamplepointeditor.h	32;"	d
GIMP_IS_SAMPLE_POINT_EDITOR_CLASS	widgets/gimpsamplepointeditor.h	33;"	d
GIMP_IS_SAMPLE_POINT_UNDO	core/gimpsamplepointundo.h	29;"	d
GIMP_IS_SAMPLE_POINT_UNDO_CLASS	core/gimpsamplepointundo.h	30;"	d
GIMP_IS_SCALE_COMBO_BOX	display/gimpscalecombobox.h	31;"	d
GIMP_IS_SCALE_COMBO_BOX_CLASS	display/gimpscalecombobox.h	32;"	d
GIMP_IS_SCALE_TOOL	tools/gimpscaletool.h	29;"	d
GIMP_IS_SELECTION	core/gimpselection.h	29;"	d
GIMP_IS_SELECTION_CLASS	core/gimpselection.h	30;"	d
GIMP_IS_SELECTION_EDITOR	widgets/gimpselectioneditor.h	29;"	d
GIMP_IS_SELECTION_EDITOR_CLASS	widgets/gimpselectioneditor.h	30;"	d
GIMP_IS_SELECTION_OPTIONS	tools/gimpselectionoptions.h	29;"	d
GIMP_IS_SELECTION_OPTIONS_CLASS	tools/gimpselectionoptions.h	30;"	d
GIMP_IS_SELECTION_TOOL	tools/gimpselectiontool.h	29;"	d
GIMP_IS_SELECTION_TOOL_CLASS	tools/gimpselectiontool.h	30;"	d
GIMP_IS_SHEAR_TOOL	tools/gimpsheartool.h	29;"	d
GIMP_IS_SHEAR_TOOL_CLASS	tools/gimpsheartool.h	30;"	d
GIMP_IS_SIZE_BOX	widgets/gimpsizebox.h	31;"	d
GIMP_IS_SIZE_BOX_CLASS	widgets/gimpsizebox.h	32;"	d
GIMP_IS_SMUDGE	paint/gimpsmudge.h	31;"	d
GIMP_IS_SMUDGE_CLASS	paint/gimpsmudge.h	32;"	d
GIMP_IS_SMUDGE_OPTIONS	paint/gimpsmudgeoptions.h	29;"	d
GIMP_IS_SMUDGE_OPTIONS_CLASS	paint/gimpsmudgeoptions.h	30;"	d
GIMP_IS_SMUDGE_TOOL	tools/gimpsmudgetool.h	29;"	d
GIMP_IS_SMUDGE_TOOL_CLASS	tools/gimpsmudgetool.h	30;"	d
GIMP_IS_SOURCE_CORE	paint/gimpsourcecore.h	29;"	d
GIMP_IS_SOURCE_CORE_CLASS	paint/gimpsourcecore.h	30;"	d
GIMP_IS_SOURCE_OPTIONS	paint/gimpsourceoptions.h	29;"	d
GIMP_IS_SOURCE_OPTIONS_CLASS	paint/gimpsourceoptions.h	30;"	d
GIMP_IS_SOURCE_TOOL	tools/gimpsourcetool.h	29;"	d
GIMP_IS_SOURCE_TOOL_CLASS	tools/gimpsourcetool.h	30;"	d
GIMP_IS_STATUSBAR	display/gimpstatusbar.h	33;"	d
GIMP_IS_STATUSBAR_CLASS	display/gimpstatusbar.h	34;"	d
GIMP_IS_STRING_ACTION	widgets/gimpstringaction.h	32;"	d
GIMP_IS_STRING_ACTION_CLASS	widgets/gimpstringaction.h	33;"	d
GIMP_IS_STROKE	vectors/gimpstroke.h	31;"	d
GIMP_IS_STROKE_CLASS	vectors/gimpstroke.h	32;"	d
GIMP_IS_STROKE_DESC	core/gimpstrokedesc.h	32;"	d
GIMP_IS_STROKE_DESC_CLASS	core/gimpstrokedesc.h	33;"	d
GIMP_IS_STROKE_EDITOR	widgets/gimpstrokeeditor.h	32;"	d
GIMP_IS_STROKE_EDITOR_CLASS	widgets/gimpstrokeeditor.h	33;"	d
GIMP_IS_STROKE_OPTIONS	core/gimpstrokeoptions.h	32;"	d
GIMP_IS_STROKE_OPTIONS_CLASS	core/gimpstrokeoptions.h	33;"	d
GIMP_IS_SUB_PROGRESS	core/gimpsubprogress.h	26;"	d
GIMP_IS_SUB_PROGRESS_CLASS	core/gimpsubprogress.h	27;"	d
GIMP_IS_TEMPLATE	core/gimptemplate.h	32;"	d
GIMP_IS_TEMPLATE_CLASS	core/gimptemplate.h	33;"	d
GIMP_IS_TEMPLATE_EDITOR	widgets/gimptemplateeditor.h	32;"	d
GIMP_IS_TEMPLATE_EDITOR_CLASS	widgets/gimptemplateeditor.h	33;"	d
GIMP_IS_TEMPLATE_VIEW	widgets/gimptemplateview.h	32;"	d
GIMP_IS_TEMPLATE_VIEW_CLASS	widgets/gimptemplateview.h	33;"	d
GIMP_IS_TEMPORARY_PROCEDURE	plug-in/gimptemporaryprocedure.h	31;"	d
GIMP_IS_TEMPORARY_PROCEDURE_CLASS	plug-in/gimptemporaryprocedure.h	32;"	d
GIMP_IS_TEXT	text/gimptext.h	33;"	d
GIMP_IS_TEXT_CLASS	text/gimptext.h	34;"	d
GIMP_IS_TEXT_EDITOR	widgets/gimptexteditor.h	28;"	d
GIMP_IS_TEXT_LAYER	text/gimptextlayer.h	32;"	d
GIMP_IS_TEXT_LAYER_CLASS	text/gimptextlayer.h	33;"	d
GIMP_IS_TEXT_LAYOUT	text/gimptextlayout.h	28;"	d
GIMP_IS_TEXT_OPTIONS	tools/gimptextoptions.h	29;"	d
GIMP_IS_TEXT_OPTIONS_CLASS	tools/gimptextoptions.h	30;"	d
GIMP_IS_TEXT_TOOL	tools/gimptexttool.h	28;"	d
GIMP_IS_TEXT_TOOL_CLASS	tools/gimptexttool.h	30;"	d
GIMP_IS_TEXT_UNDO	text/gimptextundo.h	29;"	d
GIMP_IS_TEXT_UNDO_CLASS	text/gimptextundo.h	30;"	d
GIMP_IS_THRESHOLD_TOOL	tools/gimpthresholdtool.h	29;"	d
GIMP_IS_THRESHOLD_TOOL_CLASS	tools/gimpthresholdtool.h	30;"	d
GIMP_IS_THUMB_BOX	widgets/gimpthumbbox.h	26;"	d
GIMP_IS_THUMB_BOX_CLASS	widgets/gimpthumbbox.h	27;"	d
GIMP_IS_TOOL	tools/gimptool.h	29;"	d
GIMP_IS_TOOLBOX	widgets/gimptoolbox.h	29;"	d
GIMP_IS_TOOLBOX_CLASS	widgets/gimptoolbox.h	30;"	d
GIMP_IS_TOOL_CLASS	tools/gimptool.h	30;"	d
GIMP_IS_TOOL_CONTROL	tools/gimptoolcontrol.h	29;"	d
GIMP_IS_TOOL_CONTROL_CLASS	tools/gimptoolcontrol.h	30;"	d
GIMP_IS_TOOL_DIALOG	widgets/gimptooldialog.h	31;"	d
GIMP_IS_TOOL_DIALOG_CLASS	widgets/gimptooldialog.h	32;"	d
GIMP_IS_TOOL_INFO	core/gimptoolinfo.h	29;"	d
GIMP_IS_TOOL_INFO_CLASS	core/gimptoolinfo.h	30;"	d
GIMP_IS_TOOL_OPTIONS	core/gimptooloptions.h	29;"	d
GIMP_IS_TOOL_OPTIONS_CLASS	core/gimptooloptions.h	30;"	d
GIMP_IS_TOOL_OPTIONS_EDITOR	widgets/gimptooloptionseditor.h	32;"	d
GIMP_IS_TOOL_OPTIONS_EDITOR_CLASS	widgets/gimptooloptionseditor.h	33;"	d
GIMP_IS_TOOL_PRESETS	core/gimptoolpresets.h	32;"	d
GIMP_IS_TOOL_PRESETS_CLASS	core/gimptoolpresets.h	33;"	d
GIMP_IS_TOOL_VIEW	widgets/gimptoolview.h	32;"	d
GIMP_IS_TOOL_VIEW_CLASS	widgets/gimptoolview.h	33;"	d
GIMP_IS_TRANSFORM_OPTIONS	tools/gimptransformoptions.h	29;"	d
GIMP_IS_TRANSFORM_OPTIONS_CLASS	tools/gimptransformoptions.h	30;"	d
GIMP_IS_TRANSFORM_TOOL	tools/gimptransformtool.h	36;"	d
GIMP_IS_TRANSFORM_TOOL_CLASS	tools/gimptransformtool.h	37;"	d
GIMP_IS_TRANSFORM_TOOL_UNDO	tools/gimptransformtoolundo.h	29;"	d
GIMP_IS_TRANSFORM_TOOL_UNDO_CLASS	tools/gimptransformtoolundo.h	30;"	d
GIMP_IS_UI_MANAGER	widgets/gimpuimanager.h	43;"	d
GIMP_IS_UI_MANAGER_CLASS	widgets/gimpuimanager.h	44;"	d
GIMP_IS_UNDO	core/gimpundo.h	40;"	d
GIMP_IS_UNDO_CLASS	core/gimpundo.h	41;"	d
GIMP_IS_UNDO_EDITOR	widgets/gimpundoeditor.h	29;"	d
GIMP_IS_UNDO_EDITOR_CLASS	widgets/gimpundoeditor.h	30;"	d
GIMP_IS_UNDO_STACK	core/gimpundostack.h	29;"	d
GIMP_IS_UNDO_STACK_CLASS	core/gimpundostack.h	30;"	d
GIMP_IS_UNIT_COMBO_BOX	widgets/gimpunitcombobox.h	31;"	d
GIMP_IS_UNIT_COMBO_BOX_CLASS	widgets/gimpunitcombobox.h	32;"	d
GIMP_IS_UNIT_STORE	widgets/gimpunitstore.h	44;"	d
GIMP_IS_UNIT_STORE_CLASS	widgets/gimpunitstore.h	45;"	d
GIMP_IS_VECTORS	vectors/gimpvectors.h	31;"	d
GIMP_IS_VECTORS_CLASS	vectors/gimpvectors.h	32;"	d
GIMP_IS_VECTORS_MOD_UNDO	vectors/gimpvectorsmodundo.h	29;"	d
GIMP_IS_VECTORS_MOD_UNDO_CLASS	vectors/gimpvectorsmodundo.h	30;"	d
GIMP_IS_VECTORS_PROP_UNDO	vectors/gimpvectorspropundo.h	29;"	d
GIMP_IS_VECTORS_PROP_UNDO_CLASS	vectors/gimpvectorspropundo.h	30;"	d
GIMP_IS_VECTORS_TREE_VIEW	widgets/gimpvectorstreeview.h	32;"	d
GIMP_IS_VECTORS_TREE_VIEW_CLASS	widgets/gimpvectorstreeview.h	33;"	d
GIMP_IS_VECTORS_UNDO	vectors/gimpvectorsundo.h	29;"	d
GIMP_IS_VECTORS_UNDO_CLASS	vectors/gimpvectorsundo.h	30;"	d
GIMP_IS_VECTOR_OPTIONS	tools/gimpvectoroptions.h	29;"	d
GIMP_IS_VECTOR_OPTIONS_CLASS	tools/gimpvectoroptions.h	30;"	d
GIMP_IS_VECTOR_TOOL	tools/gimpvectortool.h	54;"	d
GIMP_IS_VECTOR_TOOL_CLASS	tools/gimpvectortool.h	55;"	d
GIMP_IS_VIEW	widgets/gimpview.h	29;"	d
GIMP_IS_VIEWABLE	core/gimpviewable.h	42;"	d
GIMP_IS_VIEWABLE_BUTTON	widgets/gimpviewablebutton.h	32;"	d
GIMP_IS_VIEWABLE_BUTTON_CLASS	widgets/gimpviewablebutton.h	33;"	d
GIMP_IS_VIEWABLE_CLASS	core/gimpviewable.h	43;"	d
GIMP_IS_VIEWABLE_DIALOG	widgets/gimpviewabledialog.h	33;"	d
GIMP_IS_VIEWABLE_DIALOG_CLASS	widgets/gimpviewabledialog.h	34;"	d
GIMP_IS_VIEW_CLASS	widgets/gimpview.h	30;"	d
GIMP_IS_VIEW_RENDERER	widgets/gimpviewrenderer.h	32;"	d
GIMP_IS_VIEW_RENDERER_BRUSH	widgets/gimpviewrendererbrush.h	30;"	d
GIMP_IS_VIEW_RENDERER_BRUSH_CLASS	widgets/gimpviewrendererbrush.h	31;"	d
GIMP_IS_VIEW_RENDERER_BUFFER	widgets/gimpviewrendererbuffer.h	30;"	d
GIMP_IS_VIEW_RENDERER_BUFFER_CLASS	widgets/gimpviewrendererbuffer.h	31;"	d
GIMP_IS_VIEW_RENDERER_CLASS	widgets/gimpviewrenderer.h	33;"	d
GIMP_IS_VIEW_RENDERER_DRAWABLE	widgets/gimpviewrendererdrawable.h	30;"	d
GIMP_IS_VIEW_RENDERER_DRAWABLE_CLASS	widgets/gimpviewrendererdrawable.h	31;"	d
GIMP_IS_VIEW_RENDERER_GRADIENT	widgets/gimpviewrenderergradient.h	30;"	d
GIMP_IS_VIEW_RENDERER_GRADIENT_CLASS	widgets/gimpviewrenderergradient.h	31;"	d
GIMP_IS_VIEW_RENDERER_IMAGE	widgets/gimpviewrendererimage.h	30;"	d
GIMP_IS_VIEW_RENDERER_IMAGEFILE	widgets/gimpviewrendererimagefile.h	34;"	d
GIMP_IS_VIEW_RENDERER_IMAGEFILE_CLASS	widgets/gimpviewrendererimagefile.h	35;"	d
GIMP_IS_VIEW_RENDERER_IMAGE_CLASS	widgets/gimpviewrendererimage.h	31;"	d
GIMP_IS_VIEW_RENDERER_LAYER	widgets/gimpviewrendererlayer.h	30;"	d
GIMP_IS_VIEW_RENDERER_LAYER_CLASS	widgets/gimpviewrendererlayer.h	31;"	d
GIMP_IS_VIEW_RENDERER_PALETTE	widgets/gimpviewrendererpalette.h	30;"	d
GIMP_IS_VIEW_RENDERER_PALETTE_CLASS	widgets/gimpviewrendererpalette.h	31;"	d
GIMP_IS_VIEW_RENDERER_VECTORS	widgets/gimpviewrenderervectors.h	31;"	d
GIMP_IS_VIEW_RENDERER_VECTORS_CLASS	widgets/gimpviewrenderervectors.h	32;"	d
GIMP_ITEM	core/gimpitem.h	27;"	d
GIMP_ITEM_CLASS	core/gimpitem.h	28;"	d
GIMP_ITEM_GET_CLASS	core/gimpitem.h	31;"	d
GIMP_ITEM_PROP_UNDO	core/gimpitempropundo.h	27;"	d
GIMP_ITEM_PROP_UNDO_CLASS	core/gimpitempropundo.h	28;"	d
GIMP_ITEM_PROP_UNDO_GET_CLASS	core/gimpitempropundo.h	31;"	d
GIMP_ITEM_SET_ALL	core/core-enums.h	/^  GIMP_ITEM_SET_ALL,         \/*< desc="All layers"         >*\/$/;"	e	enum:__anon74
GIMP_ITEM_SET_IMAGE_SIZED	core/core-enums.h	/^  GIMP_ITEM_SET_IMAGE_SIZED, \/*< desc="Image-sized layers" >*\/$/;"	e	enum:__anon74
GIMP_ITEM_SET_LINKED	core/core-enums.h	/^  GIMP_ITEM_SET_LINKED       \/*< desc="All linked layers"  >*\/$/;"	e	enum:__anon74
GIMP_ITEM_SET_NONE	core/core-enums.h	/^  GIMP_ITEM_SET_NONE,        \/*< desc="None"               >*\/$/;"	e	enum:__anon74
GIMP_ITEM_SET_VISIBLE	core/core-enums.h	/^  GIMP_ITEM_SET_VISIBLE,     \/*< desc="All visible layers" >*\/$/;"	e	enum:__anon74
GIMP_ITEM_TREE_VIEW	widgets/gimpitemtreeview.h	47;"	d
GIMP_ITEM_TREE_VIEW_CLASS	widgets/gimpitemtreeview.h	48;"	d
GIMP_ITEM_TREE_VIEW_GET_CLASS	widgets/gimpitemtreeview.h	51;"	d
GIMP_ITEM_TYPE_ALL	core/core-enums.h	/^  GIMP_ITEM_TYPE_ALL      = (GIMP_ITEM_TYPE_LAYERS   |$/;"	e	enum:__anon96
GIMP_ITEM_TYPE_CHANNELS	core/core-enums.h	/^  GIMP_ITEM_TYPE_CHANNELS = 1 << 1,$/;"	e	enum:__anon96
GIMP_ITEM_TYPE_LAYERS	core/core-enums.h	/^  GIMP_ITEM_TYPE_LAYERS   = 1 << 0,$/;"	e	enum:__anon96
GIMP_ITEM_TYPE_VECTORS	core/core-enums.h	/^  GIMP_ITEM_TYPE_VECTORS  = 1 << 2,$/;"	e	enum:__anon96
GIMP_ITEM_UNDO	core/gimpitemundo.h	27;"	d
GIMP_ITEM_UNDO_CLASS	core/gimpitemundo.h	28;"	d
GIMP_ITEM_UNDO_GET_CLASS	core/gimpitemundo.h	31;"	d
GIMP_JOIN_BEVEL	core/core-enums.h	/^  GIMP_JOIN_BEVEL   \/*< desc="Bevel" >*\/$/;"	e	enum:__anon69
GIMP_JOIN_MITER	core/core-enums.h	/^  GIMP_JOIN_MITER,  \/*< desc="Miter" >*\/$/;"	e	enum:__anon69
GIMP_JOIN_ROUND	core/core-enums.h	/^  GIMP_JOIN_ROUND,  \/*< desc="Round" >*\/$/;"	e	enum:__anon69
GIMP_LAYER	core/gimplayer.h	27;"	d
GIMP_LAYER_CLASS	core/gimplayer.h	28;"	d
GIMP_LAYER_GET_CLASS	core/gimplayer.h	31;"	d
GIMP_LAYER_MASK	core/gimplayermask.h	27;"	d
GIMP_LAYER_MASK_CLASS	core/gimplayermask.h	28;"	d
GIMP_LAYER_MASK_GET_CLASS	core/gimplayermask.h	31;"	d
GIMP_LAYER_MASK_PROP_UNDO	core/gimplayermaskpropundo.h	27;"	d
GIMP_LAYER_MASK_PROP_UNDO_CLASS	core/gimplayermaskpropundo.h	28;"	d
GIMP_LAYER_MASK_PROP_UNDO_GET_CLASS	core/gimplayermaskpropundo.h	31;"	d
GIMP_LAYER_MASK_UNDO	core/gimplayermaskundo.h	27;"	d
GIMP_LAYER_MASK_UNDO_CLASS	core/gimplayermaskundo.h	28;"	d
GIMP_LAYER_MASK_UNDO_GET_CLASS	core/gimplayermaskundo.h	31;"	d
GIMP_LAYER_PROP_UNDO	core/gimplayerpropundo.h	27;"	d
GIMP_LAYER_PROP_UNDO_CLASS	core/gimplayerpropundo.h	28;"	d
GIMP_LAYER_PROP_UNDO_GET_CLASS	core/gimplayerpropundo.h	31;"	d
GIMP_LAYER_TREE_VIEW	widgets/gimplayertreeview.h	30;"	d
GIMP_LAYER_TREE_VIEW_CLASS	widgets/gimplayertreeview.h	31;"	d
GIMP_LAYER_TREE_VIEW_GET_CLASS	widgets/gimplayertreeview.h	34;"	d
GIMP_LAYER_UNDO	core/gimplayerundo.h	27;"	d
GIMP_LAYER_UNDO_CLASS	core/gimplayerundo.h	28;"	d
GIMP_LAYER_UNDO_GET_CLASS	core/gimplayerundo.h	31;"	d
GIMP_LEVELS_TOOL	tools/gimplevelstool.h	27;"	d
GIMP_LEVELS_TOOL_CLASS	tools/gimplevelstool.h	28;"	d
GIMP_LEVELS_TOOL_GET_CLASS	tools/gimplevelstool.h	31;"	d
GIMP_LICENSE	about.h	33;"	d
GIMP_LIGHTEN_ONLY_MODE	base/base-enums.h	/^  GIMP_LIGHTEN_ONLY_MODE,    \/*< desc="Lighten only"         >*\/$/;"	e	enum:__anon11
GIMP_LIST	core/gimplist.h	30;"	d
GIMP_LIST_CLASS	core/gimplist.h	31;"	d
GIMP_LIST_GET_CLASS	core/gimplist.h	34;"	d
GIMP_MAGENTA_HUES	base/base-enums.h	/^  GIMP_MAGENTA_HUES$/;"	e	enum:__anon12
GIMP_MAGNIFY_OPTIONS	tools/gimpmagnifyoptions.h	27;"	d
GIMP_MAGNIFY_OPTIONS_CLASS	tools/gimpmagnifyoptions.h	28;"	d
GIMP_MAGNIFY_OPTIONS_GET_CLASS	tools/gimpmagnifyoptions.h	31;"	d
GIMP_MAGNIFY_TOOL	tools/gimpmagnifytool.h	27;"	d
GIMP_MAGNIFY_TOOL_CLASS	tools/gimpmagnifytool.h	28;"	d
GIMP_MAGNIFY_TOOL_GET_CLASS	tools/gimpmagnifytool.h	31;"	d
GIMP_MAGNIFY_TOOL_GET_OPTIONS	tools/gimpmagnifytool.h	33;"	d
GIMP_MAKE_PALETTE	core/core-enums.h	/^  GIMP_MAKE_PALETTE,    \/*< desc="Generate optimum palette"            >*\/$/;"	e	enum:__anon62
GIMP_MASK_APPLY	core/core-enums.h	/^  GIMP_MASK_APPLY,$/;"	e	enum:__anon88
GIMP_MASK_DISCARD	core/core-enums.h	/^  GIMP_MASK_DISCARD$/;"	e	enum:__anon88
GIMP_MASK_UNDO	core/gimpmaskundo.h	27;"	d
GIMP_MASK_UNDO_CLASS	core/gimpmaskundo.h	28;"	d
GIMP_MASK_UNDO_GET_CLASS	core/gimpmaskundo.h	31;"	d
GIMP_MAX_NUM_THREADS	base/pixel-processor.h	25;"	d
GIMP_MEASURE_OPTIONS	tools/gimpmeasureoptions.h	27;"	d
GIMP_MEASURE_OPTIONS_CLASS	tools/gimpmeasureoptions.h	28;"	d
GIMP_MEASURE_OPTIONS_GET_CLASS	tools/gimpmeasureoptions.h	31;"	d
GIMP_MEASURE_TOOL	tools/gimpmeasuretool.h	39;"	d
GIMP_MEASURE_TOOL_CLASS	tools/gimpmeasuretool.h	40;"	d
GIMP_MEASURE_TOOL_GET_CLASS	tools/gimpmeasuretool.h	43;"	d
GIMP_MEASURE_TOOL_GET_OPTIONS	tools/gimpmeasuretool.h	45;"	d
GIMP_MENU_DOCK	widgets/gimpmenudock.h	30;"	d
GIMP_MENU_DOCK_CLASS	widgets/gimpmenudock.h	31;"	d
GIMP_MENU_DOCK_GET_CLASS	widgets/gimpmenudock.h	34;"	d
GIMP_MENU_FACTORY	widgets/gimpmenufactory.h	40;"	d
GIMP_MENU_FACTORY_CLASS	widgets/gimpmenufactory.h	41;"	d
GIMP_MENU_FACTORY_GET_CLASS	widgets/gimpmenufactory.h	44;"	d
GIMP_MESSAGE_BOX	widgets/gimpmessagebox.h	29;"	d
GIMP_MESSAGE_BOX_CLASS	widgets/gimpmessagebox.h	30;"	d
GIMP_MESSAGE_BOX_GET_CLASS	widgets/gimpmessagebox.h	33;"	d
GIMP_MESSAGE_BOX_SPACING	widgets/gimpmessagebox.c	36;"	d	file:
GIMP_MESSAGE_DIALOG	widgets/gimpmessagedialog.h	29;"	d
GIMP_MESSAGE_DIALOG_CLASS	widgets/gimpmessagedialog.h	30;"	d
GIMP_MESSAGE_DIALOG_GET_CLASS	widgets/gimpmessagedialog.h	33;"	d
GIMP_MESSAGE_ERROR	core/core-enums.h	/^  GIMP_MESSAGE_ERROR     \/*< desc="Error"   >*\/$/;"	e	enum:__anon91
GIMP_MESSAGE_INFO	core/core-enums.h	/^  GIMP_MESSAGE_INFO,     \/*< desc="Message" >*\/$/;"	e	enum:__anon91
GIMP_MESSAGE_WARNING	core/core-enums.h	/^  GIMP_MESSAGE_WARNING,  \/*< desc="Warning" >*\/$/;"	e	enum:__anon91
GIMP_MONO_PALETTE	core/core-enums.h	/^  GIMP_MONO_PALETTE,    \/*< desc="Use black and white (1-bit) palette" >*\/$/;"	e	enum:__anon62
GIMP_MOTION_MODE_COMPRESS	tools/tools-enums.h	/^  GIMP_MOTION_MODE_COMPRESS$/;"	e	enum:__anon264
GIMP_MOTION_MODE_EXACT	tools/tools-enums.h	/^  GIMP_MOTION_MODE_EXACT,$/;"	e	enum:__anon264
GIMP_MOTION_MODE_HINT	tools/tools-enums.h	/^  GIMP_MOTION_MODE_HINT,$/;"	e	enum:__anon264
GIMP_MOVE_OPTIONS	tools/gimpmoveoptions.h	27;"	d
GIMP_MOVE_OPTIONS_CLASS	tools/gimpmoveoptions.h	28;"	d
GIMP_MOVE_OPTIONS_GET_CLASS	tools/gimpmoveoptions.h	31;"	d
GIMP_MOVE_TOOL	tools/gimpmovetool.h	27;"	d
GIMP_MOVE_TOOL_CLASS	tools/gimpmovetool.h	28;"	d
GIMP_MOVE_TOOL_GET_CLASS	tools/gimpmovetool.h	31;"	d
GIMP_MOVE_TOOL_GET_OPTIONS	tools/gimpmovetool.h	33;"	d
GIMP_MULTIPLY_MODE	base/base-enums.h	/^  GIMP_MULTIPLY_MODE,        \/*< desc="Multiply"             >*\/$/;"	e	enum:__anon11
GIMP_NAME	about.h	26;"	d
GIMP_NAVIGATION_EDITOR	display/gimpnavigationeditor.h	33;"	d
GIMP_NAVIGATION_EDITOR_CLASS	display/gimpnavigationeditor.h	34;"	d
GIMP_NAVIGATION_EDITOR_GET_CLASS	display/gimpnavigationeditor.h	37;"	d
GIMP_NAVIGATION_VIEW	widgets/gimpnavigationview.h	32;"	d
GIMP_NAVIGATION_VIEW_CLASS	widgets/gimpnavigationview.h	33;"	d
GIMP_NAVIGATION_VIEW_GET_CLASS	widgets/gimpnavigationview.h	36;"	d
GIMP_NEGATIVE_CONVOL	base/base-enums.h	/^  GIMP_NEGATIVE_CONVOL     \/*  add 127 to values           *\/$/;"	e	enum:__anon13
GIMP_NODESTRUCT_DITHER	core/core-enums.h	/^  GIMP_NODESTRUCT_DITHER  \/*< pdb-skip, skip >*\/$/;"	e	enum:__anon61
GIMP_NORMAL_CONVOL	base/base-enums.h	/^  GIMP_NORMAL_CONVOL,      \/*  Negative numbers truncated  *\/$/;"	e	enum:__anon13
GIMP_NORMAL_MODE	base/base-enums.h	/^  GIMP_NORMAL_MODE,          \/*< desc="Normal"               >*\/$/;"	e	enum:__anon11
GIMP_NO_DITHER	core/core-enums.h	/^  GIMP_NO_DITHER,         \/*< desc="None"                                     >*\/$/;"	e	enum:__anon61
GIMP_NO_FILL	core/core-enums.h	/^  GIMP_NO_FILL            \/*< desc="None",   pdb-skip >*\/$/;"	e	enum:__anon66
GIMP_OBJECT	core/gimpobject.h	24;"	d
GIMP_OBJECT_CLASS	core/gimpobject.h	25;"	d
GIMP_OBJECT_GET_CLASS	core/gimpobject.h	28;"	d
GIMP_OFFSET_BACKGROUND	core/core-enums.h	/^  GIMP_OFFSET_BACKGROUND,$/;"	e	enum:__anon84
GIMP_OFFSET_TRANSPARENT	core/core-enums.h	/^  GIMP_OFFSET_TRANSPARENT$/;"	e	enum:__anon84
GIMP_OPACITY_OPAQUE	core/core-types.h	34;"	d
GIMP_OPACITY_TRANSPARENT	core/core-types.h	33;"	d
GIMP_ORIENTATION_HORIZONTAL	core/core-enums.h	/^  GIMP_ORIENTATION_HORIZONTAL, \/*< desc="Horizontal" >*\/$/;"	e	enum:__anon73
GIMP_ORIENTATION_UNKNOWN	core/core-enums.h	/^  GIMP_ORIENTATION_UNKNOWN     \/*< desc="Unknown"    >*\/$/;"	e	enum:__anon73
GIMP_ORIENTATION_VERTICAL	core/core-enums.h	/^  GIMP_ORIENTATION_VERTICAL,   \/*< desc="Vertical"   >*\/$/;"	e	enum:__anon73
GIMP_OVERLAY_MODE	base/base-enums.h	/^  GIMP_OVERLAY_MODE,         \/*< desc="Overlay"              >*\/$/;"	e	enum:__anon11
GIMP_PAINTBRUSH	paint/gimppaintbrush.h	27;"	d
GIMP_PAINTBRUSH_CLASS	paint/gimppaintbrush.h	28;"	d
GIMP_PAINTBRUSH_GET_CLASS	paint/gimppaintbrush.h	31;"	d
GIMP_PAINTBRUSH_TOOL	tools/gimppaintbrushtool.h	27;"	d
GIMP_PAINTBRUSH_TOOL_CLASS	tools/gimppaintbrushtool.h	28;"	d
GIMP_PAINTBRUSH_TOOL_GET_CLASS	tools/gimppaintbrushtool.h	31;"	d
GIMP_PAINT_CORE	paint/gimppaintcore.h	28;"	d
GIMP_PAINT_CORE_CLASS	paint/gimppaintcore.h	29;"	d
GIMP_PAINT_CORE_GET_CLASS	paint/gimppaintcore.h	32;"	d
GIMP_PAINT_CORE_UNDO	paint/gimppaintcoreundo.h	27;"	d
GIMP_PAINT_CORE_UNDO_CLASS	paint/gimppaintcoreundo.h	28;"	d
GIMP_PAINT_CORE_UNDO_GET_CLASS	paint/gimppaintcoreundo.h	31;"	d
GIMP_PAINT_INFO	core/gimppaintinfo.h	27;"	d
GIMP_PAINT_INFO_CLASS	core/gimppaintinfo.h	28;"	d
GIMP_PAINT_INFO_GET_CLASS	core/gimppaintinfo.h	31;"	d
GIMP_PAINT_OPTIONS	paint/gimppaintoptions.h	73;"	d
GIMP_PAINT_OPTIONS_CLASS	paint/gimppaintoptions.h	74;"	d
GIMP_PAINT_OPTIONS_CONTEXT_MASK	paint/gimppaintoptions.h	26;"	d
GIMP_PAINT_OPTIONS_GET_CLASS	paint/gimppaintoptions.h	77;"	d
GIMP_PAINT_OPTIONS_TABLE_KEY	tools/gimppaintoptions-gui.h	23;"	d
GIMP_PAINT_STATE_FINISH	paint/paint-enums.h	/^  GIMP_PAINT_STATE_FINISH   \/*  Cleanup and\/or reset PaintFunc operation     *\/$/;"	e	enum:__anon218
GIMP_PAINT_STATE_INIT	paint/paint-enums.h	/^  GIMP_PAINT_STATE_INIT,    \/*  Setup PaintFunc internals                    *\/$/;"	e	enum:__anon218
GIMP_PAINT_STATE_MOTION	paint/paint-enums.h	/^  GIMP_PAINT_STATE_MOTION,  \/*  PaintFunc performs motion-related rendering  *\/$/;"	e	enum:__anon218
GIMP_PAINT_TOOL	tools/gimppainttool.h	27;"	d
GIMP_PAINT_TOOL_CLASS	tools/gimppainttool.h	28;"	d
GIMP_PAINT_TOOL_GET_CLASS	tools/gimppainttool.h	31;"	d
GIMP_PAINT_TOOL_GET_OPTIONS	tools/gimppainttool.h	33;"	d
GIMP_PALETTE	core/gimppalette.h	27;"	d
GIMP_PALETTE_CLASS	core/gimppalette.h	28;"	d
GIMP_PALETTE_EDITOR	widgets/gimppaletteeditor.h	27;"	d
GIMP_PALETTE_EDITOR_CLASS	widgets/gimppaletteeditor.h	28;"	d
GIMP_PALETTE_EDITOR_GET_CLASS	widgets/gimppaletteeditor.h	31;"	d
GIMP_PALETTE_FILE_EXTENSION	core/gimppalette-load.h	23;"	d
GIMP_PALETTE_FILE_FORMAT_ACO	core/gimppalette-load.h	/^  GIMP_PALETTE_FILE_FORMAT_ACO       \/* Photoshop ACO color file            *\/$/;"	e	enum:__anon135
GIMP_PALETTE_FILE_FORMAT_ACT	core/gimppalette-load.h	/^  GIMP_PALETTE_FILE_FORMAT_ACT,      \/* Photoshop binary color palette      *\/$/;"	e	enum:__anon135
GIMP_PALETTE_FILE_FORMAT_GPL	core/gimppalette-load.h	/^  GIMP_PALETTE_FILE_FORMAT_GPL,      \/* GIMP palette                        *\/$/;"	e	enum:__anon135
GIMP_PALETTE_FILE_FORMAT_PSP_PAL	core/gimppalette-load.h	/^  GIMP_PALETTE_FILE_FORMAT_PSP_PAL,  \/* JASC's Paint Shop Pro color palette *\/$/;"	e	enum:__anon135
GIMP_PALETTE_FILE_FORMAT_RIFF_PAL	core/gimppalette-load.h	/^  GIMP_PALETTE_FILE_FORMAT_RIFF_PAL, \/* RIFF palette                        *\/$/;"	e	enum:__anon135
GIMP_PALETTE_FILE_FORMAT_UNKNOWN	core/gimppalette-load.h	/^  GIMP_PALETTE_FILE_FORMAT_UNKNOWN,$/;"	e	enum:__anon135
GIMP_PALETTE_GET_CLASS	core/gimppalette.h	31;"	d
GIMP_PALETTE_SELECT	widgets/gimppaletteselect.h	31;"	d
GIMP_PALETTE_SELECT_CLASS	widgets/gimppaletteselect.h	32;"	d
GIMP_PALETTE_SELECT_GET_CLASS	widgets/gimppaletteselect.h	35;"	d
GIMP_PALETTE_VIEW	widgets/gimppaletteview.h	29;"	d
GIMP_PALETTE_VIEW_CLASS	widgets/gimppaletteview.h	30;"	d
GIMP_PALETTE_VIEW_GET_CLASS	widgets/gimppaletteview.h	33;"	d
GIMP_PARAM_NO_VALIDATE	core/gimpparamspecs.h	26;"	d
GIMP_PARAM_SPEC_ARRAY	core/gimpparamspecs.h	614;"	d
GIMP_PARAM_SPEC_CHANNEL_ID	core/gimpparamspecs.h	392;"	d
GIMP_PARAM_SPEC_DISPLAY_ID	core/gimpparamspecs.h	556;"	d
GIMP_PARAM_SPEC_DRAWABLE_ID	core/gimpparamspecs.h	310;"	d
GIMP_PARAM_SPEC_ENUM	core/gimpparamspecs.h	176;"	d
GIMP_PARAM_SPEC_FLOAT_ARRAY	core/gimpparamspecs.h	782;"	d
GIMP_PARAM_SPEC_IMAGE_ID	core/gimpparamspecs.h	218;"	d
GIMP_PARAM_SPEC_INT16	core/gimpparamspecs.h	82;"	d
GIMP_PARAM_SPEC_INT16_ARRAY	core/gimpparamspecs.h	692;"	d
GIMP_PARAM_SPEC_INT32	core/gimpparamspecs.h	45;"	d
GIMP_PARAM_SPEC_INT32_ARRAY	core/gimpparamspecs.h	737;"	d
GIMP_PARAM_SPEC_INT8	core/gimpparamspecs.h	119;"	d
GIMP_PARAM_SPEC_INT8_ARRAY	core/gimpparamspecs.h	647;"	d
GIMP_PARAM_SPEC_ITEM_ID	core/gimpparamspecs.h	263;"	d
GIMP_PARAM_SPEC_LAYER_ID	core/gimpparamspecs.h	351;"	d
GIMP_PARAM_SPEC_LAYER_MASK_ID	core/gimpparamspecs.h	433;"	d
GIMP_PARAM_SPEC_SELECTION_ID	core/gimpparamspecs.h	474;"	d
GIMP_PARAM_SPEC_STRING	core/gimpparamspecs.h	145;"	d
GIMP_PARAM_SPEC_STRING_ARRAY	core/gimpparamspecs.h	833;"	d
GIMP_PARAM_SPEC_VECTORS_ID	core/gimpparamspecs.h	515;"	d
GIMP_PARASITE_LIST	core/gimpparasitelist.h	26;"	d
GIMP_PARASITE_LIST_CLASS	core/gimpparasitelist.h	27;"	d
GIMP_PARASITE_LIST_GET_CLASS	core/gimpparasitelist.h	30;"	d
GIMP_PATTERN	core/gimppattern.h	27;"	d
GIMP_PATTERN_CLASS	core/gimppattern.h	28;"	d
GIMP_PATTERN_CLIPBOARD	core/gimppatternclipboard.h	30;"	d
GIMP_PATTERN_CLIPBOARD_CLASS	core/gimppatternclipboard.h	31;"	d
GIMP_PATTERN_CLIPBOARD_GET_CLASS	core/gimppatternclipboard.h	34;"	d
GIMP_PATTERN_FACTORY_VIEW	widgets/gimppatternfactoryview.h	29;"	d
GIMP_PATTERN_FACTORY_VIEW_CLASS	widgets/gimppatternfactoryview.h	30;"	d
GIMP_PATTERN_FACTORY_VIEW_GET_CLASS	widgets/gimppatternfactoryview.h	33;"	d
GIMP_PATTERN_FILE_EXTENSION	core/gimppattern-load.h	23;"	d
GIMP_PATTERN_FILL	core/core-enums.h	/^  GIMP_PATTERN_FILL,      \/*< desc="Pattern"          >*\/$/;"	e	enum:__anon66
GIMP_PATTERN_GET_CLASS	core/gimppattern.h	31;"	d
GIMP_PATTERN_SELECT	widgets/gimppatternselect.h	31;"	d
GIMP_PATTERN_SELECT_CLASS	widgets/gimppatternselect.h	32;"	d
GIMP_PATTERN_SELECT_GET_CLASS	widgets/gimppatternselect.h	35;"	d
GIMP_PDB	pdb/gimppdb.h	27;"	d
GIMP_PDB_CLASS	pdb/gimppdb.h	28;"	d
GIMP_PDB_COMPAT_OFF	pdb/pdb-types.h	/^  GIMP_PDB_COMPAT_OFF,$/;"	e	enum:__anon229
GIMP_PDB_COMPAT_ON	pdb/pdb-types.h	/^  GIMP_PDB_COMPAT_ON,$/;"	e	enum:__anon229
GIMP_PDB_COMPAT_WARN	pdb/pdb-types.h	/^  GIMP_PDB_COMPAT_WARN$/;"	e	enum:__anon229
GIMP_PDB_DIALOG	widgets/gimppdbdialog.h	31;"	d
GIMP_PDB_DIALOG_CLASS	widgets/gimppdbdialog.h	32;"	d
GIMP_PDB_DIALOG_GET_CLASS	widgets/gimppdbdialog.h	35;"	d
GIMP_PDB_GET_CLASS	pdb/gimppdb.h	31;"	d
GIMP_PDB_PROGRESS	core/gimppdbprogress.h	29;"	d
GIMP_PDB_PROGRESS_CLASS	core/gimppdbprogress.h	30;"	d
GIMP_PDB_PROGRESS_GET_CLASS	core/gimppdbprogress.h	33;"	d
GIMP_PENCIL	paint/gimppencil.h	27;"	d
GIMP_PENCIL_CLASS	paint/gimppencil.h	28;"	d
GIMP_PENCIL_GET_CLASS	paint/gimppencil.h	31;"	d
GIMP_PENCIL_OPTIONS	paint/gimppenciloptions.h	27;"	d
GIMP_PENCIL_OPTIONS_CLASS	paint/gimppenciloptions.h	28;"	d
GIMP_PENCIL_OPTIONS_GET_CLASS	paint/gimppenciloptions.h	31;"	d
GIMP_PENCIL_TOOL	tools/gimppenciltool.h	27;"	d
GIMP_PENCIL_TOOL_CLASS	tools/gimppenciltool.h	28;"	d
GIMP_PENCIL_TOOL_GET_CLASS	tools/gimppenciltool.h	31;"	d
GIMP_PERSPECTIVE_CLONE	paint/gimpperspectiveclone.h	28;"	d
GIMP_PERSPECTIVE_CLONE_CLASS	paint/gimpperspectiveclone.h	29;"	d
GIMP_PERSPECTIVE_CLONE_GET_CLASS	paint/gimpperspectiveclone.h	32;"	d
GIMP_PERSPECTIVE_CLONE_MODE_ADJUST	paint/paint-enums.h	/^  GIMP_PERSPECTIVE_CLONE_MODE_ADJUST,  \/*< desc="Modify Perspective Plane" >*\/$/;"	e	enum:__anon214
GIMP_PERSPECTIVE_CLONE_MODE_PAINT	paint/paint-enums.h	/^  GIMP_PERSPECTIVE_CLONE_MODE_PAINT    \/*< desc="Perspective Clone"        >*\/$/;"	e	enum:__anon214
GIMP_PERSPECTIVE_CLONE_OPTIONS	paint/gimpperspectivecloneoptions.h	27;"	d
GIMP_PERSPECTIVE_CLONE_OPTIONS_CLASS	paint/gimpperspectivecloneoptions.h	28;"	d
GIMP_PERSPECTIVE_CLONE_OPTIONS_GET_CLASS	paint/gimpperspectivecloneoptions.h	31;"	d
GIMP_PERSPECTIVE_CLONE_TOOL	tools/gimpperspectiveclonetool.h	28;"	d
GIMP_PERSPECTIVE_CLONE_TOOL_CLASS	tools/gimpperspectiveclonetool.h	29;"	d
GIMP_PERSPECTIVE_CLONE_TOOL_GET_CLASS	tools/gimpperspectiveclonetool.h	32;"	d
GIMP_PERSPECTIVE_CLONE_TOOL_GET_OPTIONS	tools/gimpperspectiveclonetool.h	34;"	d
GIMP_PERSPECTIVE_TOOL	tools/gimpperspectivetool.h	27;"	d
GIMP_PERSPECTIVE_TOOL_CLASS	tools/gimpperspectivetool.h	28;"	d
GIMP_PERSPECTIVE_TOOL_GET_CLASS	tools/gimpperspectivetool.h	31;"	d
GIMP_PICKABLE	core/gimppickable.h	28;"	d
GIMP_PICKABLE_GET_INTERFACE	core/gimppickable.h	29;"	d
GIMP_PIXELFORMAT_ANY	composite/gimp-composite.h	/^  GIMP_PIXELFORMAT_ANY,$/;"	e	enum:__anon31
GIMP_PIXELFORMAT_N	composite/gimp-composite.h	/^  GIMP_PIXELFORMAT_N$/;"	e	enum:__anon31
GIMP_PIXELFORMAT_RGB8	composite/gimp-composite.h	/^  GIMP_PIXELFORMAT_RGB8,$/;"	e	enum:__anon31
GIMP_PIXELFORMAT_RGBA8	composite/gimp-composite.h	/^  GIMP_PIXELFORMAT_RGBA8,$/;"	e	enum:__anon31
GIMP_PIXELFORMAT_V8	composite/gimp-composite.h	/^  GIMP_PIXELFORMAT_V8,$/;"	e	enum:__anon31
GIMP_PIXELFORMAT_VA8	composite/gimp-composite.h	/^  GIMP_PIXELFORMAT_VA8,$/;"	e	enum:__anon31
GIMP_PLUGIN_CONFIG	config/gimppluginconfig.h	31;"	d
GIMP_PLUGIN_CONFIG_CLASS	config/gimppluginconfig.h	32;"	d
GIMP_PLUG_IN	plug-in/gimpplugin.h	33;"	d
GIMP_PLUG_IN_ACTION	widgets/gimppluginaction.h	30;"	d
GIMP_PLUG_IN_ACTION_CLASS	widgets/gimppluginaction.h	31;"	d
GIMP_PLUG_IN_ACTION_GET_CLASS	widgets/gimppluginaction.h	34;"	d
GIMP_PLUG_IN_CALL_INIT	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_CALL_INIT$/;"	e	enum:__anon235
GIMP_PLUG_IN_CALL_NONE	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_CALL_NONE,$/;"	e	enum:__anon235
GIMP_PLUG_IN_CALL_QUERY	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_CALL_QUERY,$/;"	e	enum:__anon235
GIMP_PLUG_IN_CALL_RUN	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_CALL_RUN,$/;"	e	enum:__anon235
GIMP_PLUG_IN_CLASS	plug-in/gimpplugin.h	34;"	d
GIMP_PLUG_IN_DEF	plug-in/gimpplugindef.h	31;"	d
GIMP_PLUG_IN_DEF_CLASS	plug-in/gimpplugindef.h	32;"	d
GIMP_PLUG_IN_ERROR	plug-in/gimppluginerror.h	30;"	d
GIMP_PLUG_IN_EXECUTION_FAILED	plug-in/gimppluginerror.h	/^  GIMP_PLUG_IN_EXECUTION_FAILED,$/;"	e	enum:__anon232
GIMP_PLUG_IN_GRAYA_IMAGE	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_GRAYA_IMAGE    = 1 << 4,$/;"	e	enum:__anon234
GIMP_PLUG_IN_GRAY_IMAGE	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_GRAY_IMAGE     = 1 << 1,$/;"	e	enum:__anon234
GIMP_PLUG_IN_INDEXEDA_IMAGE	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_INDEXEDA_IMAGE = 1 << 5$/;"	e	enum:__anon234
GIMP_PLUG_IN_INDEXED_IMAGE	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_INDEXED_IMAGE  = 1 << 2,$/;"	e	enum:__anon234
GIMP_PLUG_IN_MANAGER	plug-in/gimppluginmanager.h	29;"	d
GIMP_PLUG_IN_MANAGER_CLASS	plug-in/gimppluginmanager.h	30;"	d
GIMP_PLUG_IN_NOT_FOUND	plug-in/gimppluginerror.h	/^  GIMP_PLUG_IN_NOT_FOUND$/;"	e	enum:__anon232
GIMP_PLUG_IN_PROCEDURE	plug-in/gimppluginprocedure.h	32;"	d
GIMP_PLUG_IN_PROCEDURE_CLASS	plug-in/gimppluginprocedure.h	33;"	d
GIMP_PLUG_IN_PROCEDURE_GET_CLASS	plug-in/gimppluginprocedure.h	36;"	d
GIMP_PLUG_IN_RGBA_IMAGE	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_RGBA_IMAGE     = 1 << 3,$/;"	e	enum:__anon234
GIMP_PLUG_IN_RGB_IMAGE	plug-in/plug-in-enums.h	/^  GIMP_PLUG_IN_RGB_IMAGE      = 1 << 0,$/;"	e	enum:__anon234
GIMP_POSTERIZE_TOOL	tools/gimpposterizetool.h	27;"	d
GIMP_POSTERIZE_TOOL_CLASS	tools/gimpposterizetool.h	28;"	d
GIMP_POSTERIZE_TOOL_GET_CLASS	tools/gimpposterizetool.h	31;"	d
GIMP_PROCEDURE	pdb/gimpprocedure.h	34;"	d
GIMP_PROCEDURE_CLASS	pdb/gimpprocedure.h	35;"	d
GIMP_PROCEDURE_GET_CLASS	pdb/gimpprocedure.h	38;"	d
GIMP_PROFILE_CHOOSER_DIALOG	widgets/gimpprofilechooserdialog.h	29;"	d
GIMP_PROFILE_CHOOSER_DIALOG_CLASS	widgets/gimpprofilechooserdialog.h	30;"	d
GIMP_PROFILE_CHOOSER_DIALOG_GET_CLASS	widgets/gimpprofilechooserdialog.h	33;"	d
GIMP_PROGRESS	core/gimpprogress.h	28;"	d
GIMP_PROGRESS_BOX	widgets/gimpprogressbox.h	31;"	d
GIMP_PROGRESS_BOX_CLASS	widgets/gimpprogressbox.h	32;"	d
GIMP_PROGRESS_BOX_GET_CLASS	widgets/gimpprogressbox.h	35;"	d
GIMP_PROGRESS_DIALOG	widgets/gimpprogressdialog.h	31;"	d
GIMP_PROGRESS_DIALOG_CLASS	widgets/gimpprogressdialog.h	32;"	d
GIMP_PROGRESS_DIALOG_GET_CLASS	widgets/gimpprogressdialog.h	35;"	d
GIMP_PROGRESS_GET_INTERFACE	core/gimpprogress.h	29;"	d
GIMP_PROJECTION	core/gimpprojection.h	42;"	d
GIMP_PROJECTION_CLASS	core/gimpprojection.h	43;"	d
GIMP_PROJECTION_GET_CLASS	core/gimpprojection.h	46;"	d
GIMP_RC	config/gimprc.h	29;"	d
GIMP_RC_CLASS	config/gimprc.h	30;"	d
GIMP_RC_UNKNOWN_TOKENS	config/gimprc-unknown.c	40;"	d	file:
GIMP_RECENT_ITEM_LIST_UNREF	file/gimprecentlist.c	66;"	d	file:
GIMP_RECENT_LIST_FILE_NAME	file/gimprecentlist.c	61;"	d	file:
GIMP_RECENT_LIST_GROUP_GIMP	file/gimprecentlist.c	63;"	d	file:
GIMP_RECENT_LIST_MAX_ITEMS	file/gimprecentlist.c	62;"	d	file:
GIMP_RECTANGLE_CONSTRAIN_DRAWABLE	tools/tools-enums.h	/^  GIMP_RECTANGLE_CONSTRAIN_DRAWABLE$/;"	e	enum:__anon254
GIMP_RECTANGLE_CONSTRAIN_IMAGE	tools/tools-enums.h	/^  GIMP_RECTANGLE_CONSTRAIN_IMAGE,$/;"	e	enum:__anon254
GIMP_RECTANGLE_CONSTRAIN_NONE	tools/tools-enums.h	/^  GIMP_RECTANGLE_CONSTRAIN_NONE,$/;"	e	enum:__anon254
GIMP_RECTANGLE_GUIDE_CENTER_LINES	tools/tools-enums.h	/^  GIMP_RECTANGLE_GUIDE_CENTER_LINES,  \/*< desc="Center lines"    >*\/$/;"	e	enum:__anon253
GIMP_RECTANGLE_GUIDE_GOLDEN	tools/tools-enums.h	/^  GIMP_RECTANGLE_GUIDE_GOLDEN         \/*< desc="Golden sections" >*\/$/;"	e	enum:__anon253
GIMP_RECTANGLE_GUIDE_NONE	tools/tools-enums.h	/^  GIMP_RECTANGLE_GUIDE_NONE,          \/*< desc="No guides"       >*\/$/;"	e	enum:__anon253
GIMP_RECTANGLE_GUIDE_THIRDS	tools/tools-enums.h	/^  GIMP_RECTANGLE_GUIDE_THIRDS,        \/*< desc="Rule of thirds"  >*\/$/;"	e	enum:__anon253
GIMP_RECTANGLE_OPTIONS	tools/gimprectangleoptions.h	58;"	d
GIMP_RECTANGLE_OPTIONS_GET_INTERFACE	tools/gimprectangleoptions.h	59;"	d
GIMP_RECTANGLE_OPTIONS_GET_PRIVATE	tools/gimprectangleoptions.h	61;"	d
GIMP_RECTANGLE_OPTIONS_PROP_0	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_0,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_ASPECT_DENOMINATOR	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_ASPECT_DENOMINATOR,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_ASPECT_NUMERATOR	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_ASPECT_NUMERATOR,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_AUTO_SHRINK	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_AUTO_SHRINK,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_CENTER_X	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_CENTER_X,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_CENTER_Y	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_CENTER_Y,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_DEFAULT_ASPECT_DENOMINATOR	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_DEFAULT_ASPECT_DENOMINATOR,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_DEFAULT_ASPECT_NUMERATOR	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_DEFAULT_ASPECT_NUMERATOR,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_DEFAULT_FIXED_SIZE_HEIGHT	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_DEFAULT_FIXED_SIZE_HEIGHT,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_DEFAULT_FIXED_SIZE_WIDTH	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_DEFAULT_FIXED_SIZE_WIDTH,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_DESIRED_FIXED_HEIGHT	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_DESIRED_FIXED_HEIGHT,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_DESIRED_FIXED_SIZE_HEIGHT	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_DESIRED_FIXED_SIZE_HEIGHT,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_DESIRED_FIXED_SIZE_WIDTH	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_DESIRED_FIXED_SIZE_WIDTH,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_DESIRED_FIXED_WIDTH	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_DESIRED_FIXED_WIDTH,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_FIXED_CENTER	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_FIXED_CENTER,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_FIXED_RULE	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_FIXED_RULE,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_FIXED_RULE_ACTIVE	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_FIXED_RULE_ACTIVE,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_GUIDE	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_GUIDE,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_HEIGHT	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_HEIGHT,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_HIGHLIGHT	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_HIGHLIGHT,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_LAST	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_LAST = GIMP_RECTANGLE_OPTIONS_PROP_UNIT$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_OVERRIDDEN_FIXED_ASPECT	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_OVERRIDDEN_FIXED_ASPECT,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_OVERRIDDEN_FIXED_SIZE	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_OVERRIDDEN_FIXED_SIZE,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_SHRINK_MERGED	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_SHRINK_MERGED,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_UNIT	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_UNIT,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_WIDTH	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_WIDTH,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_X0	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_X0,$/;"	e	enum:__anon267
GIMP_RECTANGLE_OPTIONS_PROP_Y0	tools/gimprectangleoptions.h	/^  GIMP_RECTANGLE_OPTIONS_PROP_Y0,$/;"	e	enum:__anon267
GIMP_RECTANGLE_TOOL	tools/gimprectangletool.h	56;"	d
GIMP_RECTANGLE_TOOL_FIXED_ASPECT	tools/tools-enums.h	/^  GIMP_RECTANGLE_TOOL_FIXED_ASPECT, \/*< desc="Aspect ratio" >*\/$/;"	e	enum:__anon255
GIMP_RECTANGLE_TOOL_FIXED_HEIGHT	tools/tools-enums.h	/^  GIMP_RECTANGLE_TOOL_FIXED_HEIGHT, \/*< desc="Height"       >*\/$/;"	e	enum:__anon255
GIMP_RECTANGLE_TOOL_FIXED_SIZE	tools/tools-enums.h	/^  GIMP_RECTANGLE_TOOL_FIXED_SIZE,   \/*< desc="Size"         >*\/$/;"	e	enum:__anon255
GIMP_RECTANGLE_TOOL_FIXED_WIDTH	tools/tools-enums.h	/^  GIMP_RECTANGLE_TOOL_FIXED_WIDTH,  \/*< desc="Width"        >*\/$/;"	e	enum:__anon255
GIMP_RECTANGLE_TOOL_GET_INTERFACE	tools/gimprectangletool.h	57;"	d
GIMP_RECTANGLE_TOOL_GET_OPTIONS	tools/gimprectangletool.h	59;"	d
GIMP_RECTANGLE_TOOL_GET_PRIVATE	tools/gimprectangletool.c	85;"	d	file:
GIMP_RECTANGLE_TOOL_PROP_0	tools/gimprectangletool.h	/^  GIMP_RECTANGLE_TOOL_PROP_0,$/;"	e	enum:__anon292
GIMP_RECTANGLE_TOOL_PROP_CONSTRAINT	tools/gimprectangletool.h	/^  GIMP_RECTANGLE_TOOL_PROP_CONSTRAINT,$/;"	e	enum:__anon292
GIMP_RECTANGLE_TOOL_PROP_LAST	tools/gimprectangletool.h	/^  GIMP_RECTANGLE_TOOL_PROP_LAST = GIMP_RECTANGLE_TOOL_PROP_CONSTRAINT$/;"	e	enum:__anon292
GIMP_RECTANGLE_TOOL_PROP_X1	tools/gimprectangletool.h	/^  GIMP_RECTANGLE_TOOL_PROP_X1,$/;"	e	enum:__anon292
GIMP_RECTANGLE_TOOL_PROP_X2	tools/gimprectangletool.h	/^  GIMP_RECTANGLE_TOOL_PROP_X2,$/;"	e	enum:__anon292
GIMP_RECTANGLE_TOOL_PROP_Y1	tools/gimprectangletool.h	/^  GIMP_RECTANGLE_TOOL_PROP_Y1,$/;"	e	enum:__anon292
GIMP_RECTANGLE_TOOL_PROP_Y2	tools/gimprectangletool.h	/^  GIMP_RECTANGLE_TOOL_PROP_Y2,$/;"	e	enum:__anon292
GIMP_RECT_SELECT_MODE_FIXED_RATIO	tools/tools-enums.h	/^  GIMP_RECT_SELECT_MODE_FIXED_RATIO  \/*< desc="Fixed aspect ratio" >*\/$/;"	e	enum:__anon256
GIMP_RECT_SELECT_MODE_FIXED_SIZE	tools/tools-enums.h	/^  GIMP_RECT_SELECT_MODE_FIXED_SIZE,  \/*< desc="Fixed size"         >*\/$/;"	e	enum:__anon256
GIMP_RECT_SELECT_MODE_FREE	tools/tools-enums.h	/^  GIMP_RECT_SELECT_MODE_FREE,        \/*< desc="Free select"        >*\/$/;"	e	enum:__anon256
GIMP_RECT_SELECT_OPTIONS	tools/gimprectangleselectoptions.h	27;"	d
GIMP_RECT_SELECT_OPTIONS_CLASS	tools/gimprectangleselectoptions.h	28;"	d
GIMP_RECT_SELECT_OPTIONS_GET_CLASS	tools/gimprectangleselectoptions.h	31;"	d
GIMP_RECT_SELECT_TOOL	tools/gimprectangleselecttool.h	27;"	d
GIMP_RECT_SELECT_TOOL_CLASS	tools/gimprectangleselecttool.h	28;"	d
GIMP_RECT_SELECT_TOOL_GET_CLASS	tools/gimprectangleselecttool.h	31;"	d
GIMP_RECT_SELECT_TOOL_GET_OPTIONS	tools/gimprectangleselecttool.h	33;"	d
GIMP_RED_HUES	base/base-enums.h	/^  GIMP_RED_HUES,$/;"	e	enum:__anon12
GIMP_REGION_SELECT_TOOL	tools/gimpregionselecttool.h	29;"	d
GIMP_REGION_SELECT_TOOL_CLASS	tools/gimpregionselecttool.h	30;"	d
GIMP_REGION_SELECT_TOOL_GET_CLASS	tools/gimpregionselecttool.h	33;"	d
GIMP_RENDER_BUF_HEIGHT	widgets/gimprender.h	24;"	d
GIMP_RENDER_BUF_WIDTH	widgets/gimprender.h	23;"	d
GIMP_REPLACE_MODE	base/base-enums.h	/^  GIMP_REPLACE_MODE,         \/*< pdb-skip, desc="Replace"    >*\/$/;"	e	enum:__anon11
GIMP_REUSE_PALETTE	core/core-enums.h	/^  GIMP_REUSE_PALETTE,   \/*< skip >*\/$/;"	e	enum:__anon62
GIMP_ROTATE_180	core/core-enums.h	/^  GIMP_ROTATE_180,$/;"	e	enum:__anon75
GIMP_ROTATE_270	core/core-enums.h	/^  GIMP_ROTATE_270$/;"	e	enum:__anon75
GIMP_ROTATE_90	core/core-enums.h	/^  GIMP_ROTATE_90,$/;"	e	enum:__anon75
GIMP_ROTATE_TOOL	tools/gimprotatetool.h	27;"	d
GIMP_ROTATE_TOOL_CLASS	tools/gimprotatetool.h	28;"	d
GIMP_ROTATE_TOOL_GET_CLASS	tools/gimprotatetool.h	31;"	d
GIMP_SAMPLE_POINT_DRAW_SIZE	core/gimpsamplepoint.h	23;"	d
GIMP_SAMPLE_POINT_EDITOR	widgets/gimpsamplepointeditor.h	30;"	d
GIMP_SAMPLE_POINT_EDITOR_CLASS	widgets/gimpsamplepointeditor.h	31;"	d
GIMP_SAMPLE_POINT_EDITOR_GET_CLASS	widgets/gimpsamplepointeditor.h	34;"	d
GIMP_SAMPLE_POINT_UNDO	core/gimpsamplepointundo.h	27;"	d
GIMP_SAMPLE_POINT_UNDO_CLASS	core/gimpsamplepointundo.h	28;"	d
GIMP_SAMPLE_POINT_UNDO_GET_CLASS	core/gimpsamplepointundo.h	31;"	d
GIMP_SATURATION_MODE	base/base-enums.h	/^  GIMP_SATURATION_MODE,      \/*< desc="Saturation"           >*\/$/;"	e	enum:__anon11
GIMP_SAVE_MODE_SAVE	actions/actions-types.h	/^  GIMP_SAVE_MODE_SAVE,$/;"	e	enum:__anon4
GIMP_SAVE_MODE_SAVE_AND_CLOSE	actions/actions-types.h	/^  GIMP_SAVE_MODE_SAVE_AND_CLOSE$/;"	e	enum:__anon4
GIMP_SAVE_MODE_SAVE_AS	actions/actions-types.h	/^  GIMP_SAVE_MODE_SAVE_AS,$/;"	e	enum:__anon4
GIMP_SAVE_MODE_SAVE_A_COPY	actions/actions-types.h	/^  GIMP_SAVE_MODE_SAVE_A_COPY,$/;"	e	enum:__anon4
GIMP_SCALE_COMBO_BOX	display/gimpscalecombobox.h	29;"	d
GIMP_SCALE_COMBO_BOX_CLASS	display/gimpscalecombobox.h	30;"	d
GIMP_SCALE_COMBO_BOX_GET_CLASS	display/gimpscalecombobox.h	33;"	d
GIMP_SCALE_TOOL	tools/gimpscaletool.h	27;"	d
GIMP_SCALE_TOOL_CLASS	tools/gimpscaletool.h	28;"	d
GIMP_SCALE_TOOL_GET_CLASS	tools/gimpscaletool.h	30;"	d
GIMP_SCREEN_MODE	base/base-enums.h	/^  GIMP_SCREEN_MODE,          \/*< desc="Screen"               >*\/$/;"	e	enum:__anon11
GIMP_SELECTION	core/gimpselection.h	27;"	d
GIMP_SELECTION_CLASS	core/gimpselection.h	28;"	d
GIMP_SELECTION_EDITOR	widgets/gimpselectioneditor.h	27;"	d
GIMP_SELECTION_EDITOR_CLASS	widgets/gimpselectioneditor.h	28;"	d
GIMP_SELECTION_EDITOR_GET_CLASS	widgets/gimpselectioneditor.h	31;"	d
GIMP_SELECTION_GET_CLASS	core/gimpselection.h	31;"	d
GIMP_SELECTION_LAYER_OFF	core/core-enums.h	/^  GIMP_SELECTION_LAYER_OFF,$/;"	e	enum:__anon78
GIMP_SELECTION_OFF	core/core-enums.h	/^  GIMP_SELECTION_OFF,$/;"	e	enum:__anon78
GIMP_SELECTION_ON	core/core-enums.h	/^  GIMP_SELECTION_ON,$/;"	e	enum:__anon78
GIMP_SELECTION_OPTIONS	tools/gimpselectionoptions.h	27;"	d
GIMP_SELECTION_OPTIONS_CLASS	tools/gimpselectionoptions.h	28;"	d
GIMP_SELECTION_OPTIONS_GET_CLASS	tools/gimpselectionoptions.h	31;"	d
GIMP_SELECTION_PAUSE	core/core-enums.h	/^  GIMP_SELECTION_PAUSE,$/;"	e	enum:__anon78
GIMP_SELECTION_RESUME	core/core-enums.h	/^  GIMP_SELECTION_RESUME$/;"	e	enum:__anon78
GIMP_SELECTION_TOOL	tools/gimpselectiontool.h	27;"	d
GIMP_SELECTION_TOOL_CLASS	tools/gimpselectiontool.h	28;"	d
GIMP_SELECTION_TOOL_GET_CLASS	tools/gimpselectiontool.h	31;"	d
GIMP_SELECTION_TOOL_GET_OPTIONS	tools/gimpselectiontool.h	33;"	d
GIMP_SELECT_CRITERION_B	core/core-enums.h	/^  GIMP_SELECT_CRITERION_B,          \/*< desc="Blue"       >*\/$/;"	e	enum:__anon90
GIMP_SELECT_CRITERION_COMPOSITE	core/core-enums.h	/^  GIMP_SELECT_CRITERION_COMPOSITE,  \/*< desc="Composite"  >*\/$/;"	e	enum:__anon90
GIMP_SELECT_CRITERION_G	core/core-enums.h	/^  GIMP_SELECT_CRITERION_G,          \/*< desc="Green"      >*\/$/;"	e	enum:__anon90
GIMP_SELECT_CRITERION_H	core/core-enums.h	/^  GIMP_SELECT_CRITERION_H,          \/*< desc="Hue"        >*\/$/;"	e	enum:__anon90
GIMP_SELECT_CRITERION_R	core/core-enums.h	/^  GIMP_SELECT_CRITERION_R,          \/*< desc="Red"        >*\/$/;"	e	enum:__anon90
GIMP_SELECT_CRITERION_S	core/core-enums.h	/^  GIMP_SELECT_CRITERION_S,          \/*< desc="Saturation" >*\/$/;"	e	enum:__anon90
GIMP_SELECT_CRITERION_V	core/core-enums.h	/^  GIMP_SELECT_CRITERION_V           \/*< desc="Value"      >*\/$/;"	e	enum:__anon90
GIMP_SHARPEN_CONVOLVE	paint/paint-enums.h	/^  GIMP_SHARPEN_CONVOLVE,  \/*< desc="Sharpen" >*\/$/;"	e	enum:__anon216
GIMP_SHEAR_TOOL	tools/gimpsheartool.h	27;"	d
GIMP_SHEAR_TOOL_CLASS	tools/gimpsheartool.h	28;"	d
GIMP_SHEAR_TOOL_GET_CLASS	tools/gimpsheartool.h	31;"	d
GIMP_SIZE_BOX	widgets/gimpsizebox.h	29;"	d
GIMP_SIZE_BOX_CLASS	widgets/gimpsizebox.h	30;"	d
GIMP_SIZE_BOX_GET_CLASS	widgets/gimpsizebox.h	33;"	d
GIMP_SIZE_BOX_GET_PRIVATE	widgets/gimpsizebox.c	56;"	d	file:
GIMP_SMUDGE	paint/gimpsmudge.h	29;"	d
GIMP_SMUDGE_CLASS	paint/gimpsmudge.h	30;"	d
GIMP_SMUDGE_GET_CLASS	paint/gimpsmudge.h	33;"	d
GIMP_SMUDGE_OPTIONS	paint/gimpsmudgeoptions.h	27;"	d
GIMP_SMUDGE_OPTIONS_CLASS	paint/gimpsmudgeoptions.h	28;"	d
GIMP_SMUDGE_OPTIONS_GET_CLASS	paint/gimpsmudgeoptions.h	31;"	d
GIMP_SMUDGE_TOOL	tools/gimpsmudgetool.h	27;"	d
GIMP_SMUDGE_TOOL_CLASS	tools/gimpsmudgetool.h	28;"	d
GIMP_SMUDGE_TOOL_GET_CLASS	tools/gimpsmudgetool.h	31;"	d
GIMP_SOFTLIGHT_MODE	base/base-enums.h	/^  GIMP_SOFTLIGHT_MODE,       \/*< desc="Soft light"           >*\/$/;"	e	enum:__anon11
GIMP_SOURCE_ALIGN_FIXED	paint/paint-enums.h	/^  GIMP_SOURCE_ALIGN_FIXED        \/*< desc="Fixed"       >*\/$/;"	e	enum:__anon215
GIMP_SOURCE_ALIGN_NO	paint/paint-enums.h	/^  GIMP_SOURCE_ALIGN_NO,          \/*< desc="None"        >*\/$/;"	e	enum:__anon215
GIMP_SOURCE_ALIGN_REGISTERED	paint/paint-enums.h	/^  GIMP_SOURCE_ALIGN_REGISTERED,  \/*< desc="Registered"  >*\/$/;"	e	enum:__anon215
GIMP_SOURCE_ALIGN_YES	paint/paint-enums.h	/^  GIMP_SOURCE_ALIGN_YES,         \/*< desc="Aligned"     >*\/$/;"	e	enum:__anon215
GIMP_SOURCE_CORE	paint/gimpsourcecore.h	27;"	d
GIMP_SOURCE_CORE_CLASS	paint/gimpsourcecore.h	28;"	d
GIMP_SOURCE_CORE_GET_CLASS	paint/gimpsourcecore.h	31;"	d
GIMP_SOURCE_OPTIONS	paint/gimpsourceoptions.h	27;"	d
GIMP_SOURCE_OPTIONS_CLASS	paint/gimpsourceoptions.h	28;"	d
GIMP_SOURCE_OPTIONS_GET_CLASS	paint/gimpsourceoptions.h	31;"	d
GIMP_SOURCE_TOOL	tools/gimpsourcetool.h	27;"	d
GIMP_SOURCE_TOOL_CLASS	tools/gimpsourcetool.h	28;"	d
GIMP_SOURCE_TOOL_GET_CLASS	tools/gimpsourcetool.h	31;"	d
GIMP_SOURCE_TOOL_GET_OPTIONS	tools/gimpsourcetool.h	33;"	d
GIMP_SPACE_BAR_ACTION_MOVE	display/display-enums.h	/^  GIMP_SPACE_BAR_ACTION_MOVE   \/*< desc="Switch to Move tool" >*\/$/;"	e	enum:__anon187
GIMP_SPACE_BAR_ACTION_NONE	display/display-enums.h	/^  GIMP_SPACE_BAR_ACTION_NONE,  \/*< desc="No action"           >*\/$/;"	e	enum:__anon187
GIMP_SPACE_BAR_ACTION_PAN	display/display-enums.h	/^  GIMP_SPACE_BAR_ACTION_PAN,   \/*< desc="Pan view"            >*\/$/;"	e	enum:__anon187
GIMP_STATUSBAR	display/gimpstatusbar.h	31;"	d
GIMP_STATUSBAR_CLASS	display/gimpstatusbar.h	32;"	d
GIMP_STATUSBAR_GET_CLASS	display/gimpstatusbar.h	35;"	d
GIMP_STRING_ACTION	widgets/gimpstringaction.h	30;"	d
GIMP_STRING_ACTION_CLASS	widgets/gimpstringaction.h	31;"	d
GIMP_STRING_ACTION_GET_CLASS	widgets/gimpstringaction.h	34;"	d
GIMP_STROKE	vectors/gimpstroke.h	29;"	d
GIMP_STROKE_CLASS	vectors/gimpstroke.h	30;"	d
GIMP_STROKE_DESC	core/gimpstrokedesc.h	30;"	d
GIMP_STROKE_DESC_CLASS	core/gimpstrokedesc.h	31;"	d
GIMP_STROKE_DESC_GET_CLASS	core/gimpstrokedesc.h	34;"	d
GIMP_STROKE_EDITOR	widgets/gimpstrokeeditor.h	30;"	d
GIMP_STROKE_EDITOR_CLASS	widgets/gimpstrokeeditor.h	31;"	d
GIMP_STROKE_EDITOR_GET_CLASS	widgets/gimpstrokeeditor.h	34;"	d
GIMP_STROKE_GET_CLASS	vectors/gimpstroke.h	33;"	d
GIMP_STROKE_METHOD_LIBART	core/core-enums.h	/^  GIMP_STROKE_METHOD_LIBART,     \/*< desc="Stroke line"              >*\/$/;"	e	enum:__anon67
GIMP_STROKE_METHOD_PAINT_CORE	core/core-enums.h	/^  GIMP_STROKE_METHOD_PAINT_CORE  \/*< desc="Stroke with a paint tool" >*\/$/;"	e	enum:__anon67
GIMP_STROKE_OPTIONS	core/gimpstrokeoptions.h	30;"	d
GIMP_STROKE_OPTIONS_CLASS	core/gimpstrokeoptions.h	31;"	d
GIMP_STROKE_OPTIONS_GET_CLASS	core/gimpstrokeoptions.h	34;"	d
GIMP_STROKE_STYLE_PATTERN	core/core-enums.h	/^  GIMP_STROKE_STYLE_PATTERN \/*< desc="Pattern"     >*\/$/;"	e	enum:__anon68
GIMP_STROKE_STYLE_SOLID	core/core-enums.h	/^  GIMP_STROKE_STYLE_SOLID,  \/*< desc="Solid color" >*\/$/;"	e	enum:__anon68
GIMP_SUBTRACT_MODE	base/base-enums.h	/^  GIMP_SUBTRACT_MODE,        \/*< desc="Subtract"             >*\/$/;"	e	enum:__anon11
GIMP_SUB_PROGRESS	core/gimpsubprogress.h	24;"	d
GIMP_SUB_PROGRESS_CLASS	core/gimpsubprogress.h	25;"	d
GIMP_SUB_PROGRESS_GET_CLASS	core/gimpsubprogress.h	28;"	d
GIMP_TAB_STYLE_BLURB	widgets/widgets-enums.h	/^  GIMP_TAB_STYLE_BLURB,         \/*< desc="Description"    >*\/$/;"	e	enum:__anon406
GIMP_TAB_STYLE_ICON	widgets/widgets-enums.h	/^  GIMP_TAB_STYLE_ICON,          \/*< desc="Icon"           >*\/$/;"	e	enum:__anon406
GIMP_TAB_STYLE_ICON_BLURB	widgets/widgets-enums.h	/^  GIMP_TAB_STYLE_ICON_BLURB,    \/*< desc="Icon & desc"    >*\/$/;"	e	enum:__anon406
GIMP_TAB_STYLE_ICON_NAME	widgets/widgets-enums.h	/^  GIMP_TAB_STYLE_ICON_NAME,     \/*< desc="Icon & text"    >*\/$/;"	e	enum:__anon406
GIMP_TAB_STYLE_NAME	widgets/widgets-enums.h	/^  GIMP_TAB_STYLE_NAME,          \/*< desc="Text"           >*\/$/;"	e	enum:__anon406
GIMP_TAB_STYLE_PREVIEW	widgets/widgets-enums.h	/^  GIMP_TAB_STYLE_PREVIEW,       \/*< desc="Current status" >*\/$/;"	e	enum:__anon406
GIMP_TAB_STYLE_PREVIEW_BLURB	widgets/widgets-enums.h	/^  GIMP_TAB_STYLE_PREVIEW_BLURB  \/*< desc="Status & desc"  >*\/$/;"	e	enum:__anon406
GIMP_TAB_STYLE_PREVIEW_NAME	widgets/widgets-enums.h	/^  GIMP_TAB_STYLE_PREVIEW_NAME,  \/*< desc="Status & text"  >*\/$/;"	e	enum:__anon406
GIMP_TARGET_BRUSH	widgets/gimpdnd.h	68;"	d
GIMP_TARGET_BUFFER	widgets/gimpdnd.h	83;"	d
GIMP_TARGET_CHANNEL	widgets/gimpdnd.h	59;"	d
GIMP_TARGET_COLOR	widgets/gimpdnd.h	35;"	d
GIMP_TARGET_COMPONENT	widgets/gimpdnd.h	53;"	d
GIMP_TARGET_DIALOG	widgets/gimpdnd.h	95;"	d
GIMP_TARGET_FONT	widgets/gimpdnd.h	80;"	d
GIMP_TARGET_GRADIENT	widgets/gimpdnd.h	74;"	d
GIMP_TARGET_IMAGE	widgets/gimpdnd.h	50;"	d
GIMP_TARGET_IMAGEFILE	widgets/gimpdnd.h	86;"	d
GIMP_TARGET_LAYER	widgets/gimpdnd.h	56;"	d
GIMP_TARGET_LAYER_MASK	widgets/gimpdnd.h	62;"	d
GIMP_TARGET_NETSCAPE_URL	widgets/gimpdnd.h	29;"	d
GIMP_TARGET_PALETTE	widgets/gimpdnd.h	77;"	d
GIMP_TARGET_PATTERN	widgets/gimpdnd.h	71;"	d
GIMP_TARGET_PIXBUF	widgets/gimpdnd.h	47;"	d
GIMP_TARGET_SVG	widgets/gimpdnd.h	38;"	d
GIMP_TARGET_SVG_XML	widgets/gimpdnd.h	41;"	d
GIMP_TARGET_TEMPLATE	widgets/gimpdnd.h	89;"	d
GIMP_TARGET_TEXT_PLAIN	widgets/gimpdnd.h	26;"	d
GIMP_TARGET_TOOL_INFO	widgets/gimpdnd.h	92;"	d
GIMP_TARGET_URI_LIST	widgets/gimpdnd.h	23;"	d
GIMP_TARGET_VECTORS	widgets/gimpdnd.h	65;"	d
GIMP_TARGET_XDS	widgets/gimpdnd.h	32;"	d
GIMP_TEMPLATE	core/gimptemplate.h	30;"	d
GIMP_TEMPLATE_CLASS	core/gimptemplate.h	31;"	d
GIMP_TEMPLATE_EDITOR	widgets/gimptemplateeditor.h	30;"	d
GIMP_TEMPLATE_EDITOR_CLASS	widgets/gimptemplateeditor.h	31;"	d
GIMP_TEMPLATE_EDITOR_GET_CLASS	widgets/gimptemplateeditor.h	34;"	d
GIMP_TEMPLATE_GET_CLASS	core/gimptemplate.h	34;"	d
GIMP_TEMPLATE_VIEW	widgets/gimptemplateview.h	30;"	d
GIMP_TEMPLATE_VIEW_CLASS	widgets/gimptemplateview.h	31;"	d
GIMP_TEMPLATE_VIEW_GET_CLASS	widgets/gimptemplateview.h	34;"	d
GIMP_TEMPORARY_PROCEDURE	plug-in/gimptemporaryprocedure.h	29;"	d
GIMP_TEMPORARY_PROCEDURE_CLASS	plug-in/gimptemporaryprocedure.h	30;"	d
GIMP_TEMPORARY_PROCEDURE_GET_CLASS	plug-in/gimptemporaryprocedure.h	33;"	d
GIMP_TEXT	text/gimptext.h	31;"	d
GIMP_TEXT_BOX_DYNAMIC	text/text-enums.h	/^  GIMP_TEXT_BOX_DYNAMIC,$/;"	e	enum:__anon239
GIMP_TEXT_BOX_FIXED	text/text-enums.h	/^  GIMP_TEXT_BOX_FIXED$/;"	e	enum:__anon239
GIMP_TEXT_CLASS	text/gimptext.h	32;"	d
GIMP_TEXT_DIRECTION_LTR	text/text-enums.h	/^  GIMP_TEXT_DIRECTION_LTR,   \/*< desc="From left to right" >*\/$/;"	e	enum:__anon240
GIMP_TEXT_DIRECTION_RTL	text/text-enums.h	/^  GIMP_TEXT_DIRECTION_RTL    \/*< desc="From right to left" >*\/$/;"	e	enum:__anon240
GIMP_TEXT_EDITOR	widgets/gimptexteditor.h	27;"	d
GIMP_TEXT_GET_CLASS	text/gimptext.h	35;"	d
GIMP_TEXT_JUSTIFY_CENTER	text/text-enums.h	/^  GIMP_TEXT_JUSTIFY_CENTER,  \/*< desc="Centered"        >*\/$/;"	e	enum:__anon241
GIMP_TEXT_JUSTIFY_FILL	text/text-enums.h	/^  GIMP_TEXT_JUSTIFY_FILL     \/*< desc="Filled"          >*\/$/;"	e	enum:__anon241
GIMP_TEXT_JUSTIFY_LEFT	text/text-enums.h	/^  GIMP_TEXT_JUSTIFY_LEFT,    \/*< desc="Left justified"  >*\/$/;"	e	enum:__anon241
GIMP_TEXT_JUSTIFY_RIGHT	text/text-enums.h	/^  GIMP_TEXT_JUSTIFY_RIGHT,   \/*< desc="Right justified" >*\/$/;"	e	enum:__anon241
GIMP_TEXT_LAYER	text/gimptextlayer.h	30;"	d
GIMP_TEXT_LAYER_CLASS	text/gimptextlayer.h	31;"	d
GIMP_TEXT_LAYER_GET_CLASS	text/gimptextlayer.h	34;"	d
GIMP_TEXT_LAYOUT	text/gimptextlayout.h	27;"	d
GIMP_TEXT_OPTIONS	tools/gimptextoptions.h	27;"	d
GIMP_TEXT_OPTIONS_CLASS	tools/gimptextoptions.h	28;"	d
GIMP_TEXT_OPTIONS_GET_CLASS	tools/gimptextoptions.h	31;"	d
GIMP_TEXT_OUTLINE_NONE	text/text-enums.h	/^  GIMP_TEXT_OUTLINE_NONE,$/;"	e	enum:__anon242
GIMP_TEXT_OUTLINE_STROKE_FILL	text/text-enums.h	/^  GIMP_TEXT_OUTLINE_STROKE_FILL$/;"	e	enum:__anon242
GIMP_TEXT_OUTLINE_STROKE_ONLY	text/text-enums.h	/^  GIMP_TEXT_OUTLINE_STROKE_ONLY,$/;"	e	enum:__anon242
GIMP_TEXT_PANGRAM	text/gimpfont.c	42;"	d	file:
GIMP_TEXT_TOOL	tools/gimptexttool.h	27;"	d
GIMP_TEXT_TOOL_CLASS	tools/gimptexttool.h	29;"	d
GIMP_TEXT_TOOL_GET_OPTIONS	tools/gimptexttool.h	32;"	d
GIMP_TEXT_UNDO	text/gimptextundo.h	27;"	d
GIMP_TEXT_UNDO_CLASS	text/gimptextundo.h	28;"	d
GIMP_TEXT_UNDO_GET_CLASS	text/gimptextundo.h	31;"	d
GIMP_THRESHOLD_TOOL	tools/gimpthresholdtool.h	27;"	d
GIMP_THRESHOLD_TOOL_CLASS	tools/gimpthresholdtool.h	28;"	d
GIMP_THRESHOLD_TOOL_GET_CLASS	tools/gimpthresholdtool.h	31;"	d
GIMP_THUMBNAIL_SIZE_LARGE	core/core-enums.h	/^  GIMP_THUMBNAIL_SIZE_LARGE   = 256   \/*< desc="Large (256x256)"  >*\/$/;"	e	enum:__anon79
GIMP_THUMBNAIL_SIZE_NONE	core/core-enums.h	/^  GIMP_THUMBNAIL_SIZE_NONE    = 0,    \/*< desc="No thumbnails"    >*\/$/;"	e	enum:__anon79
GIMP_THUMBNAIL_SIZE_NORMAL	core/core-enums.h	/^  GIMP_THUMBNAIL_SIZE_NORMAL  = 128,  \/*< desc="Normal (128x128)" >*\/$/;"	e	enum:__anon79
GIMP_THUMB_BOX	widgets/gimpthumbbox.h	24;"	d
GIMP_THUMB_BOX_CLASS	widgets/gimpthumbbox.h	25;"	d
GIMP_THUMB_BOX_GET_CLASS	widgets/gimpthumbbox.h	28;"	d
GIMP_TOOL	tools/gimptool.h	27;"	d
GIMP_TOOLBOX	widgets/gimptoolbox.h	27;"	d
GIMP_TOOLBOX_CLASS	widgets/gimptoolbox.h	28;"	d
GIMP_TOOLBOX_GET_CLASS	widgets/gimptoolbox.h	31;"	d
GIMP_TOOL_ACTION_HALT	tools/tools-enums.h	/^  GIMP_TOOL_ACTION_HALT$/;"	e	enum:__anon262
GIMP_TOOL_ACTION_PAUSE	tools/tools-enums.h	/^  GIMP_TOOL_ACTION_PAUSE,$/;"	e	enum:__anon262
GIMP_TOOL_ACTION_RESUME	tools/tools-enums.h	/^  GIMP_TOOL_ACTION_RESUME,$/;"	e	enum:__anon262
GIMP_TOOL_CLASS	tools/gimptool.h	28;"	d
GIMP_TOOL_CONTROL	tools/gimptoolcontrol.h	27;"	d
GIMP_TOOL_CONTROL_CLASS	tools/gimptoolcontrol.h	28;"	d
GIMP_TOOL_CONTROL_GET_CLASS	tools/gimptoolcontrol.h	31;"	d
GIMP_TOOL_CURSOR_AIRBRUSH	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_AIRBRUSH,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_BLEND	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_BLEND,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_BLUR	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_BLUR,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_BUCKET_FILL	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_BUCKET_FILL,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_BURN	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_BURN,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_CLONE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_CLONE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_COLOR_PICKER	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_COLOR_PICKER,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_CROP	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_CROP,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_DODGE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_DODGE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_ELLIPSE_SELECT	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_ELLIPSE_SELECT,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_ERASER	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_ERASER,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_FLIP_HORIZONTAL	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_FLIP_HORIZONTAL,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_FLIP_VERTICAL	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_FLIP_VERTICAL,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_FREE_SELECT	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_FREE_SELECT,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_FUZZY_SELECT	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_FUZZY_SELECT,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_HAND	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_HAND,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_HEAL	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_HEAL,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_INK	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_INK,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_ISCISSORS	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_ISCISSORS,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_LAST	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_LAST$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_MEASURE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_MEASURE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_MOVE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_MOVE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_NONE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_NONE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_PAINTBRUSH	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_PAINTBRUSH,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_PATHS	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_PATHS,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_PATHS_ANCHOR	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_PATHS_ANCHOR,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_PATHS_CONTROL	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_PATHS_CONTROL,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_PATHS_SEGMENT	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_PATHS_SEGMENT,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_PENCIL	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_PENCIL,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_PERSPECTIVE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_PERSPECTIVE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_RECT_SELECT	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_RECT_SELECT,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_RESIZE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_RESIZE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_ROTATE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_ROTATE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_SHEAR	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_SHEAR,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_SMUDGE	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_SMUDGE,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_TEXT	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_TEXT,$/;"	e	enum:__anon413
GIMP_TOOL_CURSOR_ZOOM	widgets/widgets-enums.h	/^  GIMP_TOOL_CURSOR_ZOOM,$/;"	e	enum:__anon413
GIMP_TOOL_DIALOG	widgets/gimptooldialog.h	29;"	d
GIMP_TOOL_DIALOG_CLASS	widgets/gimptooldialog.h	30;"	d
GIMP_TOOL_DIALOG_GET_CLASS	widgets/gimptooldialog.h	33;"	d
GIMP_TOOL_GET_CLASS	tools/gimptool.h	31;"	d
GIMP_TOOL_GET_OPTIONS	tools/gimptool.h	33;"	d
GIMP_TOOL_INFO	core/gimptoolinfo.h	27;"	d
GIMP_TOOL_INFO_CLASS	core/gimptoolinfo.h	28;"	d
GIMP_TOOL_INFO_GET_CLASS	core/gimptoolinfo.h	31;"	d
GIMP_TOOL_OPTIONS	core/gimptooloptions.h	27;"	d
GIMP_TOOL_OPTIONS_CLASS	core/gimptooloptions.h	28;"	d
GIMP_TOOL_OPTIONS_EDITOR	widgets/gimptooloptionseditor.h	30;"	d
GIMP_TOOL_OPTIONS_EDITOR_CLASS	widgets/gimptooloptionseditor.h	31;"	d
GIMP_TOOL_OPTIONS_EDITOR_GET_CLASS	widgets/gimptooloptionseditor.h	34;"	d
GIMP_TOOL_OPTIONS_GET_CLASS	core/gimptooloptions.h	31;"	d
GIMP_TOOL_PRESETS	core/gimptoolpresets.h	30;"	d
GIMP_TOOL_PRESETS_CLASS	core/gimptoolpresets.h	31;"	d
GIMP_TOOL_PRESETS_GET_CLASS	core/gimptoolpresets.h	34;"	d
GIMP_TOOL_VIEW	widgets/gimptoolview.h	30;"	d
GIMP_TOOL_VIEW_CLASS	widgets/gimptoolview.h	31;"	d
GIMP_TOOL_VIEW_GET_CLASS	widgets/gimptoolview.h	34;"	d
GIMP_TRANSFORM_GRID_TYPE_N_LINES	tools/tools-enums.h	/^  GIMP_TRANSFORM_GRID_TYPE_N_LINES,  \/*< desc="Number of grid lines" >*\/$/;"	e	enum:__anon259
GIMP_TRANSFORM_GRID_TYPE_SPACING	tools/tools-enums.h	/^  GIMP_TRANSFORM_GRID_TYPE_SPACING   \/*< desc="Grid line spacing"    >*\/$/;"	e	enum:__anon259
GIMP_TRANSFORM_OPTIONS	tools/gimptransformoptions.h	27;"	d
GIMP_TRANSFORM_OPTIONS_CLASS	tools/gimptransformoptions.h	28;"	d
GIMP_TRANSFORM_OPTIONS_GET_CLASS	tools/gimptransformoptions.h	31;"	d
GIMP_TRANSFORM_PREVIEW_TYPE_GRID	tools/tools-enums.h	/^  GIMP_TRANSFORM_PREVIEW_TYPE_GRID,        \/*< desc="Grid"         >*\/$/;"	e	enum:__anon258
GIMP_TRANSFORM_PREVIEW_TYPE_IMAGE	tools/tools-enums.h	/^  GIMP_TRANSFORM_PREVIEW_TYPE_IMAGE,       \/*< desc="Image"        >*\/$/;"	e	enum:__anon258
GIMP_TRANSFORM_PREVIEW_TYPE_IMAGE_GRID	tools/tools-enums.h	/^  GIMP_TRANSFORM_PREVIEW_TYPE_IMAGE_GRID   \/*< desc="Image + Grid" >*\/$/;"	e	enum:__anon258
GIMP_TRANSFORM_PREVIEW_TYPE_OUTLINE	tools/tools-enums.h	/^  GIMP_TRANSFORM_PREVIEW_TYPE_OUTLINE,     \/*< desc="Outline"      >*\/$/;"	e	enum:__anon258
GIMP_TRANSFORM_TOOL	tools/gimptransformtool.h	34;"	d
GIMP_TRANSFORM_TOOL_CLASS	tools/gimptransformtool.h	35;"	d
GIMP_TRANSFORM_TOOL_GET_CLASS	tools/gimptransformtool.h	38;"	d
GIMP_TRANSFORM_TOOL_GET_OPTIONS	tools/gimptransformtool.h	40;"	d
GIMP_TRANSFORM_TOOL_UNDO	tools/gimptransformtoolundo.h	27;"	d
GIMP_TRANSFORM_TOOL_UNDO_CLASS	tools/gimptransformtoolundo.h	28;"	d
GIMP_TRANSFORM_TOOL_UNDO_GET_CLASS	tools/gimptransformtoolundo.h	31;"	d
GIMP_TRANSFORM_TYPE_LAYER	tools/tools-enums.h	/^  GIMP_TRANSFORM_TYPE_LAYER,     \/*< desc="Layer"     >*\/$/;"	e	enum:__anon257
GIMP_TRANSFORM_TYPE_PATH	tools/tools-enums.h	/^  GIMP_TRANSFORM_TYPE_PATH       \/*< desc="Path"      >*\/$/;"	e	enum:__anon257
GIMP_TRANSFORM_TYPE_SELECTION	tools/tools-enums.h	/^  GIMP_TRANSFORM_TYPE_SELECTION, \/*< desc="Selection" >*\/$/;"	e	enum:__anon257
GIMP_TRANSLATE_MODE_CHANNEL	tools/tools-enums.h	/^  GIMP_TRANSLATE_MODE_CHANNEL,$/;"	e	enum:__anon263
GIMP_TRANSLATE_MODE_FLOATING_SEL	tools/tools-enums.h	/^  GIMP_TRANSLATE_MODE_FLOATING_SEL$/;"	e	enum:__anon263
GIMP_TRANSLATE_MODE_LAYER	tools/tools-enums.h	/^  GIMP_TRANSLATE_MODE_LAYER,$/;"	e	enum:__anon263
GIMP_TRANSLATE_MODE_LAYER_MASK	tools/tools-enums.h	/^  GIMP_TRANSLATE_MODE_LAYER_MASK,$/;"	e	enum:__anon263
GIMP_TRANSLATE_MODE_MASK	tools/tools-enums.h	/^  GIMP_TRANSLATE_MODE_MASK,$/;"	e	enum:__anon263
GIMP_TRANSLATE_MODE_MASK_COPY_TO_LAYER	tools/tools-enums.h	/^  GIMP_TRANSLATE_MODE_MASK_COPY_TO_LAYER,$/;"	e	enum:__anon263
GIMP_TRANSLATE_MODE_MASK_TO_LAYER	tools/tools-enums.h	/^  GIMP_TRANSLATE_MODE_MASK_TO_LAYER,$/;"	e	enum:__anon263
GIMP_TRANSLATE_MODE_VECTORS	tools/tools-enums.h	/^  GIMP_TRANSLATE_MODE_VECTORS,$/;"	e	enum:__anon263
GIMP_TRANSPARENT_FILL	core/core-enums.h	/^  GIMP_TRANSPARENT_FILL,  \/*< desc="Transparency"     >*\/$/;"	e	enum:__anon66
GIMP_TYPE_ACTION	widgets/gimpaction.h	29;"	d
GIMP_TYPE_ACTION_FACTORY	widgets/gimpactionfactory.h	41;"	d
GIMP_TYPE_ACTION_GROUP	widgets/gimpactiongroup.h	28;"	d
GIMP_TYPE_ACTION_VIEW	widgets/gimpactionview.h	42;"	d
GIMP_TYPE_ACTIVE_COLOR	widgets/widgets-enums.h	27;"	d
GIMP_TYPE_AIRBRUSH	paint/gimpairbrush.h	26;"	d
GIMP_TYPE_AIRBRUSH_OPTIONS	paint/gimpairbrushoptions.h	26;"	d
GIMP_TYPE_AIRBRUSH_TOOL	tools/gimpairbrushtool.h	26;"	d
GIMP_TYPE_ALIGNMENT	core/core-enums.h	98;"	d
GIMP_TYPE_ALIGN_OPTIONS	tools/gimpalignoptions.h	26;"	d
GIMP_TYPE_ALIGN_REFERENCE	core/core-enums.h	119;"	d
GIMP_TYPE_ALIGN_TOOL	tools/gimpaligntool.h	26;"	d
GIMP_TYPE_ANCHOR	vectors/gimpanchor.h	27;"	d
GIMP_TYPE_ARRAY	core/gimpparamspecs.h	603;"	d
GIMP_TYPE_BASE_CONFIG	config/gimpbaseconfig.h	28;"	d
GIMP_TYPE_BEZIER_STROKE	vectors/gimpbezierstroke.h	28;"	d
GIMP_TYPE_BLEND_OPTIONS	tools/gimpblendoptions.h	26;"	d
GIMP_TYPE_BLEND_TOOL	tools/gimpblendtool.h	26;"	d
GIMP_TYPE_BLOB_EDITOR	widgets/gimpblobeditor.h	28;"	d
GIMP_TYPE_BRIGHTNESS_CONTRAST_TOOL	tools/gimpbrightnesscontrasttool.h	26;"	d
GIMP_TYPE_BRUSH	core/gimpbrush.h	27;"	d
GIMP_TYPE_BRUSH_APPLICATION_MODE	paint/paint-enums.h	38;"	d
GIMP_TYPE_BRUSH_CLIPBOARD	core/gimpbrushclipboard.h	29;"	d
GIMP_TYPE_BRUSH_CORE	paint/gimpbrushcore.h	33;"	d
GIMP_TYPE_BRUSH_EDITOR	widgets/gimpbrusheditor.h	29;"	d
GIMP_TYPE_BRUSH_FACTORY_VIEW	widgets/gimpbrushfactoryview.h	28;"	d
GIMP_TYPE_BRUSH_GENERATED	core/gimpbrushgenerated.h	28;"	d
GIMP_TYPE_BRUSH_GENERATED_SHAPE	core/core-enums.h	215;"	d
GIMP_TYPE_BRUSH_PIPE	core/gimpbrushpipe.h	27;"	d
GIMP_TYPE_BRUSH_SELECT	widgets/gimpbrushselect.h	30;"	d
GIMP_TYPE_BRUSH_TOOL	tools/gimpbrushtool.h	26;"	d
GIMP_TYPE_BUCKET_FILL_OPTIONS	tools/gimpbucketfilloptions.h	26;"	d
GIMP_TYPE_BUCKET_FILL_TOOL	tools/gimpbucketfilltool.h	26;"	d
GIMP_TYPE_BUFFER	core/gimpbuffer.h	26;"	d
GIMP_TYPE_BUFFER_VIEW	widgets/gimpbufferview.h	29;"	d
GIMP_TYPE_BUTTON_RELEASE_TYPE	tools/tools-enums.h	26;"	d
GIMP_TYPE_BY_COLOR_SELECT_TOOL	tools/gimpbycolorselecttool.h	28;"	d
GIMP_TYPE_CANVAS	display/gimpcanvas.h	49;"	d
GIMP_TYPE_CANVAS_PADDING_MODE	display/display-enums.h	35;"	d
GIMP_TYPE_CAP_STYLE	core/core-enums.h	183;"	d
GIMP_TYPE_CELL_RENDERER_DASHES	widgets/gimpcellrendererdashes.h	29;"	d
GIMP_TYPE_CELL_RENDERER_VIEWABLE	widgets/gimpcellrendererviewable.h	29;"	d
GIMP_TYPE_CHANNEL	core/gimpchannel.h	25;"	d
GIMP_TYPE_CHANNEL_ID	core/gimpparamspecs.h	380;"	d
GIMP_TYPE_CHANNEL_PROP_UNDO	core/gimpchannelpropundo.h	26;"	d
GIMP_TYPE_CHANNEL_TREE_VIEW	widgets/gimpchanneltreeview.h	29;"	d
GIMP_TYPE_CHANNEL_UNDO	core/gimpchannelundo.h	26;"	d
GIMP_TYPE_CLONE	paint/gimpclone.h	26;"	d
GIMP_TYPE_CLONE_OPTIONS	paint/gimpcloneoptions.h	26;"	d
GIMP_TYPE_CLONE_TOOL	tools/gimpclonetool.h	26;"	d
GIMP_TYPE_COLORIZE_TOOL	tools/gimpcolorizetool.h	26;"	d
GIMP_TYPE_COLORMAP_EDITOR	widgets/gimpcolormapeditor.h	26;"	d
GIMP_TYPE_COLOR_BALANCE_TOOL	tools/gimpcolorbalancetool.h	26;"	d
GIMP_TYPE_COLOR_BAR	widgets/gimpcolorbar.h	26;"	d
GIMP_TYPE_COLOR_DIALOG	widgets/gimpcolordialog.h	30;"	d
GIMP_TYPE_COLOR_DIALOG_STATE	widgets/widgets-enums.h	38;"	d
GIMP_TYPE_COLOR_DISPLAY_EDITOR	widgets/gimpcolordisplayeditor.h	29;"	d
GIMP_TYPE_COLOR_EDITOR	widgets/gimpcoloreditor.h	29;"	d
GIMP_TYPE_COLOR_FRAME	widgets/gimpcolorframe.h	29;"	d
GIMP_TYPE_COLOR_FRAME_MODE	widgets/widgets-enums.h	50;"	d
GIMP_TYPE_COLOR_OPTIONS	tools/gimpcoloroptions.h	26;"	d
GIMP_TYPE_COLOR_PANEL	widgets/gimpcolorpanel.h	26;"	d
GIMP_TYPE_COLOR_PICKER_OPTIONS	tools/gimpcolorpickeroptions.h	26;"	d
GIMP_TYPE_COLOR_PICKER_TOOL	tools/gimpcolorpickertool.h	26;"	d
GIMP_TYPE_COLOR_PICK_MODE	widgets/widgets-enums.h	63;"	d
GIMP_TYPE_COLOR_PICK_STATE	widgets/widgets-enums.h	76;"	d
GIMP_TYPE_COLOR_PROFILE_POLICY	core/core-enums.h	577;"	d
GIMP_TYPE_COLOR_SELECTOR_PALETTE	widgets/gimpcolorselectorpalette.h	29;"	d
GIMP_TYPE_COLOR_TOOL	tools/gimpcolortool.h	26;"	d
GIMP_TYPE_COMPONENT_EDITOR	widgets/gimpcomponenteditor.h	29;"	d
GIMP_TYPE_CONTAINER	core/gimpcontainer.h	29;"	d
GIMP_TYPE_CONTAINER_BOX	widgets/gimpcontainerbox.h	29;"	d
GIMP_TYPE_CONTAINER_COMBO_BOX	widgets/gimpcontainercombobox.h	29;"	d
GIMP_TYPE_CONTAINER_EDITOR	widgets/gimpcontainereditor.h	29;"	d
GIMP_TYPE_CONTAINER_ENTRY	widgets/gimpcontainerentry.h	37;"	d
GIMP_TYPE_CONTAINER_GRID_VIEW	widgets/gimpcontainergridview.h	29;"	d
GIMP_TYPE_CONTAINER_POLICY	core/core-enums.h	40;"	d
GIMP_TYPE_CONTAINER_POPUP	widgets/gimpcontainerpopup.h	29;"	d
GIMP_TYPE_CONTAINER_TREE_VIEW	widgets/gimpcontainertreeview.h	29;"	d
GIMP_TYPE_CONTAINER_VIEW	widgets/gimpcontainerview.h	38;"	d
GIMP_TYPE_CONTEXT	core/gimpcontext.h	29;"	d
GIMP_TYPE_CONTROLLER_EDITOR	widgets/gimpcontrollereditor.h	29;"	d
GIMP_TYPE_CONTROLLER_INFO	widgets/gimpcontrollerinfo.h	35;"	d
GIMP_TYPE_CONTROLLER_KEYBOARD	widgets/gimpcontrollerkeyboard.h	30;"	d
GIMP_TYPE_CONTROLLER_LIST	widgets/gimpcontrollerlist.h	29;"	d
GIMP_TYPE_CONTROLLER_WHEEL	widgets/gimpcontrollerwheel.h	30;"	d
GIMP_TYPE_CONVERT_DITHER_TYPE	core/core-enums.h	51;"	d
GIMP_TYPE_CONVERT_PALETTE_TYPE	core/core-enums.h	65;"	d
GIMP_TYPE_CONVOLVE	paint/gimpconvolve.h	26;"	d
GIMP_TYPE_CONVOLVE_OPTIONS	paint/gimpconvolveoptions.h	26;"	d
GIMP_TYPE_CONVOLVE_TOOL	tools/gimpconvolvetool.h	26;"	d
GIMP_TYPE_CONVOLVE_TYPE	paint/paint-enums.h	74;"	d
GIMP_TYPE_CORE_CONFIG	config/gimpcoreconfig.h	30;"	d
GIMP_TYPE_CROP_OPTIONS	tools/gimpcropoptions.h	26;"	d
GIMP_TYPE_CROP_TOOL	tools/gimpcroptool.h	26;"	d
GIMP_TYPE_CURSOR_FORMAT	widgets/widgets-enums.h	87;"	d
GIMP_TYPE_CURSOR_MODE	display/display-enums.h	23;"	d
GIMP_TYPE_CURSOR_VIEW	widgets/gimpcursorview.h	29;"	d
GIMP_TYPE_CURVES_TOOL	tools/gimpcurvestool.h	26;"	d
GIMP_TYPE_CURVE_TYPE	base/base-enums.h	38;"	d
GIMP_TYPE_DASH_EDITOR	widgets/gimpdasheditor.h	29;"	d
GIMP_TYPE_DASH_PATTERN	core/gimpdashpattern.h	27;"	d
GIMP_TYPE_DASH_PRESET	core/core-enums.h	195;"	d
GIMP_TYPE_DATA	core/gimpdata.h	39;"	d
GIMP_TYPE_DATA_EDITOR	widgets/gimpdataeditor.h	29;"	d
GIMP_TYPE_DATA_FACTORY	core/gimpdatafactory.h	45;"	d
GIMP_TYPE_DATA_FACTORY_VIEW	widgets/gimpdatafactoryview.h	29;"	d
GIMP_TYPE_DBUS_SERVICE	widgets/gimpdbusservice.h	33;"	d
GIMP_TYPE_DEVICE_INFO	widgets/gimpdeviceinfo.h	40;"	d
GIMP_TYPE_DEVICE_STATUS	widgets/gimpdevicestatus.h	29;"	d
GIMP_TYPE_DIALOG_FACTORY	widgets/gimpdialogfactory.h	65;"	d
GIMP_TYPE_DIRTY_MASK	core/core-enums.h	452;"	d
GIMP_TYPE_DISPLAY	display/gimpdisplay.h	26;"	d
GIMP_TYPE_DISPLAY_CONFIG	config/gimpdisplayconfig.h	34;"	d
GIMP_TYPE_DISPLAY_ID	core/gimpparamspecs.h	544;"	d
GIMP_TYPE_DISPLAY_OPTIONS	display/gimpdisplayoptions.h	26;"	d
GIMP_TYPE_DISPLAY_OPTIONS_FULLSCREEN	display/gimpdisplayoptions.h	27;"	d
GIMP_TYPE_DISPLAY_SHELL	display/gimpdisplayshell.h	49;"	d
GIMP_TYPE_DOCK	widgets/gimpdock.h	29;"	d
GIMP_TYPE_DOCKABLE	widgets/gimpdockable.h	32;"	d
GIMP_TYPE_DOCKBOOK	widgets/gimpdockbook.h	29;"	d
GIMP_TYPE_DOCKED	widgets/gimpdocked.h	26;"	d
GIMP_TYPE_DOCK_SEPARATOR	widgets/gimpdockseparator.h	29;"	d
GIMP_TYPE_DOCUMENT_LIST	core/gimpdocumentlist.h	25;"	d
GIMP_TYPE_DOCUMENT_VIEW	widgets/gimpdocumentview.h	29;"	d
GIMP_TYPE_DODGE_BURN	paint/gimpdodgeburn.h	26;"	d
GIMP_TYPE_DODGE_BURN_OPTIONS	paint/gimpdodgeburnoptions.h	26;"	d
GIMP_TYPE_DODGE_BURN_TOOL	tools/gimpdodgeburntool.h	26;"	d
GIMP_TYPE_DRAWABLE	core/gimpdrawable.h	26;"	d
GIMP_TYPE_DRAWABLE_ID	core/gimpparamspecs.h	298;"	d
GIMP_TYPE_DRAWABLE_MOD_UNDO	core/gimpdrawablemodundo.h	26;"	d
GIMP_TYPE_DRAWABLE_TREE_VIEW	widgets/gimpdrawabletreeview.h	29;"	d
GIMP_TYPE_DRAWABLE_UNDO	core/gimpdrawableundo.h	26;"	d
GIMP_TYPE_DRAW_TOOL	tools/gimpdrawtool.h	36;"	d
GIMP_TYPE_EDITOR	widgets/gimpeditor.h	29;"	d
GIMP_TYPE_EDIT_SELECTION_TOOL	tools/gimpeditselectiontool.h	26;"	d
GIMP_TYPE_ELLIPSE_SELECT_TOOL	tools/gimpellipseselecttool.h	26;"	d
GIMP_TYPE_ENUM_ACTION	widgets/gimpenumaction.h	29;"	d
GIMP_TYPE_ENVIRON_TABLE	plug-in/gimpenvirontable.h	26;"	d
GIMP_TYPE_ERASER	paint/gimperaser.h	26;"	d
GIMP_TYPE_ERASER_OPTIONS	paint/gimperaseroptions.h	26;"	d
GIMP_TYPE_ERASER_TOOL	tools/gimperasertool.h	26;"	d
GIMP_TYPE_ERROR_CONSOLE	widgets/gimperrorconsole.h	29;"	d
GIMP_TYPE_ERROR_DIALOG	widgets/gimperrordialog.h	28;"	d
GIMP_TYPE_FG_BG_EDITOR	widgets/gimpfgbgeditor.h	29;"	d
GIMP_TYPE_FG_BG_VIEW	widgets/gimpfgbgview.h	29;"	d
GIMP_TYPE_FILE_DIALOG	widgets/gimpfiledialog.h	28;"	d
GIMP_TYPE_FILE_PROC_VIEW	widgets/gimpfileprocview.h	29;"	d
GIMP_TYPE_FILL_TYPE	core/core-enums.h	134;"	d
GIMP_TYPE_FLIP_OPTIONS	tools/gimpflipoptions.h	26;"	d
GIMP_TYPE_FLIP_TOOL	tools/gimpfliptool.h	26;"	d
GIMP_TYPE_FLOATING_SEL_UNDO	core/gimpfloatingselundo.h	26;"	d
GIMP_TYPE_FLOAT_ARRAY	core/gimpparamspecs.h	771;"	d
GIMP_TYPE_FONT	text/gimpfont.h	30;"	d
GIMP_TYPE_FONT_LIST	text/gimpfontlist.h	30;"	d
GIMP_TYPE_FONT_SELECT	widgets/gimpfontselect.h	30;"	d
GIMP_TYPE_FONT_VIEW	widgets/gimpfontview.h	29;"	d
GIMP_TYPE_FOREGROUND_SELECT_OPTIONS	tools/gimpforegroundselectoptions.h	26;"	d
GIMP_TYPE_FOREGROUND_SELECT_TOOL	tools/gimpforegroundselecttool.h	26;"	d
GIMP_TYPE_FOREGROUND_SELECT_TOOL_UNDO	tools/gimpforegroundselecttoolundo.h	26;"	d
GIMP_TYPE_FREE_SELECT_TOOL	tools/gimpfreeselecttool.h	26;"	d
GIMP_TYPE_FUZZY_SELECT_TOOL	tools/gimpfuzzyselecttool.h	28;"	d
GIMP_TYPE_GIMP	core/gimp.h	27;"	d
GIMP_TYPE_GRADIENT	core/gimpgradient.h	46;"	d
GIMP_TYPE_GRADIENT_COLOR	core/core-enums.h	485;"	d
GIMP_TYPE_GRADIENT_EDITOR	widgets/gimpgradienteditor.h	41;"	d
GIMP_TYPE_GRADIENT_SEGMENT_COLOR	core/core-enums.h	513;"	d
GIMP_TYPE_GRADIENT_SEGMENT_TYPE	core/core-enums.h	499;"	d
GIMP_TYPE_GRADIENT_SELECT	widgets/gimpgradientselect.h	30;"	d
GIMP_TYPE_GRAVITY_TYPE	core/core-enums.h	79;"	d
GIMP_TYPE_GRID	core/gimpgrid.h	29;"	d
GIMP_TYPE_GRID_EDITOR	widgets/gimpgrideditor.h	29;"	d
GIMP_TYPE_GUIDE	core/gimpguide.h	29;"	d
GIMP_TYPE_GUIDE_UNDO	core/gimpguideundo.h	26;"	d
GIMP_TYPE_GUI_CONFIG	config/gimpguiconfig.h	30;"	d
GIMP_TYPE_HEAL	paint/gimpheal.h	26;"	d
GIMP_TYPE_HEAL_TOOL	tools/gimphealtool.h	26;"	d
GIMP_TYPE_HELP_BROWSER_TYPE	widgets/widgets-enums.h	98;"	d
GIMP_TYPE_HISTOGRAM_BOX	widgets/gimphistogrambox.h	23;"	d
GIMP_TYPE_HISTOGRAM_CHANNEL	base/base-enums.h	49;"	d
GIMP_TYPE_HISTOGRAM_EDITOR	widgets/gimphistogrameditor.h	26;"	d
GIMP_TYPE_HISTOGRAM_OPTIONS	tools/gimphistogramoptions.h	26;"	d
GIMP_TYPE_HISTOGRAM_SCALE	widgets/widgets-enums.h	109;"	d
GIMP_TYPE_HISTOGRAM_VIEW	widgets/gimphistogramview.h	26;"	d
GIMP_TYPE_HUE_RANGE	base/base-enums.h	99;"	d
GIMP_TYPE_HUE_SATURATION_TOOL	tools/gimphuesaturationtool.h	26;"	d
GIMP_TYPE_IMAGE	core/gimpimage.h	89;"	d
GIMP_TYPE_IMAGEFILE	core/gimpimagefile.h	34;"	d
GIMP_TYPE_IMAGE_COMMENT_EDITOR	widgets/gimpimagecommenteditor.h	29;"	d
GIMP_TYPE_IMAGE_DOCK	widgets/gimpimagedock.h	29;"	d
GIMP_TYPE_IMAGE_EDITOR	widgets/gimpimageeditor.h	26;"	d
GIMP_TYPE_IMAGE_ID	core/gimpparamspecs.h	206;"	d
GIMP_TYPE_IMAGE_MAP	core/gimpimagemap.h	31;"	d
GIMP_TYPE_IMAGE_MAP_OPTIONS	tools/gimpimagemapoptions.h	26;"	d
GIMP_TYPE_IMAGE_MAP_TOOL	tools/gimpimagemaptool.h	26;"	d
GIMP_TYPE_IMAGE_PARASITE_VIEW	widgets/gimpimageparasiteview.h	29;"	d
GIMP_TYPE_IMAGE_PROFILE_VIEW	widgets/gimpimageprofileview.h	29;"	d
GIMP_TYPE_IMAGE_PROP_VIEW	widgets/gimpimagepropview.h	29;"	d
GIMP_TYPE_IMAGE_UNDO	core/gimpimageundo.h	26;"	d
GIMP_TYPE_IMAGE_VIEW	widgets/gimpimageview.h	29;"	d
GIMP_TYPE_INK	paint/gimpink.h	31;"	d
GIMP_TYPE_INK_BLOB_TYPE	paint/paint-enums.h	86;"	d
GIMP_TYPE_INK_OPTIONS	paint/gimpinkoptions.h	26;"	d
GIMP_TYPE_INK_TOOL	tools/gimpinktool.h	26;"	d
GIMP_TYPE_INK_UNDO	paint/gimpinkundo.h	26;"	d
GIMP_TYPE_INT16	core/gimpparamspecs.h	70;"	d
GIMP_TYPE_INT16_ARRAY	core/gimpparamspecs.h	681;"	d
GIMP_TYPE_INT32	core/gimpparamspecs.h	33;"	d
GIMP_TYPE_INT32_ARRAY	core/gimpparamspecs.h	726;"	d
GIMP_TYPE_INT8	core/gimpparamspecs.h	107;"	d
GIMP_TYPE_INT8_ARRAY	core/gimpparamspecs.h	636;"	d
GIMP_TYPE_INTERPRETER_DB	plug-in/gimpinterpreterdb.h	26;"	d
GIMP_TYPE_ISCISSORS_TOOL	tools/gimpiscissorstool.h	59;"	d
GIMP_TYPE_ITEM	core/gimpitem.h	26;"	d
GIMP_TYPE_ITEM_ID	core/gimpparamspecs.h	251;"	d
GIMP_TYPE_ITEM_PROP_UNDO	core/gimpitempropundo.h	26;"	d
GIMP_TYPE_ITEM_SET	core/core-enums.h	239;"	d
GIMP_TYPE_ITEM_TREE_VIEW	widgets/gimpitemtreeview.h	46;"	d
GIMP_TYPE_ITEM_UNDO	core/gimpitemundo.h	26;"	d
GIMP_TYPE_JOIN_STYLE	core/core-enums.h	171;"	d
GIMP_TYPE_LAYER	core/gimplayer.h	26;"	d
GIMP_TYPE_LAYER_ID	core/gimpparamspecs.h	339;"	d
GIMP_TYPE_LAYER_MASK	core/gimplayermask.h	26;"	d
GIMP_TYPE_LAYER_MASK_ID	core/gimpparamspecs.h	421;"	d
GIMP_TYPE_LAYER_MASK_PROP_UNDO	core/gimplayermaskpropundo.h	26;"	d
GIMP_TYPE_LAYER_MASK_UNDO	core/gimplayermaskundo.h	26;"	d
GIMP_TYPE_LAYER_MODE_EFFECTS	base/base-enums.h	64;"	d
GIMP_TYPE_LAYER_PROP_UNDO	core/gimplayerpropundo.h	26;"	d
GIMP_TYPE_LAYER_TREE_VIEW	widgets/gimplayertreeview.h	29;"	d
GIMP_TYPE_LAYER_UNDO	core/gimplayerundo.h	26;"	d
GIMP_TYPE_LEVELS_TOOL	tools/gimplevelstool.h	26;"	d
GIMP_TYPE_LIST	core/gimplist.h	29;"	d
GIMP_TYPE_MAGNIFY_OPTIONS	tools/gimpmagnifyoptions.h	26;"	d
GIMP_TYPE_MAGNIFY_TOOL	tools/gimpmagnifytool.h	26;"	d
GIMP_TYPE_MASK_APPLY_MODE	core/core-enums.h	525;"	d
GIMP_TYPE_MASK_UNDO	core/gimpmaskundo.h	26;"	d
GIMP_TYPE_MEASURE_OPTIONS	tools/gimpmeasureoptions.h	26;"	d
GIMP_TYPE_MEASURE_TOOL	tools/gimpmeasuretool.h	38;"	d
GIMP_TYPE_MENU_DOCK	widgets/gimpmenudock.h	29;"	d
GIMP_TYPE_MENU_FACTORY	widgets/gimpmenufactory.h	39;"	d
GIMP_TYPE_MERGE_TYPE	core/core-enums.h	536;"	d
GIMP_TYPE_MESSAGE_BOX	widgets/gimpmessagebox.h	28;"	d
GIMP_TYPE_MESSAGE_DIALOG	widgets/gimpmessagedialog.h	28;"	d
GIMP_TYPE_MESSAGE_SEVERITY	core/core-enums.h	565;"	d
GIMP_TYPE_MOVE_OPTIONS	tools/gimpmoveoptions.h	26;"	d
GIMP_TYPE_MOVE_TOOL	tools/gimpmovetool.h	26;"	d
GIMP_TYPE_NAVIGATION_EDITOR	display/gimpnavigationeditor.h	32;"	d
GIMP_TYPE_NAVIGATION_VIEW	widgets/gimpnavigationview.h	31;"	d
GIMP_TYPE_OBJECT	core/gimpobject.h	23;"	d
GIMP_TYPE_OFFSET_TYPE	core/core-enums.h	474;"	d
GIMP_TYPE_ORIENTATION_TYPE	core/core-enums.h	227;"	d
GIMP_TYPE_PAINTBRUSH	paint/gimppaintbrush.h	26;"	d
GIMP_TYPE_PAINTBRUSH_TOOL	tools/gimppaintbrushtool.h	26;"	d
GIMP_TYPE_PAINT_CORE	paint/gimppaintcore.h	27;"	d
GIMP_TYPE_PAINT_CORE_UNDO	paint/gimppaintcoreundo.h	26;"	d
GIMP_TYPE_PAINT_INFO	core/gimppaintinfo.h	26;"	d
GIMP_TYPE_PAINT_OPTIONS	paint/gimppaintoptions.h	72;"	d
GIMP_TYPE_PAINT_TOOL	tools/gimppainttool.h	26;"	d
GIMP_TYPE_PALETTE	core/gimppalette.h	26;"	d
GIMP_TYPE_PALETTE_EDITOR	widgets/gimppaletteeditor.h	26;"	d
GIMP_TYPE_PALETTE_SELECT	widgets/gimppaletteselect.h	30;"	d
GIMP_TYPE_PALETTE_VIEW	widgets/gimppaletteview.h	28;"	d
GIMP_TYPE_PARAM_ARRAY	core/gimpparamspecs.h	613;"	d
GIMP_TYPE_PARAM_CHANNEL_ID	core/gimpparamspecs.h	391;"	d
GIMP_TYPE_PARAM_DISPLAY_ID	core/gimpparamspecs.h	555;"	d
GIMP_TYPE_PARAM_DRAWABLE_ID	core/gimpparamspecs.h	309;"	d
GIMP_TYPE_PARAM_ENUM	core/gimpparamspecs.h	175;"	d
GIMP_TYPE_PARAM_FLOAT_ARRAY	core/gimpparamspecs.h	781;"	d
GIMP_TYPE_PARAM_IMAGE_ID	core/gimpparamspecs.h	217;"	d
GIMP_TYPE_PARAM_INT16	core/gimpparamspecs.h	81;"	d
GIMP_TYPE_PARAM_INT16_ARRAY	core/gimpparamspecs.h	691;"	d
GIMP_TYPE_PARAM_INT32	core/gimpparamspecs.h	44;"	d
GIMP_TYPE_PARAM_INT32_ARRAY	core/gimpparamspecs.h	736;"	d
GIMP_TYPE_PARAM_INT8	core/gimpparamspecs.h	118;"	d
GIMP_TYPE_PARAM_INT8_ARRAY	core/gimpparamspecs.h	646;"	d
GIMP_TYPE_PARAM_ITEM_ID	core/gimpparamspecs.h	262;"	d
GIMP_TYPE_PARAM_LAYER_ID	core/gimpparamspecs.h	350;"	d
GIMP_TYPE_PARAM_LAYER_MASK_ID	core/gimpparamspecs.h	432;"	d
GIMP_TYPE_PARAM_SELECTION_ID	core/gimpparamspecs.h	473;"	d
GIMP_TYPE_PARAM_STRING	core/gimpparamspecs.h	144;"	d
GIMP_TYPE_PARAM_STRING_ARRAY	core/gimpparamspecs.h	832;"	d
GIMP_TYPE_PARAM_VECTORS_ID	core/gimpparamspecs.h	514;"	d
GIMP_TYPE_PARASITE_LIST	core/gimpparasitelist.h	25;"	d
GIMP_TYPE_PATTERN	core/gimppattern.h	26;"	d
GIMP_TYPE_PATTERN_CLIPBOARD	core/gimppatternclipboard.h	29;"	d
GIMP_TYPE_PATTERN_FACTORY_VIEW	widgets/gimppatternfactoryview.h	28;"	d
GIMP_TYPE_PATTERN_SELECT	widgets/gimppatternselect.h	30;"	d
GIMP_TYPE_PDB	pdb/gimppdb.h	26;"	d
GIMP_TYPE_PDB_DIALOG	widgets/gimppdbdialog.h	30;"	d
GIMP_TYPE_PDB_PROGRESS	core/gimppdbprogress.h	28;"	d
GIMP_TYPE_PENCIL	paint/gimppencil.h	26;"	d
GIMP_TYPE_PENCIL_OPTIONS	paint/gimppenciloptions.h	26;"	d
GIMP_TYPE_PENCIL_TOOL	tools/gimppenciltool.h	26;"	d
GIMP_TYPE_PERSPECTIVE_CLONE	paint/gimpperspectiveclone.h	27;"	d
GIMP_TYPE_PERSPECTIVE_CLONE_MODE	paint/paint-enums.h	50;"	d
GIMP_TYPE_PERSPECTIVE_CLONE_OPTIONS	paint/gimpperspectivecloneoptions.h	26;"	d
GIMP_TYPE_PERSPECTIVE_CLONE_TOOL	tools/gimpperspectiveclonetool.h	27;"	d
GIMP_TYPE_PERSPECTIVE_TOOL	tools/gimpperspectivetool.h	26;"	d
GIMP_TYPE_PICKABLE	core/gimppickable.h	26;"	d
GIMP_TYPE_PLUGIN_CONFIG	config/gimppluginconfig.h	30;"	d
GIMP_TYPE_PLUG_CALL_MODE	plug-in/plug-in-enums.h	38;"	d
GIMP_TYPE_PLUG_IN	plug-in/gimpplugin.h	32;"	d
GIMP_TYPE_PLUG_IN_ACTION	widgets/gimppluginaction.h	29;"	d
GIMP_TYPE_PLUG_IN_DEF	plug-in/gimpplugindef.h	30;"	d
GIMP_TYPE_PLUG_IN_IMAGE_TYPE	plug-in/plug-in-enums.h	23;"	d
GIMP_TYPE_PLUG_IN_MANAGER	plug-in/gimppluginmanager.h	28;"	d
GIMP_TYPE_PLUG_IN_PROCEDURE	plug-in/gimppluginprocedure.h	31;"	d
GIMP_TYPE_POSTERIZE_TOOL	tools/gimpposterizetool.h	26;"	d
GIMP_TYPE_PROCEDURE	pdb/gimpprocedure.h	33;"	d
GIMP_TYPE_PROFILE_CHOOSER_DIALOG	widgets/gimpprofilechooserdialog.h	28;"	d
GIMP_TYPE_PROGRESS	core/gimpprogress.h	26;"	d
GIMP_TYPE_PROGRESS_BOX	widgets/gimpprogressbox.h	30;"	d
GIMP_TYPE_PROGRESS_DIALOG	widgets/gimpprogressdialog.h	30;"	d
GIMP_TYPE_PROJECTION	core/gimpprojection.h	41;"	d
GIMP_TYPE_RC	config/gimprc.h	28;"	d
GIMP_TYPE_RECTANGLE_CONSTRAINT	tools/tools-enums.h	52;"	d
GIMP_TYPE_RECTANGLE_GUIDE	tools/tools-enums.h	39;"	d
GIMP_TYPE_RECTANGLE_OPTIONS	tools/gimprectangleoptions.h	56;"	d
GIMP_TYPE_RECTANGLE_TOOL	tools/gimprectangletool.h	54;"	d
GIMP_TYPE_RECTANGLE_TOOL_FIXED_RULE	tools/tools-enums.h	64;"	d
GIMP_TYPE_RECT_SELECT_MODE	tools/tools-enums.h	77;"	d
GIMP_TYPE_RECT_SELECT_OPTIONS	tools/gimprectangleselectoptions.h	26;"	d
GIMP_TYPE_RECT_SELECT_TOOL	tools/gimprectangleselecttool.h	26;"	d
GIMP_TYPE_REGION_SELECT_TOOL	tools/gimpregionselecttool.h	28;"	d
GIMP_TYPE_ROTATE_TOOL	tools/gimprotatetool.h	26;"	d
GIMP_TYPE_ROTATION_TYPE	core/core-enums.h	253;"	d
GIMP_TYPE_SAMPLE_POINT	core/gimpsamplepoint.h	26;"	d
GIMP_TYPE_SAMPLE_POINT_EDITOR	widgets/gimpsamplepointeditor.h	29;"	d
GIMP_TYPE_SAMPLE_POINT_UNDO	core/gimpsamplepointundo.h	26;"	d
GIMP_TYPE_SCALE_COMBO_BOX	display/gimpscalecombobox.h	28;"	d
GIMP_TYPE_SCALE_TOOL	tools/gimpscaletool.h	26;"	d
GIMP_TYPE_SELECTION	core/gimpselection.h	26;"	d
GIMP_TYPE_SELECTION_CONTROL	core/core-enums.h	294;"	d
GIMP_TYPE_SELECTION_EDITOR	widgets/gimpselectioneditor.h	26;"	d
GIMP_TYPE_SELECTION_ID	core/gimpparamspecs.h	462;"	d
GIMP_TYPE_SELECTION_OPTIONS	tools/gimpselectionoptions.h	26;"	d
GIMP_TYPE_SELECTION_TOOL	tools/gimpselectiontool.h	26;"	d
GIMP_TYPE_SELECT_CRITERION	core/core-enums.h	549;"	d
GIMP_TYPE_SHEAR_TOOL	tools/gimpsheartool.h	26;"	d
GIMP_TYPE_SIZE_BOX	widgets/gimpsizebox.h	28;"	d
GIMP_TYPE_SMUDGE	paint/gimpsmudge.h	28;"	d
GIMP_TYPE_SMUDGE_OPTIONS	paint/gimpsmudgeoptions.h	26;"	d
GIMP_TYPE_SMUDGE_TOOL	tools/gimpsmudgetool.h	26;"	d
GIMP_TYPE_SOURCE_ALIGN_MODE	paint/paint-enums.h	61;"	d
GIMP_TYPE_SOURCE_CORE	paint/gimpsourcecore.h	26;"	d
GIMP_TYPE_SOURCE_OPTIONS	paint/gimpsourceoptions.h	26;"	d
GIMP_TYPE_SOURCE_TOOL	tools/gimpsourcetool.h	26;"	d
GIMP_TYPE_SPACE_BAR_ACTION	display/display-enums.h	49;"	d
GIMP_TYPE_STATUSBAR	display/gimpstatusbar.h	30;"	d
GIMP_TYPE_STRING_ACTION	widgets/gimpstringaction.h	29;"	d
GIMP_TYPE_STRING_ARRAY	core/gimpparamspecs.h	822;"	d
GIMP_TYPE_STROKE	vectors/gimpstroke.h	28;"	d
GIMP_TYPE_STROKE_DESC	core/gimpstrokedesc.h	29;"	d
GIMP_TYPE_STROKE_EDITOR	widgets/gimpstrokeeditor.h	29;"	d
GIMP_TYPE_STROKE_METHOD	core/core-enums.h	149;"	d
GIMP_TYPE_STROKE_OPTIONS	core/gimpstrokeoptions.h	29;"	d
GIMP_TYPE_STROKE_STYLE	core/core-enums.h	160;"	d
GIMP_TYPE_SUB_PROGRESS	core/gimpsubprogress.h	23;"	d
GIMP_TYPE_TAB_STYLE	widgets/widgets-enums.h	120;"	d
GIMP_TYPE_TEMPLATE	core/gimptemplate.h	29;"	d
GIMP_TYPE_TEMPLATE_EDITOR	widgets/gimptemplateeditor.h	29;"	d
GIMP_TYPE_TEMPLATE_VIEW	widgets/gimptemplateview.h	29;"	d
GIMP_TYPE_TEMPORARY_PROCEDURE	plug-in/gimptemporaryprocedure.h	28;"	d
GIMP_TYPE_TEXT	text/gimptext.h	30;"	d
GIMP_TYPE_TEXT_BOX_MODE	text/text-enums.h	23;"	d
GIMP_TYPE_TEXT_DIRECTION	text/text-enums.h	34;"	d
GIMP_TYPE_TEXT_EDITOR	widgets/gimptexteditor.h	26;"	d
GIMP_TYPE_TEXT_JUSTIFICATION	text/text-enums.h	45;"	d
GIMP_TYPE_TEXT_LAYER	text/gimptextlayer.h	29;"	d
GIMP_TYPE_TEXT_LAYOUT	text/gimptextlayout.h	26;"	d
GIMP_TYPE_TEXT_OPTIONS	tools/gimptextoptions.h	26;"	d
GIMP_TYPE_TEXT_OUTLINE	text/text-enums.h	58;"	d
GIMP_TYPE_TEXT_TOOL	tools/gimptexttool.h	26;"	d
GIMP_TYPE_TEXT_UNDO	text/gimptextundo.h	26;"	d
GIMP_TYPE_THRESHOLD_TOOL	tools/gimpthresholdtool.h	26;"	d
GIMP_TYPE_THUMBNAIL_SIZE	core/core-enums.h	308;"	d
GIMP_TYPE_THUMB_BOX	widgets/gimpthumbbox.h	23;"	d
GIMP_TYPE_TOOL	tools/gimptool.h	26;"	d
GIMP_TYPE_TOOLBOX	widgets/gimptoolbox.h	26;"	d
GIMP_TYPE_TOOL_CONTROL	tools/gimptoolcontrol.h	26;"	d
GIMP_TYPE_TOOL_DIALOG	widgets/gimptooldialog.h	28;"	d
GIMP_TYPE_TOOL_INFO	core/gimptoolinfo.h	26;"	d
GIMP_TYPE_TOOL_OPTIONS	core/gimptooloptions.h	26;"	d
GIMP_TYPE_TOOL_OPTIONS_EDITOR	widgets/gimptooloptionseditor.h	29;"	d
GIMP_TYPE_TOOL_PRESETS	core/gimptoolpresets.h	29;"	d
GIMP_TYPE_TOOL_VIEW	widgets/gimptoolview.h	29;"	d
GIMP_TYPE_TRANSFORM_GRID_TYPE	tools/tools-enums.h	114;"	d
GIMP_TYPE_TRANSFORM_OPTIONS	tools/gimptransformoptions.h	26;"	d
GIMP_TYPE_TRANSFORM_PREVIEW_TYPE	tools/tools-enums.h	101;"	d
GIMP_TYPE_TRANSFORM_TOOL	tools/gimptransformtool.h	33;"	d
GIMP_TYPE_TRANSFORM_TOOL_UNDO	tools/gimptransformtoolundo.h	26;"	d
GIMP_TYPE_TRANSFORM_TYPE	tools/tools-enums.h	89;"	d
GIMP_TYPE_UI_MANAGER	widgets/gimpuimanager.h	40;"	d
GIMP_TYPE_UNDO	core/gimpundo.h	37;"	d
GIMP_TYPE_UNDO_EDITOR	widgets/gimpundoeditor.h	26;"	d
GIMP_TYPE_UNDO_EVENT	core/core-enums.h	331;"	d
GIMP_TYPE_UNDO_MODE	core/core-enums.h	320;"	d
GIMP_TYPE_UNDO_STACK	core/gimpundostack.h	26;"	d
GIMP_TYPE_UNDO_TYPE	core/core-enums.h	348;"	d
GIMP_TYPE_UNIT_COMBO_BOX	widgets/gimpunitcombobox.h	28;"	d
GIMP_TYPE_UNIT_STORE	widgets/gimpunitstore.h	41;"	d
GIMP_TYPE_VECTORS	vectors/gimpvectors.h	28;"	d
GIMP_TYPE_VECTORS_ID	core/gimpparamspecs.h	503;"	d
GIMP_TYPE_VECTORS_MOD_UNDO	vectors/gimpvectorsmodundo.h	26;"	d
GIMP_TYPE_VECTORS_PROP_UNDO	vectors/gimpvectorspropundo.h	26;"	d
GIMP_TYPE_VECTORS_TREE_VIEW	widgets/gimpvectorstreeview.h	29;"	d
GIMP_TYPE_VECTORS_UNDO	vectors/gimpvectorsundo.h	26;"	d
GIMP_TYPE_VECTOR_MODE	tools/tools-enums.h	125;"	d
GIMP_TYPE_VECTOR_OPTIONS	tools/gimpvectoroptions.h	26;"	d
GIMP_TYPE_VECTOR_TOOL	tools/gimpvectortool.h	51;"	d
GIMP_TYPE_VIEW	widgets/gimpview.h	26;"	d
GIMP_TYPE_VIEWABLE	core/gimpviewable.h	39;"	d
GIMP_TYPE_VIEWABLE_BUTTON	widgets/gimpviewablebutton.h	29;"	d
GIMP_TYPE_VIEWABLE_DIALOG	widgets/gimpviewabledialog.h	30;"	d
GIMP_TYPE_VIEW_RENDERER	widgets/gimpviewrenderer.h	29;"	d
GIMP_TYPE_VIEW_RENDERER_BRUSH	widgets/gimpviewrendererbrush.h	27;"	d
GIMP_TYPE_VIEW_RENDERER_BUFFER	widgets/gimpviewrendererbuffer.h	27;"	d
GIMP_TYPE_VIEW_RENDERER_DRAWABLE	widgets/gimpviewrendererdrawable.h	27;"	d
GIMP_TYPE_VIEW_RENDERER_GRADIENT	widgets/gimpviewrenderergradient.h	27;"	d
GIMP_TYPE_VIEW_RENDERER_IMAGE	widgets/gimpviewrendererimage.h	27;"	d
GIMP_TYPE_VIEW_RENDERER_IMAGEFILE	widgets/gimpviewrendererimagefile.h	31;"	d
GIMP_TYPE_VIEW_RENDERER_LAYER	widgets/gimpviewrendererlayer.h	27;"	d
GIMP_TYPE_VIEW_RENDERER_PALETTE	widgets/gimpviewrendererpalette.h	27;"	d
GIMP_TYPE_VIEW_RENDERER_VECTORS	widgets/gimpviewrenderervectors.h	28;"	d
GIMP_TYPE_VIEW_SIZE	core/core-enums.h	265;"	d
GIMP_TYPE_VIEW_TYPE	core/core-enums.h	283;"	d
GIMP_TYPE_WINDOW_HINT	widgets/widgets-enums.h	137;"	d
GIMP_UI_MANAGER	widgets/gimpuimanager.h	41;"	d
GIMP_UI_MANAGER_CLASS	widgets/gimpuimanager.h	42;"	d
GIMP_UI_MANAGER_GET_CLASS	widgets/gimpuimanager.h	45;"	d
GIMP_UNDO	core/gimpundo.h	38;"	d
GIMP_UNDO_CANT	core/core-enums.h	/^  GIMP_UNDO_CANT                      \/*< desc="EEK: can't undo"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_CHANNEL_ADD	core/core-enums.h	/^  GIMP_UNDO_CHANNEL_ADD,              \/*< desc="New channel"                 >*\/$/;"	e	enum:__anon82
GIMP_UNDO_CHANNEL_COLOR	core/core-enums.h	/^  GIMP_UNDO_CHANNEL_COLOR,            \/*< desc="Channel color"               >*\/$/;"	e	enum:__anon82
GIMP_UNDO_CHANNEL_REMOVE	core/core-enums.h	/^  GIMP_UNDO_CHANNEL_REMOVE,           \/*< desc="Delete channel"              >*\/$/;"	e	enum:__anon82
GIMP_UNDO_CHANNEL_REPOSITION	core/core-enums.h	/^  GIMP_UNDO_CHANNEL_REPOSITION,       \/*< desc="Reposition channel"          >*\/$/;"	e	enum:__anon82
GIMP_UNDO_CLASS	core/gimpundo.h	39;"	d
GIMP_UNDO_DRAWABLE	core/core-enums.h	/^  GIMP_UNDO_DRAWABLE,                 \/*< desc="Layer\/Channel"               >*\/$/;"	e	enum:__anon82
GIMP_UNDO_DRAWABLE_MOD	core/core-enums.h	/^  GIMP_UNDO_DRAWABLE_MOD,             \/*< desc="Layer\/Channel modification"  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_EDITOR	widgets/gimpundoeditor.h	27;"	d
GIMP_UNDO_EDITOR_CLASS	widgets/gimpundoeditor.h	28;"	d
GIMP_UNDO_EDITOR_GET_CLASS	widgets/gimpundoeditor.h	31;"	d
GIMP_UNDO_EVENT_REDO	core/core-enums.h	/^  GIMP_UNDO_EVENT_REDO,         \/* a redo has been executed                    *\/$/;"	e	enum:__anon81
GIMP_UNDO_EVENT_REDO_EXPIRED	core/core-enums.h	/^  GIMP_UNDO_EVENT_REDO_EXPIRED, \/* a redo has been freed from the redo stack   *\/$/;"	e	enum:__anon81
GIMP_UNDO_EVENT_UNDO	core/core-enums.h	/^  GIMP_UNDO_EVENT_UNDO,         \/* an undo has been executed                   *\/$/;"	e	enum:__anon81
GIMP_UNDO_EVENT_UNDO_EXPIRED	core/core-enums.h	/^  GIMP_UNDO_EVENT_UNDO_EXPIRED, \/* an undo has been freed from the undo stack  *\/$/;"	e	enum:__anon81
GIMP_UNDO_EVENT_UNDO_FREE	core/core-enums.h	/^  GIMP_UNDO_EVENT_UNDO_FREE,    \/* all undo and redo info has been cleared     *\/$/;"	e	enum:__anon81
GIMP_UNDO_EVENT_UNDO_FREEZE	core/core-enums.h	/^  GIMP_UNDO_EVENT_UNDO_FREEZE,  \/* undo has been frozen                        *\/$/;"	e	enum:__anon81
GIMP_UNDO_EVENT_UNDO_PUSHED	core/core-enums.h	/^  GIMP_UNDO_EVENT_UNDO_PUSHED,  \/* a new undo has been added to the undo stack *\/$/;"	e	enum:__anon81
GIMP_UNDO_EVENT_UNDO_THAW	core/core-enums.h	/^  GIMP_UNDO_EVENT_UNDO_THAW     \/* undo has been thawn                         *\/$/;"	e	enum:__anon81
GIMP_UNDO_FOREGROUND_SELECT	core/core-enums.h	/^  GIMP_UNDO_FOREGROUND_SELECT,        \/*< desc="Select foreground"           >*\/$/;"	e	enum:__anon82
GIMP_UNDO_FS_RELAX	core/core-enums.h	/^  GIMP_UNDO_FS_RELAX,                 \/*< desc="FS relax"                    >*\/$/;"	e	enum:__anon82
GIMP_UNDO_FS_RIGOR	core/core-enums.h	/^  GIMP_UNDO_FS_RIGOR,                 \/*< desc="FS rigor"                    >*\/$/;"	e	enum:__anon82
GIMP_UNDO_FS_TO_LAYER	core/core-enums.h	/^  GIMP_UNDO_FS_TO_LAYER,              \/*< desc="Floating selection to layer" >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GET_CLASS	core/gimpundo.h	42;"	d
GIMP_UNDO_GROUP_DRAWABLE	core/core-enums.h	/^  GIMP_UNDO_GROUP_DRAWABLE,           \/*< desc="Layer\/Channel"               >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_DRAWABLE_MOD	core/core-enums.h	/^  GIMP_UNDO_GROUP_DRAWABLE_MOD,       \/*< desc="Layer\/Channel modification"  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_EDIT_CUT	core/core-enums.h	/^  GIMP_UNDO_GROUP_EDIT_CUT,           \/*< desc="Cut"                         >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_EDIT_PASTE	core/core-enums.h	/^  GIMP_UNDO_GROUP_EDIT_PASTE,         \/*< desc="Paste"                       >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_FIRST	core/core-enums.h	/^  GIMP_UNDO_GROUP_FIRST = GIMP_UNDO_GROUP_NONE, \/*< skip >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_FS_ANCHOR	core/core-enums.h	/^  GIMP_UNDO_GROUP_FS_ANCHOR,          \/*< desc="Anchor floating selection"   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_FS_FLOAT	core/core-enums.h	/^  GIMP_UNDO_GROUP_FS_FLOAT,           \/*< desc="Float selection"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_FS_REMOVE	core/core-enums.h	/^  GIMP_UNDO_GROUP_FS_REMOVE,          \/*< desc="Remove floating selection"   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_FS_TO_LAYER	core/core-enums.h	/^  GIMP_UNDO_GROUP_FS_TO_LAYER,        \/*< desc="Floating selection to layer" >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_GUIDE	core/core-enums.h	/^  GIMP_UNDO_GROUP_GUIDE,              \/*< desc="Guide"                       >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_CONVERT	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_CONVERT,      \/*< desc="Convert image"               >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_CROP	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_CROP,         \/*< desc="Crop image"                  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_FLIP	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_FLIP,         \/*< desc="Flip image"                  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_GRID	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_GRID,         \/*< desc="Grid"                        >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_ITEM_REMOVE	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_ITEM_REMOVE,  \/*< desc="Remove item"                 >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_LAYERS_MERGE	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_LAYERS_MERGE, \/*< desc="Merge layers"                >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_QUICK_MASK	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_QUICK_MASK,   \/*< desc="Quick Mask"                  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_RESIZE	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_RESIZE,       \/*< desc="Resize image"                >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_ROTATE	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_ROTATE,       \/*< desc="Rotate image"                >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_SCALE	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_SCALE,        \/*< desc="Scale image"                 >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_IMAGE_VECTORS_MERGE	core/core-enums.h	/^  GIMP_UNDO_GROUP_IMAGE_VECTORS_MERGE,\/*< desc="Merge paths"                 >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_ITEM_DISPLACE	core/core-enums.h	/^  GIMP_UNDO_GROUP_ITEM_DISPLACE,      \/*< desc="Move item"                   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_ITEM_LINKED	core/core-enums.h	/^  GIMP_UNDO_GROUP_ITEM_LINKED,        \/*< desc="Link\/Unlink item"            >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_ITEM_PROPERTIES	core/core-enums.h	/^  GIMP_UNDO_GROUP_ITEM_PROPERTIES,    \/*< desc="Item properties"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_ITEM_RESIZE	core/core-enums.h	/^  GIMP_UNDO_GROUP_ITEM_RESIZE,        \/*< desc="Resize item"                 >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_ITEM_SCALE	core/core-enums.h	/^  GIMP_UNDO_GROUP_ITEM_SCALE,         \/*< desc="Scale item"                  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_ITEM_VISIBILITY	core/core-enums.h	/^  GIMP_UNDO_GROUP_ITEM_VISIBILITY,    \/*< desc="Item visibility"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_LAST	core/core-enums.h	/^  GIMP_UNDO_GROUP_LAST = GIMP_UNDO_GROUP_MISC, \/*< skip >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_LAYER_ADD	core/core-enums.h	/^  GIMP_UNDO_GROUP_LAYER_ADD,          \/*< desc="Add layer"                   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_LAYER_ADD_MASK	core/core-enums.h	/^  GIMP_UNDO_GROUP_LAYER_ADD_MASK,     \/*< desc="Add layer mask"              >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_LAYER_APPLY_MASK	core/core-enums.h	/^  GIMP_UNDO_GROUP_LAYER_APPLY_MASK,   \/*< desc="Apply layer mask"            >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_MASK	core/core-enums.h	/^  GIMP_UNDO_GROUP_MASK,               \/*< desc="Selection mask"              >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_MISC	core/core-enums.h	/^  GIMP_UNDO_GROUP_MISC,               \/*< desc="Plug-In"                     >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_NONE	core/core-enums.h	/^  GIMP_UNDO_GROUP_NONE = 0,           \/*< desc="<<invalid>>"                 >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_PAINT	core/core-enums.h	/^  GIMP_UNDO_GROUP_PAINT,              \/*< desc="Paint"                       >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_PARASITE_ATTACH	core/core-enums.h	/^  GIMP_UNDO_GROUP_PARASITE_ATTACH,    \/*< desc="Attach parasite"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_PARASITE_REMOVE	core/core-enums.h	/^  GIMP_UNDO_GROUP_PARASITE_REMOVE,    \/*< desc="Remove parasite"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_SAMPLE_POINT	core/core-enums.h	/^  GIMP_UNDO_GROUP_SAMPLE_POINT,       \/*< desc="Sample Point"                >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_TEXT	core/core-enums.h	/^  GIMP_UNDO_GROUP_TEXT,               \/*< desc="Text"                        >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_TRANSFORM	core/core-enums.h	/^  GIMP_UNDO_GROUP_TRANSFORM,          \/*< desc="Transform"                   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GROUP_VECTORS_IMPORT	core/core-enums.h	/^  GIMP_UNDO_GROUP_VECTORS_IMPORT,     \/*< desc="Import paths"                >*\/$/;"	e	enum:__anon82
GIMP_UNDO_GUIDE	core/core-enums.h	/^  GIMP_UNDO_GUIDE,                    \/*< desc="Guide"                       >*\/$/;"	e	enum:__anon82
GIMP_UNDO_IMAGE_COLORMAP	core/core-enums.h	/^  GIMP_UNDO_IMAGE_COLORMAP,           \/*< desc="Change indexed palette"      >*\/$/;"	e	enum:__anon82
GIMP_UNDO_IMAGE_GRID	core/core-enums.h	/^  GIMP_UNDO_IMAGE_GRID,               \/*< desc="Grid"                        >*\/$/;"	e	enum:__anon82
GIMP_UNDO_IMAGE_RESOLUTION	core/core-enums.h	/^  GIMP_UNDO_IMAGE_RESOLUTION,         \/*< desc="Image resolution change"     >*\/$/;"	e	enum:__anon82
GIMP_UNDO_IMAGE_SIZE	core/core-enums.h	/^  GIMP_UNDO_IMAGE_SIZE,               \/*< desc="Image size"                  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_IMAGE_TYPE	core/core-enums.h	/^  GIMP_UNDO_IMAGE_TYPE,               \/*< desc="Image type"                  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_INK	core/core-enums.h	/^  GIMP_UNDO_INK,                      \/*< desc="Ink"                         >*\/$/;"	e	enum:__anon82
GIMP_UNDO_ITEM_DISPLACE	core/core-enums.h	/^  GIMP_UNDO_ITEM_DISPLACE,            \/*< desc="Move item"                   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_ITEM_LINKED	core/core-enums.h	/^  GIMP_UNDO_ITEM_LINKED,              \/*< desc="Link\/Unlink item"            >*\/$/;"	e	enum:__anon82
GIMP_UNDO_ITEM_RENAME	core/core-enums.h	/^  GIMP_UNDO_ITEM_RENAME,              \/*< desc="Rename item"                 >*\/$/;"	e	enum:__anon82
GIMP_UNDO_ITEM_VISIBILITY	core/core-enums.h	/^  GIMP_UNDO_ITEM_VISIBILITY,          \/*< desc="Item visibility"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_ADD	core/core-enums.h	/^  GIMP_UNDO_LAYER_ADD,                \/*< desc="New layer"                   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_LOCK_ALPHA	core/core-enums.h	/^  GIMP_UNDO_LAYER_LOCK_ALPHA,         \/*< desc="Lock\/Unlock alpha channel"   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_MASK_ADD	core/core-enums.h	/^  GIMP_UNDO_LAYER_MASK_ADD,           \/*< desc="Add layer mask"              >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_MASK_APPLY	core/core-enums.h	/^  GIMP_UNDO_LAYER_MASK_APPLY,         \/*< desc="Apply layer mask"            >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_MASK_REMOVE	core/core-enums.h	/^  GIMP_UNDO_LAYER_MASK_REMOVE,        \/*< desc="Delete layer mask"           >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_MASK_SHOW	core/core-enums.h	/^  GIMP_UNDO_LAYER_MASK_SHOW,          \/*< desc="Show layer mask"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_MODE	core/core-enums.h	/^  GIMP_UNDO_LAYER_MODE,               \/*< desc="Set layer mode"              >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_OPACITY	core/core-enums.h	/^  GIMP_UNDO_LAYER_OPACITY,            \/*< desc="Set layer opacity"           >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_REMOVE	core/core-enums.h	/^  GIMP_UNDO_LAYER_REMOVE,             \/*< desc="Delete layer"                >*\/$/;"	e	enum:__anon82
GIMP_UNDO_LAYER_REPOSITION	core/core-enums.h	/^  GIMP_UNDO_LAYER_REPOSITION,         \/*< desc="Reposition layer"            >*\/$/;"	e	enum:__anon82
GIMP_UNDO_MASK	core/core-enums.h	/^  GIMP_UNDO_MASK,                     \/*< desc="Selection mask"              >*\/$/;"	e	enum:__anon82
GIMP_UNDO_MODE_REDO	core/core-enums.h	/^  GIMP_UNDO_MODE_REDO$/;"	e	enum:__anon80
GIMP_UNDO_MODE_UNDO	core/core-enums.h	/^  GIMP_UNDO_MODE_UNDO,$/;"	e	enum:__anon80
GIMP_UNDO_PAINT	core/core-enums.h	/^  GIMP_UNDO_PAINT,                    \/*< desc="Paint"                       >*\/$/;"	e	enum:__anon82
GIMP_UNDO_PARASITE_ATTACH	core/core-enums.h	/^  GIMP_UNDO_PARASITE_ATTACH,          \/*< desc="Attach parasite"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_PARASITE_REMOVE	core/core-enums.h	/^  GIMP_UNDO_PARASITE_REMOVE,          \/*< desc="Remove parasite"             >*\/$/;"	e	enum:__anon82
GIMP_UNDO_SAMPLE_POINT	core/core-enums.h	/^  GIMP_UNDO_SAMPLE_POINT,             \/*< desc="Sample Point"                >*\/$/;"	e	enum:__anon82
GIMP_UNDO_STACK	core/gimpundostack.h	27;"	d
GIMP_UNDO_STACK_CLASS	core/gimpundostack.h	28;"	d
GIMP_UNDO_STACK_GET_CLASS	core/gimpundostack.h	31;"	d
GIMP_UNDO_TEXT_LAYER	core/core-enums.h	/^  GIMP_UNDO_TEXT_LAYER,               \/*< desc="Text layer"                  >*\/$/;"	e	enum:__anon82
GIMP_UNDO_TEXT_LAYER_MODIFIED	core/core-enums.h	/^  GIMP_UNDO_TEXT_LAYER_MODIFIED,      \/*< desc="Text layer modification"     >*\/$/;"	e	enum:__anon82
GIMP_UNDO_TRANSFORM	core/core-enums.h	/^  GIMP_UNDO_TRANSFORM,                \/*< desc="Transform"                   >*\/$/;"	e	enum:__anon82
GIMP_UNDO_VECTORS_ADD	core/core-enums.h	/^  GIMP_UNDO_VECTORS_ADD,              \/*< desc="New path"                    >*\/$/;"	e	enum:__anon82
GIMP_UNDO_VECTORS_MOD	core/core-enums.h	/^  GIMP_UNDO_VECTORS_MOD,              \/*< desc="Path modification"           >*\/$/;"	e	enum:__anon82
GIMP_UNDO_VECTORS_REMOVE	core/core-enums.h	/^  GIMP_UNDO_VECTORS_REMOVE,           \/*< desc="Delete path"                 >*\/$/;"	e	enum:__anon82
GIMP_UNDO_VECTORS_REPOSITION	core/core-enums.h	/^  GIMP_UNDO_VECTORS_REPOSITION,       \/*< desc="Reposition path"             >*\/$/;"	e	enum:__anon82
GIMP_UNIT_COMBO_BOX	widgets/gimpunitcombobox.h	29;"	d
GIMP_UNIT_COMBO_BOX_CLASS	widgets/gimpunitcombobox.h	30;"	d
GIMP_UNIT_COMBO_BOX_GET_CLASS	widgets/gimpunitcombobox.h	33;"	d
GIMP_UNIT_STORE	widgets/gimpunitstore.h	42;"	d
GIMP_UNIT_STORE_CLASS	widgets/gimpunitstore.h	43;"	d
GIMP_UNIT_STORE_FIRST_VALUE	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_FIRST_VALUE = GIMP_UNIT_STORE_UNIT_COLUMNS$/;"	e	enum:__anon358
GIMP_UNIT_STORE_GET_CLASS	widgets/gimpunitstore.h	46;"	d
GIMP_UNIT_STORE_UNIT	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT,$/;"	e	enum:__anon358
GIMP_UNIT_STORE_UNIT_ABBREVIATION	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT_ABBREVIATION,$/;"	e	enum:__anon358
GIMP_UNIT_STORE_UNIT_COLUMNS	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT_COLUMNS,$/;"	e	enum:__anon358
GIMP_UNIT_STORE_UNIT_DIGITS	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT_DIGITS,$/;"	e	enum:__anon358
GIMP_UNIT_STORE_UNIT_FACTOR	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT_FACTOR,$/;"	e	enum:__anon358
GIMP_UNIT_STORE_UNIT_IDENTIFIER	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT_IDENTIFIER,$/;"	e	enum:__anon358
GIMP_UNIT_STORE_UNIT_PLURAL	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT_PLURAL,$/;"	e	enum:__anon358
GIMP_UNIT_STORE_UNIT_SINGULAR	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT_SINGULAR,$/;"	e	enum:__anon358
GIMP_UNIT_STORE_UNIT_SYMBOL	widgets/gimpunitstore.h	/^  GIMP_UNIT_STORE_UNIT_SYMBOL,$/;"	e	enum:__anon358
GIMP_VALUE_HOLDS_ANCHOR	vectors/gimpanchor.h	28;"	d
GIMP_VALUE_HOLDS_ARRAY	core/gimpparamspecs.h	604;"	d
GIMP_VALUE_HOLDS_CHANNEL_ID	core/gimpparamspecs.h	381;"	d
GIMP_VALUE_HOLDS_DASH_PATTERN	core/gimpdashpattern.h	28;"	d
GIMP_VALUE_HOLDS_DISPLAY_ID	core/gimpparamspecs.h	545;"	d
GIMP_VALUE_HOLDS_DRAWABLE_ID	core/gimpparamspecs.h	299;"	d
GIMP_VALUE_HOLDS_FLOAT_ARRAY	core/gimpparamspecs.h	772;"	d
GIMP_VALUE_HOLDS_IMAGE_ID	core/gimpparamspecs.h	207;"	d
GIMP_VALUE_HOLDS_INT16	core/gimpparamspecs.h	71;"	d
GIMP_VALUE_HOLDS_INT16_ARRAY	core/gimpparamspecs.h	682;"	d
GIMP_VALUE_HOLDS_INT32	core/gimpparamspecs.h	34;"	d
GIMP_VALUE_HOLDS_INT32_ARRAY	core/gimpparamspecs.h	727;"	d
GIMP_VALUE_HOLDS_INT8	core/gimpparamspecs.h	108;"	d
GIMP_VALUE_HOLDS_INT8_ARRAY	core/gimpparamspecs.h	637;"	d
GIMP_VALUE_HOLDS_ITEM_ID	core/gimpparamspecs.h	252;"	d
GIMP_VALUE_HOLDS_LAYER_ID	core/gimpparamspecs.h	340;"	d
GIMP_VALUE_HOLDS_LAYER_MASK_ID	core/gimpparamspecs.h	422;"	d
GIMP_VALUE_HOLDS_SELECTION_ID	core/gimpparamspecs.h	463;"	d
GIMP_VALUE_HOLDS_STRING_ARRAY	core/gimpparamspecs.h	823;"	d
GIMP_VALUE_HOLDS_VECTORS_ID	core/gimpparamspecs.h	504;"	d
GIMP_VALUE_MODE	base/base-enums.h	/^  GIMP_VALUE_MODE,           \/*< desc="Value"                >*\/$/;"	e	enum:__anon11
GIMP_VECTORS	vectors/gimpvectors.h	29;"	d
GIMP_VECTORS_CLASS	vectors/gimpvectors.h	30;"	d
GIMP_VECTORS_COMPAT_ANCHOR	vectors/gimpvectors-compat.c	/^  GIMP_VECTORS_COMPAT_ANCHOR     = 1,$/;"	e	enum:__anon306	file:
GIMP_VECTORS_COMPAT_CONTROL	vectors/gimpvectors-compat.c	/^  GIMP_VECTORS_COMPAT_CONTROL    = 2,$/;"	e	enum:__anon306	file:
GIMP_VECTORS_COMPAT_NEW_STROKE	vectors/gimpvectors-compat.c	/^  GIMP_VECTORS_COMPAT_NEW_STROKE = 3$/;"	e	enum:__anon306	file:
GIMP_VECTORS_GET_CLASS	vectors/gimpvectors.h	33;"	d
GIMP_VECTORS_MOD_UNDO	vectors/gimpvectorsmodundo.h	27;"	d
GIMP_VECTORS_MOD_UNDO_CLASS	vectors/gimpvectorsmodundo.h	28;"	d
GIMP_VECTORS_MOD_UNDO_GET_CLASS	vectors/gimpvectorsmodundo.h	31;"	d
GIMP_VECTORS_PROP_UNDO	vectors/gimpvectorspropundo.h	27;"	d
GIMP_VECTORS_PROP_UNDO_CLASS	vectors/gimpvectorspropundo.h	28;"	d
GIMP_VECTORS_PROP_UNDO_GET_CLASS	vectors/gimpvectorspropundo.h	31;"	d
GIMP_VECTORS_TREE_VIEW	widgets/gimpvectorstreeview.h	30;"	d
GIMP_VECTORS_TREE_VIEW_CLASS	widgets/gimpvectorstreeview.h	31;"	d
GIMP_VECTORS_TREE_VIEW_GET_CLASS	widgets/gimpvectorstreeview.h	34;"	d
GIMP_VECTORS_UNDO	vectors/gimpvectorsundo.h	27;"	d
GIMP_VECTORS_UNDO_CLASS	vectors/gimpvectorsundo.h	28;"	d
GIMP_VECTORS_UNDO_GET_CLASS	vectors/gimpvectorsundo.h	31;"	d
GIMP_VECTOR_MODE_DESIGN	tools/tools-enums.h	/^  GIMP_VECTOR_MODE_DESIGN,      \/*< desc="Design" >*\/$/;"	e	enum:__anon260
GIMP_VECTOR_MODE_EDIT	tools/tools-enums.h	/^  GIMP_VECTOR_MODE_EDIT,        \/*< desc="Edit"   >*\/$/;"	e	enum:__anon260
GIMP_VECTOR_MODE_MOVE	tools/tools-enums.h	/^  GIMP_VECTOR_MODE_MOVE         \/*< desc="Move"   >*\/$/;"	e	enum:__anon260
GIMP_VECTOR_OPTIONS	tools/gimpvectoroptions.h	27;"	d
GIMP_VECTOR_OPTIONS_CLASS	tools/gimpvectoroptions.h	28;"	d
GIMP_VECTOR_OPTIONS_GET_CLASS	tools/gimpvectoroptions.h	31;"	d
GIMP_VECTOR_TOOL	tools/gimpvectortool.h	52;"	d
GIMP_VECTOR_TOOL_CLASS	tools/gimpvectortool.h	53;"	d
GIMP_VECTOR_TOOL_GET_CLASS	tools/gimpvectortool.h	56;"	d
GIMP_VECTOR_TOOL_GET_OPTIONS	tools/gimpvectortool.h	58;"	d
GIMP_VIEW	widgets/gimpview.h	27;"	d
GIMP_VIEWABLE	core/gimpviewable.h	40;"	d
GIMP_VIEWABLE_BUTTON	widgets/gimpviewablebutton.h	30;"	d
GIMP_VIEWABLE_BUTTON_CLASS	widgets/gimpviewablebutton.h	31;"	d
GIMP_VIEWABLE_BUTTON_GET_CLASS	widgets/gimpviewablebutton.h	34;"	d
GIMP_VIEWABLE_CLASS	core/gimpviewable.h	41;"	d
GIMP_VIEWABLE_DIALOG	widgets/gimpviewabledialog.h	31;"	d
GIMP_VIEWABLE_DIALOG_CLASS	widgets/gimpviewabledialog.h	32;"	d
GIMP_VIEWABLE_DIALOG_GET_CLASS	widgets/gimpviewabledialog.h	35;"	d
GIMP_VIEWABLE_GET_CLASS	core/gimpviewable.h	44;"	d
GIMP_VIEWABLE_MAX_BUTTON_SIZE	core/gimpviewable.h	33;"	d
GIMP_VIEWABLE_MAX_MENU_SIZE	core/gimpviewable.h	34;"	d
GIMP_VIEWABLE_MAX_POPUP_SIZE	core/gimpviewable.h	32;"	d
GIMP_VIEWABLE_MAX_PREVIEW_SIZE	core/gimpviewable.h	31;"	d
GIMP_VIEWABLE_PRIORITY_IDLE	core/gimpviewable.h	36;"	d
GIMP_VIEW_BG_CHECKS	widgets/widgets-enums.h	/^  GIMP_VIEW_BG_CHECKS,$/;"	e	enum:__anon408
GIMP_VIEW_BG_WHITE	widgets/widgets-enums.h	/^  GIMP_VIEW_BG_WHITE$/;"	e	enum:__anon408
GIMP_VIEW_BORDER_BLACK	widgets/widgets-enums.h	/^  GIMP_VIEW_BORDER_BLACK,$/;"	e	enum:__anon409
GIMP_VIEW_BORDER_GREEN	widgets/widgets-enums.h	/^  GIMP_VIEW_BORDER_GREEN$/;"	e	enum:__anon409
GIMP_VIEW_BORDER_RED	widgets/widgets-enums.h	/^  GIMP_VIEW_BORDER_RED,$/;"	e	enum:__anon409
GIMP_VIEW_BORDER_WHITE	widgets/widgets-enums.h	/^  GIMP_VIEW_BORDER_WHITE,$/;"	e	enum:__anon409
GIMP_VIEW_CLASS	widgets/gimpview.h	28;"	d
GIMP_VIEW_GET_CLASS	widgets/gimpview.h	31;"	d
GIMP_VIEW_MAX_BORDER_WIDTH	widgets/gimpviewrenderer.h	26;"	d
GIMP_VIEW_RENDERER	widgets/gimpviewrenderer.h	30;"	d
GIMP_VIEW_RENDERER_BRUSH	widgets/gimpviewrendererbrush.h	28;"	d
GIMP_VIEW_RENDERER_BRUSH_CLASS	widgets/gimpviewrendererbrush.h	29;"	d
GIMP_VIEW_RENDERER_BRUSH_GET_CLASS	widgets/gimpviewrendererbrush.h	32;"	d
GIMP_VIEW_RENDERER_BUFFER	widgets/gimpviewrendererbuffer.h	28;"	d
GIMP_VIEW_RENDERER_BUFFER_CLASS	widgets/gimpviewrendererbuffer.h	29;"	d
GIMP_VIEW_RENDERER_BUFFER_GET_CLASS	widgets/gimpviewrendererbuffer.h	32;"	d
GIMP_VIEW_RENDERER_CLASS	widgets/gimpviewrenderer.h	31;"	d
GIMP_VIEW_RENDERER_DRAWABLE	widgets/gimpviewrendererdrawable.h	28;"	d
GIMP_VIEW_RENDERER_DRAWABLE_CLASS	widgets/gimpviewrendererdrawable.h	29;"	d
GIMP_VIEW_RENDERER_DRAWABLE_GET_CLASS	widgets/gimpviewrendererdrawable.h	32;"	d
GIMP_VIEW_RENDERER_GET_CLASS	widgets/gimpviewrenderer.h	34;"	d
GIMP_VIEW_RENDERER_GRADIENT	widgets/gimpviewrenderergradient.h	28;"	d
GIMP_VIEW_RENDERER_GRADIENT_CLASS	widgets/gimpviewrenderergradient.h	29;"	d
GIMP_VIEW_RENDERER_GRADIENT_GET_CLASS	widgets/gimpviewrenderergradient.h	32;"	d
GIMP_VIEW_RENDERER_IMAGE	widgets/gimpviewrendererimage.h	28;"	d
GIMP_VIEW_RENDERER_IMAGEFILE	widgets/gimpviewrendererimagefile.h	32;"	d
GIMP_VIEW_RENDERER_IMAGEFILE_CLASS	widgets/gimpviewrendererimagefile.h	33;"	d
GIMP_VIEW_RENDERER_IMAGEFILE_GET_CLASS	widgets/gimpviewrendererimagefile.h	36;"	d
GIMP_VIEW_RENDERER_IMAGE_CLASS	widgets/gimpviewrendererimage.h	29;"	d
GIMP_VIEW_RENDERER_IMAGE_GET_CLASS	widgets/gimpviewrendererimage.h	32;"	d
GIMP_VIEW_RENDERER_LAYER	widgets/gimpviewrendererlayer.h	28;"	d
GIMP_VIEW_RENDERER_LAYER_CLASS	widgets/gimpviewrendererlayer.h	29;"	d
GIMP_VIEW_RENDERER_LAYER_GET_CLASS	widgets/gimpviewrendererlayer.h	32;"	d
GIMP_VIEW_RENDERER_PALETTE	widgets/gimpviewrendererpalette.h	28;"	d
GIMP_VIEW_RENDERER_PALETTE_CLASS	widgets/gimpviewrendererpalette.h	29;"	d
GIMP_VIEW_RENDERER_PALETTE_GET_CLASS	widgets/gimpviewrendererpalette.h	32;"	d
GIMP_VIEW_RENDERER_VECTORS	widgets/gimpviewrenderervectors.h	29;"	d
GIMP_VIEW_RENDERER_VECTORS_CLASS	widgets/gimpviewrenderervectors.h	30;"	d
GIMP_VIEW_RENDERER_VECTORS_GET_CLASS	widgets/gimpviewrenderervectors.h	33;"	d
GIMP_VIEW_SIZE_ENORMOUS	core/core-enums.h	/^  GIMP_VIEW_SIZE_ENORMOUS    = 128,  \/*< desc="Enormous"    >*\/$/;"	e	enum:__anon76
GIMP_VIEW_SIZE_EXTRA_LARGE	core/core-enums.h	/^  GIMP_VIEW_SIZE_EXTRA_LARGE = 64,   \/*< desc="Very large"  >*\/$/;"	e	enum:__anon76
GIMP_VIEW_SIZE_EXTRA_SMALL	core/core-enums.h	/^  GIMP_VIEW_SIZE_EXTRA_SMALL = 16,   \/*< desc="Very small"  >*\/$/;"	e	enum:__anon76
GIMP_VIEW_SIZE_GIGANTIC	core/core-enums.h	/^  GIMP_VIEW_SIZE_GIGANTIC    = 192   \/*< desc="Gigantic"    >*\/$/;"	e	enum:__anon76
GIMP_VIEW_SIZE_HUGE	core/core-enums.h	/^  GIMP_VIEW_SIZE_HUGE        = 96,   \/*< desc="Huge"        >*\/$/;"	e	enum:__anon76
GIMP_VIEW_SIZE_LARGE	core/core-enums.h	/^  GIMP_VIEW_SIZE_LARGE       = 48,   \/*< desc="Large"       >*\/$/;"	e	enum:__anon76
GIMP_VIEW_SIZE_MEDIUM	core/core-enums.h	/^  GIMP_VIEW_SIZE_MEDIUM      = 32,   \/*< desc="Medium"      >*\/$/;"	e	enum:__anon76
GIMP_VIEW_SIZE_SMALL	core/core-enums.h	/^  GIMP_VIEW_SIZE_SMALL       = 24,   \/*< desc="Small"       >*\/$/;"	e	enum:__anon76
GIMP_VIEW_SIZE_TINY	core/core-enums.h	/^  GIMP_VIEW_SIZE_TINY        = 12,   \/*< desc="Tiny"        >*\/$/;"	e	enum:__anon76
GIMP_VIEW_TYPE_GRID	core/core-enums.h	/^  GIMP_VIEW_TYPE_GRID   \/*< desc="View as grid" >*\/$/;"	e	enum:__anon77
GIMP_VIEW_TYPE_LIST	core/core-enums.h	/^  GIMP_VIEW_TYPE_LIST,  \/*< desc="View as list" >*\/$/;"	e	enum:__anon77
GIMP_WEB_PALETTE	core/core-enums.h	/^  GIMP_WEB_PALETTE,     \/*< desc="Use web-optimized palette"           >*\/$/;"	e	enum:__anon62
GIMP_WHITE_FILL	core/core-enums.h	/^  GIMP_WHITE_FILL,        \/*< desc="White"            >*\/$/;"	e	enum:__anon66
GIMP_WINDOW_HINT_KEEP_ABOVE	widgets/widgets-enums.h	/^  GIMP_WINDOW_HINT_KEEP_ABOVE  \/*< desc="Keep above"     >*\/$/;"	e	enum:__anon407
GIMP_WINDOW_HINT_NORMAL	widgets/widgets-enums.h	/^  GIMP_WINDOW_HINT_NORMAL,     \/*< desc="Normal window"  >*\/$/;"	e	enum:__anon407
GIMP_WINDOW_HINT_UTILITY	widgets/widgets-enums.h	/^  GIMP_WINDOW_HINT_UTILITY,    \/*< desc="Utility window" >*\/$/;"	e	enum:__anon407
GIMP_YELLOW_HUES	base/base-enums.h	/^  GIMP_YELLOW_HUES,$/;"	e	enum:__anon12
GLIB_REQUIRED_MAJOR	sanity.c	112;"	d	file:
GLIB_REQUIRED_MAJOR	sanity.c	89;"	d	file:
GLIB_REQUIRED_MICRO	sanity.c	114;"	d	file:
GLIB_REQUIRED_MICRO	sanity.c	91;"	d	file:
GLIB_REQUIRED_MINOR	sanity.c	113;"	d	file:
GLIB_REQUIRED_MINOR	sanity.c	90;"	d	file:
GLOBAL_BRUSH_BLURB	config/gimprc-blurbs.h	122;"	d
GLOBAL_FONT_BLURB	config/gimprc-blurbs.h	125;"	d
GLOBAL_GRADIENT_BLURB	config/gimprc-blurbs.h	128;"	d
GLOBAL_PALETTE_BLURB	config/gimprc-blurbs.h	134;"	d
GLOBAL_PATTERN_BLURB	config/gimprc-blurbs.h	131;"	d
GPATTERN_FILE_VERSION	core/gimppattern-header.h	22;"	d
GPATTERN_MAGIC	core/gimppattern-header.h	23;"	d
GRADIENT_CHANGED	core/gimpcontext.c	/^  GRADIENT_CHANGED,$/;"	e	enum:__anon103	file:
GRADIENT_EDITOR_COLOR_BACKGROUND	actions/gradient-editor-commands.h	/^  GRADIENT_EDITOR_COLOR_BACKGROUND,$/;"	e	enum:__anon6
GRADIENT_EDITOR_COLOR_FIRST_CUSTOM	actions/gradient-editor-commands.h	/^  GRADIENT_EDITOR_COLOR_FIRST_CUSTOM$/;"	e	enum:__anon6
GRADIENT_EDITOR_COLOR_FOREGROUND	actions/gradient-editor-commands.h	/^  GRADIENT_EDITOR_COLOR_FOREGROUND,$/;"	e	enum:__anon6
GRADIENT_EDITOR_COLOR_NEIGHBOR_ENDPOINT	actions/gradient-editor-commands.h	/^  GRADIENT_EDITOR_COLOR_NEIGHBOR_ENDPOINT,$/;"	e	enum:__anon6
GRADIENT_EDITOR_COLOR_OTHER_ENDPOINT	actions/gradient-editor-commands.h	/^  GRADIENT_EDITOR_COLOR_OTHER_ENDPOINT,$/;"	e	enum:__anon6
GRADIENT_HEIGHT	tools/gimplevelstool.c	70;"	d	file:
GRADIENT_HEIGHT	widgets/gimphistogrambox.c	41;"	d	file:
GRADIENT_IMPORT	dialogs/palette-import-dialog.c	/^  GRADIENT_IMPORT,$/;"	e	enum:__anon177	file:
GRADIENT_PATH_BLURB	config/gimprc-blurbs.h	137;"	d
GRADIENT_PATH_WRITABLE_BLURB	config/gimprc-blurbs.h	140;"	d
GRADIENT_SEARCH	tools/gimpiscissorstool.c	87;"	d	file:
GRAD_CELL_HEIGHT	widgets/gimptoolbox-indicator-area.c	46;"	d	file:
GRAD_CELL_WIDTH	widgets/gimptoolbox-indicator-area.c	45;"	d	file:
GRAD_CONTROL_EVENT_MASK	widgets/gimpgradienteditor.c	96;"	d	file:
GRAD_CONTROL_HEIGHT	widgets/gimpgradienteditor.c	83;"	d	file:
GRAD_CURRENT_COLOR_WIDTH	widgets/gimpgradienteditor.c	84;"	d	file:
GRAD_DRAG_ALL	widgets/gimpgradienteditor.h	/^  GRAD_DRAG_ALL$/;"	e	enum:__anon324
GRAD_DRAG_LEFT	widgets/gimpgradienteditor.h	/^  GRAD_DRAG_LEFT,$/;"	e	enum:__anon324
GRAD_DRAG_MIDDLE	widgets/gimpgradienteditor.h	/^  GRAD_DRAG_MIDDLE,$/;"	e	enum:__anon324
GRAD_DRAG_NONE	widgets/gimpgradienteditor.h	/^  GRAD_DRAG_NONE = 0,$/;"	e	enum:__anon324
GRAD_MOVE_TIME	widgets/gimpgradienteditor.c	86;"	d	file:
GRAD_NUM_COLORS	widgets/gimpgradienteditor.h	29;"	d
GRAD_SCROLLBAR_PAGE_SIZE	widgets/gimpgradienteditor.c	80;"	d	file:
GRAD_SCROLLBAR_STEP_SIZE	widgets/gimpgradienteditor.c	79;"	d	file:
GRAD_VIEW_EVENT_MASK	widgets/gimpgradienteditor.c	89;"	d	file:
GRAD_VIEW_SIZE	widgets/gimpgradienteditor.c	82;"	d	file:
GRAPH	tools/gimpcurvestool.c	64;"	d	file:
GRAPH_SIZE	tools/gimpcurvestool.c	67;"	d	file:
GRAY_PIX	base/base-types.h	38;"	d
GREEN_PIX	base/base-types.h	41;"	d
GRID_EDITOR_COLOR_BUTTON_HEIGHT	widgets/gimpgrideditor.c	45;"	d	file:
GRID_EDITOR_COLOR_BUTTON_WIDTH	widgets/gimpgrideditor.c	44;"	d	file:
GRID_EDITOR_DEFAULT_RESOLUTION	widgets/gimpgrideditor.c	42;"	d	file:
GRID_RESPONSE_RESET	dialogs/grid-dialog.c	50;"	d	file:
GSDF	core/gimpimage-convert.c	398;"	d	file:
GTK_DISABLE_DEPRECATED	widgets/gimpcolormapeditor.c	24;"	d	file:
GTK_FILE_SYSTEM_ENABLE_UNSUPPORTED	widgets/gimpviewrendererimagefile.c	39;"	d	file:
GTK_HWRAP_BOX	widgets/gtkhwrapbox.h	34;"	d
GTK_HWRAP_BOX_CLASS	widgets/gtkhwrapbox.h	35;"	d
GTK_HWRAP_BOX_GET_CLASS	widgets/gtkhwrapbox.h	38;"	d
GTK_IS_HWRAP_BOX	widgets/gtkhwrapbox.h	36;"	d
GTK_IS_HWRAP_BOX_CLASS	widgets/gtkhwrapbox.h	37;"	d
GTK_IS_VWRAP_BOX	widgets/gtkvwrapbox.h	36;"	d
GTK_IS_VWRAP_BOX_CLASS	widgets/gtkvwrapbox.h	37;"	d
GTK_IS_WRAP_BOX	widgets/gtkwrapbox.h	36;"	d
GTK_IS_WRAP_BOX_CLASS	widgets/gtkwrapbox.h	37;"	d
GTK_JUSTIFY_BOTTOM	widgets/gtkwrapbox.h	83;"	d
GTK_JUSTIFY_TOP	widgets/gtkwrapbox.h	82;"	d
GTK_REQUIRED_MAJOR	gui/gui.c	270;"	d	file:
GTK_REQUIRED_MAJOR	gui/gui.c	292;"	d	file:
GTK_REQUIRED_MICRO	gui/gui.c	272;"	d	file:
GTK_REQUIRED_MICRO	gui/gui.c	294;"	d	file:
GTK_REQUIRED_MINOR	gui/gui.c	271;"	d	file:
GTK_REQUIRED_MINOR	gui/gui.c	293;"	d	file:
GTK_TYPE_HWRAP_BOX	widgets/gtkhwrapbox.h	33;"	d
GTK_TYPE_VWRAP_BOX	widgets/gtkvwrapbox.h	33;"	d
GTK_TYPE_WRAP_BOX	widgets/gtkwrapbox.h	33;"	d
GTK_VWRAP_BOX	widgets/gtkvwrapbox.h	34;"	d
GTK_VWRAP_BOX_CLASS	widgets/gtkvwrapbox.h	35;"	d
GTK_VWRAP_BOX_GET_CLASS	widgets/gtkvwrapbox.h	38;"	d
GTK_WRAP_BOX	widgets/gtkwrapbox.h	34;"	d
GTK_WRAP_BOX_CLASS	widgets/gtkwrapbox.h	35;"	d
GTK_WRAP_BOX_GET_CLASS	widgets/gtkwrapbox.h	38;"	d
GUIDING	tools/gimpmeasuretool.h	/^  GUIDING,$/;"	e	enum:__anon280
G_DEFINE_TYPE	paint/gimpairbrush.c	/^G_DEFINE_TYPE (GimpAirbrush, gimp_airbrush, GIMP_TYPE_PAINTBRUSH)$/;"	f
G_DEFINE_TYPE	paint/gimpclone.c	/^G_DEFINE_TYPE (GimpClone, gimp_clone, GIMP_TYPE_SOURCE_CORE)$/;"	f
G_DEFINE_TYPE	paint/gimpconvolve.c	/^G_DEFINE_TYPE (GimpConvolve, gimp_convolve, GIMP_TYPE_BRUSH_CORE)$/;"	f
G_DEFINE_TYPE	paint/gimpdodgeburn.c	/^G_DEFINE_TYPE (GimpDodgeBurn, gimp_dodge_burn, GIMP_TYPE_BRUSH_CORE)$/;"	f
G_DEFINE_TYPE	paint/gimperaser.c	/^G_DEFINE_TYPE (GimpEraser, gimp_eraser, GIMP_TYPE_BRUSH_CORE)$/;"	f
G_DEFINE_TYPE	paint/gimpheal.c	/^G_DEFINE_TYPE (GimpHeal, gimp_heal, GIMP_TYPE_SOURCE_CORE)$/;"	f
G_DEFINE_TYPE	paint/gimpink.c	/^G_DEFINE_TYPE (GimpInk, gimp_ink, GIMP_TYPE_PAINT_CORE)$/;"	f
G_DEFINE_TYPE	paint/gimppaintbrush.c	/^G_DEFINE_TYPE (GimpPaintbrush, gimp_paintbrush, GIMP_TYPE_BRUSH_CORE)$/;"	f
G_DEFINE_TYPE	paint/gimppencil.c	/^G_DEFINE_TYPE (GimpPencil, gimp_pencil, GIMP_TYPE_PAINTBRUSH)$/;"	f
G_DEFINE_TYPE	paint/gimpperspectiveclone.c	/^G_DEFINE_TYPE (GimpPerspectiveClone, gimp_perspective_clone,$/;"	f
G_DEFINE_TYPE	paint/gimpsmudge.c	/^G_DEFINE_TYPE (GimpSmudge, gimp_smudge, GIMP_TYPE_BRUSH_CORE)$/;"	f
G_DEFINE_TYPE	tools/gimpairbrushtool.c	/^G_DEFINE_TYPE (GimpAirbrushTool, gimp_airbrush_tool, GIMP_TYPE_PAINTBRUSH_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpaligntool.c	/^G_DEFINE_TYPE (GimpAlignTool, gimp_align_tool, GIMP_TYPE_DRAW_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpblendtool.c	/^G_DEFINE_TYPE (GimpBlendTool, gimp_blend_tool, GIMP_TYPE_DRAW_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpbrightnesscontrasttool.c	/^G_DEFINE_TYPE (GimpBrightnessContrastTool, gimp_brightness_contrast_tool,$/;"	f
G_DEFINE_TYPE	tools/gimpbucketfilltool.c	/^G_DEFINE_TYPE (GimpBucketFillTool, gimp_bucket_fill_tool, GIMP_TYPE_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpbycolorselecttool.c	/^G_DEFINE_TYPE (GimpByColorSelectTool, gimp_by_color_select_tool,$/;"	f
G_DEFINE_TYPE	tools/gimpclonetool.c	/^G_DEFINE_TYPE (GimpCloneTool, gimp_clone_tool, GIMP_TYPE_SOURCE_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpcolorbalancetool.c	/^G_DEFINE_TYPE (GimpColorBalanceTool, gimp_color_balance_tool,$/;"	f
G_DEFINE_TYPE	tools/gimpcolorizetool.c	/^G_DEFINE_TYPE (GimpColorizeTool, gimp_colorize_tool, GIMP_TYPE_IMAGE_MAP_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpcolorpickertool.c	/^G_DEFINE_TYPE (GimpColorPickerTool, gimp_color_picker_tool,$/;"	f
G_DEFINE_TYPE	tools/gimpconvolvetool.c	/^G_DEFINE_TYPE (GimpConvolveTool, gimp_convolve_tool, GIMP_TYPE_BRUSH_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpcurvestool.c	/^G_DEFINE_TYPE (GimpCurvesTool, gimp_curves_tool, GIMP_TYPE_IMAGE_MAP_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpdodgeburntool.c	/^G_DEFINE_TYPE (GimpDodgeBurnTool, gimp_dodge_burn_tool, GIMP_TYPE_BRUSH_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpellipseselecttool.c	/^G_DEFINE_TYPE (GimpEllipseSelectTool, gimp_ellipse_select_tool,$/;"	f
G_DEFINE_TYPE	tools/gimperasertool.c	/^G_DEFINE_TYPE (GimpEraserTool, gimp_eraser_tool, GIMP_TYPE_BRUSH_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpfliptool.c	/^G_DEFINE_TYPE (GimpFlipTool, gimp_flip_tool, GIMP_TYPE_TRANSFORM_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpforegroundselecttool.c	/^G_DEFINE_TYPE (GimpForegroundSelectTool, gimp_foreground_select_tool,$/;"	f
G_DEFINE_TYPE	tools/gimpfuzzyselecttool.c	/^G_DEFINE_TYPE (GimpFuzzySelectTool, gimp_fuzzy_select_tool,$/;"	f
G_DEFINE_TYPE	tools/gimphealtool.c	/^G_DEFINE_TYPE (GimpHealTool, gimp_heal_tool, GIMP_TYPE_SOURCE_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpinktool.c	/^G_DEFINE_TYPE (GimpInkTool, gimp_ink_tool, GIMP_TYPE_PAINT_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimplevelstool.c	/^G_DEFINE_TYPE (GimpLevelsTool, gimp_levels_tool, GIMP_TYPE_IMAGE_MAP_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpmagnifytool.c	/^G_DEFINE_TYPE (GimpMagnifyTool, gimp_magnify_tool, GIMP_TYPE_DRAW_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpmeasuretool.c	/^G_DEFINE_TYPE (GimpMeasureTool, gimp_measure_tool, GIMP_TYPE_DRAW_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpmovetool.c	/^G_DEFINE_TYPE (GimpMoveTool, gimp_move_tool, GIMP_TYPE_DRAW_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimppaintbrushtool.c	/^G_DEFINE_TYPE (GimpPaintbrushTool, gimp_paintbrush_tool, GIMP_TYPE_BRUSH_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimppenciltool.c	/^G_DEFINE_TYPE (GimpPencilTool, gimp_pencil_tool, GIMP_TYPE_PAINTBRUSH_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpperspectiveclonetool.c	/^G_DEFINE_TYPE (GimpPerspectiveCloneTool, gimp_perspective_clone_tool,$/;"	f
G_DEFINE_TYPE	tools/gimpperspectivetool.c	/^G_DEFINE_TYPE (GimpPerspectiveTool, gimp_perspective_tool,$/;"	f
G_DEFINE_TYPE	tools/gimpposterizetool.c	/^G_DEFINE_TYPE (GimpPosterizeTool, gimp_posterize_tool,$/;"	f
G_DEFINE_TYPE	tools/gimprotatetool.c	/^G_DEFINE_TYPE (GimpRotateTool, gimp_rotate_tool, GIMP_TYPE_TRANSFORM_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpscaletool.c	/^G_DEFINE_TYPE (GimpScaleTool, gimp_scale_tool, GIMP_TYPE_TRANSFORM_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpsheartool.c	/^G_DEFINE_TYPE (GimpShearTool, gimp_shear_tool, GIMP_TYPE_TRANSFORM_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpsmudgetool.c	/^G_DEFINE_TYPE (GimpSmudgeTool, gimp_smudge_tool, GIMP_TYPE_BRUSH_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimptexttool.c	/^G_DEFINE_TYPE (GimpTextTool, gimp_text_tool, GIMP_TYPE_TOOL)$/;"	f
G_DEFINE_TYPE	tools/gimpthresholdtool.c	/^G_DEFINE_TYPE (GimpThresholdTool, gimp_threshold_tool,$/;"	f
G_DEFINE_TYPE	tools/gimpvectortool.c	/^G_DEFINE_TYPE (GimpVectorTool, gimp_vector_tool, GIMP_TYPE_DRAW_TOOL)$/;"	f
G_SCALE	core/gimpimage-convert.c	187;"	d	file:
G_SHIFT	core/gimpimage-convert.c	179;"	d	file:
Ghalferror	core/gimpimage-convert.c	/^  int   Ghalferror;$/;"	m	struct:__anon108	file:
Gimp	core/core-types.h	/^typedef struct _Gimp                Gimp;$/;"	t	typeref:struct:_Gimp
GimpAboutDialog	dialogs/about-dialog.c	/^} GimpAboutDialog;$/;"	t	typeref:struct:__anon168	file:
GimpAction	widgets/widgets-types.h	/^typedef struct _GimpAction                   GimpAction;$/;"	t	typeref:struct:_GimpAction
GimpActionClass	widgets/gimpaction.h	/^typedef struct _GimpActionClass GimpActionClass;$/;"	t	typeref:struct:_GimpActionClass
GimpActionEntry	widgets/widgets-types.h	/^typedef struct _GimpActionEntry              GimpActionEntry;$/;"	t	typeref:struct:_GimpActionEntry
GimpActionFactory	widgets/widgets-types.h	/^typedef struct _GimpActionFactory            GimpActionFactory;$/;"	t	typeref:struct:_GimpActionFactory
GimpActionFactoryClass	widgets/gimpactionfactory.h	/^typedef struct _GimpActionFactoryClass  GimpActionFactoryClass;$/;"	t	typeref:struct:_GimpActionFactoryClass
GimpActionFactoryEntry	widgets/gimpactionfactory.h	/^typedef struct _GimpActionFactoryEntry GimpActionFactoryEntry;$/;"	t	typeref:struct:_GimpActionFactoryEntry
GimpActionGroup	widgets/widgets-types.h	/^typedef struct _GimpActionGroup              GimpActionGroup;$/;"	t	typeref:struct:_GimpActionGroup
GimpActionGroupClass	widgets/gimpactiongroup.h	/^typedef struct _GimpActionGroupClass GimpActionGroupClass;$/;"	t	typeref:struct:_GimpActionGroupClass
GimpActionGroupSetupFunc	widgets/widgets-types.h	/^typedef void (* GimpActionGroupSetupFunc)  (GimpActionGroup *group);$/;"	t
GimpActionGroupUpdateFunc	widgets/widgets-types.h	/^typedef void (* GimpActionGroupUpdateFunc) (GimpActionGroup *group,$/;"	t
GimpActionSelectType	actions/actions-types.h	/^} GimpActionSelectType;$/;"	t	typeref:enum:__anon3
GimpActionView	widgets/widgets-types.h	/^typedef struct _GimpActionView               GimpActionView;$/;"	t	typeref:struct:_GimpActionView
GimpActionViewClass	widgets/gimpactionview.h	/^typedef struct _GimpActionViewClass GimpActionViewClass;$/;"	t	typeref:struct:_GimpActionViewClass
GimpActiveColor	widgets/widgets-enums.h	/^} GimpActiveColor;$/;"	t	typeref:enum:__anon398
GimpAddItemFunc	widgets/gimpitemtreeview.h	/^typedef void            (* GimpAddItemFunc)      (GimpImage       *image,$/;"	t
GimpAirbrush	paint/paint-types.h	/^typedef struct _GimpAirbrush         GimpAirbrush;$/;"	t	typeref:struct:_GimpAirbrush
GimpAirbrushClass	paint/gimpairbrush.h	/^typedef struct _GimpAirbrushClass GimpAirbrushClass;$/;"	t	typeref:struct:_GimpAirbrushClass
GimpAirbrushOptions	paint/paint-types.h	/^typedef struct _GimpAirbrushOptions         GimpAirbrushOptions;$/;"	t	typeref:struct:_GimpAirbrushOptions
GimpAirbrushOptionsClass	paint/gimpairbrushoptions.h	/^typedef struct _GimpAirbrushOptionsClass GimpAirbrushOptionsClass;$/;"	t	typeref:struct:_GimpAirbrushOptionsClass
GimpAirbrushTool	tools/gimpairbrushtool.h	/^typedef struct _GimpAirbrushTool      GimpAirbrushTool;$/;"	t	typeref:struct:_GimpAirbrushTool
GimpAirbrushToolClass	tools/gimpairbrushtool.h	/^typedef struct _GimpAirbrushToolClass GimpAirbrushToolClass;$/;"	t	typeref:struct:_GimpAirbrushToolClass
GimpAlignOptions	tools/gimpalignoptions.h	/^typedef struct _GimpAlignOptions      GimpAlignOptions;$/;"	t	typeref:struct:_GimpAlignOptions
GimpAlignOptionsClass	tools/gimpalignoptions.h	/^typedef struct _GimpToolOptionsClass GimpAlignOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpAlignReferenceType	core/core-enums.h	/^} GimpAlignReferenceType;$/;"	t	typeref:enum:__anon65
GimpAlignTool	tools/gimpaligntool.h	/^typedef struct _GimpAlignTool      GimpAlignTool;$/;"	t	typeref:struct:_GimpAlignTool
GimpAlignToolClass	tools/gimpaligntool.h	/^typedef struct _GimpAlignToolClass GimpAlignToolClass;$/;"	t	typeref:struct:_GimpAlignToolClass
GimpAlignmentType	core/core-enums.h	/^} GimpAlignmentType;$/;"	t	typeref:enum:__anon64
GimpAnchor	vectors/vectors-types.h	/^typedef struct _GimpAnchor          GimpAnchor;$/;"	t	typeref:struct:_GimpAnchor
GimpAnchorFeatureType	vectors/vectors-enums.h	/^} GimpAnchorFeatureType;$/;"	t	typeref:enum:__anon300
GimpAnchorType	vectors/vectors-enums.h	/^} GimpAnchorType;$/;"	t	typeref:enum:__anon299
GimpArea	core/core-types.h	/^typedef struct _GimpArea            GimpArea;$/;"	t	typeref:struct:_GimpArea
GimpArray	core/gimpparamspecs.h	/^typedef struct _GimpArray GimpArray;$/;"	t	typeref:struct:_GimpArray
GimpBaseConfig	config/config-types.h	/^typedef struct _GimpBaseConfig       GimpBaseConfig;$/;"	t	typeref:struct:_GimpBaseConfig
GimpBaseConfigClass	config/gimpbaseconfig.h	/^typedef struct _GimpBaseConfigClass GimpBaseConfigClass;$/;"	t	typeref:struct:_GimpBaseConfigClass
GimpBezierStroke	vectors/vectors-types.h	/^typedef struct _GimpBezierStroke    GimpBezierStroke;$/;"	t	typeref:struct:_GimpBezierStroke
GimpBezierStrokeClass	vectors/gimpbezierstroke.h	/^typedef struct _GimpBezierStrokeClass GimpBezierStrokeClass;$/;"	t	typeref:struct:_GimpBezierStrokeClass
GimpBlendOptions	tools/gimpblendoptions.h	/^typedef struct _GimpBlendOptions      GimpBlendOptions;$/;"	t	typeref:struct:_GimpBlendOptions
GimpBlendOptionsClass	tools/gimpblendoptions.h	/^typedef struct _GimpPaintOptionsClass GimpBlendOptionsClass;$/;"	t	typeref:struct:_GimpPaintOptionsClass
GimpBlendTool	tools/gimpblendtool.h	/^typedef struct _GimpBlendTool      GimpBlendTool;$/;"	t	typeref:struct:_GimpBlendTool
GimpBlendToolClass	tools/gimpblendtool.h	/^typedef struct _GimpBlendToolClass GimpBlendToolClass;$/;"	t	typeref:struct:_GimpBlendToolClass
GimpBlobEditor	widgets/widgets-types.h	/^typedef struct _GimpBlobEditor               GimpBlobEditor;$/;"	t	typeref:struct:_GimpBlobEditor
GimpBlobEditorClass	widgets/gimpblobeditor.h	/^typedef struct _GimpBlobEditorClass GimpBlobEditorClass;$/;"	t	typeref:struct:_GimpBlobEditorClass
GimpBrightnessContrastTool	tools/gimpbrightnesscontrasttool.h	/^typedef struct _GimpBrightnessContrastTool      GimpBrightnessContrastTool;$/;"	t	typeref:struct:_GimpBrightnessContrastTool
GimpBrightnessContrastToolClass	tools/gimpbrightnesscontrasttool.h	/^typedef struct _GimpBrightnessContrastToolClass GimpBrightnessContrastToolClass;$/;"	t	typeref:struct:_GimpBrightnessContrastToolClass
GimpBrush	core/core-types.h	/^typedef struct _GimpBrush            GimpBrush;$/;"	t	typeref:struct:_GimpBrush
GimpBrushApplicationMode	paint/paint-enums.h	/^} GimpBrushApplicationMode;$/;"	t	typeref:enum:__anon213
GimpBrushClass	core/gimpbrush.h	/^typedef struct _GimpBrushClass GimpBrushClass;$/;"	t	typeref:struct:_GimpBrushClass
GimpBrushClipboard	core/core-types.h	/^typedef struct _GimpBrushClipboard   GimpBrushClipboard;$/;"	t	typeref:struct:_GimpBrushClipboard
GimpBrushClipboardClass	core/gimpbrushclipboard.h	/^typedef struct _GimpBrushClipboardClass GimpBrushClipboardClass;$/;"	t	typeref:struct:_GimpBrushClipboardClass
GimpBrushCore	paint/paint-types.h	/^typedef struct _GimpBrushCore        GimpBrushCore;$/;"	t	typeref:struct:_GimpBrushCore
GimpBrushCoreClass	paint/gimpbrushcore.h	/^typedef struct _GimpBrushCoreClass GimpBrushCoreClass;$/;"	t	typeref:struct:_GimpBrushCoreClass
GimpBrushEditor	widgets/widgets-types.h	/^typedef struct _GimpBrushEditor              GimpBrushEditor;$/;"	t	typeref:struct:_GimpBrushEditor
GimpBrushEditorClass	widgets/gimpbrusheditor.h	/^typedef struct _GimpBrushEditorClass GimpBrushEditorClass;$/;"	t	typeref:struct:_GimpBrushEditorClass
GimpBrushFactoryView	widgets/widgets-types.h	/^typedef struct _GimpBrushFactoryView         GimpBrushFactoryView;$/;"	t	typeref:struct:_GimpBrushFactoryView
GimpBrushFactoryViewClass	widgets/gimpbrushfactoryview.h	/^typedef struct _GimpBrushFactoryViewClass  GimpBrushFactoryViewClass;$/;"	t	typeref:struct:_GimpBrushFactoryViewClass
GimpBrushGenerated	core/core-types.h	/^typedef struct _GimpBrushGenerated   GimpBrushGenerated;$/;"	t	typeref:struct:_GimpBrushGenerated
GimpBrushGeneratedClass	core/gimpbrushgenerated.h	/^typedef struct _GimpBrushGeneratedClass GimpBrushGeneratedClass;$/;"	t	typeref:struct:_GimpBrushGeneratedClass
GimpBrushGeneratedShape	core/core-enums.h	/^} GimpBrushGeneratedShape;$/;"	t	typeref:enum:__anon72
GimpBrushPipe	core/core-types.h	/^typedef struct _GimpBrushPipe        GimpBrushPipe;$/;"	t	typeref:struct:_GimpBrushPipe
GimpBrushPipeClass	core/gimpbrushpipe.h	/^typedef struct _GimpBrushPipeClass GimpBrushPipeClass;$/;"	t	typeref:struct:_GimpBrushPipeClass
GimpBrushSelect	widgets/widgets-types.h	/^typedef struct _GimpBrushSelect              GimpBrushSelect;$/;"	t	typeref:struct:_GimpBrushSelect
GimpBrushSelectClass	widgets/gimpbrushselect.h	/^typedef struct _GimpBrushSelectClass  GimpBrushSelectClass;$/;"	t	typeref:struct:_GimpBrushSelectClass
GimpBrushTool	tools/tools-types.h	/^typedef struct _GimpBrushTool                GimpBrushTool;$/;"	t	typeref:struct:_GimpBrushTool
GimpBrushToolClass	tools/gimpbrushtool.h	/^typedef struct _GimpBrushToolClass GimpBrushToolClass;$/;"	t	typeref:struct:_GimpBrushToolClass
GimpBucketFillOptions	tools/gimpbucketfilloptions.h	/^typedef struct _GimpBucketFillOptions GimpBucketFillOptions;$/;"	t	typeref:struct:_GimpBucketFillOptions
GimpBucketFillOptionsClass	tools/gimpbucketfilloptions.h	/^typedef struct _GimpPaintOptionsClass GimpBucketFillOptionsClass;$/;"	t	typeref:struct:_GimpPaintOptionsClass
GimpBucketFillTool	tools/gimpbucketfilltool.h	/^typedef struct _GimpBucketFillTool      GimpBucketFillTool;$/;"	t	typeref:struct:_GimpBucketFillTool
GimpBucketFillToolClass	tools/gimpbucketfilltool.h	/^typedef struct _GimpBucketFillToolClass GimpBucketFillToolClass;$/;"	t	typeref:struct:_GimpBucketFillToolClass
GimpBuffer	core/core-types.h	/^typedef struct _GimpBuffer          GimpBuffer;$/;"	t	typeref:struct:_GimpBuffer
GimpBufferClass	core/gimpbuffer.h	/^typedef struct _GimpBufferClass GimpBufferClass;$/;"	t	typeref:struct:_GimpBufferClass
GimpBufferView	widgets/widgets-types.h	/^typedef struct _GimpBufferView               GimpBufferView;$/;"	t	typeref:struct:_GimpBufferView
GimpBufferViewClass	widgets/gimpbufferview.h	/^typedef struct _GimpBufferViewClass  GimpBufferViewClass;$/;"	t	typeref:struct:_GimpBufferViewClass
GimpButtonReleaseType	tools/tools-enums.h	/^} GimpButtonReleaseType;$/;"	t	typeref:enum:__anon252
GimpByColorSelectTool	tools/gimpbycolorselecttool.h	/^typedef struct _GimpByColorSelectTool      GimpByColorSelectTool;$/;"	t	typeref:struct:_GimpByColorSelectTool
GimpByColorSelectToolClass	tools/gimpbycolorselecttool.h	/^typedef struct _GimpByColorSelectToolClass GimpByColorSelectToolClass;$/;"	t	typeref:struct:_GimpByColorSelectToolClass
GimpCanvas	display/display-types.h	/^typedef struct _GimpCanvas            GimpCanvas;$/;"	t	typeref:struct:_GimpCanvas
GimpCanvasClass	display/gimpcanvas.h	/^typedef struct _GimpCanvasClass GimpCanvasClass;$/;"	t	typeref:struct:_GimpCanvasClass
GimpCanvasPaddingMode	display/display-enums.h	/^} GimpCanvasPaddingMode;$/;"	t	typeref:enum:__anon186
GimpCanvasStyle	display/gimpcanvas.h	/^} GimpCanvasStyle;$/;"	t	typeref:enum:__anon197
GimpCapStyle	core/core-enums.h	/^} GimpCapStyle;$/;"	t	typeref:enum:__anon70
GimpCellRendererDashes	widgets/widgets-types.h	/^typedef struct _GimpCellRendererDashes       GimpCellRendererDashes;$/;"	t	typeref:struct:_GimpCellRendererDashes
GimpCellRendererDashesClass	widgets/gimpcellrendererdashes.h	/^typedef struct _GimpCellRendererDashesClass GimpCellRendererDashesClass;$/;"	t	typeref:struct:_GimpCellRendererDashesClass
GimpCellRendererViewable	widgets/widgets-types.h	/^typedef struct _GimpCellRendererViewable     GimpCellRendererViewable;$/;"	t	typeref:struct:_GimpCellRendererViewable
GimpCellRendererViewableClass	widgets/gimpcellrendererviewable.h	/^typedef struct _GimpCellRendererViewableClass GimpCellRendererViewableClass;$/;"	t	typeref:struct:_GimpCellRendererViewableClass
GimpChannel	core/core-types.h	/^typedef struct _GimpChannel         GimpChannel;$/;"	t	typeref:struct:_GimpChannel
GimpChannelClass	core/gimpchannel.h	/^typedef struct _GimpChannelClass GimpChannelClass;$/;"	t	typeref:struct:_GimpChannelClass
GimpChannelPropUndo	core/core-types.h	/^typedef struct _GimpChannelPropUndo   GimpChannelPropUndo;$/;"	t	typeref:struct:_GimpChannelPropUndo
GimpChannelPropUndoClass	core/gimpchannelpropundo.h	/^typedef struct _GimpChannelPropUndoClass GimpChannelPropUndoClass;$/;"	t	typeref:struct:_GimpChannelPropUndoClass
GimpChannelTreeView	widgets/widgets-types.h	/^typedef struct _GimpChannelTreeView          GimpChannelTreeView;$/;"	t	typeref:struct:_GimpChannelTreeView
GimpChannelTreeViewClass	widgets/gimpchanneltreeview.h	/^typedef struct _GimpChannelTreeViewClass  GimpChannelTreeViewClass;$/;"	t	typeref:struct:_GimpChannelTreeViewClass
GimpChannelUndo	core/core-types.h	/^typedef struct _GimpChannelUndo       GimpChannelUndo;$/;"	t	typeref:struct:_GimpChannelUndo
GimpChannelUndoClass	core/gimpchannelundo.h	/^typedef struct _GimpChannelUndoClass GimpChannelUndoClass;$/;"	t	typeref:struct:_GimpChannelUndoClass
GimpClass	core/gimp.h	/^typedef struct _GimpClass GimpClass;$/;"	t	typeref:struct:_GimpClass
GimpClipboard	widgets/gimpclipboard.c	/^typedef struct _GimpClipboard GimpClipboard;$/;"	t	typeref:struct:_GimpClipboard	file:
GimpClone	paint/paint-types.h	/^typedef struct _GimpClone            GimpClone;$/;"	t	typeref:struct:_GimpClone
GimpCloneClass	paint/gimpclone.h	/^typedef struct _GimpCloneClass GimpCloneClass;$/;"	t	typeref:struct:_GimpCloneClass
GimpCloneOptions	paint/paint-types.h	/^typedef struct _GimpCloneOptions            GimpCloneOptions;$/;"	t	typeref:struct:_GimpCloneOptions
GimpCloneOptionsClass	paint/gimpcloneoptions.h	/^typedef struct _GimpCloneOptionsClass GimpCloneOptionsClass;$/;"	t	typeref:struct:_GimpCloneOptionsClass
GimpCloneTool	tools/gimpclonetool.h	/^typedef struct _GimpCloneTool      GimpCloneTool;$/;"	t	typeref:struct:_GimpCloneTool
GimpCloneToolClass	tools/gimpclonetool.h	/^typedef struct _GimpCloneToolClass GimpCloneToolClass;$/;"	t	typeref:struct:_GimpCloneToolClass
GimpColorBalanceTool	tools/gimpcolorbalancetool.h	/^typedef struct _GimpColorBalanceTool      GimpColorBalanceTool;$/;"	t	typeref:struct:_GimpColorBalanceTool
GimpColorBalanceToolClass	tools/gimpcolorbalancetool.h	/^typedef struct _GimpColorBalanceToolClass GimpColorBalanceToolClass;$/;"	t	typeref:struct:_GimpColorBalanceToolClass
GimpColorBar	widgets/widgets-types.h	/^typedef struct _GimpColorBar                 GimpColorBar;$/;"	t	typeref:struct:_GimpColorBar
GimpColorBarClass	widgets/gimpcolorbar.h	/^typedef struct _GimpColorBarClass  GimpColorBarClass;$/;"	t	typeref:struct:_GimpColorBarClass
GimpColorDialog	widgets/widgets-types.h	/^typedef struct _GimpColorDialog              GimpColorDialog;$/;"	t	typeref:struct:_GimpColorDialog
GimpColorDialogClass	widgets/gimpcolordialog.h	/^typedef struct _GimpColorDialogClass GimpColorDialogClass;$/;"	t	typeref:struct:_GimpColorDialogClass
GimpColorDialogState	widgets/widgets-enums.h	/^} GimpColorDialogState;$/;"	t	typeref:enum:__anon399
GimpColorDisplayEditor	widgets/widgets-types.h	/^typedef struct _GimpColorDisplayEditor       GimpColorDisplayEditor;$/;"	t	typeref:struct:_GimpColorDisplayEditor
GimpColorDisplayEditorClass	widgets/gimpcolordisplayeditor.h	/^typedef struct _GimpColorDisplayEditorClass  GimpColorDisplayEditorClass;$/;"	t	typeref:struct:_GimpColorDisplayEditorClass
GimpColorEditor	widgets/widgets-types.h	/^typedef struct _GimpColorEditor              GimpColorEditor;$/;"	t	typeref:struct:_GimpColorEditor
GimpColorEditorClass	widgets/gimpcoloreditor.h	/^typedef struct _GimpColorEditorClass GimpColorEditorClass;$/;"	t	typeref:struct:_GimpColorEditorClass
GimpColorFrame	widgets/widgets-types.h	/^typedef struct _GimpColorFrame               GimpColorFrame;$/;"	t	typeref:struct:_GimpColorFrame
GimpColorFrameClass	widgets/gimpcolorframe.h	/^typedef struct _GimpColorFrameClass GimpColorFrameClass;$/;"	t	typeref:struct:_GimpColorFrameClass
GimpColorFrameMode	widgets/widgets-enums.h	/^} GimpColorFrameMode;$/;"	t	typeref:enum:__anon400
GimpColorOptions	tools/tools-types.h	/^typedef struct _GimpColorOptions             GimpColorOptions;$/;"	t	typeref:struct:_GimpColorOptions
GimpColorOptionsClass	tools/gimpcoloroptions.h	/^typedef  GimpImageMapOptionsClass  GimpColorOptionsClass;$/;"	t
GimpColorPanel	widgets/widgets-types.h	/^typedef struct _GimpColorPanel               GimpColorPanel;$/;"	t	typeref:struct:_GimpColorPanel
GimpColorPanelClass	widgets/gimpcolorpanel.h	/^typedef struct _GimpColorPanelClass GimpColorPanelClass;$/;"	t	typeref:struct:_GimpColorPanelClass
GimpColorPickMode	widgets/widgets-enums.h	/^} GimpColorPickMode;$/;"	t	typeref:enum:__anon401
GimpColorPickState	widgets/widgets-enums.h	/^} GimpColorPickState;$/;"	t	typeref:enum:__anon402
GimpColorPickerOptions	tools/gimpcolorpickeroptions.h	/^typedef struct _GimpColorPickerOptions GimpColorPickerOptions;$/;"	t	typeref:struct:_GimpColorPickerOptions
GimpColorPickerOptionsClass	tools/gimpcolorpickeroptions.h	/^typedef struct _GimpToolOptionsClass   GimpColorPickerOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpColorPickerTool	tools/gimpcolorpickertool.h	/^typedef struct _GimpColorPickerTool      GimpColorPickerTool;$/;"	t	typeref:struct:_GimpColorPickerTool
GimpColorPickerToolClass	tools/gimpcolorpickertool.h	/^typedef struct _GimpColorPickerToolClass GimpColorPickerToolClass;$/;"	t	typeref:struct:_GimpColorPickerToolClass
GimpColorProfilePolicy	core/core-enums.h	/^} GimpColorProfilePolicy;$/;"	t	typeref:enum:__anon92
GimpColorSelectorPalette	widgets/gimpcolorselectorpalette.h	/^typedef struct _GimpColorSelectorPalette      GimpColorSelectorPalette;$/;"	t	typeref:struct:_GimpColorSelectorPalette
GimpColorSelectorPaletteClass	widgets/gimpcolorselectorpalette.h	/^typedef struct _GimpColorSelectorPaletteClass GimpColorSelectorPaletteClass;$/;"	t	typeref:struct:_GimpColorSelectorPaletteClass
GimpColorTool	tools/tools-types.h	/^typedef struct _GimpColorTool                GimpColorTool;$/;"	t	typeref:struct:_GimpColorTool
GimpColorToolClass	tools/gimpcolortool.h	/^typedef struct _GimpColorToolClass GimpColorToolClass;$/;"	t	typeref:struct:_GimpColorToolClass
GimpColorizeTool	tools/gimpcolorizetool.h	/^typedef struct _GimpColorizeTool      GimpColorizeTool;$/;"	t	typeref:struct:_GimpColorizeTool
GimpColorizeToolClass	tools/gimpcolorizetool.h	/^typedef struct _GimpColorizeToolClass GimpColorizeToolClass;$/;"	t	typeref:struct:_GimpColorizeToolClass
GimpColormapEditor	widgets/widgets-types.h	/^typedef struct _GimpColormapEditor           GimpColormapEditor;$/;"	t	typeref:struct:_GimpColormapEditor
GimpColormapEditorClass	widgets/gimpcolormapeditor.h	/^typedef struct _GimpColormapEditorClass GimpColormapEditorClass;$/;"	t	typeref:struct:_GimpColormapEditorClass
GimpComponentEditor	widgets/widgets-types.h	/^typedef struct _GimpComponentEditor          GimpComponentEditor;$/;"	t	typeref:struct:_GimpComponentEditor
GimpComponentEditorClass	widgets/gimpcomponenteditor.h	/^typedef struct _GimpComponentEditorClass  GimpComponentEditorClass;$/;"	t	typeref:struct:_GimpComponentEditorClass
GimpCompositeContext	composite/gimp-composite.h	/^} GimpCompositeContext;$/;"	t	typeref:struct:__anon33
GimpCompositeOperation	composite/gimp-composite.h	/^} GimpCompositeOperation;$/;"	t	typeref:enum:__anon32
GimpCompositeOperationEffects	composite/gimp-composite.h	/^struct GimpCompositeOperationEffects$/;"	s
GimpCompositeOptions	composite/gimp-composite.h	/^struct GimpCompositeOptions$/;"	s
GimpConfigDumpFormat	config/gimpconfig-dump.h	/^} GimpConfigDumpFormat;$/;"	t	typeref:enum:__anon50
GimpConfigForeachFunc	config/gimprc-unknown.h	/^typedef void  (* GimpConfigForeachFunc) (const gchar *key,$/;"	t
GimpConfigToken	config/gimprc-unknown.c	/^} GimpConfigToken;$/;"	t	typeref:struct:__anon43	file:
GimpContainer	core/core-types.h	/^typedef struct _GimpContainer       GimpContainer;$/;"	t	typeref:struct:_GimpContainer
GimpContainerBox	widgets/widgets-types.h	/^typedef struct _GimpContainerBox             GimpContainerBox;$/;"	t	typeref:struct:_GimpContainerBox
GimpContainerBoxClass	widgets/gimpcontainerbox.h	/^typedef struct _GimpContainerBoxClass  GimpContainerBoxClass;$/;"	t	typeref:struct:_GimpContainerBoxClass
GimpContainerClass	core/gimpcontainer.h	/^typedef struct _GimpContainerClass GimpContainerClass;$/;"	t	typeref:struct:_GimpContainerClass
GimpContainerComboBox	widgets/widgets-types.h	/^typedef struct _GimpContainerComboBox        GimpContainerComboBox;$/;"	t	typeref:struct:_GimpContainerComboBox
GimpContainerComboBoxClass	widgets/gimpcontainercombobox.h	/^typedef struct _GimpContainerComboBoxClass  GimpContainerComboBoxClass;$/;"	t	typeref:struct:_GimpContainerComboBoxClass
GimpContainerEditor	widgets/widgets-types.h	/^typedef struct _GimpContainerEditor          GimpContainerEditor;$/;"	t	typeref:struct:_GimpContainerEditor
GimpContainerEditorClass	widgets/gimpcontainereditor.h	/^typedef struct _GimpContainerEditorClass  GimpContainerEditorClass;$/;"	t	typeref:struct:_GimpContainerEditorClass
GimpContainerEntry	widgets/widgets-types.h	/^typedef struct _GimpContainerEntry           GimpContainerEntry;$/;"	t	typeref:struct:_GimpContainerEntry
GimpContainerEntryClass	widgets/gimpcontainerentry.h	/^typedef struct _GimpContainerEntryClass  GimpContainerEntryClass;$/;"	t	typeref:struct:_GimpContainerEntryClass
GimpContainerFilterContext	core/gimpcontainer-filter.c	/^} GimpContainerFilterContext;$/;"	t	typeref:struct:__anon59	file:
GimpContainerGridView	widgets/widgets-types.h	/^typedef struct _GimpContainerGridView        GimpContainerGridView;$/;"	t	typeref:struct:_GimpContainerGridView
GimpContainerGridViewClass	widgets/gimpcontainergridview.h	/^typedef struct _GimpContainerGridViewClass GimpContainerGridViewClass;$/;"	t	typeref:struct:_GimpContainerGridViewClass
GimpContainerHandler	core/gimpcontainer.c	/^} GimpContainerHandler;$/;"	t	typeref:struct:_GimpContainerHandler	file:
GimpContainerPolicy	core/core-enums.h	/^} GimpContainerPolicy;$/;"	t	typeref:enum:__anon60
GimpContainerPopup	widgets/widgets-types.h	/^typedef struct _GimpContainerPopup           GimpContainerPopup;$/;"	t	typeref:struct:_GimpContainerPopup
GimpContainerPopupClass	widgets/gimpcontainerpopup.h	/^typedef struct _GimpContainerPopupClass  GimpContainerPopupClass;$/;"	t	typeref:struct:_GimpContainerPopupClass
GimpContainerTreeView	widgets/widgets-types.h	/^typedef struct _GimpContainerTreeView        GimpContainerTreeView;$/;"	t	typeref:struct:_GimpContainerTreeView
GimpContainerTreeViewClass	widgets/gimpcontainertreeview.h	/^typedef struct _GimpContainerTreeViewClass GimpContainerTreeViewClass;$/;"	t	typeref:struct:_GimpContainerTreeViewClass
GimpContainerView	widgets/widgets-types.h	/^typedef struct _GimpContainerView            GimpContainerView; \/* dummy typedef *\/$/;"	t	typeref:struct:_GimpContainerView
GimpContainerViewInterface	widgets/gimpcontainerview.h	/^typedef struct _GimpContainerViewInterface GimpContainerViewInterface;$/;"	t	typeref:struct:_GimpContainerViewInterface
GimpContainerViewPrivate	widgets/gimpcontainerview.c	/^typedef struct _GimpContainerViewPrivate GimpContainerViewPrivate;$/;"	t	typeref:struct:_GimpContainerViewPrivate	file:
GimpContainerViewProp	widgets/gimpcontainerview.h	/^} GimpContainerViewProp;$/;"	t	typeref:enum:__anon344
GimpContext	core/core-types.h	/^typedef struct _GimpContext         GimpContext;$/;"	t	typeref:struct:_GimpContext
GimpContextClass	core/gimpcontext.h	/^typedef struct _GimpContextClass GimpContextClass;$/;"	t	typeref:struct:_GimpContextClass
GimpContextCopyPropFunc	core/gimpcontext.c	/^typedef void (* GimpContextCopyPropFunc) (GimpContext *src,$/;"	t	file:
GimpContextPropMask	core/core-enums.h	/^} GimpContextPropMask;$/;"	t	typeref:enum:__anon94
GimpContextPropType	core/core-enums.h	/^} GimpContextPropType;$/;"	t	typeref:enum:__anon93
GimpControllerEditor	widgets/widgets-types.h	/^typedef struct _GimpControllerEditor         GimpControllerEditor;$/;"	t	typeref:struct:_GimpControllerEditor
GimpControllerEditorClass	widgets/gimpcontrollereditor.h	/^typedef struct _GimpControllerEditorClass GimpControllerEditorClass;$/;"	t	typeref:struct:_GimpControllerEditorClass
GimpControllerEventSnooper	widgets/gimpcontrollerinfo.h	/^typedef gboolean (* GimpControllerEventSnooper) (GimpControllerInfo        *info,$/;"	t
GimpControllerInfo	widgets/widgets-types.h	/^typedef struct _GimpControllerInfo           GimpControllerInfo;$/;"	t	typeref:struct:_GimpControllerInfo
GimpControllerInfoClass	widgets/gimpcontrollerinfo.h	/^typedef struct _GimpControllerInfoClass GimpControllerInfoClass;$/;"	t	typeref:struct:_GimpControllerInfoClass
GimpControllerKeyboard	widgets/widgets-types.h	/^typedef struct _GimpControllerKeyboard       GimpControllerKeyboard;$/;"	t	typeref:struct:_GimpControllerKeyboard
GimpControllerKeyboardClass	widgets/gimpcontrollerkeyboard.h	/^typedef struct _GimpControllerKeyboardClass GimpControllerKeyboardClass;$/;"	t	typeref:struct:_GimpControllerKeyboardClass
GimpControllerList	widgets/widgets-types.h	/^typedef struct _GimpControllerList           GimpControllerList;$/;"	t	typeref:struct:_GimpControllerList
GimpControllerListClass	widgets/gimpcontrollerlist.h	/^typedef struct _GimpControllerListClass GimpControllerListClass;$/;"	t	typeref:struct:_GimpControllerListClass
GimpControllerManager	widgets/gimpcontrollers.c	/^typedef struct _GimpControllerManager GimpControllerManager;$/;"	t	typeref:struct:_GimpControllerManager	file:
GimpControllerWheel	widgets/widgets-types.h	/^typedef struct _GimpControllerWheel          GimpControllerWheel;$/;"	t	typeref:struct:_GimpControllerWheel
GimpControllerWheelClass	widgets/gimpcontrollerwheel.h	/^typedef struct _GimpControllerWheelClass GimpControllerWheelClass;$/;"	t	typeref:struct:_GimpControllerWheelClass
GimpConvertDitherType	core/core-enums.h	/^} GimpConvertDitherType;$/;"	t	typeref:enum:__anon61
GimpConvertPaletteType	core/core-enums.h	/^} GimpConvertPaletteType;$/;"	t	typeref:enum:__anon62
GimpConvolutionType	base/base-enums.h	/^} GimpConvolutionType;$/;"	t	typeref:enum:__anon13
GimpConvolve	paint/paint-types.h	/^typedef struct _GimpConvolve         GimpConvolve;$/;"	t	typeref:struct:_GimpConvolve
GimpConvolveClass	paint/gimpconvolve.h	/^typedef struct _GimpConvolveClass GimpConvolveClass;$/;"	t	typeref:struct:_GimpConvolveClass
GimpConvolveOptions	paint/paint-types.h	/^typedef struct _GimpConvolveOptions         GimpConvolveOptions;$/;"	t	typeref:struct:_GimpConvolveOptions
GimpConvolveOptionsClass	paint/gimpconvolveoptions.h	/^typedef struct _GimpConvolveOptionsClass GimpConvolveOptionsClass;$/;"	t	typeref:struct:_GimpConvolveOptionsClass
GimpConvolveTool	tools/gimpconvolvetool.h	/^typedef struct _GimpConvolveTool      GimpConvolveTool;$/;"	t	typeref:struct:_GimpConvolveTool
GimpConvolveToolClass	tools/gimpconvolvetool.h	/^typedef struct _GimpConvolveToolClass GimpConvolveToolClass;$/;"	t	typeref:struct:_GimpConvolveToolClass
GimpConvolveType	paint/paint-enums.h	/^} GimpConvolveType;$/;"	t	typeref:enum:__anon216
GimpCoords	core/core-types.h	/^typedef struct _GimpCoords          GimpCoords;$/;"	t	typeref:struct:_GimpCoords
GimpCoreConfig	config/config-types.h	/^typedef struct _GimpCoreConfig       GimpCoreConfig;$/;"	t	typeref:struct:_GimpCoreConfig
GimpCoreConfigClass	config/gimpcoreconfig.h	/^typedef struct _GimpCoreConfigClass GimpCoreConfigClass;$/;"	t	typeref:struct:_GimpCoreConfigClass
GimpCropOptions	tools/gimpcropoptions.h	/^typedef struct _GimpCropOptions      GimpCropOptions;$/;"	t	typeref:struct:_GimpCropOptions
GimpCropOptionsClass	tools/gimpcropoptions.h	/^typedef struct _GimpToolOptionsClass GimpCropOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpCropTool	tools/gimpcroptool.h	/^typedef struct _GimpCropTool      GimpCropTool;$/;"	t	typeref:struct:_GimpCropTool
GimpCropToolClass	tools/gimpcroptool.h	/^typedef struct _GimpCropToolClass GimpCropToolClass;$/;"	t	typeref:struct:_GimpCropToolClass
GimpCursor	widgets/gimpcursor.c	/^typedef struct _GimpCursor GimpCursor;$/;"	t	typeref:struct:_GimpCursor	file:
GimpCursorFormat	widgets/widgets-enums.h	/^} GimpCursorFormat;$/;"	t	typeref:enum:__anon403
GimpCursorMode	display/display-enums.h	/^} GimpCursorMode;$/;"	t	typeref:enum:__anon185
GimpCursorModifier	widgets/widgets-enums.h	/^} GimpCursorModifier;$/;"	t	typeref:enum:__anon414
GimpCursorType	widgets/widgets-enums.h	/^} GimpCursorType;$/;"	t	typeref:enum:__anon412
GimpCursorView	widgets/widgets-types.h	/^typedef struct _GimpCursorView               GimpCursorView;$/;"	t	typeref:struct:_GimpCursorView
GimpCursorViewClass	widgets/gimpcursorview.h	/^typedef struct _GimpCursorViewClass GimpCursorViewClass;$/;"	t	typeref:struct:_GimpCursorViewClass
GimpCurveType	base/base-enums.h	/^} GimpCurveType;$/;"	t	typeref:enum:__anon9
GimpCurvesTool	tools/gimpcurvestool.h	/^typedef struct _GimpCurvesTool      GimpCurvesTool;$/;"	t	typeref:struct:_GimpCurvesTool
GimpCurvesToolClass	tools/gimpcurvestool.h	/^typedef struct _GimpCurvesToolClass GimpCurvesToolClass;$/;"	t	typeref:struct:_GimpCurvesToolClass
GimpDBusService	widgets/gimpdbusservice.h	/^typedef struct _GimpDBusService      GimpDBusService;$/;"	t	typeref:struct:_GimpDBusService
GimpDBusServiceClass	widgets/gimpdbusservice.h	/^typedef struct _GimpDBusServiceClass GimpDBusServiceClass;$/;"	t	typeref:struct:_GimpDBusServiceClass
GimpDashEditor	widgets/widgets-types.h	/^typedef struct _GimpDashEditor               GimpDashEditor;$/;"	t	typeref:struct:_GimpDashEditor
GimpDashEditorClass	widgets/gimpdasheditor.h	/^typedef struct _GimpDashEditorClass  GimpDashEditorClass;$/;"	t	typeref:struct:_GimpDashEditorClass
GimpDashPreset	core/core-enums.h	/^} GimpDashPreset;$/;"	t	typeref:enum:__anon71
GimpData	core/core-types.h	/^typedef struct _GimpData             GimpData;$/;"	t	typeref:struct:_GimpData
GimpDataClass	core/gimpdata.h	/^typedef struct _GimpDataClass GimpDataClass;$/;"	t	typeref:struct:_GimpDataClass
GimpDataDeleteData	actions/data-commands.c	/^typedef struct _GimpDataDeleteData GimpDataDeleteData;$/;"	t	typeref:struct:_GimpDataDeleteData	file:
GimpDataEditor	widgets/widgets-types.h	/^typedef struct _GimpDataEditor               GimpDataEditor;$/;"	t	typeref:struct:_GimpDataEditor
GimpDataEditorClass	widgets/gimpdataeditor.h	/^typedef struct _GimpDataEditorClass GimpDataEditorClass;$/;"	t	typeref:struct:_GimpDataEditorClass
GimpDataError	core/gimpdata.h	/^} GimpDataError;$/;"	t	typeref:enum:__anon139
GimpDataFactory	core/core-types.h	/^typedef struct _GimpDataFactory      GimpDataFactory;$/;"	t	typeref:struct:_GimpDataFactory
GimpDataFactoryClass	core/gimpdatafactory.h	/^typedef struct _GimpDataFactoryClass  GimpDataFactoryClass;$/;"	t	typeref:struct:_GimpDataFactoryClass
GimpDataFactoryLoaderEntry	core/gimpdatafactory.h	/^typedef struct _GimpDataFactoryLoaderEntry GimpDataFactoryLoaderEntry;$/;"	t	typeref:struct:_GimpDataFactoryLoaderEntry
GimpDataFactoryView	widgets/widgets-types.h	/^typedef struct _GimpDataFactoryView          GimpDataFactoryView;$/;"	t	typeref:struct:_GimpDataFactoryView
GimpDataFactoryViewClass	widgets/gimpdatafactoryview.h	/^typedef struct _GimpDataFactoryViewClass  GimpDataFactoryViewClass;$/;"	t	typeref:struct:_GimpDataFactoryViewClass
GimpDataGetStandardFunc	core/gimpdatafactory.h	/^typedef GimpData * (* GimpDataGetStandardFunc) (void);$/;"	t
GimpDataLoadContext	core/gimpdatafactory.c	/^} GimpDataLoadContext;$/;"	t	typeref:struct:__anon52	file:
GimpDataLoadFunc	core/gimpdatafactory.h	/^typedef GList    * (* GimpDataLoadFunc)        (const gchar  *filename,$/;"	t
GimpDataNewFunc	core/gimpdatafactory.h	/^typedef GimpData * (* GimpDataNewFunc)         (const gchar  *name);$/;"	t
GimpDebugWrapFlag	plug-in/gimpplugindebug.h	/^} GimpDebugWrapFlag;$/;"	t	typeref:enum:__anon231
GimpDeviceChangeNotify	widgets/gimpdevices.h	/^typedef void (* GimpDeviceChangeNotify) (Gimp *gimp);$/;"	t
GimpDeviceInfo	widgets/widgets-types.h	/^typedef struct _GimpDeviceInfo               GimpDeviceInfo;$/;"	t	typeref:struct:_GimpDeviceInfo
GimpDeviceInfoClass	widgets/gimpdeviceinfo.h	/^typedef struct _GimpDeviceInfoClass GimpDeviceInfoClass;$/;"	t	typeref:struct:_GimpDeviceInfoClass
GimpDeviceManager	widgets/gimpdevices.c	/^typedef struct _GimpDeviceManager GimpDeviceManager;$/;"	t	typeref:struct:_GimpDeviceManager	file:
GimpDeviceStatus	widgets/widgets-types.h	/^typedef struct _GimpDeviceStatus             GimpDeviceStatus;$/;"	t	typeref:struct:_GimpDeviceStatus
GimpDeviceStatusClass	widgets/gimpdevicestatus.h	/^typedef struct _GimpDeviceStatusClass GimpDeviceStatusClass;$/;"	t	typeref:struct:_GimpDeviceStatusClass
GimpDeviceStatusEntry	widgets/gimpdevicestatus.h	/^typedef struct _GimpDeviceStatusEntry GimpDeviceStatusEntry;$/;"	t	typeref:struct:_GimpDeviceStatusEntry
GimpDeviceValues	widgets/widgets-enums.h	/^} GimpDeviceValues;$/;"	t	typeref:enum:__anon415
GimpDialogConstructor	widgets/gimpdialogfactory.h	/^typedef GtkWidget * (* GimpDialogConstructor) (GimpDialogFactory      *factory,$/;"	t
GimpDialogFactory	widgets/widgets-types.h	/^typedef struct _GimpDialogFactory            GimpDialogFactory;$/;"	t	typeref:struct:_GimpDialogFactory
GimpDialogFactoryClass	widgets/gimpdialogfactory.h	/^typedef struct _GimpDialogFactoryClass  GimpDialogFactoryClass;$/;"	t	typeref:struct:_GimpDialogFactoryClass
GimpDialogFactoryEntry	widgets/widgets-types.h	/^typedef struct _GimpDialogFactoryEntry       GimpDialogFactoryEntry;$/;"	t	typeref:struct:_GimpDialogFactoryEntry
GimpDialogNewFunc	widgets/gimpdialogfactory.h	/^typedef GtkWidget * (* GimpDialogNewFunc)     (GimpDialogFactory      *factory,$/;"	t
GimpDialogVisibilityState	widgets/gimpdialogfactory.h	/^} GimpDialogVisibilityState;$/;"	t	typeref:enum:__anon371
GimpDirtyMask	core/core-enums.h	/^} GimpDirtyMask;$/;"	t	typeref:enum:__anon83
GimpDisplay	display/display-types.h	/^typedef struct _GimpDisplay           GimpDisplay;$/;"	t	typeref:struct:_GimpDisplay
GimpDisplayClass	display/gimpdisplay.h	/^typedef struct _GimpDisplayClass GimpDisplayClass;$/;"	t	typeref:struct:_GimpDisplayClass
GimpDisplayConfig	config/config-types.h	/^typedef struct _GimpDisplayConfig    GimpDisplayConfig;$/;"	t	typeref:struct:_GimpDisplayConfig
GimpDisplayConfigClass	config/gimpdisplayconfig.h	/^typedef struct _GimpDisplayConfigClass GimpDisplayConfigClass;$/;"	t	typeref:struct:_GimpDisplayConfigClass
GimpDisplayOptions	config/config-types.h	/^typedef struct _GimpDisplayOptions   GimpDisplayOptions;$/;"	t	typeref:struct:_GimpDisplayOptions
GimpDisplayOptionsClass	display/gimpdisplayoptions.h	/^typedef struct _GimpDisplayOptionsClass GimpDisplayOptionsClass;$/;"	t	typeref:struct:_GimpDisplayOptionsClass
GimpDisplayOptionsFullscreen	display/gimpdisplayoptions.c	/^typedef struct _GimpDisplayOptions      GimpDisplayOptionsFullscreen;$/;"	t	typeref:struct:_GimpDisplayOptions	file:
GimpDisplayOptionsFullscreenClass	display/gimpdisplayoptions.c	/^typedef struct _GimpDisplayOptionsClass GimpDisplayOptionsFullscreenClass;$/;"	t	typeref:struct:_GimpDisplayOptionsClass	file:
GimpDisplayShell	display/display-types.h	/^typedef struct _GimpDisplayShell      GimpDisplayShell;$/;"	t	typeref:struct:_GimpDisplayShell
GimpDisplayShellClass	display/gimpdisplayshell.h	/^typedef struct _GimpDisplayShellClass  GimpDisplayShellClass;$/;"	t	typeref:struct:_GimpDisplayShellClass
GimpDndDataDef	widgets/gimpdnd.c	/^typedef struct _GimpDndDataDef GimpDndDataDef;$/;"	t	typeref:struct:_GimpDndDataDef	file:
GimpDndDragColorFunc	widgets/gimpdnd.h	/^typedef void (* GimpDndDragColorFunc) (GtkWidget     *widget,$/;"	t
GimpDndDragComponentFunc	widgets/gimpdnd.h	/^typedef GimpImage * (* GimpDndDragComponentFunc) (GtkWidget       *widget,$/;"	t
GimpDndDragDataFunc	widgets/gimpdnd.c	/^typedef void        (* GimpDndDragDataFunc) (GtkWidget        *widget,$/;"	t	file:
GimpDndDragPixbufFunc	widgets/gimpdnd.h	/^typedef GdkPixbuf * (* GimpDndDragPixbufFunc) (GtkWidget    *widget,$/;"	t
GimpDndDragStreamFunc	widgets/gimpdnd.h	/^typedef guchar * (* GimpDndDragStreamFunc) (GtkWidget    *widget,$/;"	t
GimpDndDragUriListFunc	widgets/gimpdnd.h	/^typedef GList * (* GimpDndDragUriListFunc) (GtkWidget *widget,$/;"	t
GimpDndDragViewableFunc	widgets/gimpdnd.h	/^typedef GimpViewable * (* GimpDndDragViewableFunc) (GtkWidget     *widget,$/;"	t
GimpDndDropColorFunc	widgets/gimpdnd.h	/^typedef void (* GimpDndDropColorFunc) (GtkWidget     *widget,$/;"	t
GimpDndDropComponentFunc	widgets/gimpdnd.h	/^typedef void        (* GimpDndDropComponentFunc) (GtkWidget       *widget,$/;"	t
GimpDndDropDataFunc	widgets/gimpdnd.c	/^typedef gboolean    (* GimpDndDropDataFunc) (GtkWidget        *widget,$/;"	t	file:
GimpDndDropPixbufFunc	widgets/gimpdnd.h	/^typedef void        (* GimpDndDropPixbufFunc) (GtkWidget    *widget,$/;"	t
GimpDndDropStreamFunc	widgets/gimpdnd.h	/^typedef void     (* GimpDndDropStreamFunc) (GtkWidget    *widget,$/;"	t
GimpDndDropUriListFunc	widgets/gimpdnd.h	/^typedef void    (* GimpDndDropUriListFunc) (GtkWidget *widget,$/;"	t
GimpDndDropViewableFunc	widgets/gimpdnd.h	/^typedef void           (* GimpDndDropViewableFunc) (GtkWidget     *widget,$/;"	t
GimpDndGetIconFunc	widgets/gimpdnd.c	/^typedef GtkWidget * (* GimpDndGetIconFunc)  (GtkWidget        *widget,$/;"	t	file:
GimpDndType	widgets/widgets-enums.h	/^} GimpDndType;$/;"	t	typeref:enum:__anon410
GimpDock	widgets/widgets-types.h	/^typedef struct _GimpDock                     GimpDock;$/;"	t	typeref:struct:_GimpDock
GimpDockClass	widgets/gimpdock.h	/^typedef struct _GimpDockClass GimpDockClass;$/;"	t	typeref:struct:_GimpDockClass
GimpDockSeparator	widgets/widgets-types.h	/^typedef struct _GimpDockSeparator            GimpDockSeparator; \/* not a dock *\/$/;"	t	typeref:struct:_GimpDockSeparator
GimpDockSeparatorClass	widgets/gimpdockseparator.h	/^typedef struct _GimpDockSeparatorClass GimpDockSeparatorClass;$/;"	t	typeref:struct:_GimpDockSeparatorClass
GimpDockable	widgets/widgets-types.h	/^typedef struct _GimpDockable                 GimpDockable;$/;"	t	typeref:struct:_GimpDockable
GimpDockableClass	widgets/gimpdockable.h	/^typedef struct _GimpDockableClass GimpDockableClass;$/;"	t	typeref:struct:_GimpDockableClass
GimpDockbook	widgets/widgets-types.h	/^typedef struct _GimpDockbook                 GimpDockbook;$/;"	t	typeref:struct:_GimpDockbook
GimpDockbookClass	widgets/gimpdockbook.h	/^typedef struct _GimpDockbookClass  GimpDockbookClass;$/;"	t	typeref:struct:_GimpDockbookClass
GimpDocked	widgets/widgets-types.h	/^typedef struct _GimpDocked                   GimpDocked; \/* dummy typedef *\/$/;"	t	typeref:struct:_GimpDocked
GimpDockedInterface	widgets/gimpdocked.h	/^typedef struct _GimpDockedInterface GimpDockedInterface;$/;"	t	typeref:struct:_GimpDockedInterface
GimpDocumentList	core/core-types.h	/^typedef struct _GimpDocumentList    GimpDocumentList;$/;"	t	typeref:struct:_GimpDocumentList
GimpDocumentListClass	core/gimpdocumentlist.h	/^typedef struct _GimpDocumentListClass GimpDocumentListClass;$/;"	t	typeref:struct:_GimpDocumentListClass
GimpDocumentView	widgets/widgets-types.h	/^typedef struct _GimpDocumentView             GimpDocumentView;$/;"	t	typeref:struct:_GimpDocumentView
GimpDocumentViewClass	widgets/gimpdocumentview.h	/^typedef struct _GimpDocumentViewClass  GimpDocumentViewClass;$/;"	t	typeref:struct:_GimpDocumentViewClass
GimpDodgeBurn	paint/paint-types.h	/^typedef struct _GimpDodgeBurn        GimpDodgeBurn;$/;"	t	typeref:struct:_GimpDodgeBurn
GimpDodgeBurnClass	paint/gimpdodgeburn.h	/^typedef struct _GimpDodgeBurnClass GimpDodgeBurnClass;$/;"	t	typeref:struct:_GimpDodgeBurnClass
GimpDodgeBurnOptions	paint/paint-types.h	/^typedef struct _GimpDodgeBurnOptions        GimpDodgeBurnOptions;$/;"	t	typeref:struct:_GimpDodgeBurnOptions
GimpDodgeBurnOptionsClass	paint/gimpdodgeburnoptions.h	/^typedef struct _GimpDodgeBurnOptionsClass GimpDodgeBurnOptionsClass;$/;"	t	typeref:struct:_GimpDodgeBurnOptionsClass
GimpDodgeBurnTool	tools/gimpdodgeburntool.h	/^typedef struct _GimpDodgeBurnTool      GimpDodgeBurnTool;$/;"	t	typeref:struct:_GimpDodgeBurnTool
GimpDodgeBurnToolClass	tools/gimpdodgeburntool.h	/^typedef struct _GimpDodgeBurnToolClass GimpDodgeBurnToolClass;$/;"	t	typeref:struct:_GimpDodgeBurnToolClass
GimpDrawTool	tools/tools-types.h	/^typedef struct _GimpDrawTool                 GimpDrawTool;$/;"	t	typeref:struct:_GimpDrawTool
GimpDrawToolClass	tools/gimpdrawtool.h	/^typedef struct _GimpDrawToolClass GimpDrawToolClass;$/;"	t	typeref:struct:_GimpDrawToolClass
GimpDrawable	core/core-types.h	/^typedef struct _GimpDrawable        GimpDrawable;$/;"	t	typeref:struct:_GimpDrawable
GimpDrawableClass	core/gimpdrawable.h	/^typedef struct _GimpDrawableClass GimpDrawableClass;$/;"	t	typeref:struct:_GimpDrawableClass
GimpDrawableModUndo	core/core-types.h	/^typedef struct _GimpDrawableModUndo   GimpDrawableModUndo;$/;"	t	typeref:struct:_GimpDrawableModUndo
GimpDrawableModUndoClass	core/gimpdrawablemodundo.h	/^typedef struct _GimpDrawableModUndoClass GimpDrawableModUndoClass;$/;"	t	typeref:struct:_GimpDrawableModUndoClass
GimpDrawableTreeView	widgets/widgets-types.h	/^typedef struct _GimpDrawableTreeView         GimpDrawableTreeView;$/;"	t	typeref:struct:_GimpDrawableTreeView
GimpDrawableTreeViewClass	widgets/gimpdrawabletreeview.h	/^typedef struct _GimpDrawableTreeViewClass  GimpDrawableTreeViewClass;$/;"	t	typeref:struct:_GimpDrawableTreeViewClass
GimpDrawableUndo	core/core-types.h	/^typedef struct _GimpDrawableUndo      GimpDrawableUndo;$/;"	t	typeref:struct:_GimpDrawableUndo
GimpDrawableUndoClass	core/gimpdrawableundo.h	/^typedef struct _GimpDrawableUndoClass GimpDrawableUndoClass;$/;"	t	typeref:struct:_GimpDrawableUndoClass
GimpDropType	widgets/widgets-enums.h	/^} GimpDropType;$/;"	t	typeref:enum:__anon411
GimpEditSelectionTool	tools/gimpeditselectiontool.h	/^typedef struct _GimpEditSelectionTool      GimpEditSelectionTool;$/;"	t	typeref:struct:_GimpEditSelectionTool
GimpEditSelectionToolClass	tools/gimpeditselectiontool.h	/^typedef struct _GimpEditSelectionToolClass GimpEditSelectionToolClass;$/;"	t	typeref:struct:_GimpEditSelectionToolClass
GimpEditor	widgets/widgets-types.h	/^typedef struct _GimpEditor                   GimpEditor;$/;"	t	typeref:struct:_GimpEditor
GimpEditorClass	widgets/gimpeditor.h	/^typedef struct _GimpEditorClass  GimpEditorClass;$/;"	t	typeref:struct:_GimpEditorClass
GimpEllipseSelectTool	tools/gimpellipseselecttool.h	/^typedef struct _GimpEllipseSelectTool      GimpEllipseSelectTool;$/;"	t	typeref:struct:_GimpEllipseSelectTool
GimpEllipseSelectToolClass	tools/gimpellipseselecttool.h	/^typedef struct _GimpEllipseSelectToolClass GimpEllipseSelectToolClass;$/;"	t	typeref:struct:_GimpEllipseSelectToolClass
GimpEnumAction	widgets/widgets-types.h	/^typedef struct _GimpEnumAction               GimpEnumAction;$/;"	t	typeref:struct:_GimpEnumAction
GimpEnumActionClass	widgets/gimpenumaction.h	/^typedef struct _GimpEnumActionClass GimpEnumActionClass;$/;"	t	typeref:struct:_GimpEnumActionClass
GimpEnumActionEntry	widgets/widgets-types.h	/^typedef struct _GimpEnumActionEntry          GimpEnumActionEntry;$/;"	t	typeref:struct:_GimpEnumActionEntry
GimpEnvironTable	core/core-types.h	/^typedef struct _GimpEnvironTable    GimpEnvironTable;$/;"	t	typeref:struct:_GimpEnvironTable
GimpEnvironTableClass	plug-in/gimpenvirontable.h	/^typedef struct _GimpEnvironTableClass GimpEnvironTableClass;$/;"	t	typeref:struct:_GimpEnvironTableClass
GimpEnvironValue	plug-in/gimpenvirontable.c	/^typedef struct _GimpEnvironValue GimpEnvironValue;$/;"	t	typeref:struct:_GimpEnvironValue	file:
GimpEraser	paint/paint-types.h	/^typedef struct _GimpEraser           GimpEraser;$/;"	t	typeref:struct:_GimpEraser
GimpEraserClass	paint/gimperaser.h	/^typedef struct _GimpEraserClass GimpEraserClass;$/;"	t	typeref:struct:_GimpEraserClass
GimpEraserOptions	paint/paint-types.h	/^typedef struct _GimpEraserOptions           GimpEraserOptions;$/;"	t	typeref:struct:_GimpEraserOptions
GimpEraserOptionsClass	paint/gimperaseroptions.h	/^typedef struct _GimpEraserOptionsClass GimpEraserOptionsClass;$/;"	t	typeref:struct:_GimpEraserOptionsClass
GimpEraserTool	tools/gimperasertool.h	/^typedef struct _GimpEraserTool      GimpEraserTool;$/;"	t	typeref:struct:_GimpEraserTool
GimpEraserToolClass	tools/gimperasertool.h	/^typedef struct _GimpEraserToolClass GimpEraserToolClass;$/;"	t	typeref:struct:_GimpEraserToolClass
GimpErrorConsole	widgets/widgets-types.h	/^typedef struct _GimpErrorConsole             GimpErrorConsole;$/;"	t	typeref:struct:_GimpErrorConsole
GimpErrorConsoleClass	widgets/gimperrorconsole.h	/^typedef struct _GimpErrorConsoleClass GimpErrorConsoleClass;$/;"	t	typeref:struct:_GimpErrorConsoleClass
GimpErrorDialog	widgets/widgets-types.h	/^typedef struct _GimpErrorDialog              GimpErrorDialog;$/;"	t	typeref:struct:_GimpErrorDialog
GimpErrorDialogClass	widgets/gimperrordialog.h	/^typedef struct _GimpErrorDialogClass  GimpErrorDialogClass;$/;"	t	typeref:struct:_GimpErrorDialogClass
GimpFadeOptions	paint/gimppaintoptions.h	/^typedef struct _GimpFadeOptions     GimpFadeOptions;$/;"	t	typeref:struct:_GimpFadeOptions
GimpFgBgEditor	widgets/widgets-types.h	/^typedef struct _GimpFgBgEditor               GimpFgBgEditor;$/;"	t	typeref:struct:_GimpFgBgEditor
GimpFgBgEditorClass	widgets/gimpfgbgeditor.h	/^typedef struct _GimpFgBgEditorClass GimpFgBgEditorClass;$/;"	t	typeref:struct:_GimpFgBgEditorClass
GimpFgBgView	widgets/widgets-types.h	/^typedef struct _GimpFgBgView                 GimpFgBgView;$/;"	t	typeref:struct:_GimpFgBgView
GimpFgBgViewClass	widgets/gimpfgbgview.h	/^typedef struct _GimpFgBgViewClass GimpFgBgViewClass;$/;"	t	typeref:struct:_GimpFgBgViewClass
GimpFileDialog	widgets/widgets-types.h	/^typedef struct _GimpFileDialog               GimpFileDialog;$/;"	t	typeref:struct:_GimpFileDialog
GimpFileDialogClass	widgets/gimpfiledialog.h	/^typedef struct _GimpFileDialogClass  GimpFileDialogClass;$/;"	t	typeref:struct:_GimpFileDialogClass
GimpFileProcView	widgets/widgets-types.h	/^typedef struct _GimpFileProcView             GimpFileProcView;$/;"	t	typeref:struct:_GimpFileProcView
GimpFileProcViewClass	widgets/gimpfileprocview.h	/^typedef struct _GimpFileProcViewClass GimpFileProcViewClass;$/;"	t	typeref:struct:_GimpFileProcViewClass
GimpFillType	core/core-enums.h	/^} GimpFillType;$/;"	t	typeref:enum:__anon66
GimpFlipOptions	tools/gimpflipoptions.h	/^typedef struct _GimpFlipOptions      GimpFlipOptions;$/;"	t	typeref:struct:_GimpFlipOptions
GimpFlipOptionsClass	tools/gimpflipoptions.h	/^typedef struct _GimpToolOptionsClass GimpFlipOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpFlipTool	tools/gimpfliptool.h	/^typedef struct _GimpFlipTool      GimpFlipTool;$/;"	t	typeref:struct:_GimpFlipTool
GimpFlipToolClass	tools/gimpfliptool.h	/^typedef struct _GimpFlipToolClass GimpFlipToolClass;$/;"	t	typeref:struct:_GimpFlipToolClass
GimpFloatingSelUndo	core/core-types.h	/^typedef struct _GimpFloatingSelUndo   GimpFloatingSelUndo;$/;"	t	typeref:struct:_GimpFloatingSelUndo
GimpFloatingSelUndoClass	core/gimpfloatingselundo.h	/^typedef struct _GimpFloatingSelUndoClass GimpFloatingSelUndoClass;$/;"	t	typeref:struct:_GimpFloatingSelUndoClass
GimpFont	text/text-types.h	/^typedef struct _GimpFont       GimpFont;$/;"	t	typeref:struct:_GimpFont
GimpFontClass	text/gimpfont.h	/^typedef struct _GimpFontClass GimpFontClass;$/;"	t	typeref:struct:_GimpFontClass
GimpFontDescToStringFunc	text/gimpfontlist.c	/^typedef char * (* GimpFontDescToStringFunc) (const PangoFontDescription *desc);$/;"	t	file:
GimpFontList	text/text-types.h	/^typedef struct _GimpFontList   GimpFontList;$/;"	t	typeref:struct:_GimpFontList
GimpFontListClass	text/gimpfontlist.h	/^typedef struct _GimpFontListClass GimpFontListClass;$/;"	t	typeref:struct:_GimpFontListClass
GimpFontSelect	widgets/widgets-types.h	/^typedef struct _GimpFontSelect               GimpFontSelect;$/;"	t	typeref:struct:_GimpFontSelect
GimpFontSelectClass	widgets/gimpfontselect.h	/^typedef struct _GimpFontSelectClass  GimpFontSelectClass;$/;"	t	typeref:struct:_GimpFontSelectClass
GimpFontView	widgets/widgets-types.h	/^typedef struct _GimpFontView                 GimpFontView;$/;"	t	typeref:struct:_GimpFontView
GimpFontViewClass	widgets/gimpfontview.h	/^typedef struct _GimpFontViewClass  GimpFontViewClass;$/;"	t	typeref:struct:_GimpFontViewClass
GimpForegroundSelectOptions	tools/gimpforegroundselectoptions.h	/^typedef struct _GimpForegroundSelectOptions  GimpForegroundSelectOptions;$/;"	t	typeref:struct:_GimpForegroundSelectOptions
GimpForegroundSelectOptionsClass	tools/gimpforegroundselectoptions.h	/^typedef GimpSelectionOptionsClass  GimpForegroundSelectOptionsClass;$/;"	t
GimpForegroundSelectTool	tools/gimpforegroundselecttool.h	/^typedef struct _GimpForegroundSelectTool      GimpForegroundSelectTool;$/;"	t	typeref:struct:_GimpForegroundSelectTool
GimpForegroundSelectToolClass	tools/gimpforegroundselecttool.h	/^typedef struct _GimpForegroundSelectToolClass GimpForegroundSelectToolClass;$/;"	t	typeref:struct:_GimpForegroundSelectToolClass
GimpForegroundSelectToolUndo	tools/tools-types.h	/^typedef struct _GimpForegroundSelectToolUndo GimpForegroundSelectToolUndo;$/;"	t	typeref:struct:_GimpForegroundSelectToolUndo
GimpForegroundSelectToolUndoClass	tools/gimpforegroundselecttoolundo.h	/^typedef struct _GimpForegroundSelectToolUndoClass GimpForegroundSelectToolUndoClass;$/;"	t	typeref:struct:_GimpForegroundSelectToolUndoClass
GimpFreeSelectTool	tools/gimpfreeselecttool.h	/^typedef struct _GimpFreeSelectTool      GimpFreeSelectTool;$/;"	t	typeref:struct:_GimpFreeSelectTool
GimpFreeSelectToolClass	tools/gimpfreeselecttool.h	/^typedef struct _GimpFreeSelectToolClass GimpFreeSelectToolClass;$/;"	t	typeref:struct:_GimpFreeSelectToolClass
GimpFuzzySelectTool	tools/gimpfuzzyselecttool.h	/^typedef struct _GimpFuzzySelectTool      GimpFuzzySelectTool;$/;"	t	typeref:struct:_GimpFuzzySelectTool
GimpFuzzySelectToolClass	tools/gimpfuzzyselecttool.h	/^typedef struct _GimpFuzzySelectToolClass GimpFuzzySelectToolClass;$/;"	t	typeref:struct:_GimpFuzzySelectToolClass
GimpGetContainerFunc	widgets/gimpitemtreeview.h	/^typedef GimpContainer * (* GimpGetContainerFunc) (const GimpImage *image);$/;"	t
GimpGetItemFunc	widgets/gimpitemtreeview.h	/^typedef GimpItem      * (* GimpGetItemFunc)      (const GimpImage *image);$/;"	t
GimpGradient	core/core-types.h	/^typedef struct _GimpGradient         GimpGradient;$/;"	t	typeref:struct:_GimpGradient
GimpGradientClass	core/gimpgradient.h	/^typedef struct _GimpGradientClass GimpGradientClass;$/;"	t	typeref:struct:_GimpGradientClass
GimpGradientColor	core/core-enums.h	/^} GimpGradientColor;$/;"	t	typeref:enum:__anon85
GimpGradientEditor	widgets/widgets-types.h	/^typedef struct _GimpGradientEditor           GimpGradientEditor;$/;"	t	typeref:struct:_GimpGradientEditor
GimpGradientEditorClass	widgets/gimpgradienteditor.h	/^typedef struct _GimpGradientEditorClass GimpGradientEditorClass;$/;"	t	typeref:struct:_GimpGradientEditorClass
GimpGradientOptions	paint/gimppaintoptions.h	/^typedef struct _GimpGradientOptions GimpGradientOptions;$/;"	t	typeref:struct:_GimpGradientOptions
GimpGradientSegment	core/core-types.h	/^typedef struct _GimpGradientSegment GimpGradientSegment;$/;"	t	typeref:struct:_GimpGradientSegment
GimpGradientSegmentColor	core/core-enums.h	/^} GimpGradientSegmentColor;$/;"	t	typeref:enum:__anon87
GimpGradientSegmentType	core/core-enums.h	/^} GimpGradientSegmentType;$/;"	t	typeref:enum:__anon86
GimpGradientSelect	widgets/widgets-types.h	/^typedef struct _GimpGradientSelect           GimpGradientSelect;$/;"	t	typeref:struct:_GimpGradientSelect
GimpGradientSelectClass	widgets/gimpgradientselect.h	/^typedef struct _GimpGradientSelectClass  GimpGradientSelectClass;$/;"	t	typeref:struct:_GimpGradientSelectClass
GimpGravityType	core/core-enums.h	/^} GimpGravityType;$/;"	t	typeref:enum:__anon63
GimpGrid	config/config-types.h	/^typedef struct _GimpGrid             GimpGrid;$/;"	t	typeref:struct:_GimpGrid
GimpGridClass	core/gimpgrid.h	/^typedef struct _GimpGridClass  GimpGridClass;$/;"	t	typeref:struct:_GimpGridClass
GimpGridEditor	widgets/widgets-types.h	/^typedef struct _GimpGridEditor               GimpGridEditor;$/;"	t	typeref:struct:_GimpGridEditor
GimpGridEditorClass	widgets/gimpgrideditor.h	/^typedef struct _GimpGridEditorClass GimpGridEditorClass;$/;"	t	typeref:struct:_GimpGridEditorClass
GimpGui	core/gimp-gui.h	/^typedef struct _GimpGui GimpGui;$/;"	t	typeref:struct:_GimpGui
GimpGuiConfig	config/config-types.h	/^typedef struct _GimpGuiConfig        GimpGuiConfig;$/;"	t	typeref:struct:_GimpGuiConfig
GimpGuiConfigClass	config/gimpguiconfig.h	/^typedef struct _GimpGuiConfigClass GimpGuiConfigClass;$/;"	t	typeref:struct:_GimpGuiConfigClass
GimpGuide	core/core-types.h	/^typedef struct _GimpGuide           GimpGuide;$/;"	t	typeref:struct:_GimpGuide
GimpGuideClass	core/gimpguide.h	/^typedef struct _GimpGuideClass GimpGuideClass;$/;"	t	typeref:struct:_GimpGuideClass
GimpGuideUndo	core/core-types.h	/^typedef struct _GimpGuideUndo         GimpGuideUndo;$/;"	t	typeref:struct:_GimpGuideUndo
GimpGuideUndoClass	core/gimpguideundo.h	/^typedef struct _GimpGuideUndoClass GimpGuideUndoClass;$/;"	t	typeref:struct:_GimpGuideUndoClass
GimpHandleType	tools/gimpdrawtool.h	/^} GimpHandleType;$/;"	t	typeref:enum:__anon278
GimpHeal	paint/paint-types.h	/^typedef struct _GimpHeal             GimpHeal;$/;"	t	typeref:struct:_GimpHeal
GimpHealClass	paint/gimpheal.h	/^typedef struct _GimpHealClass GimpHealClass;$/;"	t	typeref:struct:_GimpHealClass
GimpHealTool	tools/gimphealtool.h	/^typedef struct _GimpHealTool      GimpHealTool;$/;"	t	typeref:struct:_GimpHealTool
GimpHealToolClass	tools/gimphealtool.h	/^typedef struct _GimpHealToolClass GimpHealToolClass;$/;"	t	typeref:struct:_GimpHealToolClass
GimpHelpBrowserType	widgets/widgets-enums.h	/^} GimpHelpBrowserType;$/;"	t	typeref:enum:__anon404
GimpHistogram	base/base-types.h	/^typedef struct _GimpHistogram       GimpHistogram;$/;"	t	typeref:struct:_GimpHistogram
GimpHistogramBox	widgets/widgets-types.h	/^typedef struct _GimpHistogramBox             GimpHistogramBox;$/;"	t	typeref:struct:_GimpHistogramBox
GimpHistogramBoxClass	widgets/gimphistogrambox.h	/^typedef struct _GimpHistogramBoxClass GimpHistogramBoxClass;$/;"	t	typeref:struct:_GimpHistogramBoxClass
GimpHistogramChannel	base/base-enums.h	/^} GimpHistogramChannel;$/;"	t	typeref:enum:__anon10
GimpHistogramEditor	widgets/widgets-types.h	/^typedef struct _GimpHistogramEditor          GimpHistogramEditor;$/;"	t	typeref:struct:_GimpHistogramEditor
GimpHistogramEditorClass	widgets/gimphistogrameditor.h	/^typedef struct _GimpHistogramEditorClass GimpHistogramEditorClass;$/;"	t	typeref:struct:_GimpHistogramEditorClass
GimpHistogramOptions	tools/gimphistogramoptions.h	/^typedef struct _GimpHistogramOptions  GimpHistogramOptions;$/;"	t	typeref:struct:_GimpHistogramOptions
GimpHistogramOptionsClass	tools/gimphistogramoptions.h	/^typedef         GimpColorOptionsClass GimpHistogramOptionsClass;$/;"	t
GimpHistogramScale	widgets/widgets-enums.h	/^} GimpHistogramScale;$/;"	t	typeref:enum:__anon405
GimpHistogramView	widgets/widgets-types.h	/^typedef struct _GimpHistogramView            GimpHistogramView;$/;"	t	typeref:struct:_GimpHistogramView
GimpHistogramViewClass	widgets/gimphistogramview.h	/^typedef struct _GimpHistogramViewClass  GimpHistogramViewClass;$/;"	t	typeref:struct:_GimpHistogramViewClass
GimpHueRange	base/base-enums.h	/^} GimpHueRange;$/;"	t	typeref:enum:__anon12
GimpHueSaturationTool	tools/gimphuesaturationtool.h	/^typedef struct _GimpHueSaturationTool      GimpHueSaturationTool;$/;"	t	typeref:struct:_GimpHueSaturationTool
GimpHueSaturationToolClass	tools/gimphuesaturationtool.h	/^typedef struct _GimpHueSaturationToolClass GimpHueSaturationToolClass;$/;"	t	typeref:struct:_GimpHueSaturationToolClass
GimpIdleHelp	widgets/gimphelp.c	/^typedef struct _GimpIdleHelp GimpIdleHelp;$/;"	t	typeref:struct:_GimpIdleHelp	file:
GimpImage	core/core-types.h	/^typedef struct _GimpImage           GimpImage;$/;"	t	typeref:struct:_GimpImage
GimpImageClass	core/gimpimage.h	/^typedef struct _GimpImageClass GimpImageClass;$/;"	t	typeref:struct:_GimpImageClass
GimpImageCommentEditor	widgets/widgets-types.h	/^typedef struct _GimpImageCommentEditor       GimpImageCommentEditor;$/;"	t	typeref:struct:_GimpImageCommentEditor
GimpImageCommentEditorClass	widgets/gimpimagecommenteditor.h	/^typedef struct _GimpImageCommentEditorClass GimpImageCommentEditorClass;$/;"	t	typeref:struct:_GimpImageCommentEditorClass
GimpImageDock	widgets/widgets-types.h	/^typedef struct _GimpImageDock                GimpImageDock;$/;"	t	typeref:struct:_GimpImageDock
GimpImageDockClass	widgets/gimpimagedock.h	/^typedef struct _GimpImageDockClass   GimpImageDockClass;$/;"	t	typeref:struct:_GimpImageDockClass
GimpImageEditor	widgets/widgets-types.h	/^typedef struct _GimpImageEditor              GimpImageEditor;$/;"	t	typeref:struct:_GimpImageEditor
GimpImageEditorClass	widgets/gimpimageeditor.h	/^typedef struct _GimpImageEditorClass GimpImageEditorClass;$/;"	t	typeref:struct:_GimpImageEditorClass
GimpImageFlushAccumulator	core/gimpimage.h	/^typedef struct _GimpImageFlushAccumulator GimpImageFlushAccumulator;$/;"	t	typeref:struct:_GimpImageFlushAccumulator
GimpImageMap	core/core-types.h	/^typedef struct _GimpImageMap        GimpImageMap;$/;"	t	typeref:struct:_GimpImageMap
GimpImageMapApplyFunc	core/gimpimagemap.h	/^typedef void (* GimpImageMapApplyFunc) (gpointer     data,$/;"	t
GimpImageMapClass	core/gimpimagemap.h	/^typedef struct _GimpImageMapClass  GimpImageMapClass;$/;"	t	typeref:struct:_GimpImageMapClass
GimpImageMapOptions	tools/tools-types.h	/^typedef struct _GimpImageMapOptions          GimpImageMapOptions;$/;"	t	typeref:struct:_GimpImageMapOptions
GimpImageMapOptionsClass	tools/gimpimagemapoptions.h	/^typedef struct _GimpToolOptionsClass  GimpImageMapOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpImageMapTool	tools/tools-types.h	/^typedef struct _GimpImageMapTool             GimpImageMapTool;$/;"	t	typeref:struct:_GimpImageMapTool
GimpImageMapToolClass	tools/gimpimagemaptool.h	/^typedef struct _GimpImageMapToolClass GimpImageMapToolClass;$/;"	t	typeref:struct:_GimpImageMapToolClass
GimpImageParasiteView	widgets/widgets-types.h	/^typedef struct _GimpImageParasiteView        GimpImageParasiteView;$/;"	t	typeref:struct:_GimpImageParasiteView
GimpImageParasiteViewClass	widgets/gimpimageparasiteview.h	/^typedef struct _GimpImageParasiteViewClass GimpImageParasiteViewClass;$/;"	t	typeref:struct:_GimpImageParasiteViewClass
GimpImageProfileView	widgets/widgets-types.h	/^typedef struct _GimpImageProfileView         GimpImageProfileView;$/;"	t	typeref:struct:_GimpImageProfileView
GimpImageProfileViewClass	widgets/gimpimageprofileview.h	/^typedef struct _GimpImageProfileViewClass GimpImageProfileViewClass;$/;"	t	typeref:struct:_GimpImageProfileViewClass
GimpImagePropView	widgets/widgets-types.h	/^typedef struct _GimpImagePropView            GimpImagePropView;$/;"	t	typeref:struct:_GimpImagePropView
GimpImagePropViewClass	widgets/gimpimagepropview.h	/^typedef struct _GimpImagePropViewClass GimpImagePropViewClass;$/;"	t	typeref:struct:_GimpImagePropViewClass
GimpImageScaleCheckType	core/core-enums.h	/^} GimpImageScaleCheckType;$/;"	t	typeref:enum:__anon95
GimpImageUndo	core/core-types.h	/^typedef struct _GimpImageUndo         GimpImageUndo;$/;"	t	typeref:struct:_GimpImageUndo
GimpImageUndoClass	core/gimpimageundo.h	/^typedef struct _GimpImageUndoClass GimpImageUndoClass;$/;"	t	typeref:struct:_GimpImageUndoClass
GimpImageView	widgets/widgets-types.h	/^typedef struct _GimpImageView                GimpImageView;$/;"	t	typeref:struct:_GimpImageView
GimpImageViewClass	widgets/gimpimageview.h	/^typedef struct _GimpImageViewClass GimpImageViewClass;$/;"	t	typeref:struct:_GimpImageViewClass
GimpImagefile	core/core-types.h	/^typedef struct _GimpImagefile       GimpImagefile;$/;"	t	typeref:struct:_GimpImagefile
GimpImagefileClass	core/gimpimagefile.h	/^typedef struct _GimpImagefileClass GimpImagefileClass;$/;"	t	typeref:struct:_GimpImagefileClass
GimpInitStatusFunc	core/core-types.h	/^typedef void     (* GimpInitStatusFunc)   (const gchar      *text1,$/;"	t
GimpInk	paint/paint-types.h	/^typedef struct _GimpInk              GimpInk;$/;"	t	typeref:struct:_GimpInk
GimpInkBlobType	paint/paint-enums.h	/^} GimpInkBlobType;$/;"	t	typeref:enum:__anon217
GimpInkClass	paint/gimpink.h	/^typedef struct _GimpInkClass GimpInkClass;$/;"	t	typeref:struct:_GimpInkClass
GimpInkOptions	paint/paint-types.h	/^typedef struct _GimpInkOptions              GimpInkOptions;$/;"	t	typeref:struct:_GimpInkOptions
GimpInkOptionsClass	paint/gimpinkoptions.h	/^typedef struct _GimpInkOptionsClass GimpInkOptionsClass;$/;"	t	typeref:struct:_GimpInkOptionsClass
GimpInkTool	tools/gimpinktool.h	/^typedef struct _GimpInkTool      GimpInkTool;$/;"	t	typeref:struct:_GimpInkTool
GimpInkToolClass	tools/gimpinktool.h	/^typedef struct _GimpInkToolClass GimpInkToolClass;$/;"	t	typeref:struct:_GimpInkToolClass
GimpInkUndo	paint/paint-types.h	/^typedef struct _GimpInkUndo       GimpInkUndo;$/;"	t	typeref:struct:_GimpInkUndo
GimpInkUndoClass	paint/gimpinkundo.h	/^typedef struct _GimpInkUndoClass GimpInkUndoClass;$/;"	t	typeref:struct:_GimpInkUndoClass
GimpInterpreterDB	core/core-types.h	/^typedef struct _GimpInterpreterDB   GimpInterpreterDB;$/;"	t	typeref:struct:_GimpInterpreterDB
GimpInterpreterDBClass	plug-in/gimpinterpreterdb.h	/^typedef struct _GimpInterpreterDBClass GimpInterpreterDBClass;$/;"	t	typeref:struct:_GimpInterpreterDBClass
GimpInterpreterMagic	plug-in/gimpinterpreterdb.c	/^typedef struct _GimpInterpreterMagic GimpInterpreterMagic;$/;"	t	typeref:struct:_GimpInterpreterMagic	file:
GimpIscissorsTool	tools/gimpiscissorstool.h	/^typedef struct _GimpIscissorsTool      GimpIscissorsTool;$/;"	t	typeref:struct:_GimpIscissorsTool
GimpIscissorsToolClass	tools/gimpiscissorstool.h	/^typedef struct _GimpIscissorsToolClass GimpIscissorsToolClass;$/;"	t	typeref:struct:_GimpIscissorsToolClass
GimpItem	core/core-types.h	/^typedef struct _GimpItem            GimpItem;$/;"	t	typeref:struct:_GimpItem
GimpItemClass	core/gimpitem.h	/^typedef struct _GimpItemClass GimpItemClass;$/;"	t	typeref:struct:_GimpItemClass
GimpItemPropUndo	core/core-types.h	/^typedef struct _GimpItemPropUndo      GimpItemPropUndo;$/;"	t	typeref:struct:_GimpItemPropUndo
GimpItemPropUndoClass	core/gimpitempropundo.h	/^typedef struct _GimpItemPropUndoClass GimpItemPropUndoClass;$/;"	t	typeref:struct:_GimpItemPropUndoClass
GimpItemSet	core/core-enums.h	/^} GimpItemSet;$/;"	t	typeref:enum:__anon74
GimpItemTreeView	widgets/widgets-types.h	/^typedef struct _GimpItemTreeView             GimpItemTreeView;$/;"	t	typeref:struct:_GimpItemTreeView
GimpItemTreeViewClass	widgets/gimpitemtreeview.h	/^typedef struct _GimpItemTreeViewClass  GimpItemTreeViewClass;$/;"	t	typeref:struct:_GimpItemTreeViewClass
GimpItemTypeMask	core/core-enums.h	/^} GimpItemTypeMask;$/;"	t	typeref:enum:__anon96
GimpItemUndo	core/core-types.h	/^typedef struct _GimpItemUndo          GimpItemUndo;$/;"	t	typeref:struct:_GimpItemUndo
GimpItemUndoClass	core/gimpitemundo.h	/^typedef struct _GimpItemUndoClass GimpItemUndoClass;$/;"	t	typeref:struct:_GimpItemUndoClass
GimpJitterOptions	paint/gimppaintoptions.h	/^typedef struct _GimpJitterOptions   GimpJitterOptions;$/;"	t	typeref:struct:_GimpJitterOptions
GimpJoinStyle	core/core-enums.h	/^} GimpJoinStyle;$/;"	t	typeref:enum:__anon69
GimpLayer	core/core-types.h	/^typedef struct _GimpLayer           GimpLayer;$/;"	t	typeref:struct:_GimpLayer
GimpLayerClass	core/gimplayer.h	/^typedef struct _GimpLayerClass GimpLayerClass;$/;"	t	typeref:struct:_GimpLayerClass
GimpLayerMask	core/core-types.h	/^typedef struct _GimpLayerMask       GimpLayerMask;$/;"	t	typeref:struct:_GimpLayerMask
GimpLayerMaskClass	core/gimplayermask.h	/^typedef struct _GimpLayerMaskClass  GimpLayerMaskClass;$/;"	t	typeref:struct:_GimpLayerMaskClass
GimpLayerMaskPropUndo	core/core-types.h	/^typedef struct _GimpLayerMaskPropUndo GimpLayerMaskPropUndo;$/;"	t	typeref:struct:_GimpLayerMaskPropUndo
GimpLayerMaskPropUndoClass	core/gimplayermaskpropundo.h	/^typedef struct _GimpLayerMaskPropUndoClass GimpLayerMaskPropUndoClass;$/;"	t	typeref:struct:_GimpLayerMaskPropUndoClass
GimpLayerMaskUndo	core/core-types.h	/^typedef struct _GimpLayerMaskUndo     GimpLayerMaskUndo;$/;"	t	typeref:struct:_GimpLayerMaskUndo
GimpLayerMaskUndoClass	core/gimplayermaskundo.h	/^typedef struct _GimpLayerMaskUndoClass GimpLayerMaskUndoClass;$/;"	t	typeref:struct:_GimpLayerMaskUndoClass
GimpLayerModeEffects	base/base-enums.h	/^} GimpLayerModeEffects;$/;"	t	typeref:enum:__anon11
GimpLayerPropUndo	core/core-types.h	/^typedef struct _GimpLayerPropUndo     GimpLayerPropUndo;$/;"	t	typeref:struct:_GimpLayerPropUndo
GimpLayerPropUndoClass	core/gimplayerpropundo.h	/^typedef struct _GimpLayerPropUndoClass GimpLayerPropUndoClass;$/;"	t	typeref:struct:_GimpLayerPropUndoClass
GimpLayerTreeView	widgets/widgets-types.h	/^typedef struct _GimpLayerTreeView            GimpLayerTreeView;$/;"	t	typeref:struct:_GimpLayerTreeView
GimpLayerTreeViewClass	widgets/gimplayertreeview.h	/^typedef struct _GimpLayerTreeViewClass  GimpLayerTreeViewClass;$/;"	t	typeref:struct:_GimpLayerTreeViewClass
GimpLayerUndo	core/core-types.h	/^typedef struct _GimpLayerUndo         GimpLayerUndo;$/;"	t	typeref:struct:_GimpLayerUndo
GimpLayerUndoClass	core/gimplayerundo.h	/^typedef struct _GimpLayerUndoClass GimpLayerUndoClass;$/;"	t	typeref:struct:_GimpLayerUndoClass
GimpLevelsTool	tools/gimplevelstool.h	/^typedef struct _GimpLevelsTool      GimpLevelsTool;$/;"	t	typeref:struct:_GimpLevelsTool
GimpLevelsToolClass	tools/gimplevelstool.h	/^typedef struct _GimpLevelsToolClass GimpLevelsToolClass;$/;"	t	typeref:struct:_GimpLevelsToolClass
GimpList	core/core-types.h	/^typedef struct _GimpList            GimpList;$/;"	t	typeref:struct:_GimpList
GimpListClass	core/gimplist.h	/^typedef struct _GimpListClass GimpListClass;$/;"	t	typeref:struct:_GimpListClass
GimpLut	base/base-types.h	/^typedef struct _GimpLut             GimpLut;$/;"	t	typeref:struct:_GimpLut
GimpLutFunc	base/gimplut.h	/^typedef gfloat (*GimpLutFunc) (gpointer user_data,$/;"	t
GimpMagnifyOptions	tools/gimpmagnifyoptions.h	/^typedef struct _GimpMagnifyOptions   GimpMagnifyOptions;$/;"	t	typeref:struct:_GimpMagnifyOptions
GimpMagnifyOptionsClass	tools/gimpmagnifyoptions.h	/^typedef struct _GimpToolOptionsClass GimpMagnifyOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpMagnifyTool	tools/gimpmagnifytool.h	/^typedef struct _GimpMagnifyTool      GimpMagnifyTool;$/;"	t	typeref:struct:_GimpMagnifyTool
GimpMagnifyToolClass	tools/gimpmagnifytool.h	/^typedef struct _GimpMagnifyToolClass GimpMagnifyToolClass;$/;"	t	typeref:struct:_GimpMagnifyToolClass
GimpMarshalFunc	pdb/gimpprocedure.h	/^typedef GValueArray * (* GimpMarshalFunc) (GimpProcedure     *procedure,$/;"	t
GimpMaskApplyMode	core/core-enums.h	/^} GimpMaskApplyMode;$/;"	t	typeref:enum:__anon88
GimpMaskUndo	core/core-types.h	/^typedef struct _GimpMaskUndo          GimpMaskUndo;$/;"	t	typeref:struct:_GimpMaskUndo
GimpMaskUndoClass	core/gimpmaskundo.h	/^typedef struct _GimpMaskUndoClass GimpMaskUndoClass;$/;"	t	typeref:struct:_GimpMaskUndoClass
GimpMeasureOptions	tools/gimpmeasureoptions.h	/^typedef struct _GimpMeasureOptions   GimpMeasureOptions;$/;"	t	typeref:struct:_GimpMeasureOptions
GimpMeasureOptionsClass	tools/gimpmeasureoptions.h	/^typedef struct _GimpToolOptionsClass GimpMeasureOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpMeasureTool	tools/gimpmeasuretool.h	/^typedef struct _GimpMeasureTool      GimpMeasureTool;$/;"	t	typeref:struct:_GimpMeasureTool
GimpMeasureToolClass	tools/gimpmeasuretool.h	/^typedef struct _GimpMeasureToolClass GimpMeasureToolClass;$/;"	t	typeref:struct:_GimpMeasureToolClass
GimpMemsizeFunc	core/core-types.h	/^typedef gint64   (* GimpMemsizeFunc)      (gpointer          instance,$/;"	t
GimpMenuDock	widgets/widgets-types.h	/^typedef struct _GimpMenuDock                 GimpMenuDock;$/;"	t	typeref:struct:_GimpMenuDock
GimpMenuDockClass	widgets/gimpmenudock.h	/^typedef struct _GimpMenuDockClass  GimpMenuDockClass;$/;"	t	typeref:struct:_GimpMenuDockClass
GimpMenuFactory	widgets/widgets-types.h	/^typedef struct _GimpMenuFactory              GimpMenuFactory;$/;"	t	typeref:struct:_GimpMenuFactory
GimpMenuFactoryClass	widgets/gimpmenufactory.h	/^typedef struct _GimpMenuFactoryClass  GimpMenuFactoryClass;$/;"	t	typeref:struct:_GimpMenuFactoryClass
GimpMenuFactoryEntry	widgets/gimpmenufactory.h	/^typedef struct _GimpMenuFactoryEntry GimpMenuFactoryEntry;$/;"	t	typeref:struct:_GimpMenuFactoryEntry
GimpMenuPositionFunc	widgets/widgets-types.h	/^typedef void (* GimpMenuPositionFunc)      (GtkMenu         *menu,$/;"	t
GimpMergeType	core/core-enums.h	/^} GimpMergeType;$/;"	t	typeref:enum:__anon89
GimpMessageBox	widgets/widgets-types.h	/^typedef struct _GimpMessageBox               GimpMessageBox;$/;"	t	typeref:struct:_GimpMessageBox
GimpMessageBoxClass	widgets/gimpmessagebox.h	/^typedef struct _GimpMessageBoxClass  GimpMessageBoxClass;$/;"	t	typeref:struct:_GimpMessageBoxClass
GimpMessageDialog	widgets/widgets-types.h	/^typedef struct _GimpMessageDialog            GimpMessageDialog;$/;"	t	typeref:struct:_GimpMessageDialog
GimpMessageDialogClass	widgets/gimpmessagedialog.h	/^typedef struct _GimpMessageDialogClass  GimpMessageDialogClass;$/;"	t	typeref:struct:_GimpMessageDialogClass
GimpMessageSeverity	core/core-enums.h	/^} GimpMessageSeverity;$/;"	t	typeref:enum:__anon91
GimpMotionMode	tools/tools-enums.h	/^} GimpMotionMode;$/;"	t	typeref:enum:__anon264
GimpMoveOptions	tools/gimpmoveoptions.h	/^typedef struct _GimpMoveOptions      GimpMoveOptions;$/;"	t	typeref:struct:_GimpMoveOptions
GimpMoveOptionsClass	tools/gimpmoveoptions.h	/^typedef struct _GimpToolOptionsClass GimpMoveOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpMoveTool	tools/gimpmovetool.h	/^typedef struct _GimpMoveTool      GimpMoveTool;$/;"	t	typeref:struct:_GimpMoveTool
GimpMoveToolClass	tools/gimpmovetool.h	/^typedef struct _GimpMoveToolClass GimpMoveToolClass;$/;"	t	typeref:struct:_GimpMoveToolClass
GimpNavigationEditor	display/display-types.h	/^typedef struct _GimpNavigationEditor  GimpNavigationEditor;$/;"	t	typeref:struct:_GimpNavigationEditor
GimpNavigationEditorClass	display/gimpnavigationeditor.h	/^typedef struct _GimpNavigationEditorClass  GimpNavigationEditorClass;$/;"	t	typeref:struct:_GimpNavigationEditorClass
GimpNavigationView	widgets/widgets-types.h	/^typedef struct _GimpNavigationView           GimpNavigationView;$/;"	t	typeref:struct:_GimpNavigationView
GimpNavigationViewClass	widgets/gimpnavigationview.h	/^typedef struct _GimpNavigationViewClass  GimpNavigationViewClass;$/;"	t	typeref:struct:_GimpNavigationViewClass
GimpNewItemFunc	widgets/gimpitemtreeview.h	/^typedef GimpItem      * (* GimpNewItemFunc)      (GimpImage       *image);$/;"	t
GimpObject	core/core-types.h	/^typedef struct _GimpObject          GimpObject;$/;"	t	typeref:struct:_GimpObject
GimpObjectClass	core/gimpobject.h	/^typedef struct _GimpObjectClass GimpObjectClass;$/;"	t	typeref:struct:_GimpObjectClass
GimpObjectFilterFunc	core/core-types.h	/^typedef gboolean (* GimpObjectFilterFunc) (const GimpObject *object,$/;"	t
GimpOffsetType	core/core-enums.h	/^} GimpOffsetType;$/;"	t	typeref:enum:__anon84
GimpOrientationType	core/core-enums.h	/^} GimpOrientationType;$/;"	t	typeref:enum:__anon73
GimpPDB	pdb/pdb-types.h	/^typedef struct _GimpPDB                GimpPDB;$/;"	t	typeref:struct:_GimpPDB
GimpPDBClass	pdb/gimppdb.h	/^typedef struct _GimpPDBClass GimpPDBClass;$/;"	t	typeref:struct:_GimpPDBClass
GimpPDBCompatMode	pdb/pdb-types.h	/^} GimpPDBCompatMode;$/;"	t	typeref:enum:__anon229
GimpPaintCore	paint/paint-types.h	/^typedef struct _GimpPaintCore        GimpPaintCore;$/;"	t	typeref:struct:_GimpPaintCore
GimpPaintCoreClass	paint/gimppaintcore.h	/^typedef struct _GimpPaintCoreClass GimpPaintCoreClass;$/;"	t	typeref:struct:_GimpPaintCoreClass
GimpPaintCoreUndo	paint/paint-types.h	/^typedef struct _GimpPaintCoreUndo GimpPaintCoreUndo;$/;"	t	typeref:struct:_GimpPaintCoreUndo
GimpPaintCoreUndoClass	paint/gimppaintcoreundo.h	/^typedef struct _GimpPaintCoreUndoClass GimpPaintCoreUndoClass;$/;"	t	typeref:struct:_GimpPaintCoreUndoClass
GimpPaintInfo	core/core-types.h	/^typedef struct _GimpPaintInfo       GimpPaintInfo;$/;"	t	typeref:struct:_GimpPaintInfo
GimpPaintInfoClass	core/gimppaintinfo.h	/^typedef struct _GimpPaintInfoClass GimpPaintInfoClass;$/;"	t	typeref:struct:_GimpPaintInfoClass
GimpPaintOptions	paint/paint-types.h	/^typedef struct _GimpPaintOptions            GimpPaintOptions;$/;"	t	typeref:struct:_GimpPaintOptions
GimpPaintOptionsClass	paint/gimppaintoptions.h	/^typedef struct _GimpPaintOptionsClass GimpPaintOptionsClass;$/;"	t	typeref:struct:_GimpPaintOptionsClass
GimpPaintRegisterCallback	paint/paint-types.h	/^typedef void (* GimpPaintRegisterCallback) (Gimp        *gimp,$/;"	t
GimpPaintRegisterFunc	paint/paint-types.h	/^typedef void (* GimpPaintRegisterFunc)     (Gimp                      *gimp,$/;"	t
GimpPaintState	paint/paint-enums.h	/^} GimpPaintState;$/;"	t	typeref:enum:__anon218
GimpPaintTool	tools/tools-types.h	/^typedef struct _GimpPaintTool                GimpPaintTool;$/;"	t	typeref:struct:_GimpPaintTool
GimpPaintToolClass	tools/gimppainttool.h	/^typedef struct _GimpPaintToolClass GimpPaintToolClass;$/;"	t	typeref:struct:_GimpPaintToolClass
GimpPaintbrush	paint/paint-types.h	/^typedef struct _GimpPaintbrush       GimpPaintbrush;$/;"	t	typeref:struct:_GimpPaintbrush
GimpPaintbrushClass	paint/gimppaintbrush.h	/^typedef struct _GimpPaintbrushClass GimpPaintbrushClass;$/;"	t	typeref:struct:_GimpPaintbrushClass
GimpPaintbrushTool	tools/gimppaintbrushtool.h	/^typedef struct _GimpPaintbrushTool      GimpPaintbrushTool;$/;"	t	typeref:struct:_GimpPaintbrushTool
GimpPaintbrushToolClass	tools/gimppaintbrushtool.h	/^typedef struct _GimpPaintbrushToolClass GimpPaintbrushToolClass;$/;"	t	typeref:struct:_GimpPaintbrushToolClass
GimpPalette	core/core-types.h	/^typedef struct _GimpPalette          GimpPalette;$/;"	t	typeref:struct:_GimpPalette
GimpPaletteClass	core/gimppalette.h	/^typedef struct _GimpPaletteClass GimpPaletteClass;$/;"	t	typeref:struct:_GimpPaletteClass
GimpPaletteEditor	widgets/widgets-types.h	/^typedef struct _GimpPaletteEditor            GimpPaletteEditor;$/;"	t	typeref:struct:_GimpPaletteEditor
GimpPaletteEditorClass	widgets/gimppaletteeditor.h	/^typedef struct _GimpPaletteEditorClass GimpPaletteEditorClass;$/;"	t	typeref:struct:_GimpPaletteEditorClass
GimpPaletteEntry	core/core-types.h	/^typedef struct _GimpPaletteEntry    GimpPaletteEntry;$/;"	t	typeref:struct:_GimpPaletteEntry
GimpPaletteFileFormat	core/gimppalette-load.h	/^} GimpPaletteFileFormat;$/;"	t	typeref:enum:__anon135
GimpPaletteSelect	widgets/widgets-types.h	/^typedef struct _GimpPaletteSelect            GimpPaletteSelect;$/;"	t	typeref:struct:_GimpPaletteSelect
GimpPaletteSelectClass	widgets/gimppaletteselect.h	/^typedef struct _GimpPaletteSelectClass  GimpPaletteSelectClass;$/;"	t	typeref:struct:_GimpPaletteSelectClass
GimpPaletteView	widgets/widgets-types.h	/^typedef struct _GimpPaletteView              GimpPaletteView;$/;"	t	typeref:struct:_GimpPaletteView
GimpPaletteViewClass	widgets/gimppaletteview.h	/^typedef struct _GimpPaletteViewClass  GimpPaletteViewClass;$/;"	t	typeref:struct:_GimpPaletteViewClass
GimpParamSpecArray	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecArray GimpParamSpecArray;$/;"	t	typeref:struct:_GimpParamSpecArray
GimpParamSpecChannelID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecChannelID GimpParamSpecChannelID;$/;"	t	typeref:struct:_GimpParamSpecChannelID
GimpParamSpecDisplayID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecDisplayID GimpParamSpecDisplayID;$/;"	t	typeref:struct:_GimpParamSpecDisplayID
GimpParamSpecDrawableID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecDrawableID GimpParamSpecDrawableID;$/;"	t	typeref:struct:_GimpParamSpecDrawableID
GimpParamSpecEnum	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecEnum GimpParamSpecEnum;$/;"	t	typeref:struct:_GimpParamSpecEnum
GimpParamSpecFloatArray	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecFloatArray GimpParamSpecFloatArray;$/;"	t	typeref:struct:_GimpParamSpecFloatArray
GimpParamSpecImageID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecImageID GimpParamSpecImageID;$/;"	t	typeref:struct:_GimpParamSpecImageID
GimpParamSpecInt16	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecInt16 GimpParamSpecInt16;$/;"	t	typeref:struct:_GimpParamSpecInt16
GimpParamSpecInt16Array	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecInt16Array GimpParamSpecInt16Array;$/;"	t	typeref:struct:_GimpParamSpecInt16Array
GimpParamSpecInt32	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecInt32 GimpParamSpecInt32;$/;"	t	typeref:struct:_GimpParamSpecInt32
GimpParamSpecInt32Array	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecInt32Array GimpParamSpecInt32Array;$/;"	t	typeref:struct:_GimpParamSpecInt32Array
GimpParamSpecInt8	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecInt8 GimpParamSpecInt8;$/;"	t	typeref:struct:_GimpParamSpecInt8
GimpParamSpecInt8Array	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecInt8Array GimpParamSpecInt8Array;$/;"	t	typeref:struct:_GimpParamSpecInt8Array
GimpParamSpecItemID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecItemID GimpParamSpecItemID;$/;"	t	typeref:struct:_GimpParamSpecItemID
GimpParamSpecLayerID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecLayerID GimpParamSpecLayerID;$/;"	t	typeref:struct:_GimpParamSpecLayerID
GimpParamSpecLayerMaskID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecLayerMaskID GimpParamSpecLayerMaskID;$/;"	t	typeref:struct:_GimpParamSpecLayerMaskID
GimpParamSpecSelectionID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecSelectionID GimpParamSpecSelectionID;$/;"	t	typeref:struct:_GimpParamSpecSelectionID
GimpParamSpecString	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecString GimpParamSpecString;$/;"	t	typeref:struct:_GimpParamSpecString
GimpParamSpecStringArray	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecStringArray GimpParamSpecStringArray;$/;"	t	typeref:struct:_GimpParamSpecStringArray
GimpParamSpecVectorsID	core/gimpparamspecs.h	/^typedef struct _GimpParamSpecVectorsID GimpParamSpecVectorsID;$/;"	t	typeref:struct:_GimpParamSpecVectorsID
GimpParasiteList	core/core-types.h	/^typedef struct _GimpParasiteList    GimpParasiteList;$/;"	t	typeref:struct:_GimpParasiteList
GimpParasiteListClass	core/gimpparasitelist.h	/^typedef struct _GimpParasiteListClass GimpParasiteListClass;$/;"	t	typeref:struct:_GimpParasiteListClass
GimpPattern	core/core-types.h	/^typedef struct _GimpPattern          GimpPattern;$/;"	t	typeref:struct:_GimpPattern
GimpPatternClass	core/gimppattern.h	/^typedef struct _GimpPatternClass GimpPatternClass;$/;"	t	typeref:struct:_GimpPatternClass
GimpPatternClipboard	core/core-types.h	/^typedef struct _GimpPatternClipboard GimpPatternClipboard;$/;"	t	typeref:struct:_GimpPatternClipboard
GimpPatternClipboardClass	core/gimppatternclipboard.h	/^typedef struct _GimpPatternClipboardClass GimpPatternClipboardClass;$/;"	t	typeref:struct:_GimpPatternClipboardClass
GimpPatternFactoryView	widgets/widgets-types.h	/^typedef struct _GimpPatternFactoryView       GimpPatternFactoryView;$/;"	t	typeref:struct:_GimpPatternFactoryView
GimpPatternFactoryViewClass	widgets/gimppatternfactoryview.h	/^typedef struct _GimpPatternFactoryViewClass  GimpPatternFactoryViewClass;$/;"	t	typeref:struct:_GimpPatternFactoryViewClass
GimpPatternSelect	widgets/widgets-types.h	/^typedef struct _GimpPatternSelect            GimpPatternSelect;$/;"	t	typeref:struct:_GimpPatternSelect
GimpPatternSelectClass	widgets/gimppatternselect.h	/^typedef struct _GimpPatternSelectClass  GimpPatternSelectClass;$/;"	t	typeref:struct:_GimpPatternSelectClass
GimpPdbDialog	widgets/widgets-types.h	/^typedef struct _GimpPdbDialog                GimpPdbDialog;$/;"	t	typeref:struct:_GimpPdbDialog
GimpPdbDialogClass	widgets/gimppdbdialog.h	/^typedef struct _GimpPdbDialogClass  GimpPdbDialogClass;$/;"	t	typeref:struct:_GimpPdbDialogClass
GimpPdbProgress	core/core-types.h	/^typedef struct _GimpPdbProgress     GimpPdbProgress;$/;"	t	typeref:struct:_GimpPdbProgress
GimpPdbProgressClass	core/gimppdbprogress.h	/^typedef struct _GimpPdbProgressClass  GimpPdbProgressClass;$/;"	t	typeref:struct:_GimpPdbProgressClass
GimpPencil	paint/paint-types.h	/^typedef struct _GimpPencil           GimpPencil;$/;"	t	typeref:struct:_GimpPencil
GimpPencilClass	paint/gimppencil.h	/^typedef struct _GimpPencilClass GimpPencilClass;$/;"	t	typeref:struct:_GimpPencilClass
GimpPencilOptions	paint/paint-types.h	/^typedef struct _GimpPencilOptions           GimpPencilOptions;$/;"	t	typeref:struct:_GimpPencilOptions
GimpPencilOptionsClass	paint/gimppenciloptions.h	/^typedef struct _GimpPencilOptionsClass GimpPencilOptionsClass;$/;"	t	typeref:struct:_GimpPencilOptionsClass
GimpPencilTool	tools/gimppenciltool.h	/^typedef struct _GimpPencilTool      GimpPencilTool;$/;"	t	typeref:struct:_GimpPencilTool
GimpPencilToolClass	tools/gimppenciltool.h	/^typedef struct _GimpPencilToolClass GimpPencilToolClass;$/;"	t	typeref:struct:_GimpPencilToolClass
GimpPerspectiveClone	paint/paint-types.h	/^typedef struct _GimpPerspectiveClone GimpPerspectiveClone;$/;"	t	typeref:struct:_GimpPerspectiveClone
GimpPerspectiveCloneClass	paint/gimpperspectiveclone.h	/^typedef struct _GimpPerspectiveCloneClass GimpPerspectiveCloneClass;$/;"	t	typeref:struct:_GimpPerspectiveCloneClass
GimpPerspectiveCloneMode	paint/paint-enums.h	/^} GimpPerspectiveCloneMode;$/;"	t	typeref:enum:__anon214
GimpPerspectiveCloneOptions	paint/paint-types.h	/^typedef struct _GimpPerspectiveCloneOptions GimpPerspectiveCloneOptions;$/;"	t	typeref:struct:_GimpPerspectiveCloneOptions
GimpPerspectiveCloneOptionsClass	paint/gimpperspectivecloneoptions.h	/^typedef struct _GimpPerspectiveCloneOptionsClass GimpPerspectiveCloneOptionsClass;$/;"	t	typeref:struct:_GimpPerspectiveCloneOptionsClass
GimpPerspectiveCloneTool	tools/gimpperspectiveclonetool.h	/^typedef struct _GimpPerspectiveCloneTool      GimpPerspectiveCloneTool;$/;"	t	typeref:struct:_GimpPerspectiveCloneTool
GimpPerspectiveCloneToolClass	tools/gimpperspectiveclonetool.h	/^typedef struct _GimpPerspectiveCloneToolClass GimpPerspectiveCloneToolClass;$/;"	t	typeref:struct:_GimpPerspectiveCloneToolClass
GimpPerspectiveTool	tools/gimpperspectivetool.h	/^typedef struct _GimpPerspectiveTool      GimpPerspectiveTool;$/;"	t	typeref:struct:_GimpPerspectiveTool
GimpPerspectiveToolClass	tools/gimpperspectivetool.h	/^typedef struct _GimpPerspectiveToolClass GimpPerspectiveToolClass;$/;"	t	typeref:struct:_GimpPerspectiveToolClass
GimpPickable	core/core-types.h	/^typedef struct _GimpPickable        GimpPickable; \/* dummy typedef *\/$/;"	t	typeref:struct:_GimpPickable
GimpPickableInterface	core/gimppickable.h	/^typedef struct _GimpPickableInterface GimpPickableInterface;$/;"	t	typeref:struct:_GimpPickableInterface
GimpPixelFormat	composite/gimp-composite.h	/^} GimpPixelFormat;$/;"	t	typeref:enum:__anon31
GimpPlugIn	plug-in/plug-in-types.h	/^typedef struct _GimpPlugIn           GimpPlugIn;$/;"	t	typeref:struct:_GimpPlugIn
GimpPlugInAction	widgets/widgets-types.h	/^typedef struct _GimpPlugInAction             GimpPlugInAction;$/;"	t	typeref:struct:_GimpPlugInAction
GimpPlugInActionClass	widgets/gimppluginaction.h	/^typedef struct _GimpPlugInActionClass GimpPlugInActionClass;$/;"	t	typeref:struct:_GimpPlugInActionClass
GimpPlugInActionEntry	widgets/widgets-types.h	/^typedef struct _GimpPlugInActionEntry        GimpPlugInActionEntry;$/;"	t	typeref:struct:_GimpPlugInActionEntry
GimpPlugInCallMode	plug-in/plug-in-enums.h	/^} GimpPlugInCallMode;$/;"	t	typeref:enum:__anon235
GimpPlugInClass	plug-in/gimpplugin.h	/^typedef struct _GimpPlugInClass GimpPlugInClass;$/;"	t	typeref:struct:_GimpPlugInClass
GimpPlugInCleanupImage	plug-in/gimpplugin-cleanup.c	/^typedef struct _GimpPlugInCleanupImage GimpPlugInCleanupImage;$/;"	t	typeref:struct:_GimpPlugInCleanupImage	file:
GimpPlugInData	plug-in/gimppluginmanager-data.c	/^typedef struct _GimpPlugInData GimpPlugInData;$/;"	t	typeref:struct:_GimpPlugInData	file:
GimpPlugInDebug	plug-in/plug-in-types.h	/^typedef struct _GimpPlugInDebug      GimpPlugInDebug;$/;"	t	typeref:struct:_GimpPlugInDebug
GimpPlugInDef	plug-in/plug-in-types.h	/^typedef struct _GimpPlugInDef        GimpPlugInDef;$/;"	t	typeref:struct:_GimpPlugInDef
GimpPlugInDefClass	plug-in/gimpplugindef.h	/^typedef struct _GimpPlugInDefClass GimpPlugInDefClass;$/;"	t	typeref:struct:_GimpPlugInDefClass
GimpPlugInErrorCode	plug-in/gimppluginerror.h	/^} GimpPlugInErrorCode;$/;"	t	typeref:enum:__anon232
GimpPlugInHelpDomain	plug-in/gimppluginmanager-help-domain.c	/^typedef struct _GimpPlugInHelpDomain GimpPlugInHelpDomain;$/;"	t	typeref:struct:_GimpPlugInHelpDomain	file:
GimpPlugInImageType	plug-in/plug-in-enums.h	/^} GimpPlugInImageType;$/;"	t	typeref:enum:__anon234
GimpPlugInLocaleDomain	plug-in/gimppluginmanager-locale-domain.c	/^typedef struct _GimpPlugInLocaleDomain GimpPlugInLocaleDomain;$/;"	t	typeref:struct:_GimpPlugInLocaleDomain	file:
GimpPlugInManager	plug-in/plug-in-types.h	/^typedef struct _GimpPlugInManager    GimpPlugInManager;$/;"	t	typeref:struct:_GimpPlugInManager
GimpPlugInManagerClass	plug-in/gimppluginmanager.h	/^typedef struct _GimpPlugInManagerClass GimpPlugInManagerClass;$/;"	t	typeref:struct:_GimpPlugInManagerClass
GimpPlugInMenuBranch	plug-in/plug-in-types.h	/^typedef struct _GimpPlugInMenuBranch GimpPlugInMenuBranch;$/;"	t	typeref:struct:_GimpPlugInMenuBranch
GimpPlugInProcFrame	plug-in/plug-in-types.h	/^typedef struct _GimpPlugInProcFrame  GimpPlugInProcFrame;$/;"	t	typeref:struct:_GimpPlugInProcFrame
GimpPlugInProcedure	pdb/pdb-types.h	/^typedef struct _GimpPlugInProcedure    GimpPlugInProcedure;$/;"	t	typeref:struct:_GimpPlugInProcedure
GimpPlugInProcedureClass	plug-in/gimppluginprocedure.h	/^typedef struct _GimpPlugInProcedureClass GimpPlugInProcedureClass;$/;"	t	typeref:struct:_GimpPlugInProcedureClass
GimpPlugInShm	plug-in/plug-in-types.h	/^typedef struct _GimpPlugInShm        GimpPlugInShm;$/;"	t	typeref:struct:_GimpPlugInShm
GimpPluginConfig	config/config-types.h	/^typedef struct _GimpPluginConfig     GimpPluginConfig;$/;"	t	typeref:struct:_GimpPluginConfig
GimpPluginConfigClass	config/gimppluginconfig.h	/^typedef struct _GimpPluginConfigClass GimpPluginConfigClass;$/;"	t	typeref:struct:_GimpPluginConfigClass
GimpPosterizeTool	tools/gimpposterizetool.h	/^typedef struct _GimpPosterizeTool      GimpPosterizeTool;$/;"	t	typeref:struct:_GimpPosterizeTool
GimpPosterizeToolClass	tools/gimpposterizetool.h	/^typedef struct _GimpPosterizeToolClass GimpPosterizeToolClass;$/;"	t	typeref:struct:_GimpPosterizeToolClass
GimpPressureOptions	paint/gimppaintoptions.h	/^typedef struct _GimpPressureOptions GimpPressureOptions;$/;"	t	typeref:struct:_GimpPressureOptions
GimpProcedure	pdb/pdb-types.h	/^typedef struct _GimpProcedure          GimpProcedure;$/;"	t	typeref:struct:_GimpProcedure
GimpProcedureClass	pdb/gimpprocedure.h	/^typedef struct _GimpProcedureClass GimpProcedureClass;$/;"	t	typeref:struct:_GimpProcedureClass
GimpProfileChooserDialog	widgets/widgets-types.h	/^typedef struct _GimpProfileChooserDialog     GimpProfileChooserDialog;$/;"	t	typeref:struct:_GimpProfileChooserDialog
GimpProfileChooserDialogClass	widgets/gimpprofilechooserdialog.h	/^typedef struct _GimpProfileChooserDialogClass  GimpProfileChooserDialogClass;$/;"	t	typeref:struct:_GimpProfileChooserDialogClass
GimpProgress	core/core-types.h	/^typedef struct _GimpProgress        GimpProgress; \/* dummy typedef *\/$/;"	t	typeref:struct:_GimpProgress
GimpProgressBox	widgets/widgets-types.h	/^typedef struct _GimpProgressBox              GimpProgressBox;$/;"	t	typeref:struct:_GimpProgressBox
GimpProgressBoxClass	widgets/gimpprogressbox.h	/^typedef struct _GimpProgressBoxClass  GimpProgressBoxClass;$/;"	t	typeref:struct:_GimpProgressBoxClass
GimpProgressDialog	widgets/widgets-types.h	/^typedef struct _GimpProgressDialog           GimpProgressDialog;$/;"	t	typeref:struct:_GimpProgressDialog
GimpProgressDialogClass	widgets/gimpprogressdialog.h	/^typedef struct _GimpProgressDialogClass  GimpProgressDialogClass;$/;"	t	typeref:struct:_GimpProgressDialogClass
GimpProgressInterface	core/gimpprogress.h	/^typedef struct _GimpProgressInterface GimpProgressInterface;$/;"	t	typeref:struct:_GimpProgressInterface
GimpProjection	core/core-types.h	/^typedef struct _GimpProjection      GimpProjection;$/;"	t	typeref:struct:_GimpProjection
GimpProjectionClass	core/gimpprojection.h	/^typedef struct _GimpProjectionClass GimpProjectionClass;$/;"	t	typeref:struct:_GimpProjectionClass
GimpProjectionIdleRender	core/gimpprojection.h	/^typedef struct _GimpProjectionIdleRender GimpProjectionIdleRender;$/;"	t	typeref:struct:_GimpProjectionIdleRender
GimpPropNumberPairEntryData	widgets/gimppropwidgets.c	/^} GimpPropNumberPairEntryData;$/;"	t	typeref:struct:__anon382	file:
GimpRadioActionEntry	widgets/widgets-types.h	/^typedef struct _GimpRadioActionEntry         GimpRadioActionEntry;$/;"	t	typeref:struct:_GimpRadioActionEntry
GimpRc	config/config-types.h	/^typedef struct _GimpRc               GimpRc;$/;"	t	typeref:struct:_GimpRc
GimpRcClass	config/gimprc.h	/^typedef struct _GimpRcClass GimpRcClass;$/;"	t	typeref:struct:_GimpRcClass
GimpRecentItem	file/gimprecentitem.h	/^typedef struct _GimpRecentItem GimpRecentItem;$/;"	t	typeref:struct:_GimpRecentItem
GimpRectSelectMode	tools/tools-enums.h	/^} GimpRectSelectMode;$/;"	t	typeref:enum:__anon256
GimpRectSelectOptions	tools/gimprectangleselectoptions.h	/^typedef struct _GimpRectSelectOptions GimpRectSelectOptions;$/;"	t	typeref:struct:_GimpRectSelectOptions
GimpRectSelectOptionsClass	tools/gimprectangleselectoptions.h	/^typedef struct _GimpToolOptionsClass  GimpRectSelectOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpRectSelectTool	tools/gimprectangleselecttool.h	/^typedef struct _GimpRectSelectTool      GimpRectSelectTool;$/;"	t	typeref:struct:_GimpRectSelectTool
GimpRectSelectToolClass	tools/gimprectangleselecttool.h	/^typedef struct _GimpRectSelectToolClass GimpRectSelectToolClass;$/;"	t	typeref:struct:_GimpRectSelectToolClass
GimpRectangleConstraint	tools/tools-enums.h	/^} GimpRectangleConstraint;$/;"	t	typeref:enum:__anon254
GimpRectangleFunction	tools/gimprectangletool.h	/^} GimpRectangleFunction;$/;"	t	typeref:enum:__anon293
GimpRectangleGuide	tools/tools-enums.h	/^} GimpRectangleGuide;$/;"	t	typeref:enum:__anon253
GimpRectangleOptions	tools/gimprectangleoptions.h	/^typedef struct _GimpRectangleOptions          GimpRectangleOptions;$/;"	t	typeref:struct:_GimpRectangleOptions
GimpRectangleOptionsInterface	tools/gimprectangleoptions.h	/^typedef struct _GimpRectangleOptionsInterface GimpRectangleOptionsInterface;$/;"	t	typeref:struct:_GimpRectangleOptionsInterface
GimpRectangleOptionsPrivate	tools/gimprectangleoptions.h	/^typedef struct _GimpRectangleOptionsPrivate   GimpRectangleOptionsPrivate;$/;"	t	typeref:struct:_GimpRectangleOptionsPrivate
GimpRectangleOptionsProp	tools/gimprectangleoptions.h	/^} GimpRectangleOptionsProp;$/;"	t	typeref:enum:__anon267
GimpRectangleTool	tools/gimprectangletool.h	/^typedef struct _GimpRectangleTool          GimpRectangleTool;$/;"	t	typeref:struct:_GimpRectangleTool
GimpRectangleToolFixedRule	tools/tools-enums.h	/^} GimpRectangleToolFixedRule;$/;"	t	typeref:enum:__anon255
GimpRectangleToolInterface	tools/gimprectangletool.h	/^typedef struct _GimpRectangleToolInterface GimpRectangleToolInterface;$/;"	t	typeref:struct:_GimpRectangleToolInterface
GimpRectangleToolPrivate	tools/gimprectangletool.c	/^typedef struct _GimpRectangleToolPrivate GimpRectangleToolPrivate;$/;"	t	typeref:struct:_GimpRectangleToolPrivate	file:
GimpRectangleToolProp	tools/gimprectangletool.h	/^} GimpRectangleToolProp;$/;"	t	typeref:enum:__anon292
GimpRegionSelectTool	tools/gimpregionselecttool.h	/^typedef struct _GimpRegionSelectTool      GimpRegionSelectTool;$/;"	t	typeref:struct:_GimpRegionSelectTool
GimpRegionSelectToolClass	tools/gimpregionselecttool.h	/^typedef struct _GimpRegionSelectToolClass GimpRegionSelectToolClass;$/;"	t	typeref:struct:_GimpRegionSelectToolClass
GimpRemoveItemFunc	widgets/gimpitemtreeview.h	/^typedef void            (* GimpRemoveItemFunc)   (GimpImage       *image,$/;"	t
GimpReorderItemFunc	widgets/gimpitemtreeview.h	/^typedef void            (* GimpReorderItemFunc)  (GimpImage       *image,$/;"	t
GimpResizeCallback	dialogs/resize-dialog.h	/^typedef void (* GimpResizeCallback) (GtkWidget    *dialog,$/;"	t
GimpResolutionCallback	dialogs/print-size-dialog.h	/^typedef void (* GimpResolutionCallback) (GtkWidget *dialog,$/;"	t
GimpRotateTool	tools/gimprotatetool.h	/^typedef struct _GimpRotateTool      GimpRotateTool;$/;"	t	typeref:struct:_GimpRotateTool
GimpRotateToolClass	tools/gimprotatetool.h	/^typedef struct _GimpRotateToolClass GimpRotateToolClass;$/;"	t	typeref:struct:_GimpRotateToolClass
GimpRotationType	core/core-enums.h	/^} GimpRotationType;$/;"	t	typeref:enum:__anon75
GimpSamplePoint	core/core-types.h	/^typedef struct _GimpSamplePoint     GimpSamplePoint;$/;"	t	typeref:struct:_GimpSamplePoint
GimpSamplePointEditor	widgets/widgets-types.h	/^typedef struct _GimpSamplePointEditor        GimpSamplePointEditor;$/;"	t	typeref:struct:_GimpSamplePointEditor
GimpSamplePointEditorClass	widgets/gimpsamplepointeditor.h	/^typedef struct _GimpSamplePointEditorClass GimpSamplePointEditorClass;$/;"	t	typeref:struct:_GimpSamplePointEditorClass
GimpSamplePointUndo	core/core-types.h	/^typedef struct _GimpSamplePointUndo   GimpSamplePointUndo;$/;"	t	typeref:struct:_GimpSamplePointUndo
GimpSamplePointUndoClass	core/gimpsamplepointundo.h	/^typedef struct _GimpSamplePointUndoClass GimpSamplePointUndoClass;$/;"	t	typeref:struct:_GimpSamplePointUndoClass
GimpSaveMode	actions/actions-types.h	/^} GimpSaveMode;$/;"	t	typeref:enum:__anon4
GimpScaleCallback	dialogs/dialogs-types.h	/^typedef void (* GimpScaleCallback) (GtkWidget             *dialog,$/;"	t
GimpScaleComboBox	display/display-types.h	/^typedef struct _GimpScaleComboBox     GimpScaleComboBox;$/;"	t	typeref:struct:_GimpScaleComboBox
GimpScaleComboBoxClass	display/gimpscalecombobox.h	/^typedef struct _GimpScaleComboBoxClass  GimpScaleComboBoxClass;$/;"	t	typeref:struct:_GimpScaleComboBoxClass
GimpScaleTool	tools/gimpscaletool.h	/^typedef struct _GimpScaleTool      GimpScaleTool;$/;"	t	typeref:struct:_GimpScaleTool
GimpScaleToolClass	tools/gimpscaletool.h	/^typedef struct _GimpScaleToolClass GimpScaleToolClass;$/;"	t	typeref:struct:_GimpScaleToolClass
GimpScanConvert	core/core-types.h	/^typedef struct _GimpScanConvert     GimpScanConvert;$/;"	t	typeref:struct:_GimpScanConvert
GimpSelectCriterion	core/core-enums.h	/^} GimpSelectCriterion;$/;"	t	typeref:enum:__anon90
GimpSelection	core/core-types.h	/^typedef struct _GimpSelection       GimpSelection;$/;"	t	typeref:struct:_GimpSelection
GimpSelectionClass	core/gimpselection.h	/^typedef struct _GimpSelectionClass GimpSelectionClass;$/;"	t	typeref:struct:_GimpSelectionClass
GimpSelectionControl	core/core-enums.h	/^} GimpSelectionControl;$/;"	t	typeref:enum:__anon78
GimpSelectionEditor	widgets/widgets-types.h	/^typedef struct _GimpSelectionEditor          GimpSelectionEditor;$/;"	t	typeref:struct:_GimpSelectionEditor
GimpSelectionEditorClass	widgets/gimpselectioneditor.h	/^typedef struct _GimpSelectionEditorClass GimpSelectionEditorClass;$/;"	t	typeref:struct:_GimpSelectionEditorClass
GimpSelectionOptions	tools/gimpselectionoptions.h	/^typedef struct _GimpSelectionOptions GimpSelectionOptions;$/;"	t	typeref:struct:_GimpSelectionOptions
GimpSelectionOptionsClass	tools/gimpselectionoptions.h	/^typedef struct _GimpToolOptionsClass GimpSelectionOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpSelectionTool	tools/gimpselectiontool.h	/^typedef struct _GimpSelectionTool      GimpSelectionTool;$/;"	t	typeref:struct:_GimpSelectionTool
GimpSelectionToolClass	tools/gimpselectiontool.h	/^typedef struct _GimpSelectionToolClass GimpSelectionToolClass;$/;"	t	typeref:struct:_GimpSelectionToolClass
GimpSessionInfo	widgets/widgets-types.h	/^typedef struct _GimpSessionInfo              GimpSessionInfo;$/;"	t	typeref:struct:_GimpSessionInfo
GimpSessionInfoAux	widgets/widgets-types.h	/^typedef struct _GimpSessionInfoAux           GimpSessionInfoAux;$/;"	t	typeref:struct:_GimpSessionInfoAux
GimpSessionInfoBook	widgets/widgets-types.h	/^typedef struct _GimpSessionInfoBook          GimpSessionInfoBook;$/;"	t	typeref:struct:_GimpSessionInfoBook
GimpSessionInfoDockable	widgets/widgets-types.h	/^typedef struct _GimpSessionInfoDockable      GimpSessionInfoDockable;$/;"	t	typeref:struct:_GimpSessionInfoDockable
GimpSetItemFunc	widgets/gimpitemtreeview.h	/^typedef void            (* GimpSetItemFunc)      (GimpImage       *image,$/;"	t
GimpShearTool	tools/gimpsheartool.h	/^typedef struct _GimpShearTool      GimpShearTool;$/;"	t	typeref:struct:_GimpShearTool
GimpShearToolClass	tools/gimpsheartool.h	/^typedef struct _GimpShearToolClass GimpShearToolClass;$/;"	t	typeref:struct:_GimpShearToolClass
GimpSizeBox	widgets/widgets-types.h	/^typedef struct _GimpSizeBox                  GimpSizeBox;$/;"	t	typeref:struct:_GimpSizeBox
GimpSizeBoxClass	widgets/gimpsizebox.h	/^typedef struct _GimpSizeBoxClass  GimpSizeBoxClass;$/;"	t	typeref:struct:_GimpSizeBoxClass
GimpSizeBoxPrivate	widgets/gimpsizebox.c	/^typedef struct _GimpSizeBoxPrivate GimpSizeBoxPrivate;$/;"	t	typeref:struct:_GimpSizeBoxPrivate	file:
GimpSmudge	paint/paint-types.h	/^typedef struct _GimpSmudge           GimpSmudge;$/;"	t	typeref:struct:_GimpSmudge
GimpSmudgeClass	paint/gimpsmudge.h	/^typedef struct _GimpSmudgeClass GimpSmudgeClass;$/;"	t	typeref:struct:_GimpSmudgeClass
GimpSmudgeOptions	paint/paint-types.h	/^typedef struct _GimpSmudgeOptions           GimpSmudgeOptions;$/;"	t	typeref:struct:_GimpSmudgeOptions
GimpSmudgeOptionsClass	paint/gimpsmudgeoptions.h	/^typedef struct _GimpSmudgeOptionsClass GimpSmudgeOptionsClass;$/;"	t	typeref:struct:_GimpSmudgeOptionsClass
GimpSmudgeTool	tools/gimpsmudgetool.h	/^typedef struct _GimpSmudgeTool      GimpSmudgeTool;$/;"	t	typeref:struct:_GimpSmudgeTool
GimpSmudgeToolClass	tools/gimpsmudgetool.h	/^typedef struct _GimpSmudgeToolClass GimpSmudgeToolClass;$/;"	t	typeref:struct:_GimpSmudgeToolClass
GimpSourceAlignMode	paint/paint-enums.h	/^} GimpSourceAlignMode;$/;"	t	typeref:enum:__anon215
GimpSourceCore	paint/paint-types.h	/^typedef struct _GimpSourceCore       GimpSourceCore;$/;"	t	typeref:struct:_GimpSourceCore
GimpSourceCoreClass	paint/gimpsourcecore.h	/^typedef struct _GimpSourceCoreClass GimpSourceCoreClass;$/;"	t	typeref:struct:_GimpSourceCoreClass
GimpSourceOptions	paint/paint-types.h	/^typedef struct _GimpSourceOptions           GimpSourceOptions;$/;"	t	typeref:struct:_GimpSourceOptions
GimpSourceOptionsClass	paint/gimpsourceoptions.h	/^typedef struct _GimpSourceOptionsClass GimpSourceOptionsClass;$/;"	t	typeref:struct:_GimpSourceOptionsClass
GimpSourceTool	tools/gimpsourcetool.h	/^typedef struct _GimpSourceTool      GimpSourceTool;$/;"	t	typeref:struct:_GimpSourceTool
GimpSourceToolClass	tools/gimpsourcetool.h	/^typedef struct _GimpSourceToolClass GimpSourceToolClass;$/;"	t	typeref:struct:_GimpSourceToolClass
GimpSpaceBarAction	display/display-enums.h	/^} GimpSpaceBarAction;$/;"	t	typeref:enum:__anon187
GimpSplash	gui/splash.c	/^} GimpSplash;$/;"	t	typeref:struct:__anon201	file:
GimpStatusbar	display/display-types.h	/^typedef struct _GimpStatusbar         GimpStatusbar;$/;"	t	typeref:struct:_GimpStatusbar
GimpStatusbarClass	display/gimpstatusbar.h	/^typedef struct _GimpStatusbarClass GimpStatusbarClass;$/;"	t	typeref:struct:_GimpStatusbarClass
GimpStatusbarMsg	display/gimpstatusbar.c	/^typedef struct _GimpStatusbarMsg GimpStatusbarMsg;$/;"	t	typeref:struct:_GimpStatusbarMsg	file:
GimpStringAction	widgets/widgets-types.h	/^typedef struct _GimpStringAction             GimpStringAction;$/;"	t	typeref:struct:_GimpStringAction
GimpStringActionClass	widgets/gimpstringaction.h	/^typedef struct _GimpStringActionClass GimpStringActionClass;$/;"	t	typeref:struct:_GimpStringActionClass
GimpStringActionEntry	widgets/widgets-types.h	/^typedef struct _GimpStringActionEntry        GimpStringActionEntry;$/;"	t	typeref:struct:_GimpStringActionEntry
GimpStroke	vectors/vectors-types.h	/^typedef struct _GimpStroke          GimpStroke;$/;"	t	typeref:struct:_GimpStroke
GimpStrokeClass	vectors/gimpstroke.h	/^typedef struct _GimpStrokeClass GimpStrokeClass;$/;"	t	typeref:struct:_GimpStrokeClass
GimpStrokeDesc	core/core-types.h	/^typedef struct _GimpStrokeDesc      GimpStrokeDesc;$/;"	t	typeref:struct:_GimpStrokeDesc
GimpStrokeDescClass	core/gimpstrokedesc.h	/^typedef struct _GimpStrokeDescClass GimpStrokeDescClass;$/;"	t	typeref:struct:_GimpStrokeDescClass
GimpStrokeEditor	widgets/widgets-types.h	/^typedef struct _GimpStrokeEditor             GimpStrokeEditor;$/;"	t	typeref:struct:_GimpStrokeEditor
GimpStrokeEditorClass	widgets/gimpstrokeeditor.h	/^typedef struct _GimpStrokeEditorClass GimpStrokeEditorClass;$/;"	t	typeref:struct:_GimpStrokeEditorClass
GimpStrokeMethod	core/core-enums.h	/^} GimpStrokeMethod;$/;"	t	typeref:enum:__anon67
GimpStrokeOptions	core/core-types.h	/^typedef struct _GimpStrokeOptions   GimpStrokeOptions;$/;"	t	typeref:struct:_GimpStrokeOptions
GimpStrokeOptionsClass	core/gimpstrokeoptions.h	/^typedef struct _GimpStrokeOptionsClass GimpStrokeOptionsClass;$/;"	t	typeref:struct:_GimpStrokeOptionsClass
GimpStrokeStyle	core/core-enums.h	/^} GimpStrokeStyle;$/;"	t	typeref:enum:__anon68
GimpSubProgress	core/core-types.h	/^typedef struct _GimpSubProgress     GimpSubProgress;$/;"	t	typeref:struct:_GimpSubProgress
GimpSubProgressClass	core/gimpsubprogress.h	/^typedef struct _GimpSubProgressClass GimpSubProgressClass;$/;"	t	typeref:struct:_GimpSubProgressClass
GimpTabStyle	widgets/widgets-enums.h	/^} GimpTabStyle;$/;"	t	typeref:enum:__anon406
GimpTattoo	core/core-types.h	/^typedef         guint32             GimpTattoo;$/;"	t
GimpTemplate	config/config-types.h	/^typedef struct _GimpTemplate         GimpTemplate;$/;"	t	typeref:struct:_GimpTemplate
GimpTemplateClass	core/gimptemplate.h	/^typedef struct _GimpTemplateClass GimpTemplateClass;$/;"	t	typeref:struct:_GimpTemplateClass
GimpTemplateEditor	widgets/widgets-types.h	/^typedef struct _GimpTemplateEditor           GimpTemplateEditor;$/;"	t	typeref:struct:_GimpTemplateEditor
GimpTemplateEditorClass	widgets/gimptemplateeditor.h	/^typedef struct _GimpTemplateEditorClass GimpTemplateEditorClass;$/;"	t	typeref:struct:_GimpTemplateEditorClass
GimpTemplateView	widgets/widgets-types.h	/^typedef struct _GimpTemplateView             GimpTemplateView;$/;"	t	typeref:struct:_GimpTemplateView
GimpTemplateViewClass	widgets/gimptemplateview.h	/^typedef struct _GimpTemplateViewClass  GimpTemplateViewClass;$/;"	t	typeref:struct:_GimpTemplateViewClass
GimpTemporaryProcedure	pdb/pdb-types.h	/^typedef struct _GimpTemporaryProcedure GimpTemporaryProcedure;$/;"	t	typeref:struct:_GimpTemporaryProcedure
GimpTemporaryProcedureClass	plug-in/gimptemporaryprocedure.h	/^typedef struct _GimpTemporaryProcedureClass GimpTemporaryProcedureClass;$/;"	t	typeref:struct:_GimpTemporaryProcedureClass
GimpText	text/text-types.h	/^typedef struct _GimpText       GimpText;$/;"	t	typeref:struct:_GimpText
GimpTextBoxMode	text/text-enums.h	/^} GimpTextBoxMode;$/;"	t	typeref:enum:__anon239
GimpTextClass	text/gimptext.h	/^typedef struct _GimpTextClass  GimpTextClass;$/;"	t	typeref:struct:_GimpTextClass
GimpTextDirection	text/text-enums.h	/^} GimpTextDirection;$/;"	t	typeref:enum:__anon240
GimpTextEditor	widgets/widgets-types.h	/^typedef struct _GimpTextEditor               GimpTextEditor;$/;"	t	typeref:struct:_GimpTextEditor
GimpTextEditorClass	widgets/gimptexteditor.h	/^typedef struct _GimpTextEditorClass  GimpTextEditorClass;$/;"	t	typeref:struct:_GimpTextEditorClass
GimpTextJustification	text/text-enums.h	/^} GimpTextJustification;$/;"	t	typeref:enum:__anon241
GimpTextLayer	text/text-types.h	/^typedef struct _GimpTextLayer  GimpTextLayer;$/;"	t	typeref:struct:_GimpTextLayer
GimpTextLayerClass	text/gimptextlayer.h	/^typedef struct _GimpTextLayerClass GimpTextLayerClass;$/;"	t	typeref:struct:_GimpTextLayerClass
GimpTextLayout	text/text-types.h	/^typedef struct _GimpTextLayout GimpTextLayout;$/;"	t	typeref:struct:_GimpTextLayout
GimpTextLayoutClass	text/gimptextlayout.h	/^typedef struct _GimpTextLayoutClass GimpTextLayoutClass;$/;"	t	typeref:struct:_GimpTextLayoutClass
GimpTextOptions	tools/gimptextoptions.h	/^typedef struct _GimpTextOptions      GimpTextOptions;$/;"	t	typeref:struct:_GimpTextOptions
GimpTextOptionsClass	tools/gimptextoptions.h	/^typedef struct _GimpToolOptionsClass GimpTextOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpTextOutline	text/text-enums.h	/^} GimpTextOutline;$/;"	t	typeref:enum:__anon242
GimpTextRenderFunc	text/gimptext-private.h	/^typedef  void (* GimpTextRenderFunc) (PangoFont  *font,$/;"	t
GimpTextTool	tools/gimptexttool.h	/^typedef struct _GimpTextTool       GimpTextTool;$/;"	t	typeref:struct:_GimpTextTool
GimpTextToolClass	tools/gimptexttool.h	/^typedef struct _GimpTextToolClass  GimpTextToolClass;$/;"	t	typeref:struct:_GimpTextToolClass
GimpTextUndo	text/text-types.h	/^typedef struct _GimpTextUndo   GimpTextUndo;$/;"	t	typeref:struct:_GimpTextUndo
GimpTextUndoClass	text/gimptextundo.h	/^typedef struct _GimpTextUndoClass GimpTextUndoClass;$/;"	t	typeref:struct:_GimpTextUndoClass
GimpThresholdTool	tools/gimpthresholdtool.h	/^typedef struct _GimpThresholdTool      GimpThresholdTool;$/;"	t	typeref:struct:_GimpThresholdTool
GimpThresholdToolClass	tools/gimpthresholdtool.h	/^typedef struct _GimpThresholdToolClass GimpThresholdToolClass;$/;"	t	typeref:struct:_GimpThresholdToolClass
GimpThumbBox	widgets/widgets-types.h	/^typedef struct _GimpThumbBox                 GimpThumbBox;$/;"	t	typeref:struct:_GimpThumbBox
GimpThumbBoxClass	widgets/gimpthumbbox.h	/^typedef struct _GimpThumbBoxClass GimpThumbBoxClass;$/;"	t	typeref:struct:_GimpThumbBoxClass
GimpThumbnailSize	core/core-enums.h	/^} GimpThumbnailSize;$/;"	t	typeref:enum:__anon79
GimpTip	dialogs/tips-parser.h	/^typedef struct _GimpTip GimpTip;$/;"	t	typeref:struct:_GimpTip
GimpToggleActionEntry	widgets/widgets-types.h	/^typedef struct _GimpToggleActionEntry        GimpToggleActionEntry;$/;"	t	typeref:struct:_GimpToggleActionEntry
GimpTool	tools/tools-types.h	/^typedef struct _GimpTool                     GimpTool;$/;"	t	typeref:struct:_GimpTool
GimpToolAction	tools/tools-enums.h	/^} GimpToolAction;$/;"	t	typeref:enum:__anon262
GimpToolClass	tools/gimptool.h	/^typedef struct _GimpToolClass GimpToolClass;$/;"	t	typeref:struct:_GimpToolClass
GimpToolControl	tools/tools-types.h	/^typedef struct _GimpToolControl              GimpToolControl;$/;"	t	typeref:struct:_GimpToolControl
GimpToolControlClass	tools/gimptoolcontrol.h	/^typedef struct _GimpToolControlClass GimpToolControlClass;$/;"	t	typeref:struct:_GimpToolControlClass
GimpToolCursorType	widgets/widgets-enums.h	/^} GimpToolCursorType;$/;"	t	typeref:enum:__anon413
GimpToolDialog	widgets/widgets-types.h	/^typedef struct _GimpToolDialog               GimpToolDialog;$/;"	t	typeref:struct:_GimpToolDialog
GimpToolDialogClass	widgets/gimptooldialog.h	/^typedef struct _GimpViewableDialogClass GimpToolDialogClass;$/;"	t	typeref:struct:_GimpViewableDialogClass
GimpToolInfo	core/core-types.h	/^typedef struct _GimpToolInfo        GimpToolInfo;$/;"	t	typeref:struct:_GimpToolInfo
GimpToolInfoClass	core/gimptoolinfo.h	/^typedef struct _GimpToolInfoClass GimpToolInfoClass;$/;"	t	typeref:struct:_GimpToolInfoClass
GimpToolManager	tools/tool_manager.c	/^typedef struct _GimpToolManager GimpToolManager;$/;"	t	typeref:struct:_GimpToolManager	file:
GimpToolOptions	core/core-types.h	/^typedef struct _GimpToolOptions     GimpToolOptions;$/;"	t	typeref:struct:_GimpToolOptions
GimpToolOptionsClass	core/gimptooloptions.h	/^typedef struct _GimpToolOptionsClass GimpToolOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpToolOptionsEditor	widgets/widgets-types.h	/^typedef struct _GimpToolOptionsEditor        GimpToolOptionsEditor;$/;"	t	typeref:struct:_GimpToolOptionsEditor
GimpToolOptionsEditorClass	widgets/gimptooloptionseditor.h	/^typedef struct _GimpToolOptionsEditorClass  GimpToolOptionsEditorClass;$/;"	t	typeref:struct:_GimpToolOptionsEditorClass
GimpToolOptionsGUIFunc	tools/tools-types.h	/^typedef GtkWidget * (* GimpToolOptionsGUIFunc) (GimpToolOptions *tool_options);$/;"	t
GimpToolPresets	core/core-types.h	/^typedef struct _GimpToolPresets     GimpToolPresets;$/;"	t	typeref:struct:_GimpToolPresets
GimpToolPresetsClass	core/gimptoolpresets.h	/^typedef struct _GimpToolPresetsClass GimpToolPresetsClass;$/;"	t	typeref:struct:_GimpToolPresetsClass
GimpToolRegisterCallback	tools/tools-types.h	/^typedef void (* GimpToolRegisterCallback) (GType                     tool_type,$/;"	t
GimpToolRegisterFunc	tools/tools-types.h	/^typedef void (* GimpToolRegisterFunc)     (GimpToolRegisterCallback  callback,$/;"	t
GimpToolView	widgets/widgets-types.h	/^typedef struct _GimpToolView                 GimpToolView;$/;"	t	typeref:struct:_GimpToolView
GimpToolViewClass	widgets/gimptoolview.h	/^typedef struct _GimpToolViewClass  GimpToolViewClass;$/;"	t	typeref:struct:_GimpToolViewClass
GimpToolbox	widgets/widgets-types.h	/^typedef struct _GimpToolbox                  GimpToolbox;$/;"	t	typeref:struct:_GimpToolbox
GimpToolboxClass	widgets/gimptoolbox.h	/^typedef struct _GimpToolboxClass GimpToolboxClass;$/;"	t	typeref:struct:_GimpToolboxClass
GimpTransformBoundingBox	core/gimpdrawable-transform.h	/^} GimpTransformBoundingBox;$/;"	t	typeref:enum:__anon159
GimpTransformGridType	tools/tools-enums.h	/^} GimpTransformGridType;$/;"	t	typeref:enum:__anon259
GimpTransformOptions	tools/gimptransformoptions.h	/^typedef struct _GimpTransformOptions GimpTransformOptions;$/;"	t	typeref:struct:_GimpTransformOptions
GimpTransformOptionsClass	tools/gimptransformoptions.h	/^typedef struct _GimpToolOptionsClass GimpTransformOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpTransformPreviewType	tools/tools-enums.h	/^} GimpTransformPreviewType;$/;"	t	typeref:enum:__anon258
GimpTransformTool	tools/tools-types.h	/^typedef struct _GimpTransformTool            GimpTransformTool;$/;"	t	typeref:struct:_GimpTransformTool
GimpTransformToolClass	tools/gimptransformtool.h	/^typedef struct _GimpTransformToolClass GimpTransformToolClass;$/;"	t	typeref:struct:_GimpTransformToolClass
GimpTransformToolUndo	tools/tools-types.h	/^typedef struct _GimpTransformToolUndo        GimpTransformToolUndo;$/;"	t	typeref:struct:_GimpTransformToolUndo
GimpTransformToolUndoClass	tools/gimptransformtoolundo.h	/^typedef struct _GimpTransformToolUndoClass GimpTransformToolUndoClass;$/;"	t	typeref:struct:_GimpTransformToolUndoClass
GimpTransformType	tools/tools-enums.h	/^} GimpTransformType;$/;"	t	typeref:enum:__anon257
GimpTranslateMode	tools/tools-enums.h	/^} GimpTranslateMode;$/;"	t	typeref:enum:__anon263
GimpUIManager	widgets/widgets-types.h	/^typedef struct _GimpUIManager                GimpUIManager;$/;"	t	typeref:struct:_GimpUIManager
GimpUIManagerClass	widgets/gimpuimanager.h	/^typedef struct _GimpUIManagerClass GimpUIManagerClass;$/;"	t	typeref:struct:_GimpUIManagerClass
GimpUIManagerSetupFunc	widgets/widgets-types.h	/^typedef void (* GimpUIManagerSetupFunc)    (GimpUIManager   *manager,$/;"	t
GimpUIManagerUIEntry	widgets/gimpuimanager.h	/^typedef struct _GimpUIManagerUIEntry GimpUIManagerUIEntry;$/;"	t	typeref:struct:_GimpUIManagerUIEntry
GimpUndo	core/core-types.h	/^typedef struct _GimpUndo              GimpUndo;$/;"	t	typeref:struct:_GimpUndo
GimpUndoAccumulator	core/core-types.h	/^typedef struct _GimpUndoAccumulator   GimpUndoAccumulator;$/;"	t	typeref:struct:_GimpUndoAccumulator
GimpUndoClass	core/gimpundo.h	/^typedef struct _GimpUndoClass GimpUndoClass;$/;"	t	typeref:struct:_GimpUndoClass
GimpUndoEditor	widgets/widgets-types.h	/^typedef struct _GimpUndoEditor               GimpUndoEditor;$/;"	t	typeref:struct:_GimpUndoEditor
GimpUndoEditorClass	widgets/gimpundoeditor.h	/^typedef struct _GimpUndoEditorClass GimpUndoEditorClass;$/;"	t	typeref:struct:_GimpUndoEditorClass
GimpUndoEvent	core/core-enums.h	/^} GimpUndoEvent;$/;"	t	typeref:enum:__anon81
GimpUndoIdle	core/gimpundo.c	/^typedef struct _GimpUndoIdle GimpUndoIdle;$/;"	t	typeref:struct:_GimpUndoIdle	file:
GimpUndoMode	core/core-enums.h	/^} GimpUndoMode;$/;"	t	typeref:enum:__anon80
GimpUndoStack	core/core-types.h	/^typedef struct _GimpUndoStack         GimpUndoStack;$/;"	t	typeref:struct:_GimpUndoStack
GimpUndoStackClass	core/gimpundostack.h	/^typedef struct _GimpUndoStackClass GimpUndoStackClass;$/;"	t	typeref:struct:_GimpUndoStackClass
GimpUndoType	core/core-enums.h	/^} GimpUndoType;$/;"	t	typeref:enum:__anon82
GimpUnitComboBox	widgets/widgets-types.h	/^typedef struct _GimpUnitComboBox             GimpUnitComboBox;$/;"	t	typeref:struct:_GimpUnitComboBox
GimpUnitComboBoxClass	widgets/gimpunitcombobox.h	/^typedef struct _GimpUnitComboBoxClass  GimpUnitComboBoxClass;$/;"	t	typeref:struct:_GimpUnitComboBoxClass
GimpUnitDef	core/gimpunit.c	/^} GimpUnitDef;$/;"	t	typeref:struct:__anon105	file:
GimpUnitStore	widgets/widgets-types.h	/^typedef struct _GimpUnitStore                GimpUnitStore;$/;"	t	typeref:struct:_GimpUnitStore
GimpUnitStoreClass	widgets/gimpunitstore.h	/^typedef struct _GimpUnitStoreClass  GimpUnitStoreClass;$/;"	t	typeref:struct:_GimpUnitStoreClass
GimpUserInstall	core/gimp-user-install.h	/^typedef struct _GimpUserInstall GimpUserInstall;$/;"	t	typeref:struct:_GimpUserInstall
GimpUserInstallAction	core/gimp-user-install.c	/^} GimpUserInstallAction;$/;"	t	typeref:enum:__anon160	file:
GimpUserInstallLogFunc	core/gimp-user-install.h	/^typedef void  (* GimpUserInstallLogFunc) (const gchar *message,$/;"	t
GimpVectorExtendMode	vectors/vectors-enums.h	/^} GimpVectorExtendMode;$/;"	t	typeref:enum:__anon301
GimpVectorFunction	tools/gimpvectortool.h	/^} GimpVectorFunction;$/;"	t	typeref:enum:__anon273
GimpVectorMode	tools/tools-enums.h	/^} GimpVectorMode;$/;"	t	typeref:enum:__anon260
GimpVectorOptions	tools/gimpvectoroptions.h	/^typedef struct _GimpVectorOptions    GimpVectorOptions;$/;"	t	typeref:struct:_GimpVectorOptions
GimpVectorOptionsClass	tools/gimpvectoroptions.h	/^typedef struct _GimpToolOptionsClass GimpVectorOptionsClass;$/;"	t	typeref:struct:_GimpToolOptionsClass
GimpVectorTool	tools/gimpvectortool.h	/^typedef struct _GimpVectorTool      GimpVectorTool;$/;"	t	typeref:struct:_GimpVectorTool
GimpVectorToolClass	tools/gimpvectortool.h	/^typedef struct _GimpVectorToolClass GimpVectorToolClass;$/;"	t	typeref:struct:_GimpVectorToolClass
GimpVectors	vectors/vectors-types.h	/^typedef struct _GimpVectors         GimpVectors;$/;"	t	typeref:struct:_GimpVectors
GimpVectorsClass	vectors/gimpvectors.h	/^typedef struct _GimpVectorsClass  GimpVectorsClass;$/;"	t	typeref:struct:_GimpVectorsClass
GimpVectorsCompatPoint	vectors/gimpvectors-compat.h	/^typedef struct _GimpVectorsCompatPoint GimpVectorsCompatPoint;$/;"	t	typeref:struct:_GimpVectorsCompatPoint
GimpVectorsModUndo	vectors/vectors-types.h	/^typedef struct _GimpVectorsModUndo  GimpVectorsModUndo;$/;"	t	typeref:struct:_GimpVectorsModUndo
GimpVectorsModUndoClass	vectors/gimpvectorsmodundo.h	/^typedef struct _GimpVectorsModUndoClass GimpVectorsModUndoClass;$/;"	t	typeref:struct:_GimpVectorsModUndoClass
GimpVectorsPropUndo	vectors/vectors-types.h	/^typedef struct _GimpVectorsPropUndo GimpVectorsPropUndo;$/;"	t	typeref:struct:_GimpVectorsPropUndo
GimpVectorsPropUndoClass	vectors/gimpvectorspropundo.h	/^typedef struct _GimpVectorsPropUndoClass GimpVectorsPropUndoClass;$/;"	t	typeref:struct:_GimpVectorsPropUndoClass
GimpVectorsTreeView	widgets/widgets-types.h	/^typedef struct _GimpVectorsTreeView          GimpVectorsTreeView;$/;"	t	typeref:struct:_GimpVectorsTreeView
GimpVectorsTreeViewClass	widgets/gimpvectorstreeview.h	/^typedef struct _GimpVectorsTreeViewClass  GimpVectorsTreeViewClass;$/;"	t	typeref:struct:_GimpVectorsTreeViewClass
GimpVectorsUndo	vectors/vectors-types.h	/^typedef struct _GimpVectorsUndo     GimpVectorsUndo;$/;"	t	typeref:struct:_GimpVectorsUndo
GimpVectorsUndoClass	vectors/gimpvectorsundo.h	/^typedef struct _GimpVectorsUndoClass GimpVectorsUndoClass;$/;"	t	typeref:struct:_GimpVectorsUndoClass
GimpView	widgets/widgets-types.h	/^typedef struct _GimpView                     GimpView;$/;"	t	typeref:struct:_GimpView
GimpViewBG	widgets/widgets-enums.h	/^} GimpViewBG;$/;"	t	typeref:enum:__anon408
GimpViewBorderType	widgets/widgets-enums.h	/^} GimpViewBorderType;$/;"	t	typeref:enum:__anon409
GimpViewClass	widgets/gimpview.h	/^typedef struct _GimpViewClass  GimpViewClass;$/;"	t	typeref:struct:_GimpViewClass
GimpViewPopup	widgets/gimpview-popup.c	/^typedef struct _GimpViewPopup GimpViewPopup;$/;"	t	typeref:struct:_GimpViewPopup	file:
GimpViewRenderer	widgets/widgets-types.h	/^typedef struct _GimpViewRenderer             GimpViewRenderer;$/;"	t	typeref:struct:_GimpViewRenderer
GimpViewRendererBrush	widgets/widgets-types.h	/^typedef struct _GimpViewRendererBrush        GimpViewRendererBrush;$/;"	t	typeref:struct:_GimpViewRendererBrush
GimpViewRendererBrushClass	widgets/gimpviewrendererbrush.h	/^typedef struct _GimpViewRendererBrushClass  GimpViewRendererBrushClass;$/;"	t	typeref:struct:_GimpViewRendererBrushClass
GimpViewRendererBuffer	widgets/widgets-types.h	/^typedef struct _GimpViewRendererBuffer       GimpViewRendererBuffer;$/;"	t	typeref:struct:_GimpViewRendererBuffer
GimpViewRendererBufferClass	widgets/gimpviewrendererbuffer.h	/^typedef struct _GimpViewRendererBufferClass  GimpViewRendererBufferClass;$/;"	t	typeref:struct:_GimpViewRendererBufferClass
GimpViewRendererClass	widgets/gimpviewrenderer.h	/^typedef struct _GimpViewRendererClass  GimpViewRendererClass;$/;"	t	typeref:struct:_GimpViewRendererClass
GimpViewRendererDrawable	widgets/widgets-types.h	/^typedef struct _GimpViewRendererDrawable     GimpViewRendererDrawable;$/;"	t	typeref:struct:_GimpViewRendererDrawable
GimpViewRendererDrawableClass	widgets/gimpviewrendererdrawable.h	/^typedef struct _GimpViewRendererDrawableClass  GimpViewRendererDrawableClass;$/;"	t	typeref:struct:_GimpViewRendererDrawableClass
GimpViewRendererGradient	widgets/widgets-types.h	/^typedef struct _GimpViewRendererGradient     GimpViewRendererGradient;$/;"	t	typeref:struct:_GimpViewRendererGradient
GimpViewRendererGradientClass	widgets/gimpviewrenderergradient.h	/^typedef struct _GimpViewRendererGradientClass  GimpViewRendererGradientClass;$/;"	t	typeref:struct:_GimpViewRendererGradientClass
GimpViewRendererImage	widgets/widgets-types.h	/^typedef struct _GimpViewRendererImage        GimpViewRendererImage;$/;"	t	typeref:struct:_GimpViewRendererImage
GimpViewRendererImageClass	widgets/gimpviewrendererimage.h	/^typedef struct _GimpViewRendererImageClass  GimpViewRendererImageClass;$/;"	t	typeref:struct:_GimpViewRendererImageClass
GimpViewRendererImagefile	widgets/widgets-types.h	/^typedef struct _GimpViewRendererImagefile    GimpViewRendererImagefile;$/;"	t	typeref:struct:_GimpViewRendererImagefile
GimpViewRendererImagefileClass	widgets/gimpviewrendererimagefile.h	/^typedef struct _GimpViewRendererImagefileClass  GimpViewRendererImagefileClass;$/;"	t	typeref:struct:_GimpViewRendererImagefileClass
GimpViewRendererLayer	widgets/widgets-types.h	/^typedef struct _GimpViewRendererLayer        GimpViewRendererLayer;$/;"	t	typeref:struct:_GimpViewRendererLayer
GimpViewRendererLayerClass	widgets/gimpviewrendererlayer.h	/^typedef struct _GimpViewRendererLayerClass  GimpViewRendererLayerClass;$/;"	t	typeref:struct:_GimpViewRendererLayerClass
GimpViewRendererPalette	widgets/widgets-types.h	/^typedef struct _GimpViewRendererPalette      GimpViewRendererPalette;$/;"	t	typeref:struct:_GimpViewRendererPalette
GimpViewRendererPaletteClass	widgets/gimpviewrendererpalette.h	/^typedef struct _GimpViewRendererPaletteClass  GimpViewRendererPaletteClass;$/;"	t	typeref:struct:_GimpViewRendererPaletteClass
GimpViewRendererVectors	widgets/widgets-types.h	/^typedef struct _GimpViewRendererVectors      GimpViewRendererVectors;$/;"	t	typeref:struct:_GimpViewRendererVectors
GimpViewRendererVectorsClass	widgets/gimpviewrenderervectors.h	/^typedef struct _GimpViewRendererVectorsClass  GimpViewRendererVectorsClass;$/;"	t	typeref:struct:_GimpViewRendererVectorsClass
GimpViewSize	core/core-enums.h	/^} GimpViewSize;$/;"	t	typeref:enum:__anon76
GimpViewType	core/core-enums.h	/^} GimpViewType;$/;"	t	typeref:enum:__anon77
GimpViewable	core/core-types.h	/^typedef struct _GimpViewable        GimpViewable;$/;"	t	typeref:struct:_GimpViewable
GimpViewableButton	widgets/widgets-types.h	/^typedef struct _GimpViewableButton           GimpViewableButton;$/;"	t	typeref:struct:_GimpViewableButton
GimpViewableButtonClass	widgets/gimpviewablebutton.h	/^typedef struct _GimpViewableButtonClass GimpViewableButtonClass;$/;"	t	typeref:struct:_GimpViewableButtonClass
GimpViewableClass	core/gimpviewable.h	/^typedef struct _GimpViewableClass GimpViewableClass;$/;"	t	typeref:struct:_GimpViewableClass
GimpViewableDialog	widgets/widgets-types.h	/^typedef struct _GimpViewableDialog           GimpViewableDialog;$/;"	t	typeref:struct:_GimpViewableDialog
GimpViewableDialogClass	widgets/gimpviewabledialog.h	/^typedef struct _GimpViewableDialogClass  GimpViewableDialogClass;$/;"	t	typeref:struct:_GimpViewableDialogClass
GimpWindowHint	widgets/widgets-enums.h	/^} GimpWindowHint;$/;"	t	typeref:enum:__anon407
GimpXcfLoaderFunc	xcf/xcf.c	/^typedef GimpImage * GimpXcfLoaderFunc (Gimp    *gimp,$/;"	t	file:
GimpXmlParser	config/config-types.h	/^typedef struct _GimpXmlParser        GimpXmlParser;$/;"	t	typeref:struct:_GimpXmlParser
Gmax	core/gimpimage-convert.c	/^  int   Gmin, Gmax;$/;"	m	struct:__anon108	file:
Gmin	core/gimpimage-convert.c	/^  int   Gmin, Gmax;$/;"	m	struct:__anon108	file:
GradientEditorDragMode	widgets/gimpgradienteditor.h	/^} GradientEditorDragMode;$/;"	t	typeref:enum:__anon324
GtkHWrapBox	widgets/gtkhwrapbox.h	/^typedef struct _GtkHWrapBox      GtkHWrapBox;$/;"	t	typeref:struct:_GtkHWrapBox
GtkHWrapBoxClass	widgets/gtkhwrapbox.h	/^typedef struct _GtkHWrapBoxClass GtkHWrapBoxClass;$/;"	t	typeref:struct:_GtkHWrapBoxClass
GtkVWrapBox	widgets/gtkvwrapbox.h	/^typedef struct _GtkVWrapBox      GtkVWrapBox;$/;"	t	typeref:struct:_GtkVWrapBox
GtkVWrapBoxClass	widgets/gtkvwrapbox.h	/^typedef struct _GtkVWrapBoxClass GtkVWrapBoxClass;$/;"	t	typeref:struct:_GtkVWrapBoxClass
GtkWrapBox	widgets/gtkwrapbox.h	/^typedef struct _GtkWrapBox      GtkWrapBox;$/;"	t	typeref:struct:_GtkWrapBox
GtkWrapBoxChild	widgets/gtkwrapbox.h	/^typedef struct _GtkWrapBoxChild GtkWrapBoxChild;$/;"	t	typeref:struct:_GtkWrapBoxChild
GtkWrapBoxClass	widgets/gtkwrapbox.h	/^typedef struct _GtkWrapBoxClass GtkWrapBoxClass;$/;"	t	typeref:struct:_GtkWrapBoxClass
HALF_SIZE	display/gimpdisplayshell-draw.c	389;"	d	file:
HANDLE_SIZE	tools/gimppainttool.c	52;"	d	file:
HANDLE_SIZE	tools/gimpperspectiveclonetool.c	48;"	d	file:
HANDLE_SIZE	tools/gimptransformtool.c	67;"	d	file:
HASH_TABLE_SIZE	core/gimpimage-colorhash.c	30;"	d	file:
HAS_ALPHA	composite/gimp-composite-generic.c	54;"	d	file:
HAS_ALPHA	paint-funcs/paint-funcs-generic.h	50;"	d
HAS_INIT	plug-in/plug-in-rc.c	/^  HAS_INIT,$/;"	e	enum:__anon237	file:
HAVE_COLORMAP	widgets/gimpcolormapeditor.c	68;"	d	file:
HELP_BROWSER_BLURB	config/gimprc-blurbs.h	145;"	d
HELP_DEF	plug-in/plug-in-rc.c	/^  HELP_DEF,$/;"	e	enum:__anon237	file:
HELP_LOCALES_BLURB	config/gimprc-blurbs.h	148;"	d
HELP_TEXT	widgets/gimpdockseparator.c	44;"	d	file:
HIDE_TOOLTIP	widgets/gimpuimanager.c	/^  HIDE_TOOLTIP,$/;"	e	enum:__anon321	file:
HIGHA	core/gimpimage-convert.c	295;"	d	file:
HIGHB	core/gimpimage-convert.c	296;"	d	file:
HIGH_INPUT	tools/gimplevelstool.c	59;"	d	file:
HIGH_OUTPUT	tools/gimplevelstool.c	61;"	d	file:
HISTOGRAM_EVENT_MASK	widgets/gimphistogrambox.c	44;"	d	file:
HISTOGRAM_VALUE	base/gimphistogram.c	127;"	d	file:
HISTOGRAM_WIDTH	tools/gimplevelstool.c	69;"	d	file:
HISTORY_CHANGED	plug-in/gimppluginmanager.c	/^  HISTORY_CHANGED,$/;"	e	enum:__anon236	file:
HIST_B_ELEMS	core/gimpimage-convert.c	174;"	d	file:
HIST_G_ELEMS	core/gimpimage-convert.c	173;"	d	file:
HIST_LIN	core/gimpimage-convert.c	/^ColorFreq* HIST_LIN(ColorFreq *hist_ptr,$/;"	f	file:
HIST_RGB	core/gimpimage-convert.c	/^ColorFreq* HIST_RGB(ColorFreq *hist_ptr,$/;"	f	file:
HIST_R_ELEMS	core/gimpimage-convert.c	172;"	d	file:
HORZ_OR_VERT	tools/gimpsheartool.c	41;"	d	file:
HUE_SLIDER	tools/gimpcolorizetool.c	47;"	d	file:
HUE_SLIDER	tools/gimphuesaturationtool.c	48;"	d	file:
HashMemsize	core/gimp-utils.c	/^} HashMemsize;$/;"	t	typeref:struct:__anon112	file:
HueSaturation	base/base-types.h	/^typedef struct _HueSaturation       HueSaturation;$/;"	t	typeref:struct:_HueSaturation
ICC_PROFILE_APPLY_RGB_PROC	plug-in/plug-in-icc-profile.c	43;"	d	file:
ICC_PROFILE_FILE_INFO_PROC	plug-in/plug-in-icc-profile.c	45;"	d	file:
ICC_PROFILE_INFO_PROC	plug-in/plug-in-icc-profile.c	44;"	d	file:
ICON	plug-in/plug-in-rc.c	/^  ICON,$/;"	e	enum:__anon237	file:
ICurve	tools/gimpiscissorstool.h	/^typedef struct _ICurve ICurve;$/;"	t	typeref:struct:_ICurve
ID	core/gimpimage.h	/^  gint               ID;                    \/*  provides a unique ID         *\/$/;"	m	struct:_GimpImage
ID	core/gimpitem.h	/^  gint              ID;                 \/*  provides a unique ID     *\/$/;"	m	struct:_GimpItem
ID	display/gimpdisplay.h	/^  gint        ID;               \/*  unique identifier for this display     *\/$/;"	m	struct:_GimpDisplay
ID	paint/gimppaintcore.h	/^  gint         ID;               \/*  unique instance ID                  *\/$/;"	m	struct:_GimpPaintCore
ID	tools/gimptool.h	/^  gint             ID;          \/*  unique tool ID                         *\/$/;"	m	struct:_GimpTool
ID	vectors/gimpstroke.h	/^  gint        ID;$/;"	m	struct:_GimpStroke
IDLE_SWAPPER_TIMEOUT	base/tile-cache.c	31;"	d	file:
IMAGEFILE_CHANGED	core/gimpcontext.c	/^  IMAGEFILE_CHANGED,$/;"	e	enum:__anon103	file:
IMAGE_CHANGED	core/gimpcontext.c	/^  IMAGE_CHANGED,$/;"	e	enum:__anon103	file:
IMAGE_IMPORT	dialogs/palette-import-dialog.c	/^  IMAGE_IMPORT,$/;"	e	enum:__anon177	file:
IMAGE_STATUS_FORMAT_BLURB	config/gimprc-blurbs.h	153;"	d
IMAGE_TITLE_FORMAT_BLURB	config/gimprc-blurbs.h	156;"	d
INDEXED_PIX	base/base-types.h	44;"	d
INDICATOR_HEIGHT	widgets/gimpviewrendererbrush.c	135;"	d	file:
INDICATOR_HEIGHT	widgets/gimpviewrendererbrush.c	280;"	d	file:
INDICATOR_WIDTH	widgets/gimpviewrendererbrush.c	134;"	d	file:
INDICATOR_WIDTH	widgets/gimpviewrendererbrush.c	279;"	d	file:
INFO_CHANGED	core/gimpimagefile.c	/^  INFO_CHANGED,$/;"	e	enum:__anon51	file:
INITIALIZE	core/gimp.c	/^  INITIALIZE,$/;"	e	enum:__anon123	file:
INITIAL_CHANNEL_MASK	paint-funcs/paint-funcs-types.h	/^  INITIAL_CHANNEL_MASK = 0,$/;"	e	enum:__anon227
INITIAL_CHANNEL_SELECTION	paint-funcs/paint-funcs-types.h	/^  INITIAL_CHANNEL_SELECTION,$/;"	e	enum:__anon227
INITIAL_INDEXED	paint-funcs/paint-funcs-types.h	/^  INITIAL_INDEXED,$/;"	e	enum:__anon227
INITIAL_INDEXED_ALPHA	paint-funcs/paint-funcs-types.h	/^  INITIAL_INDEXED_ALPHA,$/;"	e	enum:__anon227
INITIAL_INTENSITY	paint-funcs/paint-funcs-types.h	/^  INITIAL_INTENSITY,$/;"	e	enum:__anon227
INITIAL_INTENSITY_ALPHA	paint-funcs/paint-funcs-types.h	/^  INITIAL_INTENSITY_ALPHA$/;"	e	enum:__anon227
INITIAL_ZOOM_TO_FIT_BLURB	config/gimprc-blurbs.h	159;"	d
INIT_VECTOR	composite/gimp-composite-altivec.c	39;"	d	file:
INIT_VECTOR	composite/gimp-composite-altivec.c	42;"	d	file:
INPUT_LEVELS	tools/gimplevelstool.c	62;"	d	file:
INPUT_RESOLUTION	core/gimpcoords.c	33;"	d	file:
INPUT_SLIDERS	tools/gimplevelstool.c	64;"	d	file:
INSDEL_MASK	tools/gimpvectortool.c	68;"	d	file:
INSTALL_COLORMAP_BLURB	config/gimprc-blurbs.h	163;"	d
INTERPOLATION_TYPE_BLURB	config/gimprc-blurbs.h	166;"	d
INTERPRETER_PATH_BLURB	config/gimprc-blurbs.h	170;"	d
INT_BLEND	paint-funcs/paint-funcs-generic.h	41;"	d
INT_MULT	composite/gimp-composite-generic.c	46;"	d	file:
INT_MULT	paint-funcs/paint-funcs-generic.h	28;"	d
INT_MULT3	paint-funcs/paint-funcs-generic.h	33;"	d
INVALIDATE_PREVIEW	core/gimpviewable.c	/^  INVALIDATE_PREVIEW,$/;"	e	enum:__anon116	file:
INVALID_AREA	widgets/gimpfgbgeditor.c	/^  INVALID_AREA,$/;"	e	enum:__anon386	file:
ISCISSORS_OP_ADD_POINT	tools/gimpiscissorstool.h	/^  ISCISSORS_OP_ADD_POINT,$/;"	e	enum:__anon270
ISCISSORS_OP_CONNECT	tools/gimpiscissorstool.h	/^  ISCISSORS_OP_CONNECT,$/;"	e	enum:__anon270
ISCISSORS_OP_IMPOSSIBLE	tools/gimpiscissorstool.h	/^  ISCISSORS_OP_IMPOSSIBLE$/;"	e	enum:__anon270
ISCISSORS_OP_MOVE_POINT	tools/gimpiscissorstool.h	/^  ISCISSORS_OP_MOVE_POINT,$/;"	e	enum:__anon270
ISCISSORS_OP_NONE	tools/gimpiscissorstool.h	/^  ISCISSORS_OP_NONE,$/;"	e	enum:__anon270
ISCISSORS_OP_SELECT	tools/gimpiscissorstool.h	/^  ISCISSORS_OP_SELECT,$/;"	e	enum:__anon270
IS_ACTIVE_DISPLAY	actions/view-commands.c	62;"	d	file:
IS_ACTIVE_DISPLAY	display/gimpdisplayshell-appearance.c	61;"	d	file:
ImageMergeLayersDialog	dialogs/image-merge-layers-dialog.h	/^typedef struct _ImageMergeLayersDialog ImageMergeLayersDialog;$/;"	t	typeref:struct:_ImageMergeLayersDialog
ImageNewDialog	dialogs/image-new-dialog.c	/^} ImageNewDialog;$/;"	t	typeref:struct:__anon179	file:
ImageResizeOptions	actions/image-commands.c	/^} ImageResizeOptions;$/;"	t	typeref:struct:__anon5	file:
ImageScaleDialog	dialogs/image-scale-dialog.c	/^} ImageScaleDialog;$/;"	t	typeref:struct:__anon167	file:
ImgColors	core/gimppalette-import.c	/^typedef struct _ImgColors ImgColors;$/;"	t	typeref:struct:_ImgColors	file:
ImportDialog	dialogs/palette-import-dialog.c	/^} ImportDialog;$/;"	t	typeref:struct:__anon178	file:
ImportType	dialogs/palette-import-dialog.c	/^} ImportType;$/;"	t	typeref:enum:__anon177	file:
IndexedDialog	dialogs/convert-dialog.c	/^} IndexedDialog;$/;"	t	typeref:struct:__anon171	file:
InitialMode	paint-funcs/paint-funcs-types.h	/^} InitialMode;$/;"	t	typeref:enum:__anon227
IscissorsDraw	tools/gimpiscissorstool.h	/^} IscissorsDraw;$/;"	t	typeref:enum:__anon269
IscissorsOps	tools/gimpiscissorstool.h	/^} IscissorsOps;$/;"	t	typeref:enum:__anon270
IscissorsState	tools/gimpiscissorstool.h	/^} IscissorsState;$/;"	t	typeref:enum:__anon268
KERNEL_HEIGHT	paint/gimpbrushcore-kernels.h	11;"	d
KERNEL_SUBSAMPLE	paint/gimpbrushcore-kernels.h	12;"	d
KERNEL_SUM	paint/gimpbrushcore-kernels.h	13;"	d
KERNEL_WIDTH	paint/gimpbrushcore-kernels.h	10;"	d
KeyboardEvent	widgets/gimpcontrollerkeyboard.c	/^typedef struct _KeyboardEvent KeyboardEvent;$/;"	t	typeref:struct:_KeyboardEvent	file:
LABEL	display/gimpscalecombobox.c	/^  LABEL,$/;"	e	enum:__anon191	file:
LABEL_ALIGN	display/gimpscalecombobox.c	/^  LABEL_ALIGN,$/;"	e	enum:__anon191	file:
LABEL_PADDING	widgets/gimpdockseparator.c	42;"	d	file:
LANCZOS_MIN	paint-funcs/scale-region.h	24;"	d
LANCZOS_SAMPLES	paint-funcs/scale-region.h	27;"	d
LANCZOS_SPP	paint-funcs/scale-region.h	23;"	d
LANCZOS_WIDTH	paint-funcs/scale-region.h	25;"	d
LANCZOS_WIDTH2	paint-funcs/scale-region.h	26;"	d
LARGE_SEEK	base/tile-private.h	29;"	d
LARGE_SEEK	base/tile-private.h	34;"	d
LARGE_TRUNCATE	base/tile-private.h	30;"	d
LARGE_TRUNCATE	base/tile-private.h	35;"	d
LAST_OPENED_SIZE_BLURB	config/gimprc-blurbs.h	173;"	d
LAST_SIGNAL	core/gimp.c	/^  LAST_SIGNAL$/;"	e	enum:__anon123	file:
LAST_SIGNAL	core/gimpbrush.c	/^  LAST_SIGNAL$/;"	e	enum:__anon149	file:
LAST_SIGNAL	core/gimpchannel.c	/^  LAST_SIGNAL$/;"	e	enum:__anon143	file:
LAST_SIGNAL	core/gimpcontainer.c	/^  LAST_SIGNAL$/;"	e	enum:__anon56	file:
LAST_SIGNAL	core/gimpcontext.c	/^  LAST_SIGNAL$/;"	e	enum:__anon103	file:
LAST_SIGNAL	core/gimpdata.c	/^  LAST_SIGNAL$/;"	e	enum:__anon153	file:
LAST_SIGNAL	core/gimpdrawable.c	/^  LAST_SIGNAL$/;"	e	enum:__anon113	file:
LAST_SIGNAL	core/gimpguide.c	/^  LAST_SIGNAL$/;"	e	enum:__anon147	file:
LAST_SIGNAL	core/gimpimage.c	/^  LAST_SIGNAL$/;"	e	enum:__anon126	file:
LAST_SIGNAL	core/gimpimagefile.c	/^  LAST_SIGNAL$/;"	e	enum:__anon51	file:
LAST_SIGNAL	core/gimpimagemap.c	/^  LAST_SIGNAL$/;"	e	enum:__anon141	file:
LAST_SIGNAL	core/gimpitem.c	/^  LAST_SIGNAL$/;"	e	enum:__anon131	file:
LAST_SIGNAL	core/gimplayer.c	/^  LAST_SIGNAL$/;"	e	enum:__anon97	file:
LAST_SIGNAL	core/gimplayermask.c	/^  LAST_SIGNAL$/;"	e	enum:__anon138	file:
LAST_SIGNAL	core/gimpobject.c	/^  LAST_SIGNAL$/;"	e	enum:__anon129	file:
LAST_SIGNAL	core/gimpparasitelist.c	/^  LAST_SIGNAL$/;"	e	enum:__anon55	file:
LAST_SIGNAL	core/gimpprogress.c	/^  LAST_SIGNAL$/;"	e	enum:__anon162	file:
LAST_SIGNAL	core/gimpprojection.c	/^  LAST_SIGNAL$/;"	e	enum:__anon145	file:
LAST_SIGNAL	core/gimpstrokeoptions.c	/^  LAST_SIGNAL$/;"	e	enum:__anon122	file:
LAST_SIGNAL	core/gimptoolpresets.c	/^  LAST_SIGNAL$/;"	e	enum:__anon165	file:
LAST_SIGNAL	core/gimpundo.c	/^  LAST_SIGNAL$/;"	e	enum:__anon157	file:
LAST_SIGNAL	core/gimpviewable.c	/^  LAST_SIGNAL$/;"	e	enum:__anon116	file:
LAST_SIGNAL	display/gimpdisplayshell.c	/^  LAST_SIGNAL$/;"	e	enum:__anon196	file:
LAST_SIGNAL	paint/gimpbrushcore.c	/^  LAST_SIGNAL$/;"	e	enum:__anon226	file:
LAST_SIGNAL	pdb/gimppdb.c	/^  LAST_SIGNAL$/;"	e	enum:__anon230	file:
LAST_SIGNAL	plug-in/gimppluginmanager.c	/^  LAST_SIGNAL$/;"	e	enum:__anon236	file:
LAST_SIGNAL	plug-in/gimppluginprocedure.c	/^  LAST_SIGNAL$/;"	e	enum:__anon233	file:
LAST_SIGNAL	tools/gimpcolortool.c	/^  LAST_SIGNAL$/;"	e	enum:__anon250	file:
LAST_SIGNAL	tools/gimprectangletool.c	/^  LAST_SIGNAL$/;"	e	enum:__anon283	file:
LAST_SIGNAL	vectors/gimpvectors.c	/^  LAST_SIGNAL$/;"	e	enum:__anon302	file:
LAST_SIGNAL	widgets/gimpcellrendererviewable.c	/^  LAST_SIGNAL$/;"	e	enum:__anon354	file:
LAST_SIGNAL	widgets/gimpcolordialog.c	/^  LAST_SIGNAL$/;"	e	enum:__anon380	file:
LAST_SIGNAL	widgets/gimpcolormapeditor.c	/^  LAST_SIGNAL$/;"	e	enum:__anon326	file:
LAST_SIGNAL	widgets/gimpcontainergridview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon370	file:
LAST_SIGNAL	widgets/gimpcontainerpopup.c	/^  LAST_SIGNAL$/;"	e	enum:__anon333	file:
LAST_SIGNAL	widgets/gimpcontainerview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon363	file:
LAST_SIGNAL	widgets/gimpcontrollerinfo.c	/^  LAST_SIGNAL$/;"	e	enum:__anon337	file:
LAST_SIGNAL	widgets/gimpdeviceinfo.c	/^  LAST_SIGNAL$/;"	e	enum:__anon334	file:
LAST_SIGNAL	widgets/gimpdock.c	/^  LAST_SIGNAL$/;"	e	enum:__anon332	file:
LAST_SIGNAL	widgets/gimpdockbook.c	/^  LAST_SIGNAL$/;"	e	enum:__anon349	file:
LAST_SIGNAL	widgets/gimpdocked.c	/^  LAST_SIGNAL$/;"	e	enum:__anon310	file:
LAST_SIGNAL	widgets/gimpenumaction.c	/^  LAST_SIGNAL$/;"	e	enum:__anon314	file:
LAST_SIGNAL	widgets/gimpfgbgeditor.c	/^  LAST_SIGNAL$/;"	e	enum:__anon385	file:
LAST_SIGNAL	widgets/gimpfileprocview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon340	file:
LAST_SIGNAL	widgets/gimphistogramview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon390	file:
LAST_SIGNAL	widgets/gimpimageparasiteview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon389	file:
LAST_SIGNAL	widgets/gimpitemtreeview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon330	file:
LAST_SIGNAL	widgets/gimpnavigationview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon350	file:
LAST_SIGNAL	widgets/gimppaletteview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon360	file:
LAST_SIGNAL	widgets/gimppluginaction.c	/^  LAST_SIGNAL$/;"	e	enum:__anon352	file:
LAST_SIGNAL	widgets/gimpstringaction.c	/^  LAST_SIGNAL$/;"	e	enum:__anon312	file:
LAST_SIGNAL	widgets/gimptexteditor.c	/^  LAST_SIGNAL$/;"	e	enum:__anon387	file:
LAST_SIGNAL	widgets/gimpuimanager.c	/^  LAST_SIGNAL$/;"	e	enum:__anon321	file:
LAST_SIGNAL	widgets/gimpview.c	/^  LAST_SIGNAL$/;"	e	enum:__anon365	file:
LAST_SIGNAL	widgets/gimpviewrenderer.c	/^  LAST_SIGNAL$/;"	e	enum:__anon367	file:
LAST_TIP_SHOWN	gui/session.c	/^  LAST_TIP_SHOWN$/;"	e	enum:__anon203	file:
LAYER_ALIGNMENT	text/gimptext-parasite.c	/^  LAYER_ALIGNMENT = 6,$/;"	e	enum:__anon245	file:
LAYER_PREVIEWS_BLURB	config/gimprc-blurbs.h	244;"	d
LAYER_PREVIEW_SIZE_BLURB	config/gimprc-blurbs.h	249;"	d
LEVELS_EVENT_MASK	tools/gimplevelstool.c	73;"	d	file:
LIGHTNESS_SLIDER	tools/gimpcolorizetool.c	49;"	d	file:
LIGHTNESS_SLIDER	tools/gimphuesaturationtool.c	49;"	d	file:
LINE_LENGTH	config/gimpconfig-dump.c	488;"	d	file:
LINE_SPACING	text/gimptext-parasite.c	/^  LINE_SPACING          = 4,$/;"	e	enum:__anon245	file:
LINKED_CHANGED	core/gimpitem.c	/^  LINKED_CHANGED,$/;"	e	enum:__anon131	file:
LIN_DISTP	core/gimpimage-convert.c	3279;"	d	file:
LISTGRID	dialogs/dialogs.c	118;"	d	file:
LIST_HEIGHT	widgets/gimpcolordisplayeditor.c	37;"	d	file:
LIST_WIDTH	widgets/gimpcolordisplayeditor.c	36;"	d	file:
LOAD_LEFT_FROM	actions/gradient-editor-actions.c	132;"	d	file:
LOAD_LEFT_FROM	actions/gradient-editor-actions.c	249;"	d	file:
LOAD_PROC	plug-in/plug-in-rc.c	/^  LOAD_PROC,$/;"	e	enum:__anon237	file:
LOAD_RIGHT_FROM	actions/gradient-editor-actions.c	142;"	d	file:
LOAD_RIGHT_FROM	actions/gradient-editor-actions.c	251;"	d	file:
LOCALE_DEF	plug-in/plug-in-rc.c	/^  LOCALE_DEF,$/;"	e	enum:__anon237	file:
LOCK_ALPHA_CHANGED	core/gimplayer.c	/^  LOCK_ALPHA_CHANGED,$/;"	e	enum:__anon97	file:
LOG_1_255	paint-funcs/paint-funcs.c	45;"	d	file:
LOWA	core/gimpimage-convert.c	293;"	d	file:
LOWB	core/gimpimage-convert.c	294;"	d	file:
LOW_INPUT	tools/gimplevelstool.c	57;"	d	file:
LOW_OUTPUT	tools/gimplevelstool.c	60;"	d	file:
LRAMP	base/cpercep.c	/^static const double LRAMP = 7.99959199F;$/;"	v	file:
LRAT	core/gimpimage-convert.c	299;"	d	file:
LRAT	core/gimpimage-convert.c	303;"	d	file:
LayerAddMaskDialog	dialogs/layer-add-mask-dialog.h	/^typedef struct _LayerAddMaskDialog LayerAddMaskDialog;$/;"	t	typeref:struct:_LayerAddMaskDialog
LayerMode	paint-funcs/paint-funcs.c	/^typedef struct _LayerMode LayerMode;$/;"	t	typeref:struct:_LayerMode	file:
LayerModeFunc	paint-funcs/paint-funcs.c	/^typedef void (* LayerModeFunc) (struct apply_layer_mode_struct *);$/;"	t	file:
LayerOptionsDialog	dialogs/layer-options-dialog.h	/^typedef struct _LayerOptionsDialog LayerOptionsDialog;$/;"	t	typeref:struct:_LayerOptionsDialog
LayerSelect	display/gimpdisplayshell-layer-select.c	/^} LayerSelect;$/;"	t	typeref:struct:__anon192	file:
Levels	base/base-types.h	/^typedef struct _Levels              Levels;$/;"	t	typeref:struct:_Levels
Line	widgets/gtkhwrapbox.c	/^typedef struct _Line Line;$/;"	t	typeref:struct:_Line	file:
Line	widgets/gtkvwrapbox.c	/^typedef struct _Line Line;$/;"	t	typeref:struct:_Line	file:
LoadUnaligned	composite/gimp-composite-altivec.c	/^LoadUnaligned(const guchar *v)$/;"	f	file:
LoadUnalignedLess	composite/gimp-composite-altivec.c	/^LoadUnalignedLess(const guchar *v,$/;"	f	file:
M	composite/gimp-composite.h	/^  const guchar    *M;             \/* Mask        *\/$/;"	m	struct:__anon33
MAGENTA_GREEN	tools/gimpcolorbalancetool.c	44;"	d	file:
MAGIC	plug-in/plug-in-rc.c	/^  MAGIC,$/;"	e	enum:__anon237	file:
MARCHING_ANTS_SPEED_BLURB	config/gimprc-blurbs.h	176;"	d
MARKER_CHANGED	widgets/gimpnavigationview.c	/^  MARKER_CHANGED,$/;"	e	enum:__anon350	file:
MASK_CHANGED	core/gimpimage.c	/^  MASK_CHANGED,$/;"	e	enum:__anon126	file:
MASK_CHANGED	core/gimplayer.c	/^  MASK_CHANGED,$/;"	e	enum:__anon97	file:
MAX4	core/gimp-transform-resize.c	41;"	d	file:
MAX4	core/gimpdrawable-transform.c	65;"	d	file:
MAX4	paint/gimpperspectiveclone.c	51;"	d	file:
MAXDIFF	core/gimpimage-colorhash.c	29;"	d	file:
MAXNUMCOLORS	core/gimpimage-convert.h	23;"	d
MAX_BLUR	paint/gimpconvolve.c	44;"	d	file:
MAX_CACHE_PREVIEWS	core/gimppreviewcache.c	30;"	d	file:
MAX_CHANNELS	base/base-types.h	36;"	d
MAX_COMMENT_LENGTH	widgets/gimptemplateeditor.c	44;"	d	file:
MAX_EXTENSIONS	widgets/gimpfiledialog.c	555;"	d	file:
MAX_GRADIENT	tools/gimpiscissorstool.c	86;"	d	file:
MAX_HANDLE_SIZE	tools/gimprectangletool.c	59;"	d	file:
MAX_IMAGE_COLORS	core/gimppalette-import.c	45;"	d	file:
MAX_ITEMS	display/gimpscalecombobox.c	34;"	d	file:
MAX_ITER	paint/gimpheal.c	324;"	d	file:
MAX_NEW_IMAGE_SIZE_BLURB	config/gimprc-blurbs.h	180;"	d
MAX_OPEN_SWAP_FILES	base/tile-swap.c	71;"	d	file:
MAX_POINTS_INC	display/gimpdisplayshell-selection.c	43;"	d	file:
MAX_SEGS_INC	base/boundary.c	37;"	d	file:
MAX_SHARPEN	paint/gimpconvolve.c	46;"	d	file:
MAX_SUB_COLS	display/gimpdisplayshell-preview.c	45;"	d	file:
MAX_SUB_ROWS	display/gimpdisplayshell-preview.c	46;"	d	file:
MAX_TITLE_BUF	display/gimpdisplayshell-title.c	49;"	d	file:
MAX_URI_LEN	widgets/gimpdnd-xds.c	62;"	d	file:
MENU_BRANCH_ADDED	plug-in/gimppluginmanager.c	/^  MENU_BRANCH_ADDED,$/;"	e	enum:__anon236	file:
MENU_MNEMONICS_BLURB	config/gimprc-blurbs.h	184;"	d
MENU_PATH	plug-in/plug-in-rc.c	/^  MENU_PATH,$/;"	e	enum:__anon237	file:
MENU_PATH_ADDED	plug-in/gimppluginprocedure.c	/^  MENU_PATH_ADDED,$/;"	e	enum:__anon233	file:
MENU_WIDGET_ICON_SIZE	widgets/gimpdockbook.c	50;"	d	file:
MENU_WIDGET_SPACING	widgets/gimpdockbook.c	51;"	d	file:
MESSAGE_TIMEOUT	display/gimpstatusbar.c	53;"	d	file:
MIME_TYPE	plug-in/plug-in-rc.c	/^  MIME_TYPE,$/;"	e	enum:__anon237	file:
MIN4	core/gimp-transform-resize.c	40;"	d	file:
MIN4	core/gimpdrawable-transform.c	64;"	d	file:
MIN4	paint/gimpperspectiveclone.c	50;"	d	file:
MIN_BLUR	paint/gimpconvolve.c	43;"	d	file:
MIN_CELL_SIZE	widgets/gimpcolormapeditor.c	450;"	d	file:
MIN_COLORS_BLURB	config/gimprc-blurbs.h	187;"	d
MIN_DISTANCE	tools/gimpcurvestool.c	70;"	d	file:
MIN_GRADIENT	tools/gimpiscissorstool.c	92;"	d	file:
MIN_HANDLE_SIZE	tools/gimprectangletool.c	60;"	d	file:
MIN_HANDLE_SIZE	tools/gimptransformtool.c	68;"	d	file:
MIN_HEIGHT	widgets/gimpdasheditor.c	38;"	d	file:
MIN_HEIGHT	widgets/gimphistogramview.c	35;"	d	file:
MIN_MOVE	tools/gimpsheartool.c	46;"	d	file:
MIN_SHARPEN	paint/gimpconvolve.c	45;"	d	file:
MIN_WIDTH	widgets/gimpdasheditor.c	37;"	d	file:
MIN_WIDTH	widgets/gimphistogramview.c	34;"	d	file:
MODE_CHANGED	core/gimpimage.c	/^  MODE_CHANGED,$/;"	e	enum:__anon126	file:
MODE_CHANGED	core/gimplayer.c	/^  MODE_CHANGED,$/;"	e	enum:__anon97	file:
MODULE_COLUMN	dialogs/module-dialog.c	/^  MODULE_COLUMN,$/;"	e	enum:__anon181	file:
MODULE_LOAD_INHIBIT	core/gimp-modules.c	128;"	d	file:
MODULE_LOAD_INHIBIT	core/gimp-modules.c	90;"	d	file:
MODULE_PATH_BLURB	config/gimprc-blurbs.h	191;"	d
MONITOR_RES_FROM_GDK_BLURB	config/gimprc-blurbs.h	194;"	d
MONITOR_XRESOLUTION_BLURB	config/gimprc-blurbs.h	197;"	d
MONITOR_YRESOLUTION_BLURB	config/gimprc-blurbs.h	202;"	d
MOVE_CURSOR	widgets/gimpcontainergridview.c	/^  MOVE_CURSOR,$/;"	e	enum:__anon370	file:
MOVE_MASK	tools/gimpvectortool.c	67;"	d	file:
MOVE_TOOL_CHANGES_ACTIVE_BLURB	config/gimprc-blurbs.h	207;"	d
MOVING	tools/gimpmeasuretool.h	/^  MOVING,$/;"	e	enum:__anon280
MOVING_ALL	tools/gimpmeasuretool.h	/^  MOVING_ALL,$/;"	e	enum:__anon280
MULTIBLOB_DEFAULT_SIZEFACTOR	base/siox.c	74;"	d	file:
MULTIBLOB_ONE_BLOB_ONLY	base/siox.c	75;"	d	file:
MeasureFunction	tools/gimpmeasuretool.h	/^} MeasureFunction;$/;"	t	typeref:enum:__anon280
MenuPos	widgets/gimpuimanager.c	/^} MenuPos;$/;"	t	typeref:struct:__anon322	file:
Minvert	base/cpercep.c	/^Minvert (CMatrix src, CMatrix dest)$/;"	f	file:
ModuleDialog	dialogs/module-dialog.c	/^} ModuleDialog;$/;"	t	typeref:struct:__anon182	file:
Mrgb_to_xyz	base/cpercep.c	/^static CMatrix Mrgb_to_xyz, Mxyz_to_rgb;$/;"	v	file:
Mxyz_to_rgb	base/cpercep.c	/^static CMatrix Mrgb_to_xyz, Mxyz_to_rgb;$/;"	v	file:
NAME_CHANGED	core/gimpobject.c	/^  NAME_CHANGED,$/;"	e	enum:__anon129	file:
NAVIGATION_PREVIEW_SIZE_BLURB	config/gimprc-blurbs.h	211;"	d
NEWLINE	vectors/gimpvectors-export.c	220;"	d	file:
NO_ACTION	tools/gimpiscissorstool.h	/^  NO_ACTION,$/;"	e	enum:__anon268
NO_COMBINATION	paint-funcs/paint-funcs-types.h	/^  NO_COMBINATION = 0,$/;"	e	enum:__anon228
NUM_COLUMNS	dialogs/module-dialog.c	/^  NUM_COLUMNS$/;"	e	enum:__anon181	file:
NUM_COLUMNS	display/gimpscalecombobox.c	/^  NUM_COLUMNS$/;"	e	enum:__anon191	file:
NUM_COLUMNS	tools/gimprectangleoptions.c	/^  NUM_COLUMNS$/;"	e	enum:__anon251	file:
NUM_COLUMNS	widgets/gimpcomponenteditor.c	/^  NUM_COLUMNS$/;"	e	enum:__anon395	file:
NUM_COLUMNS	widgets/gimpcontainercombobox.c	/^  NUM_COLUMNS$/;"	e	enum:__anon375	file:
NUM_COLUMNS	widgets/gimpcontainertreeview.c	/^  NUM_COLUMNS$/;"	e	enum:__anon364	file:
NUM_COLUMNS	widgets/gimpcontrollereditor.c	/^  NUM_COLUMNS$/;"	e	enum:__anon377	file:
NUM_COLUMNS	widgets/gimpcontrollerlist.c	/^  NUM_COLUMNS$/;"	e	enum:__anon394	file:
NUM_COLUMNS	widgets/gimpfileprocview.c	/^  NUM_COLUMNS$/;"	e	enum:__anon339	file:
NUM_INFO_LINES	dialogs/module-dialog.c	43;"	d	file:
NUM_PARAMS	text/gimptext-parasite.c	/^  NUM_PARAMS$/;"	e	enum:__anon245	file:
NUM_PROCESSORS_BLURB	config/gimprc-blurbs.h	215;"	d
NUM_PROCESSORS_DEFAULT	config/gimpbaseconfig.c	42;"	d	file:
NUM_SLOTS	base/gimphistogram.c	37;"	d	file:
NUM_SLOTS	base/gimphistogram.c	39;"	d	file:
N_DEST_COLUMNS	widgets/gimpcolordisplayeditor.c	/^  N_DEST_COLUMNS$/;"	e	enum:__anon328	file:
N_SEGMENTS	widgets/gimpcellrendererdashes.c	36;"	d	file:
N_SRC_COLUMNS	widgets/gimpcolordisplayeditor.c	/^  N_SRC_COLUMNS$/;"	e	enum:__anon327	file:
OFFSET	tools/gimpiscissorstool.c	1569;"	d	file:
OMEGA_D	tools/gimpiscissorstool.c	97;"	d	file:
OMEGA_G	tools/gimpiscissorstool.c	98;"	d	file:
OPACITY_CHANGED	core/gimpcontext.c	/^  OPACITY_CHANGED,$/;"	e	enum:__anon103	file:
OPACITY_CHANGED	core/gimplayer.c	/^  OPACITY_CHANGED,$/;"	e	enum:__anon97	file:
OPAQUE_OPACITY	composite/gimp-composite-generic.c	40;"	d	file:
OPAQUE_OPACITY	paint-funcs/paint-funcs-types.h	28;"	d
OUTPUT_LEVELS	tools/gimplevelstool.c	63;"	d	file:
OUTPUT_SLIDERS	tools/gimplevelstool.c	65;"	d	file:
OVERHEAD	core/gimparea.c	28;"	d	file:
OVERLAP_SLIDER	tools/gimphuesaturationtool.c	52;"	d	file:
OVERSAMPLING	core/gimpbrushgenerated.c	37;"	d	file:
O_BINARY	plug-in/gimpplugin.c	68;"	d	file:
O_TEXT	plug-in/gimpplugin.c	66;"	d	file:
OffsetDialog	dialogs/offset-dialog.c	/^} OffsetDialog;$/;"	t	typeref:struct:__anon169	file:
PACK	tools/gimpiscissorstool.c	1568;"	d	file:
PAINT_INFO_CHANGED	core/gimpcontext.c	/^  PAINT_INFO_CHANGED,$/;"	e	enum:__anon103	file:
PAINT_MODE_CHANGED	core/gimpcontext.c	/^  PAINT_MODE_CHANGED,$/;"	e	enum:__anon103	file:
PALETTE_CHANGED	core/gimpcontext.c	/^  PALETTE_CHANGED,$/;"	e	enum:__anon103	file:
PALETTE_PATH_BLURB	config/gimprc-blurbs.h	218;"	d
PALETTE_PATH_WRITABLE_BLURB	config/gimprc-blurbs.h	221;"	d
PANGO_ENABLE_ENGINE	text/gimpfont.c	27;"	d	file:
PANGO_ENABLE_ENGINE	text/gimptext-bitmap.c	26;"	d	file:
PANGO_ENABLE_ENGINE	text/gimptext-vectors.c	26;"	d	file:
PANGO_ENABLE_ENGINE	text/gimptextlayout-render.c	22;"	d	file:
PARAM_SPEC_QUARK	widgets/gimppropwidgets.c	722;"	d	file:
PARASITE_ATTACHED	core/gimpimage.c	/^  PARASITE_ATTACHED,$/;"	e	enum:__anon126	file:
PARASITE_DETACHED	core/gimpimage.c	/^  PARASITE_DETACHED,$/;"	e	enum:__anon126	file:
PATH_COLUMN	dialogs/module-dialog.c	/^  PATH_COLUMN,$/;"	e	enum:__anon181	file:
PATTERN_CHANGED	core/gimpcontext.c	/^  PATTERN_CHANGED,$/;"	e	enum:__anon103	file:
PATTERN_PATH_BLURB	config/gimprc-blurbs.h	223;"	d
PATTERN_PATH_WRITABLE_BLURB	config/gimprc-blurbs.h	226;"	d
PDBDump	pdb/gimppdb-query.c	/^typedef struct _PDBDump PDBDump;$/;"	t	typeref:struct:_PDBDump	file:
PDBQuery	pdb/gimppdb-query.c	/^typedef struct _PDBQuery PDBQuery;$/;"	t	typeref:struct:_PDBQuery	file:
PDBStrings	pdb/gimppdb-query.c	/^typedef struct _PDBStrings PDBStrings;$/;"	t	typeref:struct:_PDBStrings	file:
PDB_REGCOMP_FLAGS	pdb/gimppdb-query.c	47;"	d	file:
PDB_URL_LOAD	dialogs/about-dialog.c	44;"	d	file:
PENCIL_DEFAULT_HARD	paint/gimppenciloptions.c	30;"	d	file:
PERFECT_MOUSE_BLURB	config/gimprc-blurbs.h	228;"	d
PERSISTENT	display/gimpscalecombobox.c	/^  PERSISTENT,$/;"	e	enum:__anon191	file:
PICKED	tools/gimpcolortool.c	/^  PICKED,$/;"	e	enum:__anon250	file:
PIPE_SELECT_ANGULAR	core/gimpbrushpipe.h	/^  PIPE_SELECT_ANGULAR,$/;"	e	enum:__anon114
PIPE_SELECT_CONSTANT	core/gimpbrushpipe.h	/^  PIPE_SELECT_CONSTANT,$/;"	e	enum:__anon114
PIPE_SELECT_INCREMENTAL	core/gimpbrushpipe.h	/^  PIPE_SELECT_INCREMENTAL,$/;"	e	enum:__anon114
PIPE_SELECT_PRESSURE	core/gimpbrushpipe.h	/^  PIPE_SELECT_PRESSURE,$/;"	e	enum:__anon114
PIPE_SELECT_RANDOM	core/gimpbrushpipe.h	/^  PIPE_SELECT_RANDOM,$/;"	e	enum:__anon114
PIPE_SELECT_TILT_X	core/gimpbrushpipe.h	/^  PIPE_SELECT_TILT_X,$/;"	e	enum:__anon114
PIPE_SELECT_TILT_Y	core/gimpbrushpipe.h	/^  PIPE_SELECT_TILT_Y$/;"	e	enum:__anon114
PIPE_SELECT_VELOCITY	core/gimpbrushpipe.h	/^  PIPE_SELECT_VELOCITY,$/;"	e	enum:__anon114
PIXEL_COST	tools/gimpiscissorstool.c	104;"	d	file:
PIXEL_DIR	tools/gimpiscissorstool.c	105;"	d	file:
PLUGINRC_PATH_BLURB	config/gimprc-blurbs.h	241;"	d
PLUG_IN_CLOSED	plug-in/gimppluginmanager.c	/^  PLUG_IN_CLOSED,$/;"	e	enum:__anon236	file:
PLUG_IN_DEF	plug-in/plug-in-rc.c	/^  PLUG_IN_DEF,$/;"	e	enum:__anon237	file:
PLUG_IN_HISTORY_SIZE_BLURB	config/gimprc-blurbs.h	235;"	d
PLUG_IN_OPENED	plug-in/gimppluginmanager.c	/^  PLUG_IN_OPENED,$/;"	e	enum:__anon236	file:
PLUG_IN_PATH_BLURB	config/gimprc-blurbs.h	238;"	d
POINT_WIDTH	tools/gimpiscissorstool.c	89;"	d	file:
POP	core/gimpundo.c	/^  POP,$/;"	e	enum:__anon157	file:
POSTERIZE_DEFAULT_LEVELS	tools/gimpposterizetool.c	44;"	d	file:
PR	base/pixel-region.h	/^  PixelRegion *PR;$/;"	m	struct:_PixelRegionHolder
PR	core/gimpdrawable-blend.c	/^  PixelRegion *PR;$/;"	m	struct:__anon118	file:
PRECISION_B	core/gimpimage-convert.c	170;"	d	file:
PRECISION_G	core/gimpimage-convert.c	169;"	d	file:
PRECISION_R	core/gimpimage-convert.c	168;"	d	file:
PREFIX	plug-in/plug-in-rc.c	/^  PREFIX,$/;"	e	enum:__anon237	file:
PRESERVE	tools/gimpcolorbalancetool.c	46;"	d	file:
PRESSURE_SCALE	paint/gimpbrushcore.h	30;"	d
PREVIEW_CACHE_PRIME_HEIGHT	core/gimppreviewcache.h	24;"	d
PREVIEW_CACHE_PRIME_WIDTH	core/gimppreviewcache.h	23;"	d
PREVIEW_HEIGHT	widgets/gimppaletteeditor.c	58;"	d	file:
PREVIEW_WIDTH	widgets/gimppaletteeditor.c	57;"	d	file:
PRI	base/pixel-processor.c	/^  PixelRegionIterator *PRI;$/;"	m	struct:_PixelProcessor	file:
PRI	core/gimpimagemap.c	/^  PixelRegionIterator   *PRI;$/;"	m	struct:_GimpImageMap	file:
PROC_ARG	plug-in/plug-in-rc.c	/^  PROC_ARG,$/;"	e	enum:__anon237	file:
PROC_DEF	plug-in/plug-in-rc.c	/^  PROC_DEF,$/;"	e	enum:__anon237	file:
PROGRESS_DIALOG_WIDTH	widgets/gimpprogressdialog.c	38;"	d	file:
PROGRESS_TIMEOUT	base/pixel-processor.c	40;"	d	file:
PROJ_ROUND	display/gimpdisplayshell.h	29;"	d
PROP_0	config/gimpbaseconfig.c	/^  PROP_0,$/;"	e	enum:__anon47	file:
PROP_0	config/gimpcoreconfig.c	/^  PROP_0,$/;"	e	enum:__anon48	file:
PROP_0	config/gimpdisplayconfig.c	/^  PROP_0,$/;"	e	enum:__anon49	file:
PROP_0	config/gimpguiconfig.c	/^  PROP_0,$/;"	e	enum:__anon46	file:
PROP_0	config/gimppluginconfig.c	/^  PROP_0,$/;"	e	enum:__anon45	file:
PROP_0	config/gimprc.c	/^  PROP_0,$/;"	e	enum:__anon44	file:
PROP_0	core/gimpbrush.c	/^  PROP_0,$/;"	e	enum:__anon150	file:
PROP_0	core/gimpbrushclipboard.c	/^  PROP_0,$/;"	e	enum:__anon144	file:
PROP_0	core/gimpbrushgenerated.c	/^  PROP_0,$/;"	e	enum:__anon156	file:
PROP_0	core/gimpchannelundo.c	/^  PROP_0,$/;"	e	enum:__anon101	file:
PROP_0	core/gimpcontainer.c	/^  PROP_0,$/;"	e	enum:__anon57	file:
PROP_0	core/gimpdata.c	/^  PROP_0,$/;"	e	enum:__anon154	file:
PROP_0	core/gimpdrawableundo.c	/^  PROP_0,$/;"	e	enum:__anon99	file:
PROP_0	core/gimpgrid.c	/^  PROP_0,$/;"	e	enum:__anon128	file:
PROP_0	core/gimpguide.c	/^  PROP_0,$/;"	e	enum:__anon148	file:
PROP_0	core/gimpguideundo.c	/^  PROP_0,$/;"	e	enum:__anon146	file:
PROP_0	core/gimpimage.c	/^  PROP_0,$/;"	e	enum:__anon127	file:
PROP_0	core/gimpimageundo.c	/^  PROP_0,$/;"	e	enum:__anon124	file:
PROP_0	core/gimpitem.c	/^  PROP_0,$/;"	e	enum:__anon132	file:
PROP_0	core/gimpitempropundo.c	/^  PROP_0,$/;"	e	enum:__anon54	file:
PROP_0	core/gimpitemundo.c	/^  PROP_0,$/;"	e	enum:__anon155	file:
PROP_0	core/gimplayer.c	/^  PROP_0,$/;"	e	enum:__anon98	file:
PROP_0	core/gimplayermaskundo.c	/^  PROP_0,$/;"	e	enum:__anon119	file:
PROP_0	core/gimplayerundo.c	/^  PROP_0,$/;"	e	enum:__anon133	file:
PROP_0	core/gimplist.c	/^  PROP_0,$/;"	e	enum:__anon53	file:
PROP_0	core/gimpobject.c	/^  PROP_0,$/;"	e	enum:__anon130	file:
PROP_0	core/gimppatternclipboard.c	/^  PROP_0,$/;"	e	enum:__anon134	file:
PROP_0	core/gimppdbprogress.c	/^  PROP_0,$/;"	e	enum:__anon111	file:
PROP_0	core/gimpsamplepointundo.c	/^  PROP_0,$/;"	e	enum:__anon120	file:
PROP_0	core/gimpstrokedesc.c	/^  PROP_0,$/;"	e	enum:__anon142	file:
PROP_0	core/gimpstrokeoptions.c	/^  PROP_0,$/;"	e	enum:__anon121	file:
PROP_0	core/gimptemplate.c	/^  PROP_0,$/;"	e	enum:__anon136	file:
PROP_0	core/gimptoolinfo.c	/^  PROP_0,$/;"	e	enum:__anon140	file:
PROP_0	core/gimptooloptions.c	/^  PROP_0,$/;"	e	enum:__anon104	file:
PROP_0	core/gimptoolpresets.c	/^  PROP_0,$/;"	e	enum:__anon166	file:
PROP_0	core/gimpundo.c	/^  PROP_0,$/;"	e	enum:__anon158	file:
PROP_0	core/gimpviewable.c	/^  PROP_0,$/;"	e	enum:__anon115	file:
PROP_0	display/gimpcanvas.c	/^  PROP_0,$/;"	e	enum:__anon194	file:
PROP_0	display/gimpdisplay.c	/^  PROP_0,$/;"	e	enum:__anon188	file:
PROP_0	display/gimpdisplayoptions.c	/^  PROP_0,$/;"	e	enum:__anon193	file:
PROP_0	display/gimpdisplayshell.c	/^  PROP_0,$/;"	e	enum:__anon195	file:
PROP_0	paint/gimpairbrushoptions.c	/^  PROP_0,$/;"	e	enum:__anon207	file:
PROP_0	paint/gimpcloneoptions.c	/^  PROP_0,$/;"	e	enum:__anon221	file:
PROP_0	paint/gimpconvolveoptions.c	/^  PROP_0,$/;"	e	enum:__anon208	file:
PROP_0	paint/gimpdodgeburnoptions.c	/^  PROP_0,$/;"	e	enum:__anon225	file:
PROP_0	paint/gimperaseroptions.c	/^  PROP_0,$/;"	e	enum:__anon212	file:
PROP_0	paint/gimpinkoptions.c	/^  PROP_0,$/;"	e	enum:__anon210	file:
PROP_0	paint/gimppaintcore.c	/^  PROP_0,$/;"	e	enum:__anon211	file:
PROP_0	paint/gimppaintcoreundo.c	/^  PROP_0,$/;"	e	enum:__anon222	file:
PROP_0	paint/gimppaintoptions.c	/^  PROP_0,$/;"	e	enum:__anon219	file:
PROP_0	paint/gimppenciloptions.c	/^  PROP_0,$/;"	e	enum:__anon204	file:
PROP_0	paint/gimpperspectivecloneoptions.c	/^  PROP_0,$/;"	e	enum:__anon209	file:
PROP_0	paint/gimpsmudgeoptions.c	/^  PROP_0,$/;"	e	enum:__anon224	file:
PROP_0	paint/gimpsourcecore.c	/^  PROP_0,$/;"	e	enum:__anon206	file:
PROP_0	paint/gimpsourceoptions.c	/^  PROP_0,$/;"	e	enum:__anon223	file:
PROP_0	text/gimpfont.c	/^  PROP_0,$/;"	e	enum:__anon247	file:
PROP_0	text/gimptext.c	/^  PROP_0,$/;"	e	enum:__anon244	file:
PROP_0	text/gimptextlayer.c	/^  PROP_0,$/;"	e	enum:__anon248	file:
PROP_0	text/gimptextundo.c	/^  PROP_0,$/;"	e	enum:__anon243	file:
PROP_0	tools/gimpblendoptions.c	/^  PROP_0,$/;"	e	enum:__anon276	file:
PROP_0	tools/gimpbucketfilloptions.c	/^  PROP_0,$/;"	e	enum:__anon290	file:
PROP_0	tools/gimpcoloroptions.c	/^  PROP_0,$/;"	e	enum:__anon294	file:
PROP_0	tools/gimpcolorpickeroptions.c	/^  PROP_0,$/;"	e	enum:__anon275	file:
PROP_0	tools/gimpflipoptions.c	/^  PROP_0,$/;"	e	enum:__anon289	file:
PROP_0	tools/gimpforegroundselectoptions.c	/^  PROP_0,$/;"	e	enum:__anon291	file:
PROP_0	tools/gimpforegroundselecttoolundo.c	/^  PROP_0,$/;"	e	enum:__anon287	file:
PROP_0	tools/gimphistogramoptions.c	/^  PROP_0,$/;"	e	enum:__anon274	file:
PROP_0	tools/gimpimagemapoptions.c	/^  PROP_0,$/;"	e	enum:__anon277	file:
PROP_0	tools/gimpmagnifyoptions.c	/^  PROP_0,$/;"	e	enum:__anon279	file:
PROP_0	tools/gimpmeasureoptions.c	/^  PROP_0,$/;"	e	enum:__anon282	file:
PROP_0	tools/gimpmoveoptions.c	/^  PROP_0,$/;"	e	enum:__anon281	file:
PROP_0	tools/gimpselectionoptions.c	/^  PROP_0,$/;"	e	enum:__anon266	file:
PROP_0	tools/gimptextoptions.c	/^  PROP_0,$/;"	e	enum:__anon272	file:
PROP_0	tools/gimptool.c	/^  PROP_0,$/;"	e	enum:__anon296	file:
PROP_0	tools/gimptransformoptions.c	/^  PROP_0,$/;"	e	enum:__anon271	file:
PROP_0	tools/gimptransformtoolundo.c	/^  PROP_0,$/;"	e	enum:__anon249	file:
PROP_0	tools/gimpvectoroptions.c	/^  PROP_0,$/;"	e	enum:__anon295	file:
PROP_0	vectors/gimpstroke.c	/^  PROP_0,$/;"	e	enum:__anon307	file:
PROP_0	vectors/gimpvectorsundo.c	/^  PROP_0,$/;"	e	enum:__anon298	file:
PROP_0	widgets/gimpaction.c	/^  PROP_0,$/;"	e	enum:__anon316	file:
PROP_0	widgets/gimpactiongroup.c	/^  PROP_0,$/;"	e	enum:__anon323	file:
PROP_0	widgets/gimpblobeditor.c	/^  PROP_0,$/;"	e	enum:__anon325	file:
PROP_0	widgets/gimpbrushselect.c	/^  PROP_0,$/;"	e	enum:__anon347	file:
PROP_0	widgets/gimpcellrendererdashes.c	/^  PROP_0,$/;"	e	enum:__anon317	file:
PROP_0	widgets/gimpcellrendererviewable.c	/^  PROP_0,$/;"	e	enum:__anon355	file:
PROP_0	widgets/gimpcolorbar.c	/^  PROP_0,$/;"	e	enum:__anon342	file:
PROP_0	widgets/gimpcoloreditor.c	/^  PROP_0,$/;"	e	enum:__anon309	file:
PROP_0	widgets/gimpcolorframe.c	/^  PROP_0,$/;"	e	enum:__anon362	file:
PROP_0	widgets/gimpcontainercombobox.c	/^  PROP_0,$/;"	e	enum:__anon374	file:
PROP_0	widgets/gimpcontrollereditor.c	/^  PROP_0,$/;"	e	enum:__anon376	file:
PROP_0	widgets/gimpcontrollerinfo.c	/^  PROP_0,$/;"	e	enum:__anon336	file:
PROP_0	widgets/gimpcontrollerlist.c	/^  PROP_0,$/;"	e	enum:__anon393	file:
PROP_0	widgets/gimpcursorview.c	/^  PROP_0,$/;"	e	enum:__anon343	file:
PROP_0	widgets/gimpdasheditor.c	/^  PROP_0,$/;"	e	enum:__anon372	file:
PROP_0	widgets/gimpdataeditor.c	/^  PROP_0,$/;"	e	enum:__anon341	file:
PROP_0	widgets/gimpdeviceinfo.c	/^  PROP_0,$/;"	e	enum:__anon335	file:
PROP_0	widgets/gimpdevicestatus.c	/^  PROP_0,$/;"	e	enum:__anon318	file:
PROP_0	widgets/gimpdock.c	/^  PROP_0,$/;"	e	enum:__anon331	file:
PROP_0	widgets/gimpeditor.c	/^  PROP_0,$/;"	e	enum:__anon345	file:
PROP_0	widgets/gimpenumaction.c	/^  PROP_0,$/;"	e	enum:__anon315	file:
PROP_0	widgets/gimpfgbgeditor.c	/^  PROP_0,$/;"	e	enum:__anon384	file:
PROP_0	widgets/gimpfgbgview.c	/^  PROP_0,$/;"	e	enum:__anon397	file:
PROP_0	widgets/gimpgradientselect.c	/^  PROP_0,$/;"	e	enum:__anon396	file:
PROP_0	widgets/gimpgrideditor.c	/^  PROP_0,$/;"	e	enum:__anon416	file:
PROP_0	widgets/gimphistogramview.c	/^  PROP_0,$/;"	e	enum:__anon391	file:
PROP_0	widgets/gimpimageparasiteview.c	/^  PROP_0,$/;"	e	enum:__anon388	file:
PROP_0	widgets/gimpimagepropview.c	/^  PROP_0,$/;"	e	enum:__anon319	file:
PROP_0	widgets/gimpmessagebox.c	/^  PROP_0,$/;"	e	enum:__anon357	file:
PROP_0	widgets/gimppdbdialog.c	/^  PROP_0,$/;"	e	enum:__anon381	file:
PROP_0	widgets/gimppluginaction.c	/^  PROP_0,$/;"	e	enum:__anon353	file:
PROP_0	widgets/gimpprofilechooserdialog.c	/^  PROP_0,$/;"	e	enum:__anon356	file:
PROP_0	widgets/gimpsamplepointeditor.c	/^  PROP_0,$/;"	e	enum:__anon366	file:
PROP_0	widgets/gimpsizebox.c	/^  PROP_0,$/;"	e	enum:__anon308	file:
PROP_0	widgets/gimpstringaction.c	/^  PROP_0,$/;"	e	enum:__anon313	file:
PROP_0	widgets/gimpstrokeeditor.c	/^  PROP_0,$/;"	e	enum:__anon383	file:
PROP_0	widgets/gimptemplateeditor.c	/^  PROP_0,$/;"	e	enum:__anon338	file:
PROP_0	widgets/gimpuimanager.c	/^  PROP_0,$/;"	e	enum:__anon320	file:
PROP_0	widgets/gimpundoeditor.c	/^  PROP_0,$/;"	e	enum:__anon348	file:
PROP_0	widgets/gimpunitstore.c	/^  PROP_0,$/;"	e	enum:__anon361	file:
PROP_0	widgets/gimpviewablebutton.c	/^  PROP_0,$/;"	e	enum:__anon379	file:
PROP_0	widgets/gimpviewabledialog.c	/^  PROP_0,$/;"	e	enum:__anon417	file:
PROP_0	widgets/gtkwrapbox.c	/^  PROP_0,$/;"	e	enum:__anon368	file:
PROP_ACTIVATE_ON_FOCUS	config/gimpdisplayconfig.c	/^  PROP_ACTIVATE_ON_FOCUS,$/;"	e	enum:__anon49	file:
PROP_ACTIVE_CHANNEL	xcf/xcf-private.h	/^  PROP_ACTIVE_CHANNEL     =  3,$/;"	e	enum:__anon419
PROP_ACTIVE_COLOR	widgets/gimpfgbgeditor.c	/^  PROP_ACTIVE_COLOR$/;"	e	enum:__anon384	file:
PROP_ACTIVE_LAYER	xcf/xcf-private.h	/^  PROP_ACTIVE_LAYER       =  2,$/;"	e	enum:__anon419
PROP_ADD_TO_PALETTE	tools/gimpcolorpickeroptions.c	/^  PROP_ADD_TO_PALETTE,$/;"	e	enum:__anon275	file:
PROP_ALIGN_MODE	paint/gimpsourceoptions.c	/^  PROP_ALIGN_MODE,$/;"	e	enum:__anon223	file:
PROP_ANGLE	core/gimpbrushgenerated.c	/^  PROP_ANGLE$/;"	e	enum:__anon156	file:
PROP_ANGLE	widgets/gimpblobeditor.c	/^  PROP_ANGLE$/;"	e	enum:__anon325	file:
PROP_ANTIALIAS	core/gimpstrokeoptions.c	/^  PROP_ANTIALIAS,$/;"	e	enum:__anon121	file:
PROP_ANTIALIAS	text/gimptext.c	/^  PROP_ANTIALIAS,$/;"	e	enum:__anon244	file:
PROP_ANTIALIAS	tools/gimpselectionoptions.c	/^  PROP_ANTIALIAS,$/;"	e	enum:__anon266	file:
PROP_ANTIALIAS	tools/gimptextoptions.c	/^  PROP_ANTIALIAS,$/;"	e	enum:__anon272	file:
PROP_ANTI_ERASE	paint/gimperaseroptions.c	/^  PROP_ANTI_ERASE$/;"	e	enum:__anon212	file:
PROP_APPLICATION_MODE	paint/gimppaintoptions.c	/^  PROP_APPLICATION_MODE,$/;"	e	enum:__anon219	file:
PROP_APPLY_MASK	xcf/xcf-private.h	/^  PROP_APPLY_MASK         = 11,$/;"	e	enum:__anon419
PROP_ASPECT	widgets/gimpblobeditor.c	/^  PROP_ASPECT,$/;"	e	enum:__anon325	file:
PROP_ASPECT_RATIO	core/gimpbrushgenerated.c	/^  PROP_ASPECT_RATIO,$/;"	e	enum:__anon156	file:
PROP_ASPECT_RATIO	widgets/gtkwrapbox.c	/^  PROP_ASPECT_RATIO,$/;"	e	enum:__anon368	file:
PROP_AUTOHINT	text/gimptext.c	/^  PROP_AUTOHINT,$/;"	e	enum:__anon244	file:
PROP_AUTOHINT	tools/gimptextoptions.c	/^  PROP_AUTOHINT,$/;"	e	enum:__anon272	file:
PROP_AUTO_RENAME	text/gimptextlayer.c	/^  PROP_AUTO_RENAME,$/;"	e	enum:__anon248	file:
PROP_AUTO_RESIZE	tools/gimpmagnifyoptions.c	/^  PROP_AUTO_RESIZE,$/;"	e	enum:__anon279	file:
PROP_AVERAGE_RADIUS	tools/gimpcoloroptions.c	/^  PROP_AVERAGE_RADIUS$/;"	e	enum:__anon294	file:
PROP_AXES	widgets/gimpdeviceinfo.c	/^  PROP_AXES,$/;"	e	enum:__anon335	file:
PROP_BACKGROUND	tools/gimpforegroundselectoptions.c	/^  PROP_BACKGROUND,$/;"	e	enum:__anon291	file:
PROP_BASE_DIR	text/gimptext.c	/^  PROP_BASE_DIR,$/;"	e	enum:__anon244	file:
PROP_BASE_DIR	tools/gimptextoptions.c	/^  PROP_BASE_DIR,$/;"	e	enum:__anon272	file:
PROP_BASE_TYPE	core/gimpimage.c	/^  PROP_BASE_TYPE$/;"	e	enum:__anon127	file:
PROP_BGCOLOR	core/gimpgrid.c	/^  PROP_BGCOLOR,$/;"	e	enum:__anon128	file:
PROP_BLOB_ANGLE	paint/gimpinkoptions.c	/^  PROP_BLOB_ANGLE$/;"	e	enum:__anon210	file:
PROP_BLOB_ASPECT	paint/gimpinkoptions.c	/^  PROP_BLOB_ASPECT,$/;"	e	enum:__anon210	file:
PROP_BLOB_TYPE	paint/gimpinkoptions.c	/^  PROP_BLOB_TYPE,$/;"	e	enum:__anon210	file:
PROP_BORDER	text/gimptext.c	/^  PROP_BORDER$/;"	e	enum:__anon244	file:
PROP_BORDER_WIDTH	widgets/gimphistogramview.c	/^  PROP_BORDER_WIDTH,$/;"	e	enum:__anon391	file:
PROP_BOX_HEIGHT	text/gimptext.c	/^  PROP_BOX_HEIGHT,$/;"	e	enum:__anon244	file:
PROP_BOX_MODE	text/gimptext.c	/^  PROP_BOX_MODE,$/;"	e	enum:__anon244	file:
PROP_BOX_UNIT	text/gimptext.c	/^  PROP_BOX_UNIT,$/;"	e	enum:__anon244	file:
PROP_BOX_WIDTH	text/gimptext.c	/^  PROP_BOX_WIDTH,$/;"	e	enum:__anon244	file:
PROP_BRUSH_PATH	config/gimpcoreconfig.c	/^  PROP_BRUSH_PATH,$/;"	e	enum:__anon48	file:
PROP_BRUSH_PATH_WRITABLE	config/gimpcoreconfig.c	/^  PROP_BRUSH_PATH_WRITABLE,$/;"	e	enum:__anon48	file:
PROP_BRUSH_SCALE	paint/gimppaintoptions.c	/^  PROP_BRUSH_SCALE,$/;"	e	enum:__anon219	file:
PROP_BRUSH_VIEW_SIZE	paint/gimppaintoptions.c	/^  PROP_BRUSH_VIEW_SIZE,$/;"	e	enum:__anon219	file:
PROP_BRUSH_VIEW_TYPE	paint/gimppaintoptions.c	/^  PROP_BRUSH_VIEW_TYPE,$/;"	e	enum:__anon219	file:
PROP_CALLBACK_NAME	core/gimppdbprogress.c	/^  PROP_CALLBACK_NAME$/;"	e	enum:__anon111	file:
PROP_CALLBACK_NAME	widgets/gimppdbdialog.c	/^  PROP_CALLBACK_NAME,$/;"	e	enum:__anon381	file:
PROP_CAN_CHANGE_ACCELS	config/gimpguiconfig.c	/^  PROP_CAN_CHANGE_ACCELS,$/;"	e	enum:__anon46	file:
PROP_CAP_STYLE	core/gimpstrokeoptions.c	/^  PROP_CAP_STYLE,$/;"	e	enum:__anon121	file:
PROP_CHANNEL	widgets/gimpcolorbar.c	/^  PROP_CHANNEL$/;"	e	enum:__anon342	file:
PROP_CHANNEL	widgets/gimphistogramview.c	/^  PROP_CHANNEL,$/;"	e	enum:__anon391	file:
PROP_CHILDREN_TYPE	core/gimpcontainer.c	/^  PROP_CHILDREN_TYPE,$/;"	e	enum:__anon57	file:
PROP_CHILD_LIMIT	widgets/gtkwrapbox.c	/^  PROP_CHILD_LIMIT$/;"	e	enum:__anon368	file:
PROP_CLIP	tools/gimptransformoptions.c	/^  PROP_CLIP,$/;"	e	enum:__anon271	file:
PROP_CLONE_MODE	paint/gimpperspectivecloneoptions.c	/^  PROP_CLONE_MODE$/;"	e	enum:__anon209	file:
PROP_CLONE_TYPE	paint/gimpcloneoptions.c	/^  PROP_CLONE_TYPE$/;"	e	enum:__anon221	file:
PROP_CLOSED	vectors/gimpstroke.c	/^  PROP_CLOSED$/;"	e	enum:__anon307	file:
PROP_COLOR	text/gimptext.c	/^  PROP_COLOR,$/;"	e	enum:__anon244	file:
PROP_COLOR	widgets/gimpaction.c	/^  PROP_COLOR,$/;"	e	enum:__anon316	file:
PROP_COLOR	widgets/gimpcolorbar.c	/^  PROP_COLOR,$/;"	e	enum:__anon342	file:
PROP_COLOR	xcf/xcf-private.h	/^  PROP_COLOR              = 16,$/;"	e	enum:__anon419
PROP_COLORMAP	xcf/xcf-private.h	/^  PROP_COLORMAP           =  1,$/;"	e	enum:__anon419
PROP_COLOR_MANAGEMENT	config/gimpcoreconfig.c	/^  PROP_COLOR_MANAGEMENT,$/;"	e	enum:__anon48	file:
PROP_COLOR_PROFILE_POLICY	config/gimpcoreconfig.c	/^  PROP_COLOR_PROFILE_POLICY,$/;"	e	enum:__anon48	file:
PROP_COMMENT	core/gimptemplate.c	/^  PROP_COMMENT,$/;"	e	enum:__anon136	file:
PROP_COMPRESSION	xcf/xcf-private.h	/^  PROP_COMPRESSION        = 17,$/;"	e	enum:__anon419
PROP_CONFIRM_ON_CLOSE	config/gimpdisplayconfig.c	/^  PROP_CONFIRM_ON_CLOSE,$/;"	e	enum:__anon49	file:
PROP_CONSTRAIN	tools/gimptransformoptions.c	/^  PROP_CONSTRAIN$/;"	e	enum:__anon271	file:
PROP_CONTEXT	core/gimppdbprogress.c	/^  PROP_CONTEXT,$/;"	e	enum:__anon111	file:
PROP_CONTEXT	widgets/gimpaction.c	/^  PROP_CONTEXT,$/;"	e	enum:__anon316	file:
PROP_CONTEXT	widgets/gimpcoloreditor.c	/^  PROP_CONTEXT$/;"	e	enum:__anon309	file:
PROP_CONTEXT	widgets/gimpcontrollereditor.c	/^  PROP_CONTEXT$/;"	e	enum:__anon376	file:
PROP_CONTEXT	widgets/gimpdataeditor.c	/^  PROP_CONTEXT,$/;"	e	enum:__anon341	file:
PROP_CONTEXT	widgets/gimpdock.c	/^  PROP_CONTEXT,$/;"	e	enum:__anon331	file:
PROP_CONTEXT	widgets/gimpfgbgeditor.c	/^  PROP_CONTEXT,$/;"	e	enum:__anon384	file:
PROP_CONTEXT	widgets/gimpfgbgview.c	/^  PROP_CONTEXT$/;"	e	enum:__anon397	file:
PROP_CONTEXT	widgets/gimpgrideditor.c	/^  PROP_CONTEXT,$/;"	e	enum:__anon416	file:
PROP_CONTEXT	widgets/gimppdbdialog.c	/^  PROP_CONTEXT,$/;"	e	enum:__anon381	file:
PROP_CONTEXT	widgets/gimpviewabledialog.c	/^  PROP_CONTEXT,$/;"	e	enum:__anon417	file:
PROP_CONTIGUOUS	tools/gimpforegroundselectoptions.c	/^  PROP_CONTIGUOUS,$/;"	e	enum:__anon291	file:
PROP_CONTROLLER	widgets/gimpcontrollerinfo.c	/^  PROP_CONTROLLER,$/;"	e	enum:__anon336	file:
PROP_CONTROLLER_INFO	widgets/gimpcontrollereditor.c	/^  PROP_CONTROLLER_INFO,$/;"	e	enum:__anon376	file:
PROP_CONTROL_POINTS	vectors/gimpstroke.c	/^  PROP_CONTROL_POINTS,$/;"	e	enum:__anon307	file:
PROP_CORNER_RADIUS	tools/gimprectangleselectoptions.c	/^  PROP_CORNER_RADIUS$/;"	e	enum:__anon297	file:
PROP_CURRENT_RATIO	widgets/gtkwrapbox.c	/^  PROP_CURRENT_RATIO,$/;"	e	enum:__anon368	file:
PROP_CURSOR_FORMAT	config/gimpguiconfig.c	/^  PROP_CURSOR_FORMAT,$/;"	e	enum:__anon46	file:
PROP_CURSOR_MODE	config/gimpdisplayconfig.c	/^  PROP_CURSOR_MODE,$/;"	e	enum:__anon49	file:
PROP_CURSOR_UPDATING	config/gimpdisplayconfig.c	/^  PROP_CURSOR_UPDATING,$/;"	e	enum:__anon49	file:
PROP_DASH_INFO	core/gimpstrokeoptions.c	/^  PROP_DASH_INFO$/;"	e	enum:__anon121	file:
PROP_DASH_OFFSET	core/gimpstrokeoptions.c	/^  PROP_DASH_OFFSET,$/;"	e	enum:__anon121	file:
PROP_DASH_UNIT	core/gimpstrokeoptions.c	/^  PROP_DASH_UNIT,$/;"	e	enum:__anon121	file:
PROP_DATA	widgets/gimpdataeditor.c	/^  PROP_DATA$/;"	e	enum:__anon341	file:
PROP_DATA_FACTORY	widgets/gimpdataeditor.c	/^  PROP_DATA_FACTORY,$/;"	e	enum:__anon341	file:
PROP_DEBUG_EVENTS	widgets/gimpcontrollerinfo.c	/^  PROP_DEBUG_EVENTS,$/;"	e	enum:__anon336	file:
PROP_DEFAULT_BRUSH	config/gimpcoreconfig.c	/^  PROP_DEFAULT_BRUSH,$/;"	e	enum:__anon48	file:
PROP_DEFAULT_DOT_FOR_DOT	config/gimpdisplayconfig.c	/^  PROP_DEFAULT_DOT_FOR_DOT,$/;"	e	enum:__anon49	file:
PROP_DEFAULT_FONT	config/gimpcoreconfig.c	/^  PROP_DEFAULT_FONT,$/;"	e	enum:__anon48	file:
PROP_DEFAULT_FULLSCREEN_VIEW	config/gimpdisplayconfig.c	/^  PROP_DEFAULT_FULLSCREEN_VIEW,$/;"	e	enum:__anon49	file:
PROP_DEFAULT_GRADIENT	config/gimpcoreconfig.c	/^  PROP_DEFAULT_GRADIENT,$/;"	e	enum:__anon48	file:
PROP_DEFAULT_GRID	config/gimpcoreconfig.c	/^  PROP_DEFAULT_GRID,$/;"	e	enum:__anon48	file:
PROP_DEFAULT_IMAGE	config/gimpcoreconfig.c	/^  PROP_DEFAULT_IMAGE,$/;"	e	enum:__anon48	file:
PROP_DEFAULT_PALETTE	config/gimpcoreconfig.c	/^  PROP_DEFAULT_PALETTE,$/;"	e	enum:__anon48	file:
PROP_DEFAULT_PATTERN	config/gimpcoreconfig.c	/^  PROP_DEFAULT_PATTERN,$/;"	e	enum:__anon48	file:
PROP_DEFAULT_THRESHOLD	config/gimpguiconfig.c	/^  PROP_DEFAULT_THRESHOLD,$/;"	e	enum:__anon46	file:
PROP_DEFAULT_VIEW	config/gimpdisplayconfig.c	/^  PROP_DEFAULT_VIEW,$/;"	e	enum:__anon49	file:
PROP_DELETABLE	core/gimpdata.c	/^  PROP_DELETABLE,$/;"	e	enum:__anon154	file:
PROP_DESC	widgets/gimpviewabledialog.c	/^  PROP_DESC,$/;"	e	enum:__anon417	file:
PROP_DIALOG_FACTORY	widgets/gimpdock.c	/^  PROP_DIALOG_FACTORY$/;"	e	enum:__anon331	file:
PROP_DIRECTION	tools/gimptransformoptions.c	/^  PROP_DIRECTION,$/;"	e	enum:__anon271	file:
PROP_DIRTY_MASK	core/gimpundo.c	/^  PROP_DIRTY_MASK$/;"	e	enum:__anon158	file:
PROP_DITHER	tools/gimpblendoptions.c	/^  PROP_DITHER$/;"	e	enum:__anon276	file:
PROP_DOCK_WINDOW_HINT	config/gimpguiconfig.c	/^  PROP_DOCK_WINDOW_HINT,$/;"	e	enum:__anon46	file:
PROP_EDIT_MASK	xcf/xcf-private.h	/^  PROP_EDIT_MASK          = 12,$/;"	e	enum:__anon419
PROP_EDIT_RESOLUTION	widgets/gimpsizebox.c	/^  PROP_EDIT_RESOLUTION$/;"	e	enum:__anon308	file:
PROP_ELLIPSIZE	widgets/gimpcontainercombobox.c	/^  PROP_ELLIPSIZE = GIMP_CONTAINER_VIEW_PROP_LAST + 1$/;"	e	enum:__anon374	file:
PROP_ENABLED	widgets/gimpcontrollerinfo.c	/^  PROP_ENABLED,$/;"	e	enum:__anon336	file:
PROP_END	xcf/xcf-private.h	/^  PROP_END                =  0,$/;"	e	enum:__anon419
PROP_ENVIRON_PATH	config/gimpcoreconfig.c	/^  PROP_ENVIRON_PATH,$/;"	e	enum:__anon48	file:
PROP_EXPANDED	tools/gimpforegroundselectoptions.c	/^  PROP_EXPANDED,$/;"	e	enum:__anon291	file:
PROP_EXPOSURE	paint/gimpdodgeburnoptions.c	/^  PROP_EXPOSURE$/;"	e	enum:__anon225	file:
PROP_FADE_LENGTH	paint/gimppaintoptions.c	/^  PROP_FADE_LENGTH,$/;"	e	enum:__anon219	file:
PROP_FADE_UNIT	paint/gimppaintoptions.c	/^  PROP_FADE_UNIT,$/;"	e	enum:__anon219	file:
PROP_FEATHER	tools/gimpselectionoptions.c	/^  PROP_FEATHER,$/;"	e	enum:__anon266	file:
PROP_FEATHER_RADIUS	tools/gimpselectionoptions.c	/^  PROP_FEATHER_RADIUS,$/;"	e	enum:__anon266	file:
PROP_FGCOLOR	core/gimpgrid.c	/^  PROP_FGCOLOR,$/;"	e	enum:__anon128	file:
PROP_FILENAME	core/gimpdata.c	/^  PROP_FILENAME,$/;"	e	enum:__anon154	file:
PROP_FILENAME	core/gimptemplate.c	/^  PROP_FILENAME$/;"	e	enum:__anon136	file:
PROP_FILL_CRITERION	tools/gimpbucketfilloptions.c	/^  PROP_FILL_CRITERION$/;"	e	enum:__anon290	file:
PROP_FILL_MODE	tools/gimpbucketfilloptions.c	/^  PROP_FILL_MODE,$/;"	e	enum:__anon290	file:
PROP_FILL_SELECTION	tools/gimpbucketfilloptions.c	/^  PROP_FILL_SELECTION,$/;"	e	enum:__anon290	file:
PROP_FILL_TRANSPARENT	tools/gimpbucketfilloptions.c	/^  PROP_FILL_TRANSPARENT,$/;"	e	enum:__anon290	file:
PROP_FILL_TYPE	core/gimptemplate.c	/^  PROP_FILL_TYPE,$/;"	e	enum:__anon136	file:
PROP_FLIP_TYPE	tools/gimpflipoptions.c	/^  PROP_FLIP_TYPE$/;"	e	enum:__anon289	file:
PROP_FLOATING_SELECTION	xcf/xcf-private.h	/^  PROP_FLOATING_SELECTION =  5,$/;"	e	enum:__anon419
PROP_FONT	text/gimptext.c	/^  PROP_FONT,$/;"	e	enum:__anon244	file:
PROP_FONT_PATH	config/gimpcoreconfig.c	/^  PROP_FONT_PATH,$/;"	e	enum:__anon48	file:
PROP_FONT_PATH_WRITABLE	config/gimpcoreconfig.c	/^  PROP_FONT_PATH_WRITABLE,$/;"	e	enum:__anon48	file:
PROP_FONT_SIZE	text/gimptext.c	/^  PROP_FONT_SIZE,$/;"	e	enum:__anon244	file:
PROP_FONT_SIZE	tools/gimptextoptions.c	/^  PROP_FONT_SIZE,$/;"	e	enum:__anon272	file:
PROP_FONT_VIEW_SIZE	tools/gimptextoptions.c	/^  PROP_FONT_VIEW_SIZE$/;"	e	enum:__anon272	file:
PROP_FONT_VIEW_TYPE	tools/gimptextoptions.c	/^  PROP_FONT_VIEW_TYPE,$/;"	e	enum:__anon272	file:
PROP_FOREGROUND_SELECT_TOOL	tools/gimpforegroundselecttoolundo.c	/^  PROP_FOREGROUND_SELECT_TOOL$/;"	e	enum:__anon287	file:
PROP_FRACTALEXPLORER_PATH	config/gimppluginconfig.c	/^  PROP_FRACTALEXPLORER_PATH,$/;"	e	enum:__anon45	file:
PROP_GFIG_PATH	config/gimppluginconfig.c	/^  PROP_GFIG_PATH,$/;"	e	enum:__anon45	file:
PROP_GFLARE_PATH	config/gimppluginconfig.c	/^  PROP_GFLARE_PATH,$/;"	e	enum:__anon45	file:
PROP_GIMP	core/gimpbrushclipboard.c	/^  PROP_GIMP$/;"	e	enum:__anon144	file:
PROP_GIMP	core/gimpimage.c	/^  PROP_GIMP,$/;"	e	enum:__anon127	file:
PROP_GIMP	core/gimppatternclipboard.c	/^  PROP_GIMP$/;"	e	enum:__anon134	file:
PROP_GIMP	core/gimpstrokedesc.c	/^  PROP_GIMP,$/;"	e	enum:__anon142	file:
PROP_GIMP	display/gimpcanvas.c	/^  PROP_GIMP$/;"	e	enum:__anon194	file:
PROP_GIMP	widgets/gimpactiongroup.c	/^  PROP_GIMP,$/;"	e	enum:__anon323	file:
PROP_GIMP	widgets/gimpcontrollerlist.c	/^  PROP_GIMP$/;"	e	enum:__anon393	file:
PROP_GIMP	widgets/gimpdevicestatus.c	/^  PROP_GIMP$/;"	e	enum:__anon318	file:
PROP_GIMP	widgets/gimpprofilechooserdialog.c	/^  PROP_GIMP$/;"	e	enum:__anon356	file:
PROP_GIMP	widgets/gimpuimanager.c	/^  PROP_GIMP$/;"	e	enum:__anon320	file:
PROP_GIMPRESSIONIST_PATH	config/gimppluginconfig.c	/^  PROP_GIMPRESSIONIST_PATH,$/;"	e	enum:__anon45	file:
PROP_GLOBAL_BRUSH	config/gimpcoreconfig.c	/^  PROP_GLOBAL_BRUSH,$/;"	e	enum:__anon48	file:
PROP_GLOBAL_FONT	config/gimpcoreconfig.c	/^  PROP_GLOBAL_FONT,$/;"	e	enum:__anon48	file:
PROP_GLOBAL_GRADIENT	config/gimpcoreconfig.c	/^  PROP_GLOBAL_GRADIENT,$/;"	e	enum:__anon48	file:
PROP_GLOBAL_PALETTE	config/gimpcoreconfig.c	/^  PROP_GLOBAL_PALETTE,$/;"	e	enum:__anon48	file:
PROP_GLOBAL_PATTERN	config/gimpcoreconfig.c	/^  PROP_GLOBAL_PATTERN,$/;"	e	enum:__anon48	file:
PROP_GRADIENT_LENGTH	paint/gimppaintoptions.c	/^  PROP_GRADIENT_LENGTH,$/;"	e	enum:__anon219	file:
PROP_GRADIENT_PATH	config/gimpcoreconfig.c	/^  PROP_GRADIENT_PATH,$/;"	e	enum:__anon48	file:
PROP_GRADIENT_PATH_WRITABLE	config/gimpcoreconfig.c	/^  PROP_GRADIENT_PATH_WRITABLE,$/;"	e	enum:__anon48	file:
PROP_GRADIENT_REPEAT	paint/gimppaintoptions.c	/^  PROP_GRADIENT_REPEAT,$/;"	e	enum:__anon219	file:
PROP_GRADIENT_REPEAT	tools/gimpblendoptions.c	/^  PROP_GRADIENT_REPEAT,  \/*  overrides a GimpPaintOptions property  *\/$/;"	e	enum:__anon276	file:
PROP_GRADIENT_REVERSE	paint/gimppaintoptions.c	/^  PROP_GRADIENT_REVERSE,$/;"	e	enum:__anon219	file:
PROP_GRADIENT_TYPE	tools/gimpblendoptions.c	/^  PROP_GRADIENT_TYPE,$/;"	e	enum:__anon276	file:
PROP_GRADIENT_UNIT	paint/gimppaintoptions.c	/^  PROP_GRADIENT_UNIT,$/;"	e	enum:__anon219	file:
PROP_GRADIENT_VIEW_SIZE	paint/gimppaintoptions.c	/^  PROP_GRADIENT_VIEW_SIZE$/;"	e	enum:__anon219	file:
PROP_GRADIENT_VIEW_TYPE	paint/gimppaintoptions.c	/^  PROP_GRADIENT_VIEW_TYPE,$/;"	e	enum:__anon219	file:
PROP_GRID	core/gimpimageundo.c	/^  PROP_GRID,$/;"	e	enum:__anon124	file:
PROP_GRID	widgets/gimpgrideditor.c	/^  PROP_GRID,$/;"	e	enum:__anon416	file:
PROP_GRID_SIZE	tools/gimptransformoptions.c	/^  PROP_GRID_SIZE,$/;"	e	enum:__anon271	file:
PROP_GRID_TYPE	tools/gimptransformoptions.c	/^  PROP_GRID_TYPE,$/;"	e	enum:__anon271	file:
PROP_GUIDE	core/gimpguideundo.c	/^  PROP_GUIDE$/;"	e	enum:__anon146	file:
PROP_GUIDES	xcf/xcf-private.h	/^  PROP_GUIDES             = 18,$/;"	e	enum:__anon419
PROP_HARD	paint/gimppaintoptions.c	/^  PROP_HARD,$/;"	e	enum:__anon219	file:
PROP_HARD	paint/gimppenciloptions.c	/^  PROP_HARD$/;"	e	enum:__anon204	file:
PROP_HARDNESS	core/gimpbrushgenerated.c	/^  PROP_HARDNESS,$/;"	e	enum:__anon156	file:
PROP_HAS_COLOR_AREA	widgets/gimpcolorframe.c	/^  PROP_HAS_COLOR_AREA$/;"	e	enum:__anon362	file:
PROP_HAS_NUMBER	widgets/gimpcolorframe.c	/^  PROP_HAS_NUMBER,$/;"	e	enum:__anon362	file:
PROP_HEIGHT	core/gimpdrawableundo.c	/^  PROP_HEIGHT$/;"	e	enum:__anon99	file:
PROP_HEIGHT	core/gimpimage.c	/^  PROP_HEIGHT,$/;"	e	enum:__anon127	file:
PROP_HEIGHT	core/gimpitem.c	/^  PROP_HEIGHT$/;"	e	enum:__anon132	file:
PROP_HEIGHT	core/gimptemplate.c	/^  PROP_HEIGHT,$/;"	e	enum:__anon136	file:
PROP_HEIGHT	widgets/gimpsizebox.c	/^  PROP_HEIGHT,$/;"	e	enum:__anon308	file:
PROP_HELP_BROWSER	config/gimpguiconfig.c	/^  PROP_HELP_BROWSER,$/;"	e	enum:__anon46	file:
PROP_HELP_LOCALES	config/gimpguiconfig.c	/^  PROP_HELP_LOCALES,$/;"	e	enum:__anon46	file:
PROP_HINTING	text/gimptext.c	/^  PROP_HINTING,$/;"	e	enum:__anon244	file:
PROP_HINTING	tools/gimptextoptions.c	/^  PROP_HINTING,$/;"	e	enum:__anon272	file:
PROP_HOMOGENEOUS	widgets/gtkwrapbox.c	/^  PROP_HOMOGENEOUS,$/;"	e	enum:__anon368	file:
PROP_HSPACING	widgets/gtkwrapbox.c	/^  PROP_HSPACING,$/;"	e	enum:__anon368	file:
PROP_ID	core/gimpguide.c	/^  PROP_ID,$/;"	e	enum:__anon148	file:
PROP_ID	core/gimpimage.c	/^  PROP_ID,$/;"	e	enum:__anon127	file:
PROP_ID	core/gimpitem.c	/^  PROP_ID,$/;"	e	enum:__anon132	file:
PROP_ID	display/gimpdisplay.c	/^  PROP_ID,$/;"	e	enum:__anon188	file:
PROP_IMAGE	core/gimpundo.c	/^  PROP_IMAGE,$/;"	e	enum:__anon158	file:
PROP_IMAGE	display/gimpdisplay.c	/^  PROP_IMAGE,$/;"	e	enum:__anon188	file:
PROP_IMAGE	widgets/gimpimageparasiteview.c	/^  PROP_IMAGE,$/;"	e	enum:__anon388	file:
PROP_IMAGE	widgets/gimpimagepropview.c	/^  PROP_IMAGE$/;"	e	enum:__anon319	file:
PROP_IMAGE_STATUS_FORMAT	config/gimpdisplayconfig.c	/^  PROP_IMAGE_STATUS_FORMAT,$/;"	e	enum:__anon49	file:
PROP_IMAGE_TITLE_FORMAT	config/gimpdisplayconfig.c	/^  PROP_IMAGE_TITLE_FORMAT,$/;"	e	enum:__anon49	file:
PROP_IMAGE_TYPE	core/gimptemplate.c	/^  PROP_IMAGE_TYPE,$/;"	e	enum:__anon136	file:
PROP_INDENTATION	text/gimptext.c	/^  PROP_INDENTATION,$/;"	e	enum:__anon244	file:
PROP_INDENTATION	tools/gimptextoptions.c	/^  PROP_INDENTATION,$/;"	e	enum:__anon272	file:
PROP_INFO_WINDOW_PER_DISPLAY	config/gimpguiconfig.c	/^  PROP_INFO_WINDOW_PER_DISPLAY,$/;"	e	enum:__anon46	file:
PROP_INITIAL_OBJECT	widgets/gimppdbdialog.c	/^  PROP_INITIAL_OBJECT,$/;"	e	enum:__anon381	file:
PROP_INITIAL_ZOOM_TO_FIT	config/gimpdisplayconfig.c	/^  PROP_INITIAL_ZOOM_TO_FIT,$/;"	e	enum:__anon49	file:
PROP_INSTALL_COLORMAP	config/gimpcoreconfig.c	/^  PROP_INSTALL_COLORMAP,$/;"	e	enum:__anon48	file:
PROP_INTERACTIVE	tools/gimpselectionoptions.c	/^  PROP_INTERACTIVE$/;"	e	enum:__anon266	file:
PROP_INTERPOLATION	tools/gimptransformoptions.c	/^  PROP_INTERPOLATION,$/;"	e	enum:__anon271	file:
PROP_INTERPOLATION_TYPE	config/gimpcoreconfig.c	/^  PROP_INTERPOLATION_TYPE,$/;"	e	enum:__anon48	file:
PROP_INTERPRETER_PATH	config/gimpcoreconfig.c	/^  PROP_INTERPRETER_PATH,$/;"	e	enum:__anon48	file:
PROP_ITEM	core/gimpitemundo.c	/^  PROP_ITEM$/;"	e	enum:__anon155	file:
PROP_JITTER_AMOUNT	paint/gimppaintoptions.c	/^  PROP_JITTER_AMOUNT,$/;"	e	enum:__anon219	file:
PROP_JOIN_STYLE	core/gimpstrokeoptions.c	/^  PROP_JOIN_STYLE,$/;"	e	enum:__anon121	file:
PROP_JUSTIFICATION	text/gimptext.c	/^  PROP_JUSTIFICATION,$/;"	e	enum:__anon244	file:
PROP_JUSTIFICATION	tools/gimptextoptions.c	/^  PROP_JUSTIFICATION,$/;"	e	enum:__anon272	file:
PROP_JUSTIFY	widgets/gtkwrapbox.c	/^  PROP_JUSTIFY,$/;"	e	enum:__anon368	file:
PROP_KEEP_ASPECT	widgets/gimpsizebox.c	/^  PROP_KEEP_ASPECT,$/;"	e	enum:__anon308	file:
PROP_KERNING	text/gimptext.c	/^  PROP_KERNING,$/;"	e	enum:__anon244	file:
PROP_KEYS	widgets/gimpdeviceinfo.c	/^  PROP_KEYS$/;"	e	enum:__anon335	file:
PROP_LABEL	widgets/gimpactiongroup.c	/^  PROP_LABEL,$/;"	e	enum:__anon323	file:
PROP_LANGUAGE	text/gimptext.c	/^  PROP_LANGUAGE,$/;"	e	enum:__anon244	file:
PROP_LANGUAGE	tools/gimptextoptions.c	/^  PROP_LANGUAGE,$/;"	e	enum:__anon272	file:
PROP_LAST_OPENED_SIZE	config/gimpguiconfig.c	/^  PROP_LAST_OPENED_SIZE,$/;"	e	enum:__anon46	file:
PROP_LAYER_MASK	core/gimplayermaskundo.c	/^  PROP_LAYER_MASK$/;"	e	enum:__anon119	file:
PROP_LAYER_ONLY	tools/gimpcropoptions.c	/^  PROP_LAYER_ONLY = GIMP_RECTANGLE_OPTIONS_PROP_LAST + 1$/;"	e	enum:__anon288	file:
PROP_LAYER_PREVIEWS	config/gimpcoreconfig.c	/^  PROP_LAYER_PREVIEWS,$/;"	e	enum:__anon48	file:
PROP_LAYER_PREVIEW_SIZE	config/gimpcoreconfig.c	/^  PROP_LAYER_PREVIEW_SIZE,$/;"	e	enum:__anon48	file:
PROP_LENGTH	widgets/gimpdasheditor.c	/^  PROP_LENGTH$/;"	e	enum:__anon372	file:
PROP_LETTER_SPACING	text/gimptext.c	/^  PROP_LETTER_SPACING,$/;"	e	enum:__anon244	file:
PROP_LETTER_SPACING	tools/gimptextoptions.c	/^  PROP_LETTER_SPACING,$/;"	e	enum:__anon272	file:
PROP_LINE_JUSTIFY	widgets/gtkwrapbox.c	/^  PROP_LINE_JUSTIFY,$/;"	e	enum:__anon368	file:
PROP_LINE_SPACING	text/gimptext.c	/^  PROP_LINE_SPACING,$/;"	e	enum:__anon244	file:
PROP_LINE_SPACING	tools/gimptextoptions.c	/^  PROP_LINE_SPACING,$/;"	e	enum:__anon272	file:
PROP_LINKED	xcf/xcf-private.h	/^  PROP_LINKED             =  9,$/;"	e	enum:__anon419
PROP_LOCK_ALPHA	core/gimplayer.c	/^  PROP_LOCK_ALPHA$/;"	e	enum:__anon98	file:
PROP_LOCK_ALPHA	xcf/xcf-private.h	/^  PROP_LOCK_ALPHA         = 10,$/;"	e	enum:__anon419
PROP_MAPPING	widgets/gimpcontrollerinfo.c	/^  PROP_MAPPING$/;"	e	enum:__anon336	file:
PROP_MARCHING_ANTS_SPEED	config/gimpdisplayconfig.c	/^  PROP_MARCHING_ANTS_SPEED,$/;"	e	enum:__anon49	file:
PROP_MASK_COLOR	tools/gimpforegroundselectoptions.c	/^  PROP_MASK_COLOR,$/;"	e	enum:__anon291	file:
PROP_MAX_NEW_IMAGE_SIZE	config/gimpguiconfig.c	/^  PROP_MAX_NEW_IMAGE_SIZE,$/;"	e	enum:__anon46	file:
PROP_MENU_FACTORY	widgets/gimpeditor.c	/^  PROP_MENU_FACTORY,$/;"	e	enum:__anon345	file:
PROP_MENU_FACTORY	widgets/gimppdbdialog.c	/^  PROP_MENU_FACTORY$/;"	e	enum:__anon381	file:
PROP_MENU_IDENTIFIER	widgets/gimpeditor.c	/^  PROP_MENU_IDENTIFIER,$/;"	e	enum:__anon345	file:
PROP_MENU_MNEMONICS	config/gimpguiconfig.c	/^  PROP_MENU_MNEMONICS,$/;"	e	enum:__anon46	file:
PROP_METHOD	core/gimpstrokedesc.c	/^  PROP_METHOD,$/;"	e	enum:__anon142	file:
PROP_MIME_TYPE	core/gimpdata.c	/^  PROP_MIME_TYPE$/;"	e	enum:__anon154	file:
PROP_MIN_COLORS	config/gimpcoreconfig.c	/^  PROP_MIN_COLORS,$/;"	e	enum:__anon48	file:
PROP_MITER_LIMIT	core/gimpstrokeoptions.c	/^  PROP_MITER_LIMIT,$/;"	e	enum:__anon121	file:
PROP_MNEMONICS	widgets/gimpactiongroup.c	/^  PROP_MNEMONICS$/;"	e	enum:__anon323	file:
PROP_MODE	core/gimplayer.c	/^  PROP_MODE,$/;"	e	enum:__anon98	file:
PROP_MODE	paint/gimpdodgeburnoptions.c	/^  PROP_MODE,$/;"	e	enum:__anon225	file:
PROP_MODE	widgets/gimpcolorframe.c	/^  PROP_MODE,$/;"	e	enum:__anon362	file:
PROP_MODE	widgets/gimpdeviceinfo.c	/^  PROP_MODE,$/;"	e	enum:__anon335	file:
PROP_MODE	xcf/xcf-private.h	/^  PROP_MODE               =  7,$/;"	e	enum:__anon419
PROP_MODIFIED	text/gimptextlayer.c	/^  PROP_MODIFIED$/;"	e	enum:__anon248	file:
PROP_MODULE_PATH	config/gimpcoreconfig.c	/^  PROP_MODULE_PATH,$/;"	e	enum:__anon48	file:
PROP_MONITOR_RES_FROM_GDK	config/gimpdisplayconfig.c	/^  PROP_MONITOR_RES_FROM_GDK,$/;"	e	enum:__anon49	file:
PROP_MONITOR_XRESOLUTION	config/gimpdisplayconfig.c	/^  PROP_MONITOR_XRESOLUTION,$/;"	e	enum:__anon49	file:
PROP_MONITOR_YRESOLUTION	config/gimpdisplayconfig.c	/^  PROP_MONITOR_YRESOLUTION,$/;"	e	enum:__anon49	file:
PROP_MOVE_CURRENT	tools/gimpmoveoptions.c	/^  PROP_MOVE_CURRENT$/;"	e	enum:__anon281	file:
PROP_MOVE_TOOL_CHANGES_ACTIVE	config/gimpguiconfig.c	/^  PROP_MOVE_TOOL_CHANGES_ACTIVE,$/;"	e	enum:__anon46	file:
PROP_MOVE_TYPE	tools/gimpmoveoptions.c	/^  PROP_MOVE_TYPE,$/;"	e	enum:__anon281	file:
PROP_NAME	core/gimpobject.c	/^  PROP_NAME$/;"	e	enum:__anon130	file:
PROP_NAME	widgets/gimpeditor.c	/^  PROP_NAME$/;"	e	enum:__anon345	file:
PROP_NAME	widgets/gimpuimanager.c	/^  PROP_NAME,$/;"	e	enum:__anon320	file:
PROP_NAV_PREVIEW_SIZE	config/gimpdisplayconfig.c	/^  PROP_NAV_PREVIEW_SIZE,$/;"	e	enum:__anon49	file:
PROP_NUMBER	widgets/gimpcolorframe.c	/^  PROP_NUMBER,$/;"	e	enum:__anon362	file:
PROP_NUM_PROCESSORS	config/gimpbaseconfig.c	/^  PROP_NUM_PROCESSORS,$/;"	e	enum:__anon47	file:
PROP_NUM_VALUES	widgets/gimpunitstore.c	/^  PROP_NUM_VALUES$/;"	e	enum:__anon361	file:
PROP_N_SEGMENTS	widgets/gimpdasheditor.c	/^  PROP_N_SEGMENTS,$/;"	e	enum:__anon372	file:
PROP_OFFSET	tools/gimpblendoptions.c	/^  PROP_OFFSET,$/;"	e	enum:__anon276	file:
PROP_OFFSETS	xcf/xcf-private.h	/^  PROP_OFFSETS            = 15,$/;"	e	enum:__anon419
PROP_OFFSET_UNIT	core/gimpgrid.c	/^  PROP_OFFSET_UNIT$/;"	e	enum:__anon128	file:
PROP_OFFSET_X	text/gimptext.c	/^  PROP_OFFSET_X,$/;"	e	enum:__anon244	file:
PROP_OFFSET_Y	text/gimptext.c	/^  PROP_OFFSET_Y,$/;"	e	enum:__anon244	file:
PROP_OPACITY	core/gimplayer.c	/^  PROP_OPACITY,$/;"	e	enum:__anon98	file:
PROP_OPACITY	widgets/gimpbrushselect.c	/^  PROP_OPACITY,$/;"	e	enum:__anon347	file:
PROP_OPACITY	xcf/xcf-private.h	/^  PROP_OPACITY            =  6,$/;"	e	enum:__anon419
PROP_OPERATION	tools/gimpselectionoptions.c	/^  PROP_OPERATION,$/;"	e	enum:__anon266	file:
PROP_OPTIONS	widgets/gimpstrokeeditor.c	/^  PROP_OPTIONS,$/;"	e	enum:__anon383	file:
PROP_ORIENTATION	core/gimpguide.c	/^  PROP_ORIENTATION,$/;"	e	enum:__anon148	file:
PROP_ORIENTATION	widgets/gimpcolorbar.c	/^  PROP_ORIENTATION,$/;"	e	enum:__anon342	file:
PROP_OUTLINE	text/gimptext.c	/^  PROP_OUTLINE,$/;"	e	enum:__anon244	file:
PROP_PADDING_COLOR	display/gimpdisplayoptions.c	/^  PROP_PADDING_COLOR$/;"	e	enum:__anon193	file:
PROP_PADDING_MODE	display/gimpdisplayoptions.c	/^  PROP_PADDING_MODE,$/;"	e	enum:__anon193	file:
PROP_PAINT_CORE	paint/gimppaintcoreundo.c	/^  PROP_PAINT_CORE$/;"	e	enum:__anon222	file:
PROP_PAINT_INFO	core/gimpstrokedesc.c	/^  PROP_PAINT_INFO,$/;"	e	enum:__anon142	file:
PROP_PAINT_INFO	paint/gimppaintoptions.c	/^  PROP_PAINT_INFO,$/;"	e	enum:__anon219	file:
PROP_PAINT_MODE	widgets/gimpbrushselect.c	/^  PROP_PAINT_MODE,$/;"	e	enum:__anon347	file:
PROP_PAINT_OPTIONS	core/gimpstrokedesc.c	/^  PROP_PAINT_OPTIONS$/;"	e	enum:__anon142	file:
PROP_PALETTE_PATH	config/gimpcoreconfig.c	/^  PROP_PALETTE_PATH,$/;"	e	enum:__anon48	file:
PROP_PALETTE_PATH_WRITABLE	config/gimpcoreconfig.c	/^  PROP_PALETTE_PATH_WRITABLE,$/;"	e	enum:__anon48	file:
PROP_PANGO_CONTEXT	text/gimpfont.c	/^  PROP_PANGO_CONTEXT$/;"	e	enum:__anon247	file:
PROP_PARAM	text/gimptextundo.c	/^  PROP_PARAM$/;"	e	enum:__anon243	file:
PROP_PARASITE	widgets/gimpimageparasiteview.c	/^  PROP_PARASITE$/;"	e	enum:__anon388	file:
PROP_PARASITES	xcf/xcf-private.h	/^  PROP_PARASITES          = 21,$/;"	e	enum:__anon419
PROP_PARASITE_NAME	core/gimpimageundo.c	/^  PROP_PARASITE_NAME$/;"	e	enum:__anon124	file:
PROP_PARASITE_NAME	core/gimpitempropundo.c	/^  PROP_PARASITE_NAME$/;"	e	enum:__anon54	file:
PROP_PARENT	widgets/gimpviewabledialog.c	/^  PROP_PARENT$/;"	e	enum:__anon417	file:
PROP_PATHS	xcf/xcf-private.h	/^  PROP_PATHS              = 23,$/;"	e	enum:__anon419
PROP_PATTERN	widgets/gimpcellrendererdashes.c	/^  PROP_PATTERN$/;"	e	enum:__anon317	file:
PROP_PATTERN_PATH	config/gimpcoreconfig.c	/^  PROP_PATTERN_PATH,$/;"	e	enum:__anon48	file:
PROP_PATTERN_PATH_WRITABLE	config/gimpcoreconfig.c	/^  PROP_PATTERN_PATH_WRITABLE,$/;"	e	enum:__anon48	file:
PROP_PATTERN_VIEW_SIZE	paint/gimppaintoptions.c	/^  PROP_PATTERN_VIEW_SIZE,$/;"	e	enum:__anon219	file:
PROP_PATTERN_VIEW_TYPE	paint/gimppaintoptions.c	/^  PROP_PATTERN_VIEW_TYPE,$/;"	e	enum:__anon219	file:
PROP_PDB	core/gimppdbprogress.c	/^  PROP_PDB,$/;"	e	enum:__anon111	file:
PROP_PDB	widgets/gimppdbdialog.c	/^  PROP_PDB,$/;"	e	enum:__anon381	file:
PROP_PERFECT_MOUSE	config/gimpdisplayconfig.c	/^  PROP_PERFECT_MOUSE,$/;"	e	enum:__anon49	file:
PROP_PICK_MODE	tools/gimpcolorpickeroptions.c	/^  PROP_PICK_MODE,$/;"	e	enum:__anon275	file:
PROP_PLUGINRC_PATH	config/gimpcoreconfig.c	/^  PROP_PLUGINRC_PATH,$/;"	e	enum:__anon48	file:
PROP_PLUG_IN_HISTORY_SIZE	config/gimpcoreconfig.c	/^  PROP_PLUG_IN_HISTORY_SIZE,$/;"	e	enum:__anon48	file:
PROP_PLUG_IN_PATH	config/gimpcoreconfig.c	/^  PROP_PLUG_IN_PATH,$/;"	e	enum:__anon48	file:
PROP_POLICY	core/gimpcontainer.c	/^  PROP_POLICY$/;"	e	enum:__anon57	file:
PROP_POPUP_DATA	widgets/gimpeditor.c	/^  PROP_POPUP_DATA,$/;"	e	enum:__anon345	file:
PROP_POPUP_VIEW_SIZE	widgets/gimpviewablebutton.c	/^  PROP_POPUP_VIEW_SIZE$/;"	e	enum:__anon379	file:
PROP_POPUP_VIEW_TYPE	widgets/gimpviewablebutton.c	/^  PROP_POPUP_VIEW_TYPE,$/;"	e	enum:__anon379	file:
PROP_POSITION	core/gimpguide.c	/^  PROP_POSITION$/;"	e	enum:__anon148	file:
PROP_PRESSURE	paint/gimpairbrushoptions.c	/^  PROP_PRESSURE$/;"	e	enum:__anon207	file:
PROP_PRESSURE_COLOR	paint/gimppaintoptions.c	/^  PROP_PRESSURE_COLOR,$/;"	e	enum:__anon219	file:
PROP_PRESSURE_EXPANDED	paint/gimppaintoptions.c	/^  PROP_PRESSURE_EXPANDED,$/;"	e	enum:__anon219	file:
PROP_PRESSURE_HARDNESS	paint/gimppaintoptions.c	/^  PROP_PRESSURE_HARDNESS,$/;"	e	enum:__anon219	file:
PROP_PRESSURE_INVERSE_SIZE	paint/gimppaintoptions.c	/^  PROP_PRESSURE_INVERSE_SIZE,$/;"	e	enum:__anon219	file:
PROP_PRESSURE_OPACITY	paint/gimppaintoptions.c	/^  PROP_PRESSURE_OPACITY,$/;"	e	enum:__anon219	file:
PROP_PRESSURE_RATE	paint/gimppaintoptions.c	/^  PROP_PRESSURE_RATE,$/;"	e	enum:__anon219	file:
PROP_PRESSURE_SIZE	paint/gimppaintoptions.c	/^  PROP_PRESSURE_SIZE,$/;"	e	enum:__anon219	file:
PROP_PREVIEW	tools/gimpimagemapoptions.c	/^  PROP_PREVIEW,$/;"	e	enum:__anon277	file:
PROP_PREVIEW_TYPE	tools/gimptransformoptions.c	/^  PROP_PREVIEW_TYPE,$/;"	e	enum:__anon271	file:
PROP_PREV_CHANNEL	core/gimpchannelundo.c	/^  PROP_PREV_CHANNEL$/;"	e	enum:__anon101	file:
PROP_PREV_LAYER	core/gimplayerundo.c	/^  PROP_PREV_LAYER$/;"	e	enum:__anon133	file:
PROP_PREV_POSITION	core/gimpchannelundo.c	/^  PROP_PREV_POSITION,$/;"	e	enum:__anon101	file:
PROP_PREV_POSITION	core/gimplayerundo.c	/^  PROP_PREV_POSITION,$/;"	e	enum:__anon133	file:
PROP_PREV_POSITION	vectors/gimpvectorsundo.c	/^  PROP_PREV_POSITION,$/;"	e	enum:__anon298	file:
PROP_PREV_VECTORS	vectors/gimpvectorsundo.c	/^  PROP_PREV_VECTORS$/;"	e	enum:__anon298	file:
PROP_PROCEDURE	widgets/gimppluginaction.c	/^  PROP_PROCEDURE$/;"	e	enum:__anon353	file:
PROP_RADIUS	core/gimpbrushgenerated.c	/^  PROP_RADIUS,$/;"	e	enum:__anon156	file:
PROP_RATE	paint/gimpairbrushoptions.c	/^  PROP_RATE,$/;"	e	enum:__anon207	file:
PROP_RATE	paint/gimpconvolveoptions.c	/^  PROP_RATE$/;"	e	enum:__anon208	file:
PROP_RATE	paint/gimpsmudgeoptions.c	/^  PROP_RATE$/;"	e	enum:__anon224	file:
PROP_RECURSION_LEVEL	tools/gimptransformoptions.c	/^  PROP_RECURSION_LEVEL,$/;"	e	enum:__anon271	file:
PROP_RENDERER	widgets/gimpcellrendererviewable.c	/^  PROP_RENDERER$/;"	e	enum:__anon355	file:
PROP_RESIZE_WINDOWS_ON_RESIZE	config/gimpdisplayconfig.c	/^  PROP_RESIZE_WINDOWS_ON_RESIZE,$/;"	e	enum:__anon49	file:
PROP_RESIZE_WINDOWS_ON_ZOOM	config/gimpdisplayconfig.c	/^  PROP_RESIZE_WINDOWS_ON_ZOOM,$/;"	e	enum:__anon49	file:
PROP_RESOLUTION	widgets/gimpstrokeeditor.c	/^  PROP_RESOLUTION$/;"	e	enum:__anon383	file:
PROP_RESOLUTION	xcf/xcf-private.h	/^  PROP_RESOLUTION         = 19,$/;"	e	enum:__anon419
PROP_RESOLUTION_UNIT	core/gimptemplate.c	/^  PROP_RESOLUTION_UNIT,$/;"	e	enum:__anon136	file:
PROP_RESOLUTION_UNIT	widgets/gimpsizebox.c	/^  PROP_RESOLUTION_UNIT,$/;"	e	enum:__anon308	file:
PROP_RESTORE_ACCELS	config/gimpguiconfig.c	/^  PROP_RESTORE_ACCELS,$/;"	e	enum:__anon46	file:
PROP_RESTORE_SESSION	config/gimpguiconfig.c	/^  PROP_RESTORE_SESSION,$/;"	e	enum:__anon46	file:
PROP_ROUND_CORNERS	tools/gimprectangleselectoptions.c	/^  PROP_ROUND_CORNERS = GIMP_RECTANGLE_OPTIONS_PROP_LAST + 1,$/;"	e	enum:__anon297	file:
PROP_SAMPLE_AVERAGE	tools/gimpcoloroptions.c	/^  PROP_SAMPLE_AVERAGE,$/;"	e	enum:__anon294	file:
PROP_SAMPLE_AVERAGE	tools/gimpcolorpickeroptions.c	/^  PROP_SAMPLE_AVERAGE, \/* overrides a GimpColorOptions property *\/$/;"	e	enum:__anon275	file:
PROP_SAMPLE_MERGED	paint/gimpsourceoptions.c	/^  PROP_SAMPLE_MERGED$/;"	e	enum:__anon223	file:
PROP_SAMPLE_MERGED	tools/gimpbucketfilloptions.c	/^  PROP_SAMPLE_MERGED,$/;"	e	enum:__anon290	file:
PROP_SAMPLE_MERGED	tools/gimpcoloroptions.c	/^  PROP_SAMPLE_MERGED,$/;"	e	enum:__anon294	file:
PROP_SAMPLE_MERGED	tools/gimpselectionoptions.c	/^  PROP_SAMPLE_MERGED,$/;"	e	enum:__anon266	file:
PROP_SAMPLE_MERGED	widgets/gimpcursorview.c	/^  PROP_SAMPLE_MERGED$/;"	e	enum:__anon343	file:
PROP_SAMPLE_MERGED	widgets/gimpsamplepointeditor.c	/^  PROP_SAMPLE_MERGED$/;"	e	enum:__anon366	file:
PROP_SAMPLE_POINT	core/gimpsamplepointundo.c	/^  PROP_SAMPLE_POINT$/;"	e	enum:__anon120	file:
PROP_SAMPLE_POINTS	xcf/xcf-private.h	/^  PROP_SAMPLE_POINTS      = 27$/;"	e	enum:__anon419
PROP_SAMPLE_SIZE	widgets/gimpgradientselect.c	/^  PROP_SAMPLE_SIZE$/;"	e	enum:__anon396	file:
PROP_SAVE_ACCELS	config/gimpguiconfig.c	/^  PROP_SAVE_ACCELS,$/;"	e	enum:__anon46	file:
PROP_SAVE_DEVICE_STATUS	config/gimpguiconfig.c	/^  PROP_SAVE_DEVICE_STATUS,$/;"	e	enum:__anon46	file:
PROP_SAVE_DOCUMENT_HISTORY	config/gimpcoreconfig.c	/^  PROP_SAVE_DOCUMENT_HISTORY$/;"	e	enum:__anon48	file:
PROP_SAVE_SESSION_INFO	config/gimpguiconfig.c	/^  PROP_SAVE_SESSION_INFO,$/;"	e	enum:__anon46	file:
PROP_SAVE_TOOL_OPTIONS	config/gimpguiconfig.c	/^  PROP_SAVE_TOOL_OPTIONS,$/;"	e	enum:__anon46	file:
PROP_SCALE	tools/gimphistogramoptions.c	/^  PROP_SCALE$/;"	e	enum:__anon274	file:
PROP_SCALE	widgets/gimphistogramview.c	/^  PROP_SCALE,$/;"	e	enum:__anon391	file:
PROP_SCRIPT_FU_PATH	config/gimppluginconfig.c	/^  PROP_SCRIPT_FU_PATH$/;"	e	enum:__anon45	file:
PROP_SELECTION	xcf/xcf-private.h	/^  PROP_SELECTION          =  4,$/;"	e	enum:__anon419
PROP_SELECT_CRITERION	tools/gimpselectionoptions.c	/^  PROP_SELECT_CRITERION,$/;"	e	enum:__anon266	file:
PROP_SELECT_TRANSPARENT	tools/gimpselectionoptions.c	/^  PROP_SELECT_TRANSPARENT,$/;"	e	enum:__anon266	file:
PROP_SELECT_TYPE	widgets/gimppdbdialog.c	/^  PROP_SELECT_TYPE,$/;"	e	enum:__anon381	file:
PROP_SENSITIVITY_A	tools/gimpforegroundselectoptions.c	/^  PROP_SENSITIVITY_A,$/;"	e	enum:__anon291	file:
PROP_SENSITIVITY_B	tools/gimpforegroundselectoptions.c	/^  PROP_SENSITIVITY_B$/;"	e	enum:__anon291	file:
PROP_SENSITIVITY_L	tools/gimpforegroundselectoptions.c	/^  PROP_SENSITIVITY_L,$/;"	e	enum:__anon291	file:
PROP_SETTINGS	tools/gimpimagemapoptions.c	/^  PROP_SETTINGS$/;"	e	enum:__anon277	file:
PROP_SHAPE	core/gimpbrushgenerated.c	/^  PROP_SHAPE,$/;"	e	enum:__anon156	file:
PROP_SHELL	display/gimpdisplay.c	/^  PROP_SHELL$/;"	e	enum:__anon188	file:
PROP_SHOW_BRUSH_OUTLINE	config/gimpdisplayconfig.c	/^  PROP_SHOW_BRUSH_OUTLINE,$/;"	e	enum:__anon49	file:
PROP_SHOW_GRID	display/gimpdisplayoptions.c	/^  PROP_SHOW_GRID,$/;"	e	enum:__anon193	file:
PROP_SHOW_GUIDES	display/gimpdisplayoptions.c	/^  PROP_SHOW_GUIDES,$/;"	e	enum:__anon193	file:
PROP_SHOW_HELP_BUTTON	config/gimpguiconfig.c	/^  PROP_SHOW_HELP_BUTTON,$/;"	e	enum:__anon46	file:
PROP_SHOW_LAYER_BOUNDARY	display/gimpdisplayoptions.c	/^  PROP_SHOW_LAYER_BOUNDARY,$/;"	e	enum:__anon193	file:
PROP_SHOW_MASK	xcf/xcf-private.h	/^  PROP_SHOW_MASK          = 13,$/;"	e	enum:__anon419
PROP_SHOW_MASKED	xcf/xcf-private.h	/^  PROP_SHOW_MASKED        = 14,$/;"	e	enum:__anon419
PROP_SHOW_MENUBAR	display/gimpdisplayoptions.c	/^  PROP_SHOW_MENUBAR,$/;"	e	enum:__anon193	file:
PROP_SHOW_NAME	widgets/gimpeditor.c	/^  PROP_SHOW_NAME,$/;"	e	enum:__anon345	file:
PROP_SHOW_PAINT_TOOL_CURSOR	config/gimpdisplayconfig.c	/^  PROP_SHOW_PAINT_TOOL_CURSOR,$/;"	e	enum:__anon49	file:
PROP_SHOW_RULERS	display/gimpdisplayoptions.c	/^  PROP_SHOW_RULERS,$/;"	e	enum:__anon193	file:
PROP_SHOW_SAMPLE_POINTS	display/gimpdisplayoptions.c	/^  PROP_SHOW_SAMPLE_POINTS,$/;"	e	enum:__anon193	file:
PROP_SHOW_SCROLLBARS	display/gimpdisplayoptions.c	/^  PROP_SHOW_SCROLLBARS,$/;"	e	enum:__anon193	file:
PROP_SHOW_SELECTION	display/gimpdisplayoptions.c	/^  PROP_SHOW_SELECTION,$/;"	e	enum:__anon193	file:
PROP_SHOW_STATUSBAR	display/gimpdisplayoptions.c	/^  PROP_SHOW_STATUSBAR,$/;"	e	enum:__anon193	file:
PROP_SHOW_TIPS	config/gimpguiconfig.c	/^  PROP_SHOW_TIPS,$/;"	e	enum:__anon46	file:
PROP_SHOW_TOOLTIPS	config/gimpguiconfig.c	/^  PROP_SHOW_TOOLTIPS,$/;"	e	enum:__anon46	file:
PROP_SHOW_TOOL_TIPS	config/gimpguiconfig.c	/^  PROP_SHOW_TOOL_TIPS$/;"	e	enum:__anon46	file:
PROP_SIZE	paint/gimpinkoptions.c	/^  PROP_SIZE,$/;"	e	enum:__anon210	file:
PROP_SIZE_SENSITIVITY	paint/gimpinkoptions.c	/^  PROP_SIZE_SENSITIVITY,$/;"	e	enum:__anon210	file:
PROP_SMOOTHNESS	tools/gimpforegroundselectoptions.c	/^  PROP_SMOOTHNESS,$/;"	e	enum:__anon291	file:
PROP_SNAP_DISTANCE	config/gimpdisplayconfig.c	/^  PROP_SNAP_DISTANCE,$/;"	e	enum:__anon49	file:
PROP_SORT_FUNC	core/gimplist.c	/^  PROP_SORT_FUNC$/;"	e	enum:__anon53	file:
PROP_SPACE_BAR_ACTION	config/gimpdisplayconfig.c	/^  PROP_SPACE_BAR_ACTION,$/;"	e	enum:__anon49	file:
PROP_SPACING	core/gimpbrush.c	/^  PROP_SPACING$/;"	e	enum:__anon150	file:
PROP_SPACING	widgets/gimpbrushselect.c	/^  PROP_SPACING$/;"	e	enum:__anon347	file:
PROP_SPACING_UNIT	core/gimpgrid.c	/^  PROP_SPACING_UNIT,$/;"	e	enum:__anon128	file:
PROP_SPARSE	core/gimpdrawableundo.c	/^  PROP_SPARSE,$/;"	e	enum:__anon99	file:
PROP_SPIKES	core/gimpbrushgenerated.c	/^  PROP_SPIKES,$/;"	e	enum:__anon156	file:
PROP_SRC_DRAWABLE	paint/gimpsourcecore.c	/^  PROP_SRC_DRAWABLE,$/;"	e	enum:__anon206	file:
PROP_SRC_X	paint/gimpsourcecore.c	/^  PROP_SRC_X,$/;"	e	enum:__anon206	file:
PROP_SRC_Y	paint/gimpsourcecore.c	/^  PROP_SRC_Y$/;"	e	enum:__anon206	file:
PROP_STINGY_MEMORY_USE	config/gimpbaseconfig.c	/^  PROP_STINGY_MEMORY_USE$/;"	e	enum:__anon47	file:
PROP_STOCK_ID	core/gimpviewable.c	/^  PROP_STOCK_ID$/;"	e	enum:__anon115	file:
PROP_STOCK_ID	widgets/gimpactiongroup.c	/^  PROP_STOCK_ID,$/;"	e	enum:__anon323	file:
PROP_STOCK_ID	widgets/gimpmessagebox.c	/^  PROP_STOCK_ID$/;"	e	enum:__anon357	file:
PROP_STOCK_ID	widgets/gimpviewabledialog.c	/^  PROP_STOCK_ID,$/;"	e	enum:__anon417	file:
PROP_STROKE_OPTIONS	core/gimpstrokedesc.c	/^  PROP_STROKE_OPTIONS,$/;"	e	enum:__anon142	file:
PROP_STROKE_OPTIONS	widgets/gimpdasheditor.c	/^  PROP_STROKE_OPTIONS,$/;"	e	enum:__anon372	file:
PROP_STROKE_WIDTH	tools/gimpforegroundselectoptions.c	/^  PROP_STROKE_WIDTH,$/;"	e	enum:__anon291	file:
PROP_STYLE	core/gimpgrid.c	/^  PROP_STYLE,$/;"	e	enum:__anon128	file:
PROP_STYLE	core/gimpstrokeoptions.c	/^  PROP_STYLE,$/;"	e	enum:__anon121	file:
PROP_SUBDIVISIONS	widgets/gimphistogramview.c	/^  PROP_SUBDIVISIONS$/;"	e	enum:__anon391	file:
PROP_SUPERSAMPLE	tools/gimpblendoptions.c	/^  PROP_SUPERSAMPLE,$/;"	e	enum:__anon276	file:
PROP_SUPERSAMPLE	tools/gimptransformoptions.c	/^  PROP_SUPERSAMPLE,$/;"	e	enum:__anon271	file:
PROP_SUPERSAMPLE_DEPTH	tools/gimpblendoptions.c	/^  PROP_SUPERSAMPLE_DEPTH,$/;"	e	enum:__anon276	file:
PROP_SUPERSAMPLE_THRESHOLD	tools/gimpblendoptions.c	/^  PROP_SUPERSAMPLE_THRESHOLD,$/;"	e	enum:__anon276	file:
PROP_SWAP_PATH	config/gimpbaseconfig.c	/^  PROP_SWAP_PATH,$/;"	e	enum:__anon47	file:
PROP_SYSTEM_GIMPRC	config/gimprc.c	/^  PROP_SYSTEM_GIMPRC,$/;"	e	enum:__anon44	file:
PROP_TATTOO	xcf/xcf-private.h	/^  PROP_TATTOO             = 20,$/;"	e	enum:__anon419
PROP_TEAROFF_MENUS	config/gimpguiconfig.c	/^  PROP_TEAROFF_MENUS,$/;"	e	enum:__anon46	file:
PROP_TEMPLATE	widgets/gimptemplateeditor.c	/^  PROP_TEMPLATE$/;"	e	enum:__anon338	file:
PROP_TEMP_PATH	config/gimpbaseconfig.c	/^  PROP_TEMP_PATH,$/;"	e	enum:__anon47	file:
PROP_TEXT	text/gimptext.c	/^  PROP_TEXT,$/;"	e	enum:__anon244	file:
PROP_TEXT_LAYER_FLAGS	xcf/xcf-private.h	/^  PROP_TEXT_LAYER_FLAGS   = 26,$/;"	e	enum:__anon419
PROP_THEME	config/gimpguiconfig.c	/^  PROP_THEME,$/;"	e	enum:__anon46	file:
PROP_THEME_PATH	config/gimpguiconfig.c	/^  PROP_THEME_PATH,$/;"	e	enum:__anon46	file:
PROP_THRESHOLD	tools/gimpbucketfilloptions.c	/^  PROP_THRESHOLD,$/;"	e	enum:__anon290	file:
PROP_THRESHOLD	tools/gimpselectionoptions.c	/^  PROP_THRESHOLD,$/;"	e	enum:__anon266	file:
PROP_THUMBNAIL_FILESIZE_LIMIT	config/gimpcoreconfig.c	/^  PROP_THUMBNAIL_FILESIZE_LIMIT,$/;"	e	enum:__anon48	file:
PROP_THUMBNAIL_SIZE	config/gimpcoreconfig.c	/^  PROP_THUMBNAIL_SIZE,$/;"	e	enum:__anon48	file:
PROP_TILES	core/gimpdrawableundo.c	/^  PROP_TILES,$/;"	e	enum:__anon99	file:
PROP_TILE_CACHE_SIZE	config/gimpbaseconfig.c	/^  PROP_TILE_CACHE_SIZE,$/;"	e	enum:__anon47	file:
PROP_TILT_ANGLE	paint/gimpinkoptions.c	/^  PROP_TILT_ANGLE,$/;"	e	enum:__anon210	file:
PROP_TILT_SENSITIVITY	paint/gimpinkoptions.c	/^  PROP_TILT_SENSITIVITY,$/;"	e	enum:__anon210	file:
PROP_TIME	core/gimpundo.c	/^  PROP_TIME,$/;"	e	enum:__anon158	file:
PROP_TOOLBOX_COLOR_AREA	config/gimpguiconfig.c	/^  PROP_TOOLBOX_COLOR_AREA,$/;"	e	enum:__anon46	file:
PROP_TOOLBOX_FOO_AREA	config/gimpguiconfig.c	/^  PROP_TOOLBOX_FOO_AREA,$/;"	e	enum:__anon46	file:
PROP_TOOLBOX_IMAGE_AREA	config/gimpguiconfig.c	/^  PROP_TOOLBOX_IMAGE_AREA,$/;"	e	enum:__anon46	file:
PROP_TOOLBOX_WINDOW_HINT	config/gimpguiconfig.c	/^  PROP_TOOLBOX_WINDOW_HINT,$/;"	e	enum:__anon46	file:
PROP_TOOL_INFO	core/gimptooloptions.c	/^  PROP_TOOL_INFO$/;"	e	enum:__anon104	file:
PROP_TOOL_INFO	core/gimptoolpresets.c	/^  PROP_TOOL_INFO$/;"	e	enum:__anon166	file:
PROP_TOOL_INFO	tools/gimptool.c	/^  PROP_TOOL_INFO$/;"	e	enum:__anon296	file:
PROP_TRANSFORMATION	text/gimptext.c	/^  PROP_TRANSFORMATION,$/;"	e	enum:__anon244	file:
PROP_TRANSFORM_TOOL	tools/gimptransformtoolundo.c	/^  PROP_TRANSFORM_TOOL$/;"	e	enum:__anon249	file:
PROP_TRANSIENT_DOCKS	config/gimpguiconfig.c	/^  PROP_TRANSIENT_DOCKS,$/;"	e	enum:__anon46	file:
PROP_TRANSPARENCY_SIZE	config/gimpdisplayconfig.c	/^  PROP_TRANSPARENCY_SIZE,$/;"	e	enum:__anon49	file:
PROP_TRANSPARENCY_TYPE	config/gimpdisplayconfig.c	/^  PROP_TRANSPARENCY_TYPE,$/;"	e	enum:__anon49	file:
PROP_TRUST_DIRTY_FLAG	config/gimpguiconfig.c	/^  PROP_TRUST_DIRTY_FLAG,$/;"	e	enum:__anon46	file:
PROP_TYPE	paint/gimpconvolveoptions.c	/^  PROP_TYPE,$/;"	e	enum:__anon208	file:
PROP_TYPE	paint/gimpdodgeburnoptions.c	/^  PROP_TYPE,$/;"	e	enum:__anon225	file:
PROP_TYPE	tools/gimptransformoptions.c	/^  PROP_TYPE,$/;"	e	enum:__anon271	file:
PROP_TYPE	widgets/gimpblobeditor.c	/^  PROP_TYPE,$/;"	e	enum:__anon325	file:
PROP_UI_PATH	widgets/gimpeditor.c	/^  PROP_UI_PATH,$/;"	e	enum:__anon345	file:
PROP_UNDO_DESC	paint/gimppaintcore.c	/^  PROP_UNDO_DESC$/;"	e	enum:__anon211	file:
PROP_UNDO_LEVELS	config/gimpcoreconfig.c	/^  PROP_UNDO_LEVELS,$/;"	e	enum:__anon48	file:
PROP_UNDO_PREVIEW_SIZE	config/gimpcoreconfig.c	/^  PROP_UNDO_PREVIEW_SIZE,$/;"	e	enum:__anon48	file:
PROP_UNDO_SIZE	config/gimpcoreconfig.c	/^  PROP_UNDO_SIZE,$/;"	e	enum:__anon48	file:
PROP_UNDO_TYPE	core/gimpundo.c	/^  PROP_UNDO_TYPE,$/;"	e	enum:__anon158	file:
PROP_UNIQUE_NAMES	core/gimplist.c	/^  PROP_UNIQUE_NAMES,$/;"	e	enum:__anon53	file:
PROP_UNIT	core/gimpstrokeoptions.c	/^  PROP_UNIT,$/;"	e	enum:__anon121	file:
PROP_UNIT	core/gimptemplate.c	/^  PROP_UNIT,$/;"	e	enum:__anon136	file:
PROP_UNIT	display/gimpdisplayshell.c	/^  PROP_UNIT$/;"	e	enum:__anon195	file:
PROP_UNIT	text/gimptext.c	/^  PROP_UNIT,$/;"	e	enum:__anon244	file:
PROP_UNIT	tools/gimptextoptions.c	/^  PROP_UNIT,$/;"	e	enum:__anon272	file:
PROP_UNIT	widgets/gimpsizebox.c	/^  PROP_UNIT,$/;"	e	enum:__anon308	file:
PROP_UNIT	xcf/xcf-private.h	/^  PROP_UNIT               = 22,$/;"	e	enum:__anon419
PROP_USER_GIMPRC	config/gimprc.c	/^  PROP_USER_GIMPRC$/;"	e	enum:__anon44	file:
PROP_USER_UNIT	xcf/xcf-private.h	/^  PROP_USER_UNIT          = 24,$/;"	e	enum:__anon419
PROP_USE_FADE	paint/gimppaintoptions.c	/^  PROP_USE_FADE,$/;"	e	enum:__anon219	file:
PROP_USE_GRADIENT	paint/gimppaintoptions.c	/^  PROP_USE_GRADIENT,$/;"	e	enum:__anon219	file:
PROP_USE_HELP	config/gimpguiconfig.c	/^  PROP_USE_HELP,$/;"	e	enum:__anon46	file:
PROP_USE_INFO_WINDOW	tools/gimpcolorpickeroptions.c	/^  PROP_USE_INFO_WINDOW$/;"	e	enum:__anon275	file:
PROP_USE_INFO_WINDOW	tools/gimpmeasureoptions.c	/^  PROP_USE_INFO_WINDOW$/;"	e	enum:__anon282	file:
PROP_USE_JITTER	paint/gimppaintoptions.c	/^  PROP_USE_JITTER,$/;"	e	enum:__anon219	file:
PROP_VALUE	widgets/gimpenumaction.c	/^  PROP_VALUE,$/;"	e	enum:__anon315	file:
PROP_VALUE	widgets/gimpstringaction.c	/^  PROP_VALUE$/;"	e	enum:__anon313	file:
PROP_VALUE_VARIABLE	widgets/gimpenumaction.c	/^  PROP_VALUE_VARIABLE$/;"	e	enum:__anon315	file:
PROP_VECTORS	xcf/xcf-private.h	/^  PROP_VECTORS            = 25,$/;"	e	enum:__anon419
PROP_VECTORS_EDIT_MODE	tools/gimpvectoroptions.c	/^  PROP_VECTORS_EDIT_MODE,$/;"	e	enum:__anon295	file:
PROP_VECTORS_POLYGONAL	tools/gimpvectoroptions.c	/^  PROP_VECTORS_POLYGONAL$/;"	e	enum:__anon295	file:
PROP_VEL_SENSITIVITY	paint/gimpinkoptions.c	/^  PROP_VEL_SENSITIVITY,$/;"	e	enum:__anon210	file:
PROP_VERBOSE	config/gimprc.c	/^  PROP_VERBOSE,$/;"	e	enum:__anon44	file:
PROP_VIEWABLE	widgets/gimpaction.c	/^  PROP_VIEWABLE$/;"	e	enum:__anon316	file:
PROP_VIEWABLE	widgets/gimpviewabledialog.c	/^  PROP_VIEWABLE,$/;"	e	enum:__anon417	file:
PROP_VIEW_SIZE	widgets/gimpundoeditor.c	/^  PROP_VIEW_SIZE$/;"	e	enum:__anon348	file:
PROP_VISIBLE	core/gimptoolinfo.c	/^  PROP_VISIBLE$/;"	e	enum:__anon140	file:
PROP_VISIBLE	xcf/xcf-private.h	/^  PROP_VISIBLE            =  8,$/;"	e	enum:__anon419
PROP_VSPACING	widgets/gtkwrapbox.c	/^  PROP_VSPACING,$/;"	e	enum:__anon368	file:
PROP_WEB_BROWSER	config/gimpguiconfig.c	/^  PROP_WEB_BROWSER,$/;"	e	enum:__anon46	file:
PROP_WIDTH	core/gimpdrawableundo.c	/^  PROP_WIDTH,$/;"	e	enum:__anon99	file:
PROP_WIDTH	core/gimpimage.c	/^  PROP_WIDTH,$/;"	e	enum:__anon127	file:
PROP_WIDTH	core/gimpitem.c	/^  PROP_WIDTH,$/;"	e	enum:__anon132	file:
PROP_WIDTH	core/gimpstrokeoptions.c	/^  PROP_WIDTH,$/;"	e	enum:__anon121	file:
PROP_WIDTH	core/gimptemplate.c	/^  PROP_WIDTH,$/;"	e	enum:__anon136	file:
PROP_WIDTH	widgets/gimpsizebox.c	/^  PROP_WIDTH,$/;"	e	enum:__anon308	file:
PROP_WRITABLE	core/gimpdata.c	/^  PROP_WRITABLE,$/;"	e	enum:__anon154	file:
PROP_X	core/gimpdrawableundo.c	/^  PROP_X,$/;"	e	enum:__anon99	file:
PROP_XOFFSET	core/gimpgrid.c	/^  PROP_XOFFSET,$/;"	e	enum:__anon128	file:
PROP_XOR_COLOR	config/gimpdisplayconfig.c	/^  PROP_XOR_COLOR$/;"	e	enum:__anon49	file:
PROP_XRESOLUTION	core/gimptemplate.c	/^  PROP_XRESOLUTION,$/;"	e	enum:__anon136	file:
PROP_XRESOLUTION	widgets/gimpgrideditor.c	/^  PROP_XRESOLUTION,$/;"	e	enum:__anon416	file:
PROP_XRESOLUTION	widgets/gimpsizebox.c	/^  PROP_XRESOLUTION,$/;"	e	enum:__anon308	file:
PROP_XSPACING	core/gimpgrid.c	/^  PROP_XSPACING,$/;"	e	enum:__anon128	file:
PROP_Y	core/gimpdrawableundo.c	/^  PROP_Y,$/;"	e	enum:__anon99	file:
PROP_YOFFSET	core/gimpgrid.c	/^  PROP_YOFFSET,$/;"	e	enum:__anon128	file:
PROP_YRESOLUTION	core/gimptemplate.c	/^  PROP_YRESOLUTION,$/;"	e	enum:__anon136	file:
PROP_YRESOLUTION	widgets/gimpgrideditor.c	/^  PROP_YRESOLUTION$/;"	e	enum:__anon416	file:
PROP_YRESOLUTION	widgets/gimpsizebox.c	/^  PROP_YRESOLUTION,$/;"	e	enum:__anon308	file:
PROP_YSPACING	core/gimpgrid.c	/^  PROP_YSPACING,$/;"	e	enum:__anon128	file:
PROP_ZOOM_TYPE	tools/gimpmagnifyoptions.c	/^  PROP_ZOOM_TYPE$/;"	e	enum:__anon279	file:
PROTOCOL_VERSION	plug-in/plug-in-rc.c	/^  PROTOCOL_VERSION = 1,$/;"	e	enum:__anon237	file:
PYRAMID_MAX_LEVELS	base/tile-pyramid.c	30;"	d	file:
ParseInfo	file/gimprecentlist.c	/^} ParseInfo;$/;"	t	typeref:struct:__anon198	file:
ParsePathContext	vectors/gimpvectors-import.c	/^} ParsePathContext;$/;"	t	typeref:struct:__anon305	file:
ParseState	file/gimprecentlist.c	/^} ParseState;$/;"	t	typeref:enum:__anon199	file:
Pass1_Func	core/gimpimage-convert.c	/^typedef void (* Pass1_Func) (QuantizeObj *);$/;"	t	file:
Pass2_Func	core/gimpimage-convert.c	/^typedef void (* Pass2_Func) (QuantizeObj *, GimpLayer *, TileManager *);$/;"	t	file:
Pass2i_Func	core/gimpimage-convert.c	/^typedef void (* Pass2i_Func) (QuantizeObj *);$/;"	t	file:
PatternHeader	core/gimppattern-header.h	/^typedef struct _PatternHeader PatternHeader;$/;"	t	typeref:struct:_PatternHeader
PipeSelectModes	core/gimpbrushpipe.h	/^} PipeSelectModes;$/;"	t	typeref:enum:__anon114
PixelProcessor	base/pixel-processor.c	/^typedef struct _PixelProcessor PixelProcessor;$/;"	t	typeref:struct:_PixelProcessor	file:
PixelProcessorFunc	base/pixel-processor.h	/^typedef void (* PixelProcessorFunc)         (void);$/;"	t
PixelProcessorProgressFunc	base/pixel-processor.h	/^typedef void (* PixelProcessorProgressFunc) (gpointer  progress_data,$/;"	t
PixelRegion	base/base-types.h	/^typedef struct _PixelRegion         PixelRegion;$/;"	t	typeref:struct:_PixelRegion
PixelRegionHolder	base/base-types.h	/^typedef struct _PixelRegionHolder   PixelRegionHolder;$/;"	t	typeref:struct:_PixelRegionHolder
PixelRegionIterator	base/base-types.h	/^typedef struct _PixelRegionIterator PixelRegionIterator;$/;"	t	typeref:struct:_PixelRegionIterator
PixelSurround	base/base-types.h	/^typedef struct _PixelSurround       PixelSurround;$/;"	t	typeref:struct:_PixelSurround
PlugInMenuEntry	menus/plug-in-menus.c	/^typedef struct _PlugInMenuEntry PlugInMenuEntry;$/;"	t	typeref:struct:_PlugInMenuEntry	file:
Point	core/gimp-transform-resize.c	/^} Point;$/;"	t	typeref:struct:__anon163	file:
PreviewNearest	core/gimppreviewcache.c	/^} PreviewNearest;$/;"	t	typeref:struct:__anon110	file:
PrintSizeDialog	dialogs/print-size-dialog.c	/^} PrintSizeDialog;$/;"	t	typeref:struct:__anon183	file:
PropType	xcf/xcf-private.h	/^} PropType;$/;"	t	typeref:enum:__anon419
PutPixelData	core/gimpdrawable-blend.c	/^} PutPixelData;$/;"	t	typeref:struct:__anon118	file:
QUICK_MASK_CHANGED	core/gimpimage.c	/^  QUICK_MASK_CHANGED,$/;"	e	enum:__anon126	file:
QuantizeObj	core/gimpimage-convert.c	/^typedef struct _QuantizeObj QuantizeObj;$/;"	t	typeref:struct:_QuantizeObj	file:
RADIUS	tools/gimpcurvestool.c	69;"	d	file:
RANDOM_SEED	composite/gimp-composite-generic.c	1431;"	d	file:
RANDOM_SEED	paint-funcs/paint-funcs.c	42;"	d	file:
RANDOM_TABLE_SIZE	composite/gimp-composite-generic.c	43;"	d	file:
RANDOM_TABLE_SIZE	paint-funcs/paint-funcs-generic.h	43;"	d
RANGE_CHANGED	widgets/gimphistogramview.c	/^  RANGE_CHANGED,$/;"	e	enum:__anon390	file:
REAL_ANGLE	tools/gimprotatetool.c	45;"	d	file:
RECONNECT	display/gimpdisplayshell.c	/^  RECONNECT,$/;"	e	enum:__anon196	file:
RECTANGLE_CHANGED	tools/gimprectangletool.c	/^  RECTANGLE_CHANGED,$/;"	e	enum:__anon283	file:
RECT_CREATING	tools/gimprectangletool.h	/^  RECT_CREATING,$/;"	e	enum:__anon293
RECT_DEAD	tools/gimprectangletool.h	/^  RECT_DEAD,$/;"	e	enum:__anon293
RECT_EXECUTING	tools/gimprectangletool.h	/^  RECT_EXECUTING$/;"	e	enum:__anon293
RECT_INACTIVE	tools/gimprectangletool.h	/^  RECT_INACTIVE,$/;"	e	enum:__anon293
RECT_MOVING	tools/gimprectangletool.h	/^  RECT_MOVING,$/;"	e	enum:__anon293
RECT_RESIZING_BOTTOM	tools/gimprectangletool.h	/^  RECT_RESIZING_BOTTOM,$/;"	e	enum:__anon293
RECT_RESIZING_LEFT	tools/gimprectangletool.h	/^  RECT_RESIZING_LEFT,$/;"	e	enum:__anon293
RECT_RESIZING_LOWER_LEFT	tools/gimprectangletool.h	/^  RECT_RESIZING_LOWER_LEFT,$/;"	e	enum:__anon293
RECT_RESIZING_LOWER_RIGHT	tools/gimprectangletool.h	/^  RECT_RESIZING_LOWER_RIGHT,$/;"	e	enum:__anon293
RECT_RESIZING_RIGHT	tools/gimprectangletool.h	/^  RECT_RESIZING_RIGHT,$/;"	e	enum:__anon293
RECT_RESIZING_TOP	tools/gimprectangletool.h	/^  RECT_RESIZING_TOP,$/;"	e	enum:__anon293
RECT_RESIZING_UPPER_LEFT	tools/gimprectangletool.h	/^  RECT_RESIZING_UPPER_LEFT,$/;"	e	enum:__anon293
RECT_RESIZING_UPPER_RIGHT	tools/gimprectangletool.h	/^  RECT_RESIZING_UPPER_RIGHT,$/;"	e	enum:__anon293
RED	widgets/gimpviewrendererbrush.c	146;"	d	file:
RED	widgets/gimpviewrendererbrush.c	206;"	d	file:
RED_PIX	base/base-types.h	40;"	d
REF_FUNC	core/gimpimage-convert.c	252;"	d	file:
REGISTER_PROCEDURE	pdb/gimppdb.c	/^  REGISTER_PROCEDURE,$/;"	e	enum:__anon230	file:
REMOVE	core/gimpcontainer.c	/^  REMOVE,$/;"	e	enum:__anon56	file:
REMOVE	core/gimpparasitelist.c	/^  REMOVE,$/;"	e	enum:__anon55	file:
REMOVED	core/gimpguide.c	/^  REMOVED,$/;"	e	enum:__anon147	file:
REMOVED	core/gimpitem.c	/^  REMOVED,$/;"	e	enum:__anon131	file:
REORDER	core/gimpcontainer.c	/^  REORDER,$/;"	e	enum:__anon56	file:
REPLACE_INDEXED	paint-funcs/paint-funcs-types.h	/^  REPLACE_INDEXED,$/;"	e	enum:__anon228
REPLACE_INTEN	paint-funcs/paint-funcs-types.h	/^  REPLACE_INTEN,$/;"	e	enum:__anon228
RESIZE_WINDOWS_ON_RESIZE_BLURB	config/gimprc-blurbs.h	253;"	d
RESIZE_WINDOWS_ON_ZOOM_BLURB	config/gimprc-blurbs.h	257;"	d
RESOLUTION_CHANGED	core/gimpimage.c	/^  RESOLUTION_CHANGED,$/;"	e	enum:__anon126	file:
RESPONSE_DISABLE	widgets/gimpcontrollerlist.c	547;"	d	file:
RESPONSE_NEW	tools/gimptexttool.c	816;"	d	file:
RESPONSE_NEXT	dialogs/tips-dialog.c	/^  RESPONSE_NEXT     = 2$/;"	e	enum:__anon172	file:
RESPONSE_PREVIOUS	dialogs/tips-dialog.c	/^  RESPONSE_PREVIOUS = 1,$/;"	e	enum:__anon172	file:
RESPONSE_REFRESH	dialogs/module-dialog.c	42;"	d	file:
RESPONSE_RESET	dialogs/image-new-dialog.c	50;"	d	file:
RESPONSE_RESET	dialogs/preferences-dialog.c	67;"	d	file:
RESPONSE_RESET	dialogs/print-size-dialog.c	40;"	d	file:
RESPONSE_RESET	dialogs/resize-dialog.c	42;"	d	file:
RESPONSE_RESET	dialogs/scale-dialog.c	41;"	d	file:
RESPONSE_RESET	dialogs/stroke-dialog.c	48;"	d	file:
RESPONSE_RESET	tools/gimpimagemaptool.c	179;"	d	file:
RESPONSE_RESET	tools/gimptransformtool.c	494;"	d	file:
RESPONSE_RESET	widgets/gimpcolordialog.c	45;"	d	file:
RESPONSE_SAVE	display/gimpdisplayshell-close.c	102;"	d	file:
RESTORE	core/gimp.c	/^  RESTORE,$/;"	e	enum:__anon123	file:
RESTORE_ACCELS_BLURB	config/gimprc-blurbs.h	363;"	d
RESTORE_SESSION_BLURB	config/gimprc-blurbs.h	261;"	d
REVERT_DATA_KEY	actions/file-commands.c	62;"	d	file:
REV_GAMMA	base/cpercep.c	98;"	d	file:
ROTATION	text/gimptext-parasite.c	/^  ROTATION          = 3,$/;"	e	enum:__anon245	file:
ROWS	widgets/gimppaletteeditor.c	55;"	d	file:
ROW_START	paint/gimpink.c	/^enum { ROW_START, ROW_STOP };$/;"	e	enum:__anon220	file:
ROW_STOP	paint/gimpink.c	/^enum { ROW_START, ROW_STOP };$/;"	e	enum:__anon220	file:
RSDF	core/gimpimage-convert.c	397;"	d	file:
R_OK	file/file-open.c	41;"	d	file:
R_SCALE	core/gimpimage-convert.c	186;"	d	file:
R_SHIFT	core/gimpimage-convert.c	178;"	d	file:
RaiseClosure	actions/documents-commands.c	/^} RaiseClosure;$/;"	t	typeref:struct:__anon2	file:
Rectangle	core/gimp-transform-resize.c	/^} Rectangle;$/;"	t	typeref:struct:__anon164	file:
RenderBlendData	core/gimpdrawable-blend.c	/^} RenderBlendData;$/;"	t	typeref:struct:__anon117	file:
RenderContext	text/gimptext-vectors.c	/^typedef struct _RenderContext  RenderContext;$/;"	t	typeref:struct:_RenderContext	file:
RenderFunc	display/gimpdisplayshell-render.c	/^typedef void (* RenderFunc) (RenderInfo *info);$/;"	t	file:
RenderInfo	display/gimpdisplayshell-render.c	/^typedef struct _RenderInfo  RenderInfo;$/;"	t	typeref:struct:_RenderInfo	file:
ResizeDialog	dialogs/resize-dialog.c	/^} ResizeDialog;$/;"	t	typeref:struct:__anon170	file:
Rhalferror	core/gimpimage-convert.c	/^  int   Rhalferror;$/;"	m	struct:__anon108	file:
Rmax	core/gimpimage-convert.c	/^  int   Rmin, Rmax;$/;"	m	struct:__anon108	file:
Rmin	core/gimpimage-convert.c	/^  int   Rmin, Rmax;$/;"	m	struct:__anon108	file:
SAMPLE_POINT_ADDED	core/gimpimage.c	/^  SAMPLE_POINT_ADDED,$/;"	e	enum:__anon126	file:
SAMPLE_POINT_REMOVED	core/gimpimage.c	/^  SAMPLE_POINT_REMOVED,$/;"	e	enum:__anon126	file:
SATURATION_SLIDER	tools/gimpcolorizetool.c	48;"	d	file:
SATURATION_SLIDER	tools/gimphuesaturationtool.c	50;"	d	file:
SAVED	core/gimpimage.c	/^  SAVED,$/;"	e	enum:__anon126	file:
SAVE_ACCELS_BLURB	config/gimprc-blurbs.h	360;"	d
SAVE_DEVICE_STATUS_BLURB	config/gimprc-blurbs.h	264;"	d
SAVE_DOCUMENT_HISTORY_BLURB	config/gimprc-blurbs.h	268;"	d
SAVE_LEFT_TO	actions/gradient-editor-actions.c	137;"	d	file:
SAVE_LEFT_TO	actions/gradient-editor-actions.c	250;"	d	file:
SAVE_PROC	plug-in/plug-in-rc.c	/^  SAVE_PROC,$/;"	e	enum:__anon237	file:
SAVE_RIGHT_TO	actions/gradient-editor-actions.c	147;"	d	file:
SAVE_RIGHT_TO	actions/gradient-editor-actions.c	252;"	d	file:
SAVE_SESSION_INFO_BLURB	config/gimprc-blurbs.h	271;"	d
SAVE_TOOL_OPTIONS_BLURB	config/gimprc-blurbs.h	274;"	d
SB_WIDTH	dialogs/print-size-dialog.c	41;"	d	file:
SB_WIDTH	dialogs/resize-dialog.c	43;"	d	file:
SB_WIDTH	tools/gimprotatetool.c	51;"	d	file:
SB_WIDTH	tools/gimpsheartool.c	48;"	d	file:
SB_WIDTH	widgets/gimpsizebox.c	40;"	d	file:
SB_WIDTH	widgets/gimptemplateeditor.c	43;"	d	file:
SCALE	display/gimpscalecombobox.c	/^  SCALE,$/;"	e	enum:__anon191	file:
SCALED	display/gimpdisplayshell.c	/^  SCALED,$/;"	e	enum:__anon196	file:
SCALEX	display/gimpdisplayshell.h	38;"	d
SCALEY	display/gimpdisplayshell.h	39;"	d
SCALE_EPSILON	display/gimpdisplayshell-scale.c	50;"	d	file:
SCALE_EQUALS	display/gimpdisplayshell-scale.c	52;"	d	file:
SCALE_TIMEOUT	display/gimpdisplayshell-scale.c	48;"	d	file:
SCREEN_XRES	display/gimpdisplayshell.h	32;"	d
SCREEN_YRES	display/gimpdisplayshell.h	34;"	d
SCRIPT_FU_PATH_BLURB	config/gimprc-blurbs.h	277;"	d
SCROLL	widgets/gimpnavigationview.c	/^  SCROLL,$/;"	e	enum:__anon350	file:
SCROLLED	display/gimpdisplayshell.c	/^  SCROLLED,$/;"	e	enum:__anon196	file:
SCROLL_DISTANCE	widgets/gimpcontainertreeview-dnd.c	169;"	d	file:
SCROLL_INTERVAL	widgets/gimpcontainertreeview-dnd.c	171;"	d	file:
SCROLL_STEP	widgets/gimpcontainertreeview-dnd.c	170;"	d	file:
SEED_ADJUSTMENT	tools/gimpiscissorstool.h	/^  SEED_ADJUSTMENT,$/;"	e	enum:__anon268
SEED_PLACEMENT	tools/gimpiscissorstool.h	/^  SEED_PLACEMENT,$/;"	e	enum:__anon268
SEED_POINT	tools/gimpiscissorstool.c	101;"	d	file:
SELECTED	widgets/gimpcolormapeditor.c	/^  SELECTED,$/;"	e	enum:__anon326	file:
SELECTED	widgets/gimpenumaction.c	/^  SELECTED,$/;"	e	enum:__anon314	file:
SELECTED	widgets/gimppluginaction.c	/^  SELECTED,$/;"	e	enum:__anon352	file:
SELECTED	widgets/gimpstringaction.c	/^  SELECTED,$/;"	e	enum:__anon312	file:
SELECTION_ANCHOR	tools/tools-enums.h	/^  SELECTION_ANCHOR$/;"	e	enum:__anon261
SELECTION_CONTROL	core/gimpimage.c	/^  SELECTION_CONTROL,$/;"	e	enum:__anon126	file:
SELECTION_MOVE	tools/tools-enums.h	/^  SELECTION_MOVE,$/;"	e	enum:__anon261
SELECTION_MOVE_COPY	tools/tools-enums.h	/^  SELECTION_MOVE_COPY,$/;"	e	enum:__anon261
SELECTION_MOVE_MASK	tools/tools-enums.h	/^  SELECTION_MOVE_MASK,$/;"	e	enum:__anon261
SELECTION_SELECT	tools/tools-enums.h	/^  SELECTION_SELECT,$/;"	e	enum:__anon261
SELECT_COLOR_CMD_CALLBACK	actions/context-commands.c	/^SELECT_COLOR_CMD_CALLBACK (palette,  fore, FALSE, TRUE)$/;"	f
SELECT_COLOR_CMD_CALLBACK	actions/context-commands.c	121;"	d	file:
SELECT_ITEM	widgets/gimpcontainerview.c	/^  SELECT_ITEM,$/;"	e	enum:__anon363	file:
SEPARATOR	display/gimpscalecombobox.c	/^  SEPARATOR,$/;"	e	enum:__anon191	file:
SESSION_INFO	gui/session.c	/^  SESSION_INFO = 1,$/;"	e	enum:__anon203	file:
SESSION_INFO_AUX	widgets/gimpsessioninfo.c	/^  SESSION_INFO_AUX,$/;"	e	enum:__anon311	file:
SESSION_INFO_BOOK	widgets/gimpsessioninfo-dock.c	/^  SESSION_INFO_BOOK$/;"	e	enum:__anon378	file:
SESSION_INFO_BOOK_CURRENT_PAGE	widgets/gimpsessioninfo-book.c	/^  SESSION_INFO_BOOK_CURRENT_PAGE,$/;"	e	enum:__anon392	file:
SESSION_INFO_BOOK_DOCKABLE	widgets/gimpsessioninfo-book.c	/^  SESSION_INFO_BOOK_DOCKABLE$/;"	e	enum:__anon392	file:
SESSION_INFO_BOOK_POSITION	widgets/gimpsessioninfo-book.c	/^  SESSION_INFO_BOOK_POSITION,$/;"	e	enum:__anon392	file:
SESSION_INFO_DOCK	widgets/gimpsessioninfo.c	/^  SESSION_INFO_DOCK$/;"	e	enum:__anon311	file:
SESSION_INFO_DOCKABLE_AUX	widgets/gimpsessioninfo-dockable.c	/^  SESSION_INFO_DOCKABLE_AUX$/;"	e	enum:__anon359	file:
SESSION_INFO_DOCKABLE_TAB_STYLE	widgets/gimpsessioninfo-dockable.c	/^  SESSION_INFO_DOCKABLE_TAB_STYLE,$/;"	e	enum:__anon359	file:
SESSION_INFO_DOCKABLE_VIEW_SIZE	widgets/gimpsessioninfo-dockable.c	/^  SESSION_INFO_DOCKABLE_VIEW_SIZE,$/;"	e	enum:__anon359	file:
SESSION_INFO_OPEN	widgets/gimpsessioninfo.c	/^  SESSION_INFO_OPEN,$/;"	e	enum:__anon311	file:
SESSION_INFO_POSITION	widgets/gimpsessioninfo.c	/^  SESSION_INFO_POSITION,$/;"	e	enum:__anon311	file:
SESSION_INFO_SIZE	widgets/gimpsessioninfo.c	/^  SESSION_INFO_SIZE,$/;"	e	enum:__anon311	file:
SET_ACTIVE	actions/brush-editor-actions.c	90;"	d	file:
SET_ACTIVE	actions/brush-editor-actions.c	96;"	d	file:
SET_ACTIVE	actions/cursor-info-actions.c	73;"	d	file:
SET_ACTIVE	actions/cursor-info-actions.c	79;"	d	file:
SET_ACTIVE	actions/dock-actions.c	128;"	d	file:
SET_ACTIVE	actions/dock-actions.c	98;"	d	file:
SET_ACTIVE	actions/dockable-actions.c	246;"	d	file:
SET_ACTIVE	actions/dockable-actions.c	338;"	d	file:
SET_ACTIVE	actions/drawable-actions.c	190;"	d	file:
SET_ACTIVE	actions/drawable-actions.c	213;"	d	file:
SET_ACTIVE	actions/gradient-editor-actions.c	563;"	d	file:
SET_ACTIVE	actions/gradient-editor-actions.c	886;"	d	file:
SET_ACTIVE	actions/layers-actions.c	510;"	d	file:
SET_ACTIVE	actions/layers-actions.c	580;"	d	file:
SET_ACTIVE	actions/palette-editor-actions.c	158;"	d	file:
SET_ACTIVE	actions/palette-editor-actions.c	179;"	d	file:
SET_ACTIVE	actions/quick-mask-actions.c	101;"	d	file:
SET_ACTIVE	actions/quick-mask-actions.c	123;"	d	file:
SET_ACTIVE	actions/sample-points-actions.c	73;"	d	file:
SET_ACTIVE	actions/sample-points-actions.c	79;"	d	file:
SET_ACTIVE	actions/text-editor-actions.c	107;"	d	file:
SET_ACTIVE	actions/text-editor-actions.c	93;"	d	file:
SET_ACTIVE	actions/tools-actions.c	617;"	d	file:
SET_ACTIVE	actions/tools-actions.c	643;"	d	file:
SET_ACTIVE	actions/vectors-actions.c	277;"	d	file:
SET_ACTIVE	actions/vectors-actions.c	318;"	d	file:
SET_ACTIVE	actions/view-actions.c	551;"	d	file:
SET_ACTIVE	actions/view-actions.c	663;"	d	file:
SET_ACTIVE	actions/view-commands.c	57;"	d	file:
SET_ACTIVE	actions/window-actions.c	131;"	d	file:
SET_ACTIVE	actions/window-actions.c	88;"	d	file:
SET_ACTIVE	display/gimpdisplayshell-appearance.c	51;"	d	file:
SET_BRUSH	paint/gimpbrushcore.c	/^  SET_BRUSH,$/;"	e	enum:__anon226	file:
SET_COLOR	actions/colormap-actions.c	107;"	d	file:
SET_COLOR	actions/colormap-actions.c	121;"	d	file:
SET_COLOR	actions/gradient-editor-actions.c	565;"	d	file:
SET_COLOR	actions/gradient-editor-actions.c	887;"	d	file:
SET_COLOR	actions/palette-editor-actions.c	160;"	d	file:
SET_COLOR	actions/palette-editor-actions.c	180;"	d	file:
SET_COLOR	actions/quick-mask-actions.c	103;"	d	file:
SET_COLOR	actions/quick-mask-actions.c	124;"	d	file:
SET_COLOR	actions/view-actions.c	555;"	d	file:
SET_COLOR	actions/view-actions.c	665;"	d	file:
SET_COLOR	display/gimpdisplayshell-appearance.c	56;"	d	file:
SET_HIDE_EMPTY	actions/tool-options-actions.c	215;"	d	file:
SET_HIDE_EMPTY	actions/tool-options-actions.c	98;"	d	file:
SET_IMAGE	widgets/gimpitemtreeview.c	/^  SET_IMAGE,$/;"	e	enum:__anon330	file:
SET_LABEL	actions/edit-actions.c	297;"	d	file:
SET_LABEL	actions/edit-actions.c	333;"	d	file:
SET_LABEL	actions/gradient-editor-actions.c	567;"	d	file:
SET_LABEL	actions/gradient-editor-actions.c	888;"	d	file:
SET_SENSITIVE	actions/brush-editor-actions.c	88;"	d	file:
SET_SENSITIVE	actions/brush-editor-actions.c	95;"	d	file:
SET_SENSITIVE	actions/brushes-actions.c	122;"	d	file:
SET_SENSITIVE	actions/brushes-actions.c	131;"	d	file:
SET_SENSITIVE	actions/buffers-actions.c	89;"	d	file:
SET_SENSITIVE	actions/buffers-actions.c	97;"	d	file:
SET_SENSITIVE	actions/channels-actions.c	182;"	d	file:
SET_SENSITIVE	actions/channels-actions.c	202;"	d	file:
SET_SENSITIVE	actions/colormap-actions.c	105;"	d	file:
SET_SENSITIVE	actions/colormap-actions.c	120;"	d	file:
SET_SENSITIVE	actions/context-actions.c	1255;"	d	file:
SET_SENSITIVE	actions/context-actions.c	1276;"	d	file:
SET_SENSITIVE	actions/dockable-actions.c	250;"	d	file:
SET_SENSITIVE	actions/dockable-actions.c	340;"	d	file:
SET_SENSITIVE	actions/documents-actions.c	121;"	d	file:
SET_SENSITIVE	actions/documents-actions.c	134;"	d	file:
SET_SENSITIVE	actions/drawable-actions.c	188;"	d	file:
SET_SENSITIVE	actions/drawable-actions.c	212;"	d	file:
SET_SENSITIVE	actions/edit-actions.c	299;"	d	file:
SET_SENSITIVE	actions/edit-actions.c	334;"	d	file:
SET_SENSITIVE	actions/error-console-actions.c	103;"	d	file:
SET_SENSITIVE	actions/error-console-actions.c	95;"	d	file:
SET_SENSITIVE	actions/file-actions.c	231;"	d	file:
SET_SENSITIVE	actions/file-actions.c	241;"	d	file:
SET_SENSITIVE	actions/fonts-actions.c	73;"	d	file:
SET_SENSITIVE	actions/fonts-actions.c	78;"	d	file:
SET_SENSITIVE	actions/gradient-editor-actions.c	569;"	d	file:
SET_SENSITIVE	actions/gradient-editor-actions.c	889;"	d	file:
SET_SENSITIVE	actions/gradients-actions.c	123;"	d	file:
SET_SENSITIVE	actions/gradients-actions.c	132;"	d	file:
SET_SENSITIVE	actions/image-actions.c	272;"	d	file:
SET_SENSITIVE	actions/image-actions.c	297;"	d	file:
SET_SENSITIVE	actions/images-actions.c	84;"	d	file:
SET_SENSITIVE	actions/images-actions.c	91;"	d	file:
SET_SENSITIVE	actions/layers-actions.c	508;"	d	file:
SET_SENSITIVE	actions/layers-actions.c	579;"	d	file:
SET_SENSITIVE	actions/palette-editor-actions.c	156;"	d	file:
SET_SENSITIVE	actions/palette-editor-actions.c	178;"	d	file:
SET_SENSITIVE	actions/palettes-actions.c	129;"	d	file:
SET_SENSITIVE	actions/palettes-actions.c	138;"	d	file:
SET_SENSITIVE	actions/patterns-actions.c	122;"	d	file:
SET_SENSITIVE	actions/patterns-actions.c	131;"	d	file:
SET_SENSITIVE	actions/quick-mask-actions.c	122;"	d	file:
SET_SENSITIVE	actions/quick-mask-actions.c	99;"	d	file:
SET_SENSITIVE	actions/select-actions.c	148;"	d	file:
SET_SENSITIVE	actions/select-actions.c	166;"	d	file:
SET_SENSITIVE	actions/templates-actions.c	104;"	d	file:
SET_SENSITIVE	actions/templates-actions.c	95;"	d	file:
SET_SENSITIVE	actions/tools-actions.c	615;"	d	file:
SET_SENSITIVE	actions/tools-actions.c	642;"	d	file:
SET_SENSITIVE	actions/vectors-actions.c	275;"	d	file:
SET_SENSITIVE	actions/vectors-actions.c	317;"	d	file:
SET_SENSITIVE	actions/view-actions.c	553;"	d	file:
SET_SENSITIVE	actions/view-actions.c	664;"	d	file:
SET_VIEWABLE	widgets/gimpview.c	/^  SET_VIEWABLE,$/;"	e	enum:__anon365	file:
SET_VISIBLE	actions/dock-actions.c	100;"	d	file:
SET_VISIBLE	actions/dock-actions.c	129;"	d	file:
SET_VISIBLE	actions/dockable-actions.c	248;"	d	file:
SET_VISIBLE	actions/dockable-actions.c	339;"	d	file:
SET_VISIBLE	actions/gradient-editor-actions.c	571;"	d	file:
SET_VISIBLE	actions/gradient-editor-actions.c	890;"	d	file:
SET_VISIBLE	actions/layers-actions.c	506;"	d	file:
SET_VISIBLE	actions/layers-actions.c	578;"	d	file:
SET_VISIBLE	actions/tool-options-actions.c	214;"	d	file:
SET_VISIBLE	actions/tool-options-actions.c	96;"	d	file:
SET_VISIBLE	actions/window-actions.c	132;"	d	file:
SET_VISIBLE	actions/window-actions.c	90;"	d	file:
SHOW_BRUSH_OUTLINE_BLURB	config/gimprc-blurbs.h	280;"	d
SHOW_CHANGED	core/gimplayermask.c	/^  SHOW_CHANGED,$/;"	e	enum:__anon138	file:
SHOW_GRID_BLURB	config/gimprc-blurbs.h	321;"	d
SHOW_GUIDES_BLURB	config/gimprc-blurbs.h	317;"	d
SHOW_HELP_BUTTON_BLURB	config/gimprc-blurbs.h	284;"	d
SHOW_LAYER_BOUNDARY_BLURB	config/gimprc-blurbs.h	313;"	d
SHOW_MENUBAR_BLURB	config/gimprc-blurbs.h	293;"	d
SHOW_PAINT_TOOL_CURSOR_BLURB	config/gimprc-blurbs.h	289;"	d
SHOW_RULERS_BLURB	config/gimprc-blurbs.h	297;"	d
SHOW_SAMPLE_POINTS_BLURB	config/gimprc-blurbs.h	325;"	d
SHOW_SCROLLBARS_BLURB	config/gimprc-blurbs.h	301;"	d
SHOW_SELECTION_BLURB	config/gimprc-blurbs.h	309;"	d
SHOW_STATUSBAR_BLURB	config/gimprc-blurbs.h	305;"	d
SHOW_TIPS_BLURB	config/gimprc-blurbs.h	329;"	d
SHOW_TOOLTIP	widgets/gimpuimanager.c	/^  SHOW_TOOLTIP,$/;"	e	enum:__anon321	file:
SHOW_TOOLTIPS_BLURB	config/gimprc-blurbs.h	332;"	d
SIDE_TO_RESIZE_BOTTOM	tools/gimprectangletool.c	/^  SIDE_TO_RESIZE_BOTTOM,$/;"	e	enum:__anon285	file:
SIDE_TO_RESIZE_LEFT	tools/gimprectangletool.c	/^  SIDE_TO_RESIZE_LEFT,$/;"	e	enum:__anon285	file:
SIDE_TO_RESIZE_LEFT_AND_RIGHT_SYMMETRICALLY	tools/gimprectangletool.c	/^  SIDE_TO_RESIZE_LEFT_AND_RIGHT_SYMMETRICALLY,$/;"	e	enum:__anon285	file:
SIDE_TO_RESIZE_NONE	tools/gimprectangletool.c	/^  SIDE_TO_RESIZE_NONE,$/;"	e	enum:__anon285	file:
SIDE_TO_RESIZE_RIGHT	tools/gimprectangletool.c	/^  SIDE_TO_RESIZE_RIGHT,$/;"	e	enum:__anon285	file:
SIDE_TO_RESIZE_TOP	tools/gimprectangletool.c	/^  SIDE_TO_RESIZE_TOP,$/;"	e	enum:__anon285	file:
SIDE_TO_RESIZE_TOP_AND_BOTTOM_SYMMETRICALLY	tools/gimprectangletool.c	/^  SIDE_TO_RESIZE_TOP_AND_BOTTOM_SYMMETRICALLY,$/;"	e	enum:__anon285	file:
SIOX_COLOR_DIMS	base/siox.c	67;"	d	file:
SIOX_DEFAULT_SENSITIVITY_A	base/siox.h	43;"	d
SIOX_DEFAULT_SENSITIVITY_B	base/siox.h	44;"	d
SIOX_DEFAULT_SENSITIVITY_L	base/siox.h	42;"	d
SIOX_DEFAULT_SMOOTHNESS	base/siox.h	40;"	d
SIOX_DRB_ADD	base/siox.h	47;"	d
SIOX_DRB_SUBTRACT	base/siox.h	48;"	d
SIOX_GRAY_DIMS	base/siox.c	68;"	d	file:
SIOX_HIGH	base/siox.c	61;"	d	file:
SIOX_LOW	base/siox.c	60;"	d	file:
SIOX_REFINEMENT_ADD_BACKGROUND	base/base-enums.h	/^  SIOX_REFINEMENT_ADD_BACKGROUND     = (1 << 1),$/;"	e	enum:__anon14
SIOX_REFINEMENT_ADD_FOREGROUND	base/base-enums.h	/^  SIOX_REFINEMENT_ADD_FOREGROUND     = (1 << 0),$/;"	e	enum:__anon14
SIOX_REFINEMENT_CHANGE_MULTIBLOB	base/base-enums.h	/^  SIOX_REFINEMENT_CHANGE_MULTIBLOB   = (1 << 4),$/;"	e	enum:__anon14
SIOX_REFINEMENT_CHANGE_SENSITIVITY	base/base-enums.h	/^  SIOX_REFINEMENT_CHANGE_SENSITIVITY = (1 << 2),$/;"	e	enum:__anon14
SIOX_REFINEMENT_CHANGE_SMOOTHNESS	base/base-enums.h	/^  SIOX_REFINEMENT_CHANGE_SMOOTHNESS  = (1 << 3),$/;"	e	enum:__anon14
SIOX_REFINEMENT_NO_CHANGE	base/base-enums.h	/^  SIOX_REFINEMENT_NO_CHANGE          = 0,$/;"	e	enum:__anon14
SIOX_REFINEMENT_RECALCULATE	base/base-enums.h	/^  SIOX_REFINEMENT_RECALCULATE        = 0xFF$/;"	e	enum:__anon14
SIZE_CHANGED	core/gimpviewable.c	/^  SIZE_CHANGED,$/;"	e	enum:__anon116	file:
SLIDERS	tools/gimpcolorizetool.c	51;"	d	file:
SLIDERS	tools/gimphuesaturationtool.c	53;"	d	file:
SLIDER_WIDTH	tools/gimpbrightnesscontrasttool.c	46;"	d	file:
SLIDER_WIDTH	tools/gimpcolorizetool.c	43;"	d	file:
SLIDER_WIDTH	tools/gimphuesaturationtool.c	44;"	d	file:
SLIDER_WIDTH	tools/gimpposterizetool.c	46;"	d	file:
SMUDGE_DEFAULT_RATE	paint/gimpsmudgeoptions.c	30;"	d	file:
SPACE_BAR_ACTION_BLURB	config/gimprc-blurbs.h	335;"	d
SPACING	widgets/gimppaletteeditor.c	53;"	d	file:
SPACING_CHANGED	core/gimpbrush.c	/^  SPACING_CHANGED,$/;"	e	enum:__anon149	file:
SQRT5	tools/gimprectangletool.c	62;"	d	file:
SRC_COLUMN_ICON	widgets/gimpcolordisplayeditor.c	/^  SRC_COLUMN_ICON,$/;"	e	enum:__anon327	file:
SRC_COLUMN_NAME	widgets/gimpcolordisplayeditor.c	/^  SRC_COLUMN_NAME,$/;"	e	enum:__anon327	file:
SRC_COLUMN_TYPE	widgets/gimpcolordisplayeditor.c	/^  SRC_COLUMN_TYPE,$/;"	e	enum:__anon327	file:
SRGB	base/cpercep.c	88;"	d	file:
START_INDEX	dialogs/about-dialog.c	269;"	d	file:
START_INDEX	dialogs/about-dialog.c	285;"	d	file:
STATE_GROUP	file/gimprecentlist.c	/^  STATE_GROUP$/;"	e	enum:__anon199	file:
STATE_GROUPS	file/gimprecentlist.c	/^  STATE_GROUPS,$/;"	e	enum:__anon199	file:
STATE_MIME_TYPE	file/gimprecentlist.c	/^  STATE_MIME_TYPE,$/;"	e	enum:__anon199	file:
STATE_PRIVATE	file/gimprecentlist.c	/^  STATE_PRIVATE,$/;"	e	enum:__anon199	file:
STATE_RECENT_FILES	file/gimprecentlist.c	/^  STATE_RECENT_FILES,$/;"	e	enum:__anon199	file:
STATE_RECENT_ITEM	file/gimprecentlist.c	/^  STATE_RECENT_ITEM,$/;"	e	enum:__anon199	file:
STATE_START	file/gimprecentlist.c	/^  STATE_START,$/;"	e	enum:__anon199	file:
STATE_TIMESTAMP	file/gimprecentlist.c	/^  STATE_TIMESTAMP,$/;"	e	enum:__anon199	file:
STATE_URI	file/gimprecentlist.c	/^  STATE_URI,$/;"	e	enum:__anon199	file:
STATUSBAR_SIZE	tools/gimppainttool.c	53;"	d	file:
STD_PLUG_INS_LOCALE_DOMAIN	plug-in/gimppluginmanager-locale-domain.c	35;"	d	file:
STEP_B	core/gimpimage-convert.c	2535;"	d	file:
STEP_G	core/gimpimage-convert.c	2534;"	d	file:
STEP_R	core/gimpimage-convert.c	2533;"	d	file:
STRICT	plug-in/gimpplugin.c	51;"	d	file:
STRICT	plug-in/gimppluginshm.c	52;"	d	file:
SUBSAMPLE	paint/gimpink.c	48;"	d	file:
SWAP_AREA	widgets/gimpfgbgeditor.c	/^  SWAP_AREA,$/;"	e	enum:__anon386	file:
SWAP_DELETE	base/tile-swap.c	/^  SWAP_DELETE$/;"	e	enum:__anon17	file:
SWAP_IN	base/tile-swap.c	/^  SWAP_IN = 1,$/;"	e	enum:__anon17	file:
SWAP_ORIENT	tools/gimpmovetool.c	60;"	d	file:
SWAP_OUT	base/tile-swap.c	/^  SWAP_OUT,$/;"	e	enum:__anon17	file:
SWAP_PATH_BLURB	config/gimprc-blurbs.h	338;"	d
ScaleDialog	dialogs/scale-dialog.c	/^} ScaleDialog;$/;"	t	typeref:struct:__anon173	file:
ScaleDialogData	display/gimpdisplayshell-scale.c	/^} ScaleDialogData;$/;"	t	typeref:struct:__anon190	file:
ScrollInfo	display/gimpdisplayshell-autoscroll.c	/^} ScrollInfo;$/;"	t	typeref:struct:__anon189	file:
SelectFunction	tools/tools-enums.h	/^} SelectFunction;$/;"	t	typeref:enum:__anon261
Selection	display/display-types.h	/^typedef struct _Selection             Selection;$/;"	t	typeref:struct:_Selection
SerializeData	core/gimpcontainer.c	/^} SerializeData;$/;"	t	typeref:struct:__anon58	file:
SideToResize	tools/gimprectangletool.c	/^} SideToResize;$/;"	t	typeref:enum:__anon285	file:
SioxProgressFunc	base/siox.h	/^typedef void (* SioxProgressFunc) (gpointer  progress_data,$/;"	t
SioxRefinementType	base/base-enums.h	/^} SioxRefinementType;$/;"	t	typeref:enum:__anon14
SioxState	base/base-types.h	/^typedef struct _SioxState           SioxState;$/;"	t	typeref:struct:_SioxState
StoreUnaligned	composite/gimp-composite-altivec.c	/^StoreUnaligned (vector unsigned char v,$/;"	f	file:
StoreUnalignedLess	composite/gimp-composite-altivec.c	/^StoreUnalignedLess (vector unsigned char v,$/;"	f	file:
SvgHandler	vectors/gimpvectors-import.c	/^typedef struct _SvgHandler SvgHandler;$/;"	t	typeref:struct:_SvgHandler	file:
SvgParser	core/gimpgradient-load.c	/^} SvgParser;$/;"	t	typeref:struct:__anon151	file:
SvgParser	vectors/gimpvectors-import.c	/^} SvgParser;$/;"	t	typeref:struct:__anon303	file:
SvgPath	vectors/gimpvectors-import.c	/^} SvgPath;$/;"	t	typeref:struct:__anon304	file:
SvgStop	core/gimpgradient-load.c	/^} SvgStop;$/;"	t	typeref:struct:__anon152	file:
SwapCommand	base/tile-swap.c	/^} SwapCommand;$/;"	t	typeref:enum:__anon17	file:
SwapFile	base/tile-swap.c	/^typedef struct _SwapFile     SwapFile;$/;"	t	typeref:struct:_SwapFile	file:
SwapFileGap	base/tile-swap.c	/^typedef struct _SwapFileGap  SwapFileGap;$/;"	t	typeref:struct:_SwapFileGap	file:
SwapFunc	base/tile-swap.c	/^typedef gint (* SwapFunc) (gint         fd,$/;"	t	file:
TABLE_SHIFT	paint/gimpink-blob.c	220;"	d	file:
TABLE_SIZE	paint/gimpink-blob.c	217;"	d	file:
TAB_STYLE	actions/dockable-actions.c	102;"	d	file:
TAB_STYLE	actions/dockable-actions.c	73;"	d	file:
TAG	text/gimpfont.c	649;"	d	file:
TAG	text/gimpfont.c	656;"	d	file:
TAG_GROUP	file/gimprecentlist.c	99;"	d	file:
TAG_GROUPS	file/gimprecentlist.c	98;"	d	file:
TAG_MIME_TYPE	file/gimprecentlist.c	95;"	d	file:
TAG_PRIVATE	file/gimprecentlist.c	97;"	d	file:
TAG_RECENT_FILES	file/gimprecentlist.c	92;"	d	file:
TAG_RECENT_ITEM	file/gimprecentlist.c	93;"	d	file:
TAG_TIMESTAMP	file/gimprecentlist.c	96;"	d	file:
TAG_URI	file/gimprecentlist.c	94;"	d	file:
TARGET	tools/gimpmeasuretool.c	55;"	d	file:
TARGET	tools/gimpvectortool.c	64;"	d	file:
TARGET_SIZE	tools/gimpblendtool.c	49;"	d	file:
TARGET_SIZE	tools/gimpiscissorstool.c	88;"	d	file:
TARGET_SIZE	tools/gimpperspectiveclonetool.c	50;"	d	file:
TARGET_SIZE	tools/gimpsourcetool.c	42;"	d	file:
TEAROFF_MENUS_BLURB	config/gimprc-blurbs.h	347;"	d
TEMPLATE_CHANGED	core/gimpcontext.c	/^  TEMPLATE_CHANGED,$/;"	e	enum:__anon103	file:
TEMP_PATH_BLURB	config/gimprc-blurbs.h	366;"	d
TEXT	text/gimptext-parasite.c	/^  TEXT                  = 0,$/;"	e	enum:__anon245	file:
TEXT_CHANGED	widgets/gimptexteditor.c	/^  TEXT_CHANGED,$/;"	e	enum:__anon387	file:
TEXT_LAYER_XCF_DONT_AUTO_RENAME	text/gimptextlayer-xcf.c	/^  TEXT_LAYER_XCF_DONT_AUTO_RENAME  = 1 << 0,$/;"	e	enum:__anon238	file:
TEXT_LAYER_XCF_MODIFIED	text/gimptextlayer-xcf.c	/^  TEXT_LAYER_XCF_MODIFIED          = 1 << 1$/;"	e	enum:__anon238	file:
TEXT_LAYER_XCF_NONE	text/gimptextlayer-xcf.c	/^  TEXT_LAYER_XCF_NONE              = 0,$/;"	e	enum:__anon238	file:
TEXT_UNDO_TIMEOUT	tools/gimptexttool.c	68;"	d	file:
THAW	core/gimpcontainer.c	/^  THAW,$/;"	e	enum:__anon56	file:
THAW	vectors/gimpvectors.c	/^  THAW,$/;"	e	enum:__anon302	file:
THEME_BLURB	config/gimprc-blurbs.h	372;"	d
THEME_PATH_BLURB	config/gimprc-blurbs.h	375;"	d
THUMBNAIL_FILESIZE_LIMIT_BLURB	config/gimprc-blurbs.h	381;"	d
THUMBNAIL_SIZE_BLURB	config/gimprc-blurbs.h	378;"	d
THUMB_LOADER	plug-in/plug-in-rc.c	/^  THUMB_LOADER$/;"	e	enum:__anon237	file:
TILEROWHINT_BROKEN	base/tile.h	39;"	d
TILEROWHINT_MIXED	base/tile.h	36;"	d
TILEROWHINT_OPAQUE	base/tile.h	34;"	d
TILEROWHINT_OUTOFRANGE	base/tile.h	37;"	d
TILEROWHINT_TRANSPARENT	base/tile.h	35;"	d
TILEROWHINT_UNDEFINED	base/tile.h	38;"	d
TILEROWHINT_UNKNOWN	base/tile.h	33;"	d
TILES_PER_THREAD	base/pixel-processor.c	39;"	d	file:
TILE_CACHE_SIZE_BLURB	config/gimprc-blurbs.h	385;"	d
TILE_HEIGHT	base/tile.h	24;"	d
TILE_MAP_SIZE	plug-in/gimppluginshm.c	72;"	d	file:
TILE_WIDTH	base/tile.h	23;"	d
TIME_SMOOTHER_BUFFER	paint/gimpink.h	28;"	d
TIPS_IN_THETIP	dialogs/tips-parser.c	/^  TIPS_IN_THETIP,$/;"	e	enum:__anon174	file:
TIPS_IN_TIP	dialogs/tips-parser.c	/^  TIPS_IN_TIP,$/;"	e	enum:__anon174	file:
TIPS_IN_TIPS	dialogs/tips-parser.c	/^  TIPS_IN_TIPS,$/;"	e	enum:__anon174	file:
TIPS_IN_UNKNOWN	dialogs/tips-parser.c	/^  TIPS_IN_UNKNOWN$/;"	e	enum:__anon174	file:
TIPS_IN_WELCOME	dialogs/tips-parser.c	/^  TIPS_IN_WELCOME,$/;"	e	enum:__anon174	file:
TIPS_LOCALE_MATCH	dialogs/tips-parser.c	/^  TIPS_LOCALE_MATCH,$/;"	e	enum:__anon175	file:
TIPS_LOCALE_MISMATCH	dialogs/tips-parser.c	/^  TIPS_LOCALE_MISMATCH$/;"	e	enum:__anon175	file:
TIPS_LOCALE_NONE	dialogs/tips-parser.c	/^  TIPS_LOCALE_NONE,$/;"	e	enum:__anon175	file:
TIPS_START	dialogs/tips-parser.c	/^  TIPS_START,$/;"	e	enum:__anon174	file:
TITLE_CHANGED	widgets/gimpdocked.c	/^  TITLE_CHANGED,$/;"	e	enum:__anon310	file:
TOGGLE_MASK	tools/gimpvectortool.c	66;"	d	file:
TOOLBOX_COLOR_AREA_BLURB	config/gimprc-blurbs.h	391;"	d
TOOLBOX_FOO_AREA_BLURB	config/gimprc-blurbs.h	392;"	d
TOOLBOX_IMAGE_AREA_BLURB	config/gimprc-blurbs.h	393;"	d
TOOLBOX_WINDOW_HINT_BLURB	config/gimprc-blurbs.h	395;"	d
TOOL_BUTTON_DATA_KEY	widgets/gimptoolbox.c	61;"	d	file:
TOOL_CHANGED	core/gimpcontext.c	/^  TOOL_CHANGED,$/;"	e	enum:__anon103	file:
TOOL_INFO_DATA_KEY	widgets/gimptoolbox.c	62;"	d	file:
TOPLEVEL	dialogs/dialogs.c	49;"	d	file:
TOTAL_SHIFT	paint/gimpink-blob.c	221;"	d	file:
TRANSFORM_CREATING	tools/tools-enums.h	/^  TRANSFORM_CREATING,$/;"	e	enum:__anon265
TRANSFORM_HANDLE_CENTER	tools/tools-enums.h	/^  TRANSFORM_HANDLE_CENTER$/;"	e	enum:__anon265
TRANSFORM_HANDLE_E	tools/tools-enums.h	/^  TRANSFORM_HANDLE_E,  \/* east       *\/$/;"	e	enum:__anon265
TRANSFORM_HANDLE_N	tools/tools-enums.h	/^  TRANSFORM_HANDLE_N,  \/* north      *\/$/;"	e	enum:__anon265
TRANSFORM_HANDLE_NE	tools/tools-enums.h	/^  TRANSFORM_HANDLE_NE, \/* north east *\/$/;"	e	enum:__anon265
TRANSFORM_HANDLE_NONE	tools/tools-enums.h	/^  TRANSFORM_HANDLE_NONE,$/;"	e	enum:__anon265
TRANSFORM_HANDLE_NW	tools/tools-enums.h	/^  TRANSFORM_HANDLE_NW, \/* north west *\/$/;"	e	enum:__anon265
TRANSFORM_HANDLE_S	tools/tools-enums.h	/^  TRANSFORM_HANDLE_S,  \/* south      *\/$/;"	e	enum:__anon265
TRANSFORM_HANDLE_SE	tools/tools-enums.h	/^  TRANSFORM_HANDLE_SE, \/* south east *\/$/;"	e	enum:__anon265
TRANSFORM_HANDLE_SW	tools/tools-enums.h	/^  TRANSFORM_HANDLE_SW, \/* south west *\/$/;"	e	enum:__anon265
TRANSFORM_HANDLE_W	tools/tools-enums.h	/^  TRANSFORM_HANDLE_W,  \/* west       *\/$/;"	e	enum:__anon265
TRANSIENT_DOCKS_BLURB	config/gimprc-blurbs.h	350;"	d
TRANSPARENCY_SIZE_BLURB	config/gimprc-blurbs.h	402;"	d
TRANSPARENCY_TYPE_BLURB	config/gimprc-blurbs.h	399;"	d
TRANSPARENT_OPACITY	composite/gimp-composite-generic.c	41;"	d	file:
TRANSPARENT_OPACITY	paint-funcs/paint-funcs-types.h	27;"	d
TRANS_INFO_SIZE	tools/gimptransformtool.h	27;"	d
TRC	core/gimpimage.c	74;"	d	file:
TRC	core/gimpimage.c	76;"	d	file:
TRUST_DIRTY_FLAG_BLURB	config/gimprc-blurbs.h	405;"	d
TempBuf	base/base-types.h	/^typedef struct _TempBuf             TempBuf;$/;"	t	typeref:struct:_TempBuf
TemplateDeleteData	actions/templates-commands.c	/^} TemplateDeleteData;$/;"	t	typeref:struct:__anon1	file:
TemplateOptionsDialog	dialogs/template-options-dialog.h	/^typedef struct _TemplateOptionsDialog TemplateOptionsDialog;$/;"	t	typeref:struct:_TemplateOptionsDialog
Threshold	base/base-types.h	/^typedef struct _Threshold           Threshold;$/;"	t	typeref:struct:_Threshold
Tile	base/base-types.h	/^typedef struct _Tile                Tile;$/;"	t	typeref:struct:_Tile
TileLink	base/tile-private.h	/^typedef struct _TileLink TileLink;$/;"	t	typeref:struct:_TileLink
TileList	base/tile-cache.c	/^} TileList;$/;"	t	typeref:struct:_TileList	file:
TileManager	base/base-types.h	/^typedef struct _TileManager         TileManager;$/;"	t	typeref:struct:_TileManager
TilePyramid	base/base-types.h	/^typedef struct _TilePyramid         TilePyramid;$/;"	t	typeref:struct:_TilePyramid
TileRowHint	base/tile.h	/^typedef guchar TileRowHint;$/;"	t
TileValidateProc	base/base-types.h	/^typedef void   (* TileValidateProc)  (TileManager *tm,$/;"	t
TipsParser	dialogs/tips-parser.c	/^} TipsParser;$/;"	t	typeref:struct:__anon176	file:
TipsParserLocaleState	dialogs/tips-parser.c	/^} TipsParserLocaleState;$/;"	t	typeref:enum:__anon175	file:
TipsParserState	dialogs/tips-parser.c	/^} TipsParserState;$/;"	t	typeref:enum:__anon174	file:
TransInfo	tools/gimptransformtool.h	/^typedef gdouble TransInfo[TRANS_INFO_SIZE];$/;"	t
TransformAction	tools/tools-enums.h	/^} TransformAction;$/;"	t	typeref:enum:__anon265
UNBLOCK	widgets/gimplayertreeview.c	1064;"	d	file:
UNBLOCK	widgets/gimplayertreeview.c	1085;"	d	file:
UNBLOCK	widgets/gimplayertreeview.c	1128;"	d	file:
UNBLOCK	widgets/gimplayertreeview.c	936;"	d	file:
UNDO_EVENT	core/gimpimage.c	/^  UNDO_EVENT,$/;"	e	enum:__anon126	file:
UNDO_LEVELS_BLURB	config/gimprc-blurbs.h	409;"	d
UNDO_PREVIEW_SIZE_BLURB	config/gimprc-blurbs.h	418;"	d
UNDO_SIZE_BLURB	config/gimprc-blurbs.h	413;"	d
UNIT_ABBREV	core/gimp-units.c	/^  UNIT_ABBREV,$/;"	e	enum:__anon137	file:
UNIT_CHANGED	core/gimpimage.c	/^  UNIT_CHANGED,$/;"	e	enum:__anon126	file:
UNIT_DIGITS	core/gimp-units.c	/^  UNIT_DIGITS,$/;"	e	enum:__anon137	file:
UNIT_FACTOR	core/gimp-units.c	/^  UNIT_FACTOR,$/;"	e	enum:__anon137	file:
UNIT_INFO	core/gimp-units.c	/^  UNIT_INFO = 1,$/;"	e	enum:__anon137	file:
UNIT_PLURAL	core/gimp-units.c	/^  UNIT_PLURAL$/;"	e	enum:__anon137	file:
UNIT_SINGULAR	core/gimp-units.c	/^  UNIT_SINGULAR,$/;"	e	enum:__anon137	file:
UNIT_SYMBOL	core/gimp-units.c	/^  UNIT_SYMBOL,$/;"	e	enum:__anon137	file:
UNREGISTER_PROCEDURE	pdb/gimppdb.c	/^  UNREGISTER_PROCEDURE,$/;"	e	enum:__anon230	file:
UNSCALEX	display/gimpdisplayshell.h	42;"	d
UNSCALEY	display/gimpdisplayshell.h	43;"	d
UPDATE	core/gimpdrawable.c	/^  UPDATE,$/;"	e	enum:__anon113	file:
UPDATE	core/gimpimage.c	/^  UPDATE,$/;"	e	enum:__anon126	file:
UPDATE	core/gimpprojection.c	/^  UPDATE,$/;"	e	enum:__anon145	file:
UPDATE	widgets/gimpcolordialog.c	/^  UPDATE,$/;"	e	enum:__anon380	file:
UPDATE	widgets/gimpimageparasiteview.c	/^  UPDATE,$/;"	e	enum:__anon389	file:
UPDATE	widgets/gimpuimanager.c	/^  UPDATE,$/;"	e	enum:__anon321	file:
UPDATE	widgets/gimpviewrenderer.c	/^  UPDATE,$/;"	e	enum:__anon367	file:
UPDATE_GUIDE	core/gimpimage.c	/^  UPDATE_GUIDE,$/;"	e	enum:__anon126	file:
UPDATE_SAMPLE_POINT	core/gimpimage.c	/^  UPDATE_SAMPLE_POINT,$/;"	e	enum:__anon126	file:
USER_INSTALL_COPY	core/gimp-user-install.c	/^  USER_INSTALL_COPY   \/* Copy from sysconf directory *\/$/;"	e	enum:__anon160	file:
USER_INSTALL_MKDIR	core/gimp-user-install.c	/^  USER_INSTALL_MKDIR, \/* Create the directory        *\/$/;"	e	enum:__anon160	file:
USE_DRAWPOINTS	display/gimpdisplayshell-selection.c	44;"	d	file:
USE_FONTCONFIG_DIRECTLY	text/gimpfontlist.c	44;"	d	file:
USE_HELP_BLURB	config/gimprc-blurbs.h	421;"	d
USE_WIN32_SHM	plug-in/gimppluginshm.c	61;"	d	file:
VALUE	base/gimphistogram.c	558;"	d	file:
VALUE_TO_PIXEL	core/gimpscanconvert.c	752;"	d	file:
VALUE_TO_PIXEL	core/gimpscanconvert.c	794;"	d	file:
VALUE_TO_PIXEL	core/gimpscanconvert.c	839;"	d	file:
VALUE_TO_PIXEL	core/gimpscanconvert.c	879;"	d	file:
VECTORS_ADD_ANCHOR	tools/gimpvectortool.h	/^  VECTORS_ADD_ANCHOR,$/;"	e	enum:__anon273
VECTORS_CONNECT_STROKES	tools/gimpvectortool.h	/^  VECTORS_CONNECT_STROKES,$/;"	e	enum:__anon273
VECTORS_CONVERT_EDGE	tools/gimpvectortool.h	/^  VECTORS_CONVERT_EDGE,$/;"	e	enum:__anon273
VECTORS_CREATE_STROKE	tools/gimpvectortool.h	/^  VECTORS_CREATE_STROKE,$/;"	e	enum:__anon273
VECTORS_CREATE_VECTOR	tools/gimpvectortool.h	/^  VECTORS_CREATE_VECTOR,$/;"	e	enum:__anon273
VECTORS_DELETE_ANCHOR	tools/gimpvectortool.h	/^  VECTORS_DELETE_ANCHOR,$/;"	e	enum:__anon273
VECTORS_DELETE_SEGMENT	tools/gimpvectortool.h	/^  VECTORS_DELETE_SEGMENT,$/;"	e	enum:__anon273
VECTORS_FINISHED	tools/gimpvectortool.h	/^  VECTORS_FINISHED$/;"	e	enum:__anon273
VECTORS_INSERT_ANCHOR	tools/gimpvectortool.h	/^  VECTORS_INSERT_ANCHOR,$/;"	e	enum:__anon273
VECTORS_MOVE_ANCHOR	tools/gimpvectortool.h	/^  VECTORS_MOVE_ANCHOR,$/;"	e	enum:__anon273
VECTORS_MOVE_ANCHORSET	tools/gimpvectortool.h	/^  VECTORS_MOVE_ANCHORSET,$/;"	e	enum:__anon273
VECTORS_MOVE_CURVE	tools/gimpvectortool.h	/^  VECTORS_MOVE_CURVE,$/;"	e	enum:__anon273
VECTORS_MOVE_HANDLE	tools/gimpvectortool.h	/^  VECTORS_MOVE_HANDLE,$/;"	e	enum:__anon273
VECTORS_MOVE_STROKE	tools/gimpvectortool.h	/^  VECTORS_MOVE_STROKE,$/;"	e	enum:__anon273
VECTORS_MOVE_VECTORS	tools/gimpvectortool.h	/^  VECTORS_MOVE_VECTORS,$/;"	e	enum:__anon273
VECTORS_SELECT_VECTOR	tools/gimpvectortool.h	/^  VECTORS_SELECT_VECTOR,$/;"	e	enum:__anon273
VERBOSE	display/gimpdisplayshell-selection.c	41;"	d	file:
VIEW_POPUP_DELAY	widgets/gimpview-popup.c	38;"	d	file:
VIEW_SIZE	actions/dockable-actions.c	101;"	d	file:
VIEW_SIZE	actions/dockable-actions.c	68;"	d	file:
VISIBILITY_CHANGED	core/gimpitem.c	/^  VISIBILITY_CHANGED,$/;"	e	enum:__anon131	file:
VOL_BBITS	core/gimpimage-convert.c	237;"	d	file:
VOL_BBITSh	core/gimpimage-convert.c	241;"	d	file:
VOL_BBITSl	core/gimpimage-convert.c	242;"	d	file:
VOL_BMASKh	core/gimpimage-convert.c	247;"	d	file:
VOL_BMASKl	core/gimpimage-convert.c	248;"	d	file:
VOL_GBITS	core/gimpimage-convert.c	236;"	d	file:
VOL_GBITSh	core/gimpimage-convert.c	239;"	d	file:
VOL_GBITSl	core/gimpimage-convert.c	240;"	d	file:
VOL_GMASKh	core/gimpimage-convert.c	245;"	d	file:
VOL_GMASKl	core/gimpimage-convert.c	246;"	d	file:
VOL_RBITS	core/gimpimage-convert.c	238;"	d	file:
VOL_RBITSh	core/gimpimage-convert.c	243;"	d	file:
VOL_RBITSl	core/gimpimage-convert.c	244;"	d	file:
VOL_RMASKh	core/gimpimage-convert.c	249;"	d	file:
VOL_RMASKl	core/gimpimage-convert.c	250;"	d	file:
VectorsExportDialog	dialogs/vectors-export-dialog.h	/^typedef struct _VectorsExportDialog VectorsExportDialog;$/;"	t	typeref:struct:_VectorsExportDialog
VectorsImportDialog	dialogs/vectors-import-dialog.h	/^typedef struct _VectorsImportDialog VectorsImportDialog;$/;"	t	typeref:struct:_VectorsImportDialog
VectorsOptionsDialog	dialogs/vectors-options-dialog.h	/^typedef struct _VectorsOptionsDialog VectorsOptionsDialog;$/;"	t	typeref:struct:_VectorsOptionsDialog
WAITING	tools/gimpiscissorstool.h	/^  WAITING$/;"	e	enum:__anon268
WEB_BROWSER_BLURB	config/gimprc-blurbs.h	424;"	d
WHT	widgets/gimpviewrendererbrush.c	144;"	d	file:
WHT	widgets/gimpviewrendererbrush.c	204;"	d	file:
WRAP_AROUND	dialogs/offset-dialog.c	46;"	d	file:
WRITABLE_PATH_KEY	core/gimpdatafactory.c	44;"	d	file:
WRITE_BUFFER_SIZE	plug-in/gimpplugin.h	29;"	d
W_OK	file/file-save.c	41;"	d	file:
WheelEvent	widgets/gimpcontrollerwheel.c	/^typedef struct _WheelEvent WheelEvent;$/;"	t	typeref:struct:_WheelEvent	file:
WinMain	main.c	/^WinMain (struct HINSTANCE__ *hInstance,$/;"	f
X0	core/gimpdrawable-transform.h	/^  X0,$/;"	e	enum:__anon159
X1	core/gimpdrawable-transform.h	/^  X1,$/;"	e	enum:__anon159
X2	core/gimpdrawable-transform.h	/^  X2,$/;"	e	enum:__anon159
X3	core/gimpdrawable-transform.h	/^  X3,$/;"	e	enum:__anon159
XCF_ORIENTATION_HORIZONTAL	xcf/xcf-private.h	/^  XCF_ORIENTATION_HORIZONTAL = 1,$/;"	e	enum:__anon421
XCF_ORIENTATION_VERTICAL	xcf/xcf-private.h	/^  XCF_ORIENTATION_VERTICAL   = 2$/;"	e	enum:__anon421
XCF_STROKETYPE_BEZIER_STROKE	xcf/xcf-private.h	/^  XCF_STROKETYPE_BEZIER_STROKE = 1$/;"	e	enum:__anon422
XCF_STROKETYPE_STROKE	xcf/xcf-private.h	/^  XCF_STROKETYPE_STROKE        = 0,$/;"	e	enum:__anon422
XLFD	text/gimptext-parasite.c	/^  XLFD                  = 7,$/;"	e	enum:__anon245	file:
XLFD_ADD_STYLE	text/gimptext-xlfd.c	/^  XLFD_ADD_STYLE     = 5,$/;"	e	enum:__anon246	file:
XLFD_AVERAGE_WIDTH	text/gimptext-xlfd.c	/^  XLFD_AVERAGE_WIDTH = 11,$/;"	e	enum:__anon246	file:
XLFD_CHARSET	text/gimptext-xlfd.c	/^  XLFD_CHARSET       = 12,$/;"	e	enum:__anon246	file:
XLFD_FAMILY	text/gimptext-xlfd.c	/^  XLFD_FAMILY        = 1,$/;"	e	enum:__anon246	file:
XLFD_FOUNDRY	text/gimptext-xlfd.c	/^  XLFD_FOUNDRY       = 0,$/;"	e	enum:__anon246	file:
XLFD_MAX_FIELD_LEN	text/gimptext-xlfd.c	40;"	d	file:
XLFD_NUM_FIELDS	text/gimptext-xlfd.c	/^  XLFD_NUM_FIELDS$/;"	e	enum:__anon246	file:
XLFD_PIXELS	text/gimptext-xlfd.c	/^  XLFD_PIXELS        = 6,$/;"	e	enum:__anon246	file:
XLFD_POINTS	text/gimptext-xlfd.c	/^  XLFD_POINTS        = 7,$/;"	e	enum:__anon246	file:
XLFD_RESOLUTION_X	text/gimptext-xlfd.c	/^  XLFD_RESOLUTION_X  = 8,$/;"	e	enum:__anon246	file:
XLFD_RESOLUTION_Y	text/gimptext-xlfd.c	/^  XLFD_RESOLUTION_Y  = 9,$/;"	e	enum:__anon246	file:
XLFD_SET_WIDTH	text/gimptext-xlfd.c	/^  XLFD_SET_WIDTH     = 4,$/;"	e	enum:__anon246	file:
XLFD_SLANT	text/gimptext-xlfd.c	/^  XLFD_SLANT         = 3,$/;"	e	enum:__anon246	file:
XLFD_SPACING	text/gimptext-xlfd.c	/^  XLFD_SPACING       = 10,$/;"	e	enum:__anon246	file:
XLFD_WEIGHT	text/gimptext-xlfd.c	/^  XLFD_WEIGHT        = 2,$/;"	e	enum:__anon246	file:
XOR_COLOR_BLURB	config/gimprc-blurbs.h	431;"	d
XRANGE	tools/gimpcurvestool.c	62;"	d	file:
XSHEAR	tools/gimpsheartool.c	42;"	d	file:
XcfCompressionType	xcf/xcf-private.h	/^} XcfCompressionType;$/;"	t	typeref:enum:__anon420
XcfInfo	xcf/xcf-private.h	/^typedef struct _XcfInfo  XcfInfo;$/;"	t	typeref:struct:_XcfInfo
XcfOrientationType	xcf/xcf-private.h	/^} XcfOrientationType;$/;"	t	typeref:enum:__anon421
XcfParasiteData	xcf/xcf-save.c	/^} XcfParasiteData;$/;"	t	typeref:struct:__anon418	file:
XcfStrokeType	xcf/xcf-private.h	/^} XcfStrokeType;$/;"	t	typeref:enum:__anon422
Y0	core/gimpdrawable-transform.h	/^  Y0,$/;"	e	enum:__anon159
Y1	core/gimpdrawable-transform.h	/^  Y1,$/;"	e	enum:__anon159
Y2	core/gimpdrawable-transform.h	/^  Y2,$/;"	e	enum:__anon159
Y3	core/gimpdrawable-transform.h	/^  Y3$/;"	e	enum:__anon159
YELLOW_BLUE	tools/gimpcolorbalancetool.c	45;"	d	file:
YRANGE	tools/gimpcurvestool.c	63;"	d	file:
YSHEAR	tools/gimpsheartool.c	43;"	d	file:
ZOOM	widgets/gimpnavigationview.c	/^  ZOOM,$/;"	e	enum:__anon350	file:
_AbrBrushHeader	core/gimpbrush-load.c	/^struct _AbrBrushHeader$/;"	s	file:
_AbrHeader	core/gimpbrush-load.c	/^struct _AbrHeader$/;"	s	file:
_AbrSampledBrushHeader	core/gimpbrush-load.c	/^struct _AbrSampledBrushHeader$/;"	s	file:
_Blob	paint/gimpink-blob.h	/^struct _Blob$/;"	s
_BlobPoint	paint/gimpink-blob.h	/^struct _BlobPoint$/;"	s
_BlobSpan	paint/gimpink-blob.h	/^struct _BlobSpan$/;"	s
_BoundSeg	base/boundary.h	/^struct _BoundSeg$/;"	s
_Boundary	base/boundary.c	/^struct _Boundary$/;"	s	file:
_BrushHeader	core/gimpbrush-header.h	/^struct _BrushHeader$/;"	s
_ChannelOptionsDialog	dialogs/channel-options-dialog.h	/^struct _ChannelOptionsDialog$/;"	s
_Color	core/gimpimage-convert.c	/^struct _Color$/;"	s	file:
_ColorBalance	base/color-balance.h	/^struct _ColorBalance$/;"	s
_ColorHash	core/gimpimage-colorhash.c	/^struct _ColorHash$/;"	s	file:
_Colorize	base/colorize.h	/^struct _Colorize$/;"	s
_Curves	base/curves.h	/^struct _Curves$/;"	s
_DesaturateDialog	dialogs/desaturate-dialog.h	/^struct _DesaturateDialog$/;"	s
_GNU_SOURCE	errors.c	21;"	d	file:
_GNU_SOURCE	file/gimprecentlist.c	29;"	d	file:
_GNU_SOURCE	main.c	21;"	d	file:
_GNU_SOURCE	plug-in/gimpplugin.c	23;"	d	file:
_Gimp	core/gimp.h	/^struct _Gimp$/;"	s
_GimpAction	widgets/gimpaction.h	/^struct _GimpAction$/;"	s
_GimpActionClass	widgets/gimpaction.h	/^struct _GimpActionClass$/;"	s
_GimpActionEntry	widgets/gimpactiongroup.h	/^struct _GimpActionEntry$/;"	s
_GimpActionFactory	widgets/gimpactionfactory.h	/^struct _GimpActionFactory$/;"	s
_GimpActionFactoryClass	widgets/gimpactionfactory.h	/^struct _GimpActionFactoryClass$/;"	s
_GimpActionFactoryEntry	widgets/gimpactionfactory.h	/^struct _GimpActionFactoryEntry$/;"	s
_GimpActionGroup	widgets/gimpactiongroup.h	/^struct _GimpActionGroup$/;"	s
_GimpActionGroupClass	widgets/gimpactiongroup.h	/^struct _GimpActionGroupClass$/;"	s
_GimpActionView	widgets/gimpactionview.h	/^struct _GimpActionView$/;"	s
_GimpActionViewClass	widgets/gimpactionview.h	/^struct _GimpActionViewClass$/;"	s
_GimpAirbrush	paint/gimpairbrush.h	/^struct _GimpAirbrush$/;"	s
_GimpAirbrushClass	paint/gimpairbrush.h	/^struct _GimpAirbrushClass$/;"	s
_GimpAirbrushOptions	paint/gimpairbrushoptions.h	/^struct _GimpAirbrushOptions$/;"	s
_GimpAirbrushOptionsClass	paint/gimpairbrushoptions.h	/^struct _GimpAirbrushOptionsClass$/;"	s
_GimpAirbrushTool	tools/gimpairbrushtool.h	/^struct _GimpAirbrushTool$/;"	s
_GimpAirbrushToolClass	tools/gimpairbrushtool.h	/^struct _GimpAirbrushToolClass$/;"	s
_GimpAlignOptions	tools/gimpalignoptions.h	/^struct _GimpAlignOptions$/;"	s
_GimpAlignTool	tools/gimpaligntool.h	/^struct _GimpAlignTool$/;"	s
_GimpAlignToolClass	tools/gimpaligntool.h	/^struct _GimpAlignToolClass$/;"	s
_GimpAnchor	vectors/gimpanchor.h	/^struct _GimpAnchor$/;"	s
_GimpArea	core/gimparea.h	/^struct _GimpArea$/;"	s
_GimpArray	core/gimpparamspecs.h	/^struct _GimpArray$/;"	s
_GimpBaseConfig	config/gimpbaseconfig.h	/^struct _GimpBaseConfig$/;"	s
_GimpBaseConfigClass	config/gimpbaseconfig.h	/^struct _GimpBaseConfigClass$/;"	s
_GimpBezierStroke	vectors/gimpbezierstroke.h	/^struct _GimpBezierStroke$/;"	s
_GimpBezierStrokeClass	vectors/gimpbezierstroke.h	/^struct _GimpBezierStrokeClass$/;"	s
_GimpBlendOptions	tools/gimpblendoptions.h	/^struct _GimpBlendOptions$/;"	s
_GimpBlendTool	tools/gimpblendtool.h	/^struct _GimpBlendTool$/;"	s
_GimpBlendToolClass	tools/gimpblendtool.h	/^struct _GimpBlendToolClass$/;"	s
_GimpBlobEditor	widgets/gimpblobeditor.h	/^struct _GimpBlobEditor$/;"	s
_GimpBlobEditorClass	widgets/gimpblobeditor.h	/^struct _GimpBlobEditorClass$/;"	s
_GimpBrightnessContrastTool	tools/gimpbrightnesscontrasttool.h	/^struct _GimpBrightnessContrastTool$/;"	s
_GimpBrightnessContrastToolClass	tools/gimpbrightnesscontrasttool.h	/^struct _GimpBrightnessContrastToolClass$/;"	s
_GimpBrush	core/gimpbrush.h	/^struct _GimpBrush$/;"	s
_GimpBrushClass	core/gimpbrush.h	/^struct _GimpBrushClass$/;"	s
_GimpBrushClipboard	core/gimpbrushclipboard.h	/^struct _GimpBrushClipboard$/;"	s
_GimpBrushClipboardClass	core/gimpbrushclipboard.h	/^struct _GimpBrushClipboardClass$/;"	s
_GimpBrushCore	paint/gimpbrushcore.h	/^struct _GimpBrushCore$/;"	s
_GimpBrushCoreClass	paint/gimpbrushcore.h	/^struct _GimpBrushCoreClass$/;"	s
_GimpBrushEditor	widgets/gimpbrusheditor.h	/^struct _GimpBrushEditor$/;"	s
_GimpBrushEditorClass	widgets/gimpbrusheditor.h	/^struct _GimpBrushEditorClass$/;"	s
_GimpBrushFactoryView	widgets/gimpbrushfactoryview.h	/^struct _GimpBrushFactoryView$/;"	s
_GimpBrushFactoryViewClass	widgets/gimpbrushfactoryview.h	/^struct _GimpBrushFactoryViewClass$/;"	s
_GimpBrushGenerated	core/gimpbrushgenerated.h	/^struct _GimpBrushGenerated$/;"	s
_GimpBrushGeneratedClass	core/gimpbrushgenerated.h	/^struct _GimpBrushGeneratedClass$/;"	s
_GimpBrushPipe	core/gimpbrushpipe.h	/^struct _GimpBrushPipe$/;"	s
_GimpBrushPipeClass	core/gimpbrushpipe.h	/^struct _GimpBrushPipeClass$/;"	s
_GimpBrushSelect	widgets/gimpbrushselect.h	/^struct _GimpBrushSelect$/;"	s
_GimpBrushSelectClass	widgets/gimpbrushselect.h	/^struct _GimpBrushSelectClass$/;"	s
_GimpBrushTool	tools/gimpbrushtool.h	/^struct _GimpBrushTool$/;"	s
_GimpBrushToolClass	tools/gimpbrushtool.h	/^struct _GimpBrushToolClass$/;"	s
_GimpBucketFillOptions	tools/gimpbucketfilloptions.h	/^struct _GimpBucketFillOptions$/;"	s
_GimpBucketFillTool	tools/gimpbucketfilltool.h	/^struct _GimpBucketFillTool$/;"	s
_GimpBucketFillToolClass	tools/gimpbucketfilltool.h	/^struct _GimpBucketFillToolClass$/;"	s
_GimpBuffer	core/gimpbuffer.h	/^struct _GimpBuffer$/;"	s
_GimpBufferClass	core/gimpbuffer.h	/^struct _GimpBufferClass$/;"	s
_GimpBufferView	widgets/gimpbufferview.h	/^struct _GimpBufferView$/;"	s
_GimpBufferViewClass	widgets/gimpbufferview.h	/^struct _GimpBufferViewClass$/;"	s
_GimpByColorSelectTool	tools/gimpbycolorselecttool.h	/^struct _GimpByColorSelectTool$/;"	s
_GimpByColorSelectToolClass	tools/gimpbycolorselecttool.h	/^struct _GimpByColorSelectToolClass$/;"	s
_GimpCanvas	display/gimpcanvas.h	/^struct _GimpCanvas$/;"	s
_GimpCanvasClass	display/gimpcanvas.h	/^struct _GimpCanvasClass$/;"	s
_GimpCellRendererDashes	widgets/gimpcellrendererdashes.h	/^struct _GimpCellRendererDashes$/;"	s
_GimpCellRendererDashesClass	widgets/gimpcellrendererdashes.h	/^struct _GimpCellRendererDashesClass$/;"	s
_GimpCellRendererViewable	widgets/gimpcellrendererviewable.h	/^struct _GimpCellRendererViewable$/;"	s
_GimpCellRendererViewableClass	widgets/gimpcellrendererviewable.h	/^struct _GimpCellRendererViewableClass$/;"	s
_GimpChannel	core/gimpchannel.h	/^struct _GimpChannel$/;"	s
_GimpChannelClass	core/gimpchannel.h	/^struct _GimpChannelClass$/;"	s
_GimpChannelPropUndo	core/gimpchannelpropundo.h	/^struct _GimpChannelPropUndo$/;"	s
_GimpChannelPropUndoClass	core/gimpchannelpropundo.h	/^struct _GimpChannelPropUndoClass$/;"	s
_GimpChannelTreeView	widgets/gimpchanneltreeview.h	/^struct _GimpChannelTreeView$/;"	s
_GimpChannelTreeViewClass	widgets/gimpchanneltreeview.h	/^struct _GimpChannelTreeViewClass$/;"	s
_GimpChannelUndo	core/gimpchannelundo.h	/^struct _GimpChannelUndo$/;"	s
_GimpChannelUndoClass	core/gimpchannelundo.h	/^struct _GimpChannelUndoClass$/;"	s
_GimpClass	core/gimp.h	/^struct _GimpClass$/;"	s
_GimpClipboard	widgets/gimpclipboard.c	/^struct _GimpClipboard$/;"	s	file:
_GimpClone	paint/gimpclone.h	/^struct _GimpClone$/;"	s
_GimpCloneClass	paint/gimpclone.h	/^struct _GimpCloneClass$/;"	s
_GimpCloneOptions	paint/gimpcloneoptions.h	/^struct _GimpCloneOptions$/;"	s
_GimpCloneOptionsClass	paint/gimpcloneoptions.h	/^struct _GimpCloneOptionsClass$/;"	s
_GimpCloneTool	tools/gimpclonetool.h	/^struct _GimpCloneTool$/;"	s
_GimpCloneToolClass	tools/gimpclonetool.h	/^struct _GimpCloneToolClass$/;"	s
_GimpColorBalanceTool	tools/gimpcolorbalancetool.h	/^struct _GimpColorBalanceTool$/;"	s
_GimpColorBalanceToolClass	tools/gimpcolorbalancetool.h	/^struct _GimpColorBalanceToolClass$/;"	s
_GimpColorBar	widgets/gimpcolorbar.h	/^struct _GimpColorBar$/;"	s
_GimpColorBarClass	widgets/gimpcolorbar.h	/^struct _GimpColorBarClass$/;"	s
_GimpColorDialog	widgets/gimpcolordialog.h	/^struct _GimpColorDialog$/;"	s
_GimpColorDialogClass	widgets/gimpcolordialog.h	/^struct _GimpColorDialogClass$/;"	s
_GimpColorDisplayEditor	widgets/gimpcolordisplayeditor.h	/^struct _GimpColorDisplayEditor$/;"	s
_GimpColorDisplayEditorClass	widgets/gimpcolordisplayeditor.h	/^struct _GimpColorDisplayEditorClass$/;"	s
_GimpColorEditor	widgets/gimpcoloreditor.h	/^struct _GimpColorEditor$/;"	s
_GimpColorEditorClass	widgets/gimpcoloreditor.h	/^struct _GimpColorEditorClass$/;"	s
_GimpColorFrame	widgets/gimpcolorframe.h	/^struct _GimpColorFrame$/;"	s
_GimpColorFrameClass	widgets/gimpcolorframe.h	/^struct _GimpColorFrameClass$/;"	s
_GimpColorOptions	tools/gimpcoloroptions.h	/^struct _GimpColorOptions$/;"	s
_GimpColorPanel	widgets/gimpcolorpanel.h	/^struct _GimpColorPanel$/;"	s
_GimpColorPanelClass	widgets/gimpcolorpanel.h	/^struct _GimpColorPanelClass$/;"	s
_GimpColorPickerOptions	tools/gimpcolorpickeroptions.h	/^struct _GimpColorPickerOptions$/;"	s
_GimpColorPickerTool	tools/gimpcolorpickertool.h	/^struct _GimpColorPickerTool$/;"	s
_GimpColorPickerToolClass	tools/gimpcolorpickertool.h	/^struct _GimpColorPickerToolClass$/;"	s
_GimpColorSelectorPalette	widgets/gimpcolorselectorpalette.h	/^struct _GimpColorSelectorPalette$/;"	s
_GimpColorSelectorPaletteClass	widgets/gimpcolorselectorpalette.h	/^struct _GimpColorSelectorPaletteClass$/;"	s
_GimpColorTool	tools/gimpcolortool.h	/^struct _GimpColorTool$/;"	s
_GimpColorToolClass	tools/gimpcolortool.h	/^struct _GimpColorToolClass$/;"	s
_GimpColorizeTool	tools/gimpcolorizetool.h	/^struct _GimpColorizeTool$/;"	s
_GimpColorizeToolClass	tools/gimpcolorizetool.h	/^struct _GimpColorizeToolClass$/;"	s
_GimpColormapEditor	widgets/gimpcolormapeditor.h	/^struct _GimpColormapEditor$/;"	s
_GimpColormapEditorClass	widgets/gimpcolormapeditor.h	/^struct _GimpColormapEditorClass$/;"	s
_GimpComponentEditor	widgets/gimpcomponenteditor.h	/^struct _GimpComponentEditor$/;"	s
_GimpComponentEditorClass	widgets/gimpcomponenteditor.h	/^struct _GimpComponentEditorClass$/;"	s
_GimpContainer	core/gimpcontainer.h	/^struct _GimpContainer$/;"	s
_GimpContainerBox	widgets/gimpcontainerbox.h	/^struct _GimpContainerBox$/;"	s
_GimpContainerBoxClass	widgets/gimpcontainerbox.h	/^struct _GimpContainerBoxClass$/;"	s
_GimpContainerClass	core/gimpcontainer.h	/^struct _GimpContainerClass$/;"	s
_GimpContainerComboBox	widgets/gimpcontainercombobox.h	/^struct _GimpContainerComboBox$/;"	s
_GimpContainerComboBoxClass	widgets/gimpcontainercombobox.h	/^struct _GimpContainerComboBoxClass$/;"	s
_GimpContainerEditor	widgets/gimpcontainereditor.h	/^struct _GimpContainerEditor$/;"	s
_GimpContainerEditorClass	widgets/gimpcontainereditor.h	/^struct _GimpContainerEditorClass$/;"	s
_GimpContainerEntry	widgets/gimpcontainerentry.h	/^struct _GimpContainerEntry$/;"	s
_GimpContainerEntryClass	widgets/gimpcontainerentry.h	/^struct _GimpContainerEntryClass$/;"	s
_GimpContainerGridView	widgets/gimpcontainergridview.h	/^struct _GimpContainerGridView$/;"	s
_GimpContainerGridViewClass	widgets/gimpcontainergridview.h	/^struct _GimpContainerGridViewClass$/;"	s
_GimpContainerHandler	core/gimpcontainer.c	/^typedef struct _GimpContainerHandler$/;"	s	file:
_GimpContainerPopup	widgets/gimpcontainerpopup.h	/^struct _GimpContainerPopup$/;"	s
_GimpContainerPopupClass	widgets/gimpcontainerpopup.h	/^struct _GimpContainerPopupClass$/;"	s
_GimpContainerTreeView	widgets/gimpcontainertreeview.h	/^struct _GimpContainerTreeView$/;"	s
_GimpContainerTreeViewClass	widgets/gimpcontainertreeview.h	/^struct _GimpContainerTreeViewClass$/;"	s
_GimpContainerViewInterface	widgets/gimpcontainerview.h	/^struct _GimpContainerViewInterface$/;"	s
_GimpContainerViewPrivate	widgets/gimpcontainerview.c	/^struct _GimpContainerViewPrivate$/;"	s	file:
_GimpContext	core/gimpcontext.h	/^struct _GimpContext$/;"	s
_GimpContextClass	core/gimpcontext.h	/^struct _GimpContextClass$/;"	s
_GimpControllerEditor	widgets/gimpcontrollereditor.h	/^struct _GimpControllerEditor$/;"	s
_GimpControllerEditorClass	widgets/gimpcontrollereditor.h	/^struct _GimpControllerEditorClass$/;"	s
_GimpControllerInfo	widgets/gimpcontrollerinfo.h	/^struct _GimpControllerInfo$/;"	s
_GimpControllerInfoClass	widgets/gimpcontrollerinfo.h	/^struct _GimpControllerInfoClass$/;"	s
_GimpControllerKeyboard	widgets/gimpcontrollerkeyboard.h	/^struct _GimpControllerKeyboard$/;"	s
_GimpControllerKeyboardClass	widgets/gimpcontrollerkeyboard.h	/^struct _GimpControllerKeyboardClass$/;"	s
_GimpControllerList	widgets/gimpcontrollerlist.h	/^struct _GimpControllerList$/;"	s
_GimpControllerListClass	widgets/gimpcontrollerlist.h	/^struct _GimpControllerListClass$/;"	s
_GimpControllerManager	widgets/gimpcontrollers.c	/^struct _GimpControllerManager$/;"	s	file:
_GimpControllerWheel	widgets/gimpcontrollerwheel.h	/^struct _GimpControllerWheel$/;"	s
_GimpControllerWheelClass	widgets/gimpcontrollerwheel.h	/^struct _GimpControllerWheelClass$/;"	s
_GimpConvolve	paint/gimpconvolve.h	/^struct _GimpConvolve$/;"	s
_GimpConvolveClass	paint/gimpconvolve.h	/^struct _GimpConvolveClass$/;"	s
_GimpConvolveOptions	paint/gimpconvolveoptions.h	/^struct _GimpConvolveOptions$/;"	s
_GimpConvolveOptionsClass	paint/gimpconvolveoptions.h	/^struct _GimpConvolveOptionsClass$/;"	s
_GimpConvolveTool	tools/gimpconvolvetool.h	/^struct _GimpConvolveTool$/;"	s
_GimpConvolveToolClass	tools/gimpconvolvetool.h	/^struct _GimpConvolveToolClass$/;"	s
_GimpCoords	core/core-types.h	/^struct _GimpCoords$/;"	s
_GimpCoreConfig	config/gimpcoreconfig.h	/^struct _GimpCoreConfig$/;"	s
_GimpCoreConfigClass	config/gimpcoreconfig.h	/^struct _GimpCoreConfigClass$/;"	s
_GimpCropOptions	tools/gimpcropoptions.h	/^struct _GimpCropOptions$/;"	s
_GimpCropTool	tools/gimpcroptool.h	/^struct _GimpCropTool$/;"	s
_GimpCropToolClass	tools/gimpcroptool.h	/^struct _GimpCropToolClass$/;"	s
_GimpCursor	widgets/gimpcursor.c	/^struct _GimpCursor$/;"	s	file:
_GimpCursorView	widgets/gimpcursorview.h	/^struct _GimpCursorView$/;"	s
_GimpCursorViewClass	widgets/gimpcursorview.h	/^struct _GimpCursorViewClass$/;"	s
_GimpCurvesTool	tools/gimpcurvestool.h	/^struct _GimpCurvesTool$/;"	s
_GimpCurvesToolClass	tools/gimpcurvestool.h	/^struct _GimpCurvesToolClass$/;"	s
_GimpDBusService	widgets/gimpdbusservice.h	/^struct _GimpDBusService$/;"	s
_GimpDBusServiceClass	widgets/gimpdbusservice.h	/^struct _GimpDBusServiceClass$/;"	s
_GimpDashEditor	widgets/gimpdasheditor.h	/^struct _GimpDashEditor$/;"	s
_GimpDashEditorClass	widgets/gimpdasheditor.h	/^struct _GimpDashEditorClass$/;"	s
_GimpData	core/gimpdata.h	/^struct _GimpData$/;"	s
_GimpDataClass	core/gimpdata.h	/^struct _GimpDataClass$/;"	s
_GimpDataDeleteData	actions/data-commands.c	/^struct _GimpDataDeleteData$/;"	s	file:
_GimpDataEditor	widgets/gimpdataeditor.h	/^struct _GimpDataEditor$/;"	s
_GimpDataEditorClass	widgets/gimpdataeditor.h	/^struct _GimpDataEditorClass$/;"	s
_GimpDataFactory	core/gimpdatafactory.h	/^struct _GimpDataFactory$/;"	s
_GimpDataFactoryClass	core/gimpdatafactory.h	/^struct _GimpDataFactoryClass$/;"	s
_GimpDataFactoryLoaderEntry	core/gimpdatafactory.h	/^struct _GimpDataFactoryLoaderEntry$/;"	s
_GimpDataFactoryView	widgets/gimpdatafactoryview.h	/^struct _GimpDataFactoryView$/;"	s
_GimpDataFactoryViewClass	widgets/gimpdatafactoryview.h	/^struct _GimpDataFactoryViewClass$/;"	s
_GimpDeviceInfo	widgets/gimpdeviceinfo.h	/^struct _GimpDeviceInfo$/;"	s
_GimpDeviceInfoClass	widgets/gimpdeviceinfo.h	/^struct _GimpDeviceInfoClass$/;"	s
_GimpDeviceManager	widgets/gimpdevices.c	/^struct _GimpDeviceManager$/;"	s	file:
_GimpDeviceStatus	widgets/gimpdevicestatus.h	/^struct _GimpDeviceStatus$/;"	s
_GimpDeviceStatusClass	widgets/gimpdevicestatus.h	/^struct _GimpDeviceStatusClass$/;"	s
_GimpDeviceStatusEntry	widgets/gimpdevicestatus.c	/^struct _GimpDeviceStatusEntry$/;"	s	file:
_GimpDialogFactory	widgets/gimpdialogfactory.h	/^struct _GimpDialogFactory$/;"	s
_GimpDialogFactoryClass	widgets/gimpdialogfactory.h	/^struct _GimpDialogFactoryClass$/;"	s
_GimpDialogFactoryEntry	widgets/gimpdialogfactory.h	/^struct _GimpDialogFactoryEntry$/;"	s
_GimpDisplay	display/gimpdisplay.h	/^struct _GimpDisplay$/;"	s
_GimpDisplayClass	display/gimpdisplay.h	/^struct _GimpDisplayClass$/;"	s
_GimpDisplayConfig	config/gimpdisplayconfig.h	/^struct _GimpDisplayConfig$/;"	s
_GimpDisplayConfigClass	config/gimpdisplayconfig.h	/^struct _GimpDisplayConfigClass$/;"	s
_GimpDisplayOptions	display/gimpdisplayoptions.h	/^struct _GimpDisplayOptions$/;"	s
_GimpDisplayOptionsClass	display/gimpdisplayoptions.h	/^struct _GimpDisplayOptionsClass$/;"	s
_GimpDisplayShell	display/gimpdisplayshell.h	/^struct _GimpDisplayShell$/;"	s
_GimpDisplayShellClass	display/gimpdisplayshell.h	/^struct _GimpDisplayShellClass$/;"	s
_GimpDndDataDef	widgets/gimpdnd.c	/^struct _GimpDndDataDef$/;"	s	file:
_GimpDock	widgets/gimpdock.h	/^struct _GimpDock$/;"	s
_GimpDockClass	widgets/gimpdock.h	/^struct _GimpDockClass$/;"	s
_GimpDockSeparator	widgets/gimpdockseparator.h	/^struct _GimpDockSeparator$/;"	s
_GimpDockSeparatorClass	widgets/gimpdockseparator.h	/^struct _GimpDockSeparatorClass$/;"	s
_GimpDockable	widgets/gimpdockable.h	/^struct _GimpDockable$/;"	s
_GimpDockableClass	widgets/gimpdockable.h	/^struct _GimpDockableClass$/;"	s
_GimpDockbook	widgets/gimpdockbook.h	/^struct _GimpDockbook$/;"	s
_GimpDockbookClass	widgets/gimpdockbook.h	/^struct _GimpDockbookClass$/;"	s
_GimpDockedInterface	widgets/gimpdocked.h	/^struct _GimpDockedInterface$/;"	s
_GimpDocumentList	core/gimpdocumentlist.h	/^struct _GimpDocumentList$/;"	s
_GimpDocumentListClass	core/gimpdocumentlist.h	/^struct _GimpDocumentListClass$/;"	s
_GimpDocumentView	widgets/gimpdocumentview.h	/^struct _GimpDocumentView$/;"	s
_GimpDocumentViewClass	widgets/gimpdocumentview.h	/^struct _GimpDocumentViewClass$/;"	s
_GimpDodgeBurn	paint/gimpdodgeburn.h	/^struct _GimpDodgeBurn$/;"	s
_GimpDodgeBurnClass	paint/gimpdodgeburn.h	/^struct _GimpDodgeBurnClass$/;"	s
_GimpDodgeBurnOptions	paint/gimpdodgeburnoptions.h	/^struct _GimpDodgeBurnOptions$/;"	s
_GimpDodgeBurnOptionsClass	paint/gimpdodgeburnoptions.h	/^struct _GimpDodgeBurnOptionsClass$/;"	s
_GimpDodgeBurnTool	tools/gimpdodgeburntool.h	/^struct _GimpDodgeBurnTool$/;"	s
_GimpDodgeBurnToolClass	tools/gimpdodgeburntool.h	/^struct _GimpDodgeBurnToolClass$/;"	s
_GimpDrawTool	tools/gimpdrawtool.h	/^struct _GimpDrawTool$/;"	s
_GimpDrawToolClass	tools/gimpdrawtool.h	/^struct _GimpDrawToolClass$/;"	s
_GimpDrawable	core/gimpdrawable.h	/^struct _GimpDrawable$/;"	s
_GimpDrawableClass	core/gimpdrawable.h	/^struct _GimpDrawableClass$/;"	s
_GimpDrawableModUndo	core/gimpdrawablemodundo.h	/^struct _GimpDrawableModUndo$/;"	s
_GimpDrawableModUndoClass	core/gimpdrawablemodundo.h	/^struct _GimpDrawableModUndoClass$/;"	s
_GimpDrawableTreeView	widgets/gimpdrawabletreeview.h	/^struct _GimpDrawableTreeView$/;"	s
_GimpDrawableTreeViewClass	widgets/gimpdrawabletreeview.h	/^struct _GimpDrawableTreeViewClass$/;"	s
_GimpDrawableUndo	core/gimpdrawableundo.h	/^struct _GimpDrawableUndo$/;"	s
_GimpDrawableUndoClass	core/gimpdrawableundo.h	/^struct _GimpDrawableUndoClass$/;"	s
_GimpEditSelectionTool	tools/gimpeditselectiontool.h	/^struct _GimpEditSelectionTool$/;"	s
_GimpEditSelectionToolClass	tools/gimpeditselectiontool.h	/^struct _GimpEditSelectionToolClass$/;"	s
_GimpEditor	widgets/gimpeditor.h	/^struct _GimpEditor$/;"	s
_GimpEditorClass	widgets/gimpeditor.h	/^struct _GimpEditorClass$/;"	s
_GimpEllipseSelectTool	tools/gimpellipseselecttool.h	/^struct _GimpEllipseSelectTool$/;"	s
_GimpEllipseSelectToolClass	tools/gimpellipseselecttool.h	/^struct _GimpEllipseSelectToolClass$/;"	s
_GimpEnumAction	widgets/gimpenumaction.h	/^struct _GimpEnumAction$/;"	s
_GimpEnumActionClass	widgets/gimpenumaction.h	/^struct _GimpEnumActionClass$/;"	s
_GimpEnumActionEntry	widgets/gimpactiongroup.h	/^struct _GimpEnumActionEntry$/;"	s
_GimpEnvironTable	plug-in/gimpenvirontable.h	/^struct _GimpEnvironTable$/;"	s
_GimpEnvironTableClass	plug-in/gimpenvirontable.h	/^struct _GimpEnvironTableClass$/;"	s
_GimpEnvironValue	plug-in/gimpenvirontable.c	/^struct _GimpEnvironValue$/;"	s	file:
_GimpEraser	paint/gimperaser.h	/^struct _GimpEraser$/;"	s
_GimpEraserClass	paint/gimperaser.h	/^struct _GimpEraserClass$/;"	s
_GimpEraserOptions	paint/gimperaseroptions.h	/^struct _GimpEraserOptions$/;"	s
_GimpEraserOptionsClass	paint/gimperaseroptions.h	/^struct _GimpEraserOptionsClass$/;"	s
_GimpEraserTool	tools/gimperasertool.h	/^struct _GimpEraserTool$/;"	s
_GimpEraserToolClass	tools/gimperasertool.h	/^struct _GimpEraserToolClass$/;"	s
_GimpErrorConsole	widgets/gimperrorconsole.h	/^struct _GimpErrorConsole$/;"	s
_GimpErrorConsoleClass	widgets/gimperrorconsole.h	/^struct _GimpErrorConsoleClass$/;"	s
_GimpErrorDialog	widgets/gimperrordialog.h	/^struct _GimpErrorDialog$/;"	s
_GimpErrorDialogClass	widgets/gimperrordialog.h	/^struct _GimpErrorDialogClass$/;"	s
_GimpFadeOptions	paint/gimppaintoptions.h	/^struct _GimpFadeOptions$/;"	s
_GimpFgBgEditor	widgets/gimpfgbgeditor.h	/^struct _GimpFgBgEditor$/;"	s
_GimpFgBgEditorClass	widgets/gimpfgbgeditor.h	/^struct _GimpFgBgEditorClass$/;"	s
_GimpFgBgView	widgets/gimpfgbgview.h	/^struct _GimpFgBgView$/;"	s
_GimpFgBgViewClass	widgets/gimpfgbgview.h	/^struct _GimpFgBgViewClass$/;"	s
_GimpFileDialog	widgets/gimpfiledialog.h	/^struct _GimpFileDialog$/;"	s
_GimpFileDialogClass	widgets/gimpfiledialog.h	/^struct _GimpFileDialogClass$/;"	s
_GimpFileProcView	widgets/gimpfileprocview.h	/^struct _GimpFileProcView$/;"	s
_GimpFileProcViewClass	widgets/gimpfileprocview.h	/^struct _GimpFileProcViewClass$/;"	s
_GimpFlipOptions	tools/gimpflipoptions.h	/^struct _GimpFlipOptions$/;"	s
_GimpFlipTool	tools/gimpfliptool.h	/^struct _GimpFlipTool$/;"	s
_GimpFlipToolClass	tools/gimpfliptool.h	/^struct _GimpFlipToolClass$/;"	s
_GimpFloatingSelUndo	core/gimpfloatingselundo.h	/^struct _GimpFloatingSelUndo$/;"	s
_GimpFloatingSelUndoClass	core/gimpfloatingselundo.h	/^struct _GimpFloatingSelUndoClass$/;"	s
_GimpFont	text/gimpfont.c	/^struct _GimpFont$/;"	s	file:
_GimpFontClass	text/gimpfont.c	/^struct _GimpFontClass$/;"	s	file:
_GimpFontList	text/gimpfontlist.h	/^struct _GimpFontList$/;"	s
_GimpFontListClass	text/gimpfontlist.h	/^struct _GimpFontListClass$/;"	s
_GimpFontSelect	widgets/gimpfontselect.h	/^struct _GimpFontSelect$/;"	s
_GimpFontSelectClass	widgets/gimpfontselect.h	/^struct _GimpFontSelectClass$/;"	s
_GimpFontView	widgets/gimpfontview.h	/^struct _GimpFontView$/;"	s
_GimpFontViewClass	widgets/gimpfontview.h	/^struct _GimpFontViewClass$/;"	s
_GimpForegroundSelectOptions	tools/gimpforegroundselectoptions.h	/^struct _GimpForegroundSelectOptions$/;"	s
_GimpForegroundSelectTool	tools/gimpforegroundselecttool.h	/^struct _GimpForegroundSelectTool$/;"	s
_GimpForegroundSelectToolClass	tools/gimpforegroundselecttool.h	/^struct _GimpForegroundSelectToolClass$/;"	s
_GimpForegroundSelectToolUndo	tools/gimpforegroundselecttoolundo.h	/^struct _GimpForegroundSelectToolUndo$/;"	s
_GimpForegroundSelectToolUndoClass	tools/gimpforegroundselecttoolundo.h	/^struct _GimpForegroundSelectToolUndoClass$/;"	s
_GimpFreeSelectTool	tools/gimpfreeselecttool.h	/^struct _GimpFreeSelectTool$/;"	s
_GimpFreeSelectToolClass	tools/gimpfreeselecttool.h	/^struct _GimpFreeSelectToolClass$/;"	s
_GimpFuzzySelectTool	tools/gimpfuzzyselecttool.h	/^struct _GimpFuzzySelectTool$/;"	s
_GimpFuzzySelectToolClass	tools/gimpfuzzyselecttool.h	/^struct _GimpFuzzySelectToolClass$/;"	s
_GimpGradient	core/gimpgradient.h	/^struct _GimpGradient$/;"	s
_GimpGradientClass	core/gimpgradient.h	/^struct _GimpGradientClass$/;"	s
_GimpGradientEditor	widgets/gimpgradienteditor.h	/^struct _GimpGradientEditor$/;"	s
_GimpGradientEditorClass	widgets/gimpgradienteditor.h	/^struct _GimpGradientEditorClass$/;"	s
_GimpGradientOptions	paint/gimppaintoptions.h	/^struct _GimpGradientOptions$/;"	s
_GimpGradientSegment	core/gimpgradient.h	/^struct _GimpGradientSegment$/;"	s
_GimpGradientSelect	widgets/gimpgradientselect.h	/^struct _GimpGradientSelect$/;"	s
_GimpGradientSelectClass	widgets/gimpgradientselect.h	/^struct _GimpGradientSelectClass$/;"	s
_GimpGrid	core/gimpgrid.h	/^struct _GimpGrid$/;"	s
_GimpGridClass	core/gimpgrid.h	/^struct _GimpGridClass$/;"	s
_GimpGridEditor	widgets/gimpgrideditor.h	/^struct _GimpGridEditor$/;"	s
_GimpGridEditorClass	widgets/gimpgrideditor.h	/^struct _GimpGridEditorClass$/;"	s
_GimpGui	core/gimp-gui.h	/^struct _GimpGui$/;"	s
_GimpGuiConfig	config/gimpguiconfig.h	/^struct _GimpGuiConfig$/;"	s
_GimpGuiConfigClass	config/gimpguiconfig.h	/^struct _GimpGuiConfigClass$/;"	s
_GimpGuide	core/gimpguide.h	/^struct _GimpGuide$/;"	s
_GimpGuideClass	core/gimpguide.h	/^struct _GimpGuideClass$/;"	s
_GimpGuideUndo	core/gimpguideundo.h	/^struct _GimpGuideUndo$/;"	s
_GimpGuideUndoClass	core/gimpguideundo.h	/^struct _GimpGuideUndoClass$/;"	s
_GimpHeal	paint/gimpheal.h	/^struct _GimpHeal$/;"	s
_GimpHealClass	paint/gimpheal.h	/^struct _GimpHealClass$/;"	s
_GimpHealTool	tools/gimphealtool.h	/^struct _GimpHealTool$/;"	s
_GimpHealToolClass	tools/gimphealtool.h	/^struct _GimpHealToolClass$/;"	s
_GimpHistogram	base/gimphistogram.c	/^struct _GimpHistogram$/;"	s	file:
_GimpHistogramBox	widgets/gimphistogrambox.h	/^struct _GimpHistogramBox$/;"	s
_GimpHistogramBoxClass	widgets/gimphistogrambox.h	/^struct _GimpHistogramBoxClass$/;"	s
_GimpHistogramEditor	widgets/gimphistogrameditor.h	/^struct _GimpHistogramEditor$/;"	s
_GimpHistogramEditorClass	widgets/gimphistogrameditor.h	/^struct _GimpHistogramEditorClass$/;"	s
_GimpHistogramOptions	tools/gimphistogramoptions.h	/^struct _GimpHistogramOptions$/;"	s
_GimpHistogramView	widgets/gimphistogramview.h	/^struct _GimpHistogramView$/;"	s
_GimpHistogramViewClass	widgets/gimphistogramview.h	/^struct _GimpHistogramViewClass$/;"	s
_GimpHueSaturationTool	tools/gimphuesaturationtool.h	/^struct _GimpHueSaturationTool$/;"	s
_GimpHueSaturationToolClass	tools/gimphuesaturationtool.h	/^struct _GimpHueSaturationToolClass$/;"	s
_GimpIdleHelp	widgets/gimphelp.c	/^struct _GimpIdleHelp$/;"	s	file:
_GimpImage	core/gimpimage.h	/^struct _GimpImage$/;"	s
_GimpImageClass	core/gimpimage.h	/^struct _GimpImageClass$/;"	s
_GimpImageCommentEditor	widgets/gimpimagecommenteditor.h	/^struct _GimpImageCommentEditor$/;"	s
_GimpImageCommentEditorClass	widgets/gimpimagecommenteditor.h	/^struct _GimpImageCommentEditorClass$/;"	s
_GimpImageDock	widgets/gimpimagedock.h	/^struct _GimpImageDock$/;"	s
_GimpImageDockClass	widgets/gimpimagedock.h	/^struct _GimpImageDockClass$/;"	s
_GimpImageEditor	widgets/gimpimageeditor.h	/^struct _GimpImageEditor$/;"	s
_GimpImageEditorClass	widgets/gimpimageeditor.h	/^struct _GimpImageEditorClass$/;"	s
_GimpImageFlushAccumulator	core/gimpimage.h	/^struct _GimpImageFlushAccumulator$/;"	s
_GimpImageMap	core/gimpimagemap.c	/^struct _GimpImageMap$/;"	s	file:
_GimpImageMapClass	core/gimpimagemap.h	/^struct _GimpImageMapClass$/;"	s
_GimpImageMapOptions	tools/gimpimagemapoptions.h	/^struct _GimpImageMapOptions$/;"	s
_GimpImageMapTool	tools/gimpimagemaptool.h	/^struct _GimpImageMapTool$/;"	s
_GimpImageMapToolClass	tools/gimpimagemaptool.h	/^struct _GimpImageMapToolClass$/;"	s
_GimpImageParasiteView	widgets/gimpimageparasiteview.h	/^struct _GimpImageParasiteView$/;"	s
_GimpImageParasiteViewClass	widgets/gimpimageparasiteview.h	/^struct _GimpImageParasiteViewClass$/;"	s
_GimpImageProfileView	widgets/gimpimageprofileview.h	/^struct _GimpImageProfileView$/;"	s
_GimpImageProfileViewClass	widgets/gimpimageprofileview.h	/^struct _GimpImageProfileViewClass$/;"	s
_GimpImagePropView	widgets/gimpimagepropview.h	/^struct _GimpImagePropView$/;"	s
_GimpImagePropViewClass	widgets/gimpimagepropview.h	/^struct _GimpImagePropViewClass$/;"	s
_GimpImageUndo	core/gimpimageundo.h	/^struct _GimpImageUndo$/;"	s
_GimpImageUndoClass	core/gimpimageundo.h	/^struct _GimpImageUndoClass$/;"	s
_GimpImageView	widgets/gimpimageview.h	/^struct _GimpImageView$/;"	s
_GimpImageViewClass	widgets/gimpimageview.h	/^struct _GimpImageViewClass$/;"	s
_GimpImagefile	core/gimpimagefile.h	/^struct _GimpImagefile$/;"	s
_GimpImagefileClass	core/gimpimagefile.h	/^struct _GimpImagefileClass$/;"	s
_GimpInk	paint/gimpink.h	/^struct _GimpInk$/;"	s
_GimpInkClass	paint/gimpink.h	/^struct _GimpInkClass$/;"	s
_GimpInkOptions	paint/gimpinkoptions.h	/^struct _GimpInkOptions$/;"	s
_GimpInkOptionsClass	paint/gimpinkoptions.h	/^struct _GimpInkOptionsClass$/;"	s
_GimpInkTool	tools/gimpinktool.h	/^struct _GimpInkTool$/;"	s
_GimpInkToolClass	tools/gimpinktool.h	/^struct _GimpInkToolClass$/;"	s
_GimpInkUndo	paint/gimpinkundo.h	/^struct _GimpInkUndo$/;"	s
_GimpInkUndoClass	paint/gimpinkundo.h	/^struct _GimpInkUndoClass$/;"	s
_GimpInterpreterDB	plug-in/gimpinterpreterdb.h	/^struct _GimpInterpreterDB$/;"	s
_GimpInterpreterDBClass	plug-in/gimpinterpreterdb.h	/^struct _GimpInterpreterDBClass$/;"	s
_GimpInterpreterMagic	plug-in/gimpinterpreterdb.c	/^struct _GimpInterpreterMagic$/;"	s	file:
_GimpIscissorsTool	tools/gimpiscissorstool.h	/^struct _GimpIscissorsTool$/;"	s
_GimpIscissorsToolClass	tools/gimpiscissorstool.h	/^struct _GimpIscissorsToolClass$/;"	s
_GimpItem	core/gimpitem.h	/^struct _GimpItem$/;"	s
_GimpItemClass	core/gimpitem.h	/^struct _GimpItemClass$/;"	s
_GimpItemPropUndo	core/gimpitempropundo.h	/^struct _GimpItemPropUndo$/;"	s
_GimpItemPropUndoClass	core/gimpitempropundo.h	/^struct _GimpItemPropUndoClass$/;"	s
_GimpItemTreeView	widgets/gimpitemtreeview.h	/^struct _GimpItemTreeView$/;"	s
_GimpItemTreeViewClass	widgets/gimpitemtreeview.h	/^struct _GimpItemTreeViewClass$/;"	s
_GimpItemUndo	core/gimpitemundo.h	/^struct _GimpItemUndo$/;"	s
_GimpItemUndoClass	core/gimpitemundo.h	/^struct _GimpItemUndoClass$/;"	s
_GimpJitterOptions	paint/gimppaintoptions.h	/^struct _GimpJitterOptions$/;"	s
_GimpLayer	core/gimplayer.h	/^struct _GimpLayer$/;"	s
_GimpLayerClass	core/gimplayer.h	/^struct _GimpLayerClass$/;"	s
_GimpLayerMask	core/gimplayermask.h	/^struct _GimpLayerMask$/;"	s
_GimpLayerMaskClass	core/gimplayermask.h	/^struct _GimpLayerMaskClass$/;"	s
_GimpLayerMaskPropUndo	core/gimplayermaskpropundo.h	/^struct _GimpLayerMaskPropUndo$/;"	s
_GimpLayerMaskPropUndoClass	core/gimplayermaskpropundo.h	/^struct _GimpLayerMaskPropUndoClass$/;"	s
_GimpLayerMaskUndo	core/gimplayermaskundo.h	/^struct _GimpLayerMaskUndo$/;"	s
_GimpLayerMaskUndoClass	core/gimplayermaskundo.h	/^struct _GimpLayerMaskUndoClass$/;"	s
_GimpLayerPropUndo	core/gimplayerpropundo.h	/^struct _GimpLayerPropUndo$/;"	s
_GimpLayerPropUndoClass	core/gimplayerpropundo.h	/^struct _GimpLayerPropUndoClass$/;"	s
_GimpLayerTreeView	widgets/gimplayertreeview.h	/^struct _GimpLayerTreeView$/;"	s
_GimpLayerTreeViewClass	widgets/gimplayertreeview.h	/^struct _GimpLayerTreeViewClass$/;"	s
_GimpLayerUndo	core/gimplayerundo.h	/^struct _GimpLayerUndo$/;"	s
_GimpLayerUndoClass	core/gimplayerundo.h	/^struct _GimpLayerUndoClass$/;"	s
_GimpLevelsTool	tools/gimplevelstool.h	/^struct _GimpLevelsTool$/;"	s
_GimpLevelsToolClass	tools/gimplevelstool.h	/^struct _GimpLevelsToolClass$/;"	s
_GimpList	core/gimplist.h	/^struct _GimpList$/;"	s
_GimpListClass	core/gimplist.h	/^struct _GimpListClass$/;"	s
_GimpLut	base/gimplut.h	/^struct _GimpLut$/;"	s
_GimpMagnifyOptions	tools/gimpmagnifyoptions.h	/^struct _GimpMagnifyOptions$/;"	s
_GimpMagnifyTool	tools/gimpmagnifytool.h	/^struct _GimpMagnifyTool$/;"	s
_GimpMagnifyToolClass	tools/gimpmagnifytool.h	/^struct _GimpMagnifyToolClass$/;"	s
_GimpMaskUndo	core/gimpmaskundo.h	/^struct _GimpMaskUndo$/;"	s
_GimpMaskUndoClass	core/gimpmaskundo.h	/^struct _GimpMaskUndoClass$/;"	s
_GimpMeasureOptions	tools/gimpmeasureoptions.h	/^struct _GimpMeasureOptions$/;"	s
_GimpMeasureTool	tools/gimpmeasuretool.h	/^struct _GimpMeasureTool$/;"	s
_GimpMeasureToolClass	tools/gimpmeasuretool.h	/^struct _GimpMeasureToolClass$/;"	s
_GimpMenuDock	widgets/gimpmenudock.h	/^struct _GimpMenuDock$/;"	s
_GimpMenuDockClass	widgets/gimpmenudock.h	/^struct _GimpMenuDockClass$/;"	s
_GimpMenuFactory	widgets/gimpmenufactory.h	/^struct _GimpMenuFactory$/;"	s
_GimpMenuFactoryClass	widgets/gimpmenufactory.h	/^struct _GimpMenuFactoryClass$/;"	s
_GimpMenuFactoryEntry	widgets/gimpmenufactory.h	/^struct _GimpMenuFactoryEntry$/;"	s
_GimpMessageBox	widgets/gimpmessagebox.h	/^struct _GimpMessageBox$/;"	s
_GimpMessageBoxClass	widgets/gimpmessagebox.h	/^struct _GimpMessageBoxClass$/;"	s
_GimpMessageDialog	widgets/gimpmessagedialog.h	/^struct _GimpMessageDialog$/;"	s
_GimpMessageDialogClass	widgets/gimpmessagedialog.h	/^struct _GimpMessageDialogClass$/;"	s
_GimpMoveOptions	tools/gimpmoveoptions.h	/^struct _GimpMoveOptions$/;"	s
_GimpMoveTool	tools/gimpmovetool.h	/^struct _GimpMoveTool$/;"	s
_GimpMoveToolClass	tools/gimpmovetool.h	/^struct _GimpMoveToolClass$/;"	s
_GimpNavigationEditor	display/gimpnavigationeditor.h	/^struct _GimpNavigationEditor$/;"	s
_GimpNavigationEditorClass	display/gimpnavigationeditor.h	/^struct _GimpNavigationEditorClass$/;"	s
_GimpNavigationView	widgets/gimpnavigationview.h	/^struct _GimpNavigationView$/;"	s
_GimpNavigationViewClass	widgets/gimpnavigationview.h	/^struct _GimpNavigationViewClass$/;"	s
_GimpObject	core/gimpobject.h	/^struct _GimpObject$/;"	s
_GimpObjectClass	core/gimpobject.h	/^struct _GimpObjectClass$/;"	s
_GimpPDB	pdb/gimppdb.h	/^struct _GimpPDB$/;"	s
_GimpPDBClass	pdb/gimppdb.h	/^struct _GimpPDBClass$/;"	s
_GimpPaintCore	paint/gimppaintcore.h	/^struct _GimpPaintCore$/;"	s
_GimpPaintCoreClass	paint/gimppaintcore.h	/^struct _GimpPaintCoreClass$/;"	s
_GimpPaintCoreUndo	paint/gimppaintcoreundo.h	/^struct _GimpPaintCoreUndo$/;"	s
_GimpPaintCoreUndoClass	paint/gimppaintcoreundo.h	/^struct _GimpPaintCoreUndoClass$/;"	s
_GimpPaintInfo	core/gimppaintinfo.h	/^struct _GimpPaintInfo$/;"	s
_GimpPaintInfoClass	core/gimppaintinfo.h	/^struct _GimpPaintInfoClass$/;"	s
_GimpPaintOptions	paint/gimppaintoptions.h	/^struct _GimpPaintOptions$/;"	s
_GimpPaintOptionsClass	paint/gimppaintoptions.h	/^struct _GimpPaintOptionsClass$/;"	s
_GimpPaintTool	tools/gimppainttool.h	/^struct _GimpPaintTool$/;"	s
_GimpPaintToolClass	tools/gimppainttool.h	/^struct _GimpPaintToolClass$/;"	s
_GimpPaintbrush	paint/gimppaintbrush.h	/^struct _GimpPaintbrush$/;"	s
_GimpPaintbrushClass	paint/gimppaintbrush.h	/^struct _GimpPaintbrushClass$/;"	s
_GimpPaintbrushTool	tools/gimppaintbrushtool.h	/^struct _GimpPaintbrushTool$/;"	s
_GimpPaintbrushToolClass	tools/gimppaintbrushtool.h	/^struct _GimpPaintbrushToolClass$/;"	s
_GimpPalette	core/gimppalette.h	/^struct _GimpPalette$/;"	s
_GimpPaletteClass	core/gimppalette.h	/^struct _GimpPaletteClass$/;"	s
_GimpPaletteEditor	widgets/gimppaletteeditor.h	/^struct _GimpPaletteEditor$/;"	s
_GimpPaletteEditorClass	widgets/gimppaletteeditor.h	/^struct _GimpPaletteEditorClass$/;"	s
_GimpPaletteEntry	core/gimppalette.h	/^struct _GimpPaletteEntry$/;"	s
_GimpPaletteSelect	widgets/gimppaletteselect.h	/^struct _GimpPaletteSelect$/;"	s
_GimpPaletteSelectClass	widgets/gimppaletteselect.h	/^struct _GimpPaletteSelectClass$/;"	s
_GimpPaletteView	widgets/gimppaletteview.h	/^struct _GimpPaletteView$/;"	s
_GimpPaletteViewClass	widgets/gimppaletteview.h	/^struct _GimpPaletteViewClass$/;"	s
_GimpParamSpecArray	core/gimpparamspecs.h	/^struct _GimpParamSpecArray$/;"	s
_GimpParamSpecChannelID	core/gimpparamspecs.h	/^struct _GimpParamSpecChannelID$/;"	s
_GimpParamSpecDisplayID	core/gimpparamspecs.h	/^struct _GimpParamSpecDisplayID$/;"	s
_GimpParamSpecDrawableID	core/gimpparamspecs.h	/^struct _GimpParamSpecDrawableID$/;"	s
_GimpParamSpecEnum	core/gimpparamspecs.h	/^struct _GimpParamSpecEnum$/;"	s
_GimpParamSpecFloatArray	core/gimpparamspecs.h	/^struct _GimpParamSpecFloatArray$/;"	s
_GimpParamSpecImageID	core/gimpparamspecs.h	/^struct _GimpParamSpecImageID$/;"	s
_GimpParamSpecInt16	core/gimpparamspecs.h	/^struct _GimpParamSpecInt16$/;"	s
_GimpParamSpecInt16Array	core/gimpparamspecs.h	/^struct _GimpParamSpecInt16Array$/;"	s
_GimpParamSpecInt32	core/gimpparamspecs.h	/^struct _GimpParamSpecInt32$/;"	s
_GimpParamSpecInt32Array	core/gimpparamspecs.h	/^struct _GimpParamSpecInt32Array$/;"	s
_GimpParamSpecInt8	core/gimpparamspecs.h	/^struct _GimpParamSpecInt8$/;"	s
_GimpParamSpecInt8Array	core/gimpparamspecs.h	/^struct _GimpParamSpecInt8Array$/;"	s
_GimpParamSpecItemID	core/gimpparamspecs.h	/^struct _GimpParamSpecItemID$/;"	s
_GimpParamSpecLayerID	core/gimpparamspecs.h	/^struct _GimpParamSpecLayerID$/;"	s
_GimpParamSpecLayerMaskID	core/gimpparamspecs.h	/^struct _GimpParamSpecLayerMaskID$/;"	s
_GimpParamSpecSelectionID	core/gimpparamspecs.h	/^struct _GimpParamSpecSelectionID$/;"	s
_GimpParamSpecString	core/gimpparamspecs.h	/^struct _GimpParamSpecString$/;"	s
_GimpParamSpecStringArray	core/gimpparamspecs.h	/^struct _GimpParamSpecStringArray$/;"	s
_GimpParamSpecVectorsID	core/gimpparamspecs.h	/^struct _GimpParamSpecVectorsID$/;"	s
_GimpParasiteList	core/gimpparasitelist.h	/^struct _GimpParasiteList$/;"	s
_GimpParasiteListClass	core/gimpparasitelist.h	/^struct _GimpParasiteListClass$/;"	s
_GimpPattern	core/gimppattern.h	/^struct _GimpPattern$/;"	s
_GimpPatternClass	core/gimppattern.h	/^struct _GimpPatternClass$/;"	s
_GimpPatternClipboard	core/gimppatternclipboard.h	/^struct _GimpPatternClipboard$/;"	s
_GimpPatternClipboardClass	core/gimppatternclipboard.h	/^struct _GimpPatternClipboardClass$/;"	s
_GimpPatternFactoryView	widgets/gimppatternfactoryview.h	/^struct _GimpPatternFactoryView$/;"	s
_GimpPatternFactoryViewClass	widgets/gimppatternfactoryview.h	/^struct _GimpPatternFactoryViewClass$/;"	s
_GimpPatternSelect	widgets/gimppatternselect.h	/^struct _GimpPatternSelect$/;"	s
_GimpPatternSelectClass	widgets/gimppatternselect.h	/^struct _GimpPatternSelectClass$/;"	s
_GimpPdbDialog	widgets/gimppdbdialog.h	/^struct _GimpPdbDialog$/;"	s
_GimpPdbDialogClass	widgets/gimppdbdialog.h	/^struct _GimpPdbDialogClass$/;"	s
_GimpPdbProgress	core/gimppdbprogress.h	/^struct _GimpPdbProgress$/;"	s
_GimpPdbProgressClass	core/gimppdbprogress.h	/^struct _GimpPdbProgressClass$/;"	s
_GimpPencil	paint/gimppencil.h	/^struct _GimpPencil$/;"	s
_GimpPencilClass	paint/gimppencil.h	/^struct _GimpPencilClass$/;"	s
_GimpPencilOptions	paint/gimppenciloptions.h	/^struct _GimpPencilOptions$/;"	s
_GimpPencilOptionsClass	paint/gimppenciloptions.h	/^struct _GimpPencilOptionsClass$/;"	s
_GimpPencilTool	tools/gimppenciltool.h	/^struct _GimpPencilTool$/;"	s
_GimpPencilToolClass	tools/gimppenciltool.h	/^struct _GimpPencilToolClass$/;"	s
_GimpPerspectiveClone	paint/gimpperspectiveclone.h	/^struct _GimpPerspectiveClone$/;"	s
_GimpPerspectiveCloneClass	paint/gimpperspectiveclone.h	/^struct _GimpPerspectiveCloneClass$/;"	s
_GimpPerspectiveCloneOptions	paint/gimpperspectivecloneoptions.h	/^struct _GimpPerspectiveCloneOptions$/;"	s
_GimpPerspectiveCloneOptionsClass	paint/gimpperspectivecloneoptions.h	/^struct _GimpPerspectiveCloneOptionsClass$/;"	s
_GimpPerspectiveCloneTool	tools/gimpperspectiveclonetool.h	/^struct _GimpPerspectiveCloneTool$/;"	s
_GimpPerspectiveCloneToolClass	tools/gimpperspectiveclonetool.h	/^struct _GimpPerspectiveCloneToolClass$/;"	s
_GimpPerspectiveTool	tools/gimpperspectivetool.h	/^struct _GimpPerspectiveTool$/;"	s
_GimpPerspectiveToolClass	tools/gimpperspectivetool.h	/^struct _GimpPerspectiveToolClass$/;"	s
_GimpPickableInterface	core/gimppickable.h	/^struct _GimpPickableInterface$/;"	s
_GimpPlugIn	plug-in/gimpplugin.h	/^struct _GimpPlugIn$/;"	s
_GimpPlugInAction	widgets/gimppluginaction.h	/^struct _GimpPlugInAction$/;"	s
_GimpPlugInActionClass	widgets/gimppluginaction.h	/^struct _GimpPlugInActionClass$/;"	s
_GimpPlugInActionEntry	widgets/gimpactiongroup.h	/^struct _GimpPlugInActionEntry$/;"	s
_GimpPlugInClass	plug-in/gimpplugin.h	/^struct _GimpPlugInClass$/;"	s
_GimpPlugInCleanupImage	plug-in/gimpplugin-cleanup.c	/^struct _GimpPlugInCleanupImage$/;"	s	file:
_GimpPlugInData	plug-in/gimppluginmanager-data.c	/^struct _GimpPlugInData$/;"	s	file:
_GimpPlugInDebug	plug-in/gimpplugindebug.c	/^struct _GimpPlugInDebug$/;"	s	file:
_GimpPlugInDef	plug-in/gimpplugindef.h	/^struct _GimpPlugInDef$/;"	s
_GimpPlugInDefClass	plug-in/gimpplugindef.h	/^struct _GimpPlugInDefClass$/;"	s
_GimpPlugInHelpDomain	plug-in/gimppluginmanager-help-domain.c	/^struct _GimpPlugInHelpDomain$/;"	s	file:
_GimpPlugInLocaleDomain	plug-in/gimppluginmanager-locale-domain.c	/^struct _GimpPlugInLocaleDomain$/;"	s	file:
_GimpPlugInManager	plug-in/gimppluginmanager.h	/^struct _GimpPlugInManager$/;"	s
_GimpPlugInManagerClass	plug-in/gimppluginmanager.h	/^struct _GimpPlugInManagerClass$/;"	s
_GimpPlugInMenuBranch	plug-in/gimppluginmanager-menu-branch.h	/^struct _GimpPlugInMenuBranch$/;"	s
_GimpPlugInProcFrame	plug-in/gimppluginprocframe.h	/^struct _GimpPlugInProcFrame$/;"	s
_GimpPlugInProcedure	plug-in/gimppluginprocedure.h	/^struct _GimpPlugInProcedure$/;"	s
_GimpPlugInProcedureClass	plug-in/gimppluginprocedure.h	/^struct _GimpPlugInProcedureClass$/;"	s
_GimpPlugInShm	plug-in/gimppluginshm.c	/^struct _GimpPlugInShm$/;"	s	file:
_GimpPluginConfig	config/gimppluginconfig.h	/^struct _GimpPluginConfig$/;"	s
_GimpPluginConfigClass	config/gimppluginconfig.h	/^struct _GimpPluginConfigClass$/;"	s
_GimpPosterizeTool	tools/gimpposterizetool.h	/^struct _GimpPosterizeTool$/;"	s
_GimpPosterizeToolClass	tools/gimpposterizetool.h	/^struct _GimpPosterizeToolClass$/;"	s
_GimpPressureOptions	paint/gimppaintoptions.h	/^struct _GimpPressureOptions$/;"	s
_GimpProcedure	pdb/gimpprocedure.h	/^struct _GimpProcedure$/;"	s
_GimpProcedureClass	pdb/gimpprocedure.h	/^struct _GimpProcedureClass$/;"	s
_GimpProfileChooserDialog	widgets/gimpprofilechooserdialog.h	/^struct _GimpProfileChooserDialog$/;"	s
_GimpProfileChooserDialogClass	widgets/gimpprofilechooserdialog.h	/^struct _GimpProfileChooserDialogClass$/;"	s
_GimpProgressBox	widgets/gimpprogressbox.h	/^struct _GimpProgressBox$/;"	s
_GimpProgressBoxClass	widgets/gimpprogressbox.h	/^struct _GimpProgressBoxClass$/;"	s
_GimpProgressDialog	widgets/gimpprogressdialog.h	/^struct _GimpProgressDialog$/;"	s
_GimpProgressDialogClass	widgets/gimpprogressdialog.h	/^struct _GimpProgressDialogClass$/;"	s
_GimpProgressInterface	core/gimpprogress.h	/^struct _GimpProgressInterface$/;"	s
_GimpProjection	core/gimpprojection.h	/^struct _GimpProjection$/;"	s
_GimpProjectionClass	core/gimpprojection.h	/^struct _GimpProjectionClass$/;"	s
_GimpProjectionIdleRender	core/gimpprojection.h	/^struct _GimpProjectionIdleRender$/;"	s
_GimpRadioActionEntry	widgets/gimpactiongroup.h	/^struct _GimpRadioActionEntry$/;"	s
_GimpRc	config/gimprc.h	/^struct _GimpRc$/;"	s
_GimpRcClass	config/gimprc.h	/^struct _GimpRcClass$/;"	s
_GimpRecentItem	file/gimprecentitem.c	/^struct _GimpRecentItem$/;"	s	file:
_GimpRectSelectOptions	tools/gimprectangleselectoptions.h	/^struct _GimpRectSelectOptions$/;"	s
_GimpRectSelectTool	tools/gimprectangleselecttool.h	/^struct _GimpRectSelectTool$/;"	s
_GimpRectSelectToolClass	tools/gimprectangleselecttool.h	/^struct _GimpRectSelectToolClass$/;"	s
_GimpRectangleOptionsInterface	tools/gimprectangleoptions.h	/^struct _GimpRectangleOptionsInterface$/;"	s
_GimpRectangleOptionsPrivate	tools/gimprectangleoptions.h	/^struct _GimpRectangleOptionsPrivate$/;"	s
_GimpRectangleToolInterface	tools/gimprectangletool.h	/^struct _GimpRectangleToolInterface$/;"	s
_GimpRectangleToolPrivate	tools/gimprectangletool.c	/^struct _GimpRectangleToolPrivate$/;"	s	file:
_GimpRegionSelectTool	tools/gimpregionselecttool.h	/^struct _GimpRegionSelectTool$/;"	s
_GimpRegionSelectToolClass	tools/gimpregionselecttool.h	/^struct _GimpRegionSelectToolClass$/;"	s
_GimpRotateTool	tools/gimprotatetool.h	/^struct _GimpRotateTool$/;"	s
_GimpRotateToolClass	tools/gimprotatetool.h	/^struct _GimpRotateToolClass$/;"	s
_GimpSamplePoint	core/gimpsamplepoint.h	/^struct _GimpSamplePoint$/;"	s
_GimpSamplePointEditor	widgets/gimpsamplepointeditor.h	/^struct _GimpSamplePointEditor$/;"	s
_GimpSamplePointEditorClass	widgets/gimpsamplepointeditor.h	/^struct _GimpSamplePointEditorClass$/;"	s
_GimpSamplePointUndo	core/gimpsamplepointundo.h	/^struct _GimpSamplePointUndo$/;"	s
_GimpSamplePointUndoClass	core/gimpsamplepointundo.h	/^struct _GimpSamplePointUndoClass$/;"	s
_GimpScaleComboBox	display/gimpscalecombobox.h	/^struct _GimpScaleComboBox$/;"	s
_GimpScaleComboBoxClass	display/gimpscalecombobox.h	/^struct _GimpScaleComboBoxClass$/;"	s
_GimpScaleTool	tools/gimpscaletool.h	/^struct _GimpScaleTool$/;"	s
_GimpScaleToolClass	tools/gimpscaletool.h	/^struct _GimpScaleToolClass$/;"	s
_GimpScanConvert	core/gimpscanconvert.c	/^struct _GimpScanConvert$/;"	s	file:
_GimpSelection	core/gimpselection.h	/^struct _GimpSelection$/;"	s
_GimpSelectionClass	core/gimpselection.h	/^struct _GimpSelectionClass$/;"	s
_GimpSelectionEditor	widgets/gimpselectioneditor.h	/^struct _GimpSelectionEditor$/;"	s
_GimpSelectionEditorClass	widgets/gimpselectioneditor.h	/^struct _GimpSelectionEditorClass$/;"	s
_GimpSelectionOptions	tools/gimpselectionoptions.h	/^struct _GimpSelectionOptions$/;"	s
_GimpSelectionTool	tools/gimpselectiontool.h	/^struct _GimpSelectionTool$/;"	s
_GimpSelectionToolClass	tools/gimpselectiontool.h	/^struct _GimpSelectionToolClass$/;"	s
_GimpSessionInfo	widgets/gimpsessioninfo.h	/^struct _GimpSessionInfo$/;"	s
_GimpSessionInfoAux	widgets/gimpsessioninfo-aux.h	/^struct _GimpSessionInfoAux$/;"	s
_GimpSessionInfoBook	widgets/gimpsessioninfo-book.h	/^struct _GimpSessionInfoBook$/;"	s
_GimpSessionInfoDockable	widgets/gimpsessioninfo-dockable.h	/^struct _GimpSessionInfoDockable$/;"	s
_GimpShearTool	tools/gimpsheartool.h	/^struct _GimpShearTool$/;"	s
_GimpShearToolClass	tools/gimpsheartool.h	/^struct _GimpShearToolClass$/;"	s
_GimpSizeBox	widgets/gimpsizebox.h	/^struct _GimpSizeBox$/;"	s
_GimpSizeBoxClass	widgets/gimpsizebox.h	/^struct _GimpSizeBoxClass$/;"	s
_GimpSizeBoxPrivate	widgets/gimpsizebox.c	/^struct _GimpSizeBoxPrivate$/;"	s	file:
_GimpSmudge	paint/gimpsmudge.h	/^struct _GimpSmudge$/;"	s
_GimpSmudgeClass	paint/gimpsmudge.h	/^struct _GimpSmudgeClass$/;"	s
_GimpSmudgeOptions	paint/gimpsmudgeoptions.h	/^struct _GimpSmudgeOptions$/;"	s
_GimpSmudgeOptionsClass	paint/gimpsmudgeoptions.h	/^struct _GimpSmudgeOptionsClass$/;"	s
_GimpSmudgeTool	tools/gimpsmudgetool.h	/^struct _GimpSmudgeTool$/;"	s
_GimpSmudgeToolClass	tools/gimpsmudgetool.h	/^struct _GimpSmudgeToolClass$/;"	s
_GimpSourceCore	paint/gimpsourcecore.h	/^struct _GimpSourceCore$/;"	s
_GimpSourceCoreClass	paint/gimpsourcecore.h	/^struct _GimpSourceCoreClass$/;"	s
_GimpSourceOptions	paint/gimpsourceoptions.h	/^struct _GimpSourceOptions$/;"	s
_GimpSourceOptionsClass	paint/gimpsourceoptions.h	/^struct _GimpSourceOptionsClass$/;"	s
_GimpSourceTool	tools/gimpsourcetool.h	/^struct _GimpSourceTool$/;"	s
_GimpSourceToolClass	tools/gimpsourcetool.h	/^struct _GimpSourceToolClass$/;"	s
_GimpStatusbar	display/gimpstatusbar.h	/^struct _GimpStatusbar$/;"	s
_GimpStatusbarClass	display/gimpstatusbar.h	/^struct _GimpStatusbarClass$/;"	s
_GimpStatusbarMsg	display/gimpstatusbar.c	/^struct _GimpStatusbarMsg$/;"	s	file:
_GimpStringAction	widgets/gimpstringaction.h	/^struct _GimpStringAction$/;"	s
_GimpStringActionClass	widgets/gimpstringaction.h	/^struct _GimpStringActionClass$/;"	s
_GimpStringActionEntry	widgets/gimpactiongroup.h	/^struct _GimpStringActionEntry$/;"	s
_GimpStroke	vectors/gimpstroke.h	/^struct _GimpStroke$/;"	s
_GimpStrokeClass	vectors/gimpstroke.h	/^struct _GimpStrokeClass$/;"	s
_GimpStrokeDesc	core/gimpstrokedesc.h	/^struct _GimpStrokeDesc$/;"	s
_GimpStrokeDescClass	core/gimpstrokedesc.h	/^struct _GimpStrokeDescClass$/;"	s
_GimpStrokeEditor	widgets/gimpstrokeeditor.h	/^struct _GimpStrokeEditor$/;"	s
_GimpStrokeEditorClass	widgets/gimpstrokeeditor.h	/^struct _GimpStrokeEditorClass$/;"	s
_GimpStrokeOptions	core/gimpstrokeoptions.h	/^struct _GimpStrokeOptions$/;"	s
_GimpStrokeOptionsClass	core/gimpstrokeoptions.h	/^struct _GimpStrokeOptionsClass$/;"	s
_GimpSubProgress	core/gimpsubprogress.h	/^struct _GimpSubProgress$/;"	s
_GimpSubProgressClass	core/gimpsubprogress.h	/^struct _GimpSubProgressClass$/;"	s
_GimpTemplate	core/gimptemplate.h	/^struct _GimpTemplate$/;"	s
_GimpTemplateClass	core/gimptemplate.h	/^struct _GimpTemplateClass$/;"	s
_GimpTemplateEditor	widgets/gimptemplateeditor.h	/^struct _GimpTemplateEditor$/;"	s
_GimpTemplateEditorClass	widgets/gimptemplateeditor.h	/^struct _GimpTemplateEditorClass$/;"	s
_GimpTemplateView	widgets/gimptemplateview.h	/^struct _GimpTemplateView$/;"	s
_GimpTemplateViewClass	widgets/gimptemplateview.h	/^struct _GimpTemplateViewClass$/;"	s
_GimpTemporaryProcedure	plug-in/gimptemporaryprocedure.h	/^struct _GimpTemporaryProcedure$/;"	s
_GimpTemporaryProcedureClass	plug-in/gimptemporaryprocedure.h	/^struct _GimpTemporaryProcedureClass$/;"	s
_GimpText	text/gimptext.h	/^struct _GimpText$/;"	s
_GimpTextClass	text/gimptext.h	/^struct _GimpTextClass$/;"	s
_GimpTextEditor	widgets/gimptexteditor.h	/^struct _GimpTextEditor$/;"	s
_GimpTextEditorClass	widgets/gimptexteditor.h	/^struct _GimpTextEditorClass$/;"	s
_GimpTextLayer	text/gimptextlayer.h	/^struct _GimpTextLayer$/;"	s
_GimpTextLayerClass	text/gimptextlayer.h	/^struct _GimpTextLayerClass$/;"	s
_GimpTextLayout	text/gimptext-private.h	/^struct _GimpTextLayout$/;"	s
_GimpTextLayoutClass	text/gimptext-private.h	/^struct _GimpTextLayoutClass$/;"	s
_GimpTextOptions	tools/gimptextoptions.h	/^struct _GimpTextOptions$/;"	s
_GimpTextTool	tools/gimptexttool.h	/^struct _GimpTextTool$/;"	s
_GimpTextToolClass	tools/gimptexttool.h	/^struct _GimpTextToolClass$/;"	s
_GimpTextUndo	text/gimptextundo.h	/^struct _GimpTextUndo$/;"	s
_GimpTextUndoClass	text/gimptextundo.h	/^struct _GimpTextUndoClass$/;"	s
_GimpThresholdTool	tools/gimpthresholdtool.h	/^struct _GimpThresholdTool$/;"	s
_GimpThresholdToolClass	tools/gimpthresholdtool.h	/^struct _GimpThresholdToolClass$/;"	s
_GimpThumbBox	widgets/gimpthumbbox.h	/^struct _GimpThumbBox$/;"	s
_GimpThumbBoxClass	widgets/gimpthumbbox.h	/^struct _GimpThumbBoxClass$/;"	s
_GimpTip	dialogs/tips-parser.h	/^struct _GimpTip$/;"	s
_GimpToggleActionEntry	widgets/gimpactiongroup.h	/^struct _GimpToggleActionEntry$/;"	s
_GimpTool	tools/gimptool.h	/^struct _GimpTool$/;"	s
_GimpToolClass	tools/gimptool.h	/^struct _GimpToolClass$/;"	s
_GimpToolControl	tools/gimptoolcontrol.h	/^struct _GimpToolControl$/;"	s
_GimpToolControlClass	tools/gimptoolcontrol.h	/^struct _GimpToolControlClass$/;"	s
_GimpToolDialog	widgets/gimptooldialog.h	/^struct _GimpToolDialog$/;"	s
_GimpToolInfo	core/gimptoolinfo.h	/^struct _GimpToolInfo$/;"	s
_GimpToolInfoClass	core/gimptoolinfo.h	/^struct _GimpToolInfoClass$/;"	s
_GimpToolManager	tools/tool_manager.c	/^struct _GimpToolManager$/;"	s	file:
_GimpToolOptions	core/gimptooloptions.h	/^struct _GimpToolOptions$/;"	s
_GimpToolOptionsClass	core/gimptooloptions.h	/^struct _GimpToolOptionsClass$/;"	s
_GimpToolOptionsEditor	widgets/gimptooloptionseditor.h	/^struct _GimpToolOptionsEditor$/;"	s
_GimpToolOptionsEditorClass	widgets/gimptooloptionseditor.h	/^struct _GimpToolOptionsEditorClass$/;"	s
_GimpToolPresets	core/gimptoolpresets.h	/^struct _GimpToolPresets$/;"	s
_GimpToolPresetsClass	core/gimptoolpresets.h	/^struct _GimpToolPresetsClass$/;"	s
_GimpToolView	widgets/gimptoolview.h	/^struct _GimpToolView$/;"	s
_GimpToolViewClass	widgets/gimptoolview.h	/^struct _GimpToolViewClass$/;"	s
_GimpToolbox	widgets/gimptoolbox.h	/^struct _GimpToolbox$/;"	s
_GimpToolboxClass	widgets/gimptoolbox.h	/^struct _GimpToolboxClass$/;"	s
_GimpTransformOptions	tools/gimptransformoptions.h	/^struct _GimpTransformOptions$/;"	s
_GimpTransformTool	tools/gimptransformtool.h	/^struct _GimpTransformTool$/;"	s
_GimpTransformToolClass	tools/gimptransformtool.h	/^struct _GimpTransformToolClass$/;"	s
_GimpTransformToolUndo	tools/gimptransformtoolundo.h	/^struct _GimpTransformToolUndo$/;"	s
_GimpTransformToolUndoClass	tools/gimptransformtoolundo.h	/^struct _GimpTransformToolUndoClass$/;"	s
_GimpUIManager	widgets/gimpuimanager.h	/^struct _GimpUIManager$/;"	s
_GimpUIManagerClass	widgets/gimpuimanager.h	/^struct _GimpUIManagerClass$/;"	s
_GimpUIManagerUIEntry	widgets/gimpuimanager.h	/^struct _GimpUIManagerUIEntry$/;"	s
_GimpUndo	core/gimpundo.h	/^struct _GimpUndo$/;"	s
_GimpUndoAccumulator	core/gimpundo.h	/^struct _GimpUndoAccumulator$/;"	s
_GimpUndoClass	core/gimpundo.h	/^struct _GimpUndoClass$/;"	s
_GimpUndoEditor	widgets/gimpundoeditor.h	/^struct _GimpUndoEditor$/;"	s
_GimpUndoEditorClass	widgets/gimpundoeditor.h	/^struct _GimpUndoEditorClass$/;"	s
_GimpUndoIdle	core/gimpundo.c	/^struct _GimpUndoIdle$/;"	s	file:
_GimpUndoStack	core/gimpundostack.h	/^struct _GimpUndoStack$/;"	s
_GimpUndoStackClass	core/gimpundostack.h	/^struct _GimpUndoStackClass$/;"	s
_GimpUnitComboBox	widgets/gimpunitcombobox.h	/^struct _GimpUnitComboBox$/;"	s
_GimpUnitComboBoxClass	widgets/gimpunitcombobox.h	/^struct _GimpUnitComboBoxClass$/;"	s
_GimpUnitStore	widgets/gimpunitstore.h	/^struct _GimpUnitStore$/;"	s
_GimpUnitStoreClass	widgets/gimpunitstore.h	/^struct _GimpUnitStoreClass$/;"	s
_GimpUserInstall	core/gimp-user-install.c	/^struct _GimpUserInstall$/;"	s	file:
_GimpVectorOptions	tools/gimpvectoroptions.h	/^struct _GimpVectorOptions$/;"	s
_GimpVectorTool	tools/gimpvectortool.h	/^struct _GimpVectorTool$/;"	s
_GimpVectorToolClass	tools/gimpvectortool.h	/^struct _GimpVectorToolClass$/;"	s
_GimpVectors	vectors/gimpvectors.h	/^struct _GimpVectors$/;"	s
_GimpVectorsClass	vectors/gimpvectors.h	/^struct _GimpVectorsClass$/;"	s
_GimpVectorsCompatPoint	vectors/gimpvectors-compat.h	/^struct _GimpVectorsCompatPoint$/;"	s
_GimpVectorsModUndo	vectors/gimpvectorsmodundo.h	/^struct _GimpVectorsModUndo$/;"	s
_GimpVectorsModUndoClass	vectors/gimpvectorsmodundo.h	/^struct _GimpVectorsModUndoClass$/;"	s
_GimpVectorsPropUndo	vectors/gimpvectorspropundo.h	/^struct _GimpVectorsPropUndo$/;"	s
_GimpVectorsPropUndoClass	vectors/gimpvectorspropundo.h	/^struct _GimpVectorsPropUndoClass$/;"	s
_GimpVectorsTreeView	widgets/gimpvectorstreeview.h	/^struct _GimpVectorsTreeView$/;"	s
_GimpVectorsTreeViewClass	widgets/gimpvectorstreeview.h	/^struct _GimpVectorsTreeViewClass$/;"	s
_GimpVectorsUndo	vectors/gimpvectorsundo.h	/^struct _GimpVectorsUndo$/;"	s
_GimpVectorsUndoClass	vectors/gimpvectorsundo.h	/^struct _GimpVectorsUndoClass$/;"	s
_GimpView	widgets/gimpview.h	/^struct _GimpView$/;"	s
_GimpViewClass	widgets/gimpview.h	/^struct _GimpViewClass$/;"	s
_GimpViewPopup	widgets/gimpview-popup.c	/^struct _GimpViewPopup$/;"	s	file:
_GimpViewRenderer	widgets/gimpviewrenderer.h	/^struct _GimpViewRenderer$/;"	s
_GimpViewRendererBrush	widgets/gimpviewrendererbrush.h	/^struct _GimpViewRendererBrush$/;"	s
_GimpViewRendererBrushClass	widgets/gimpviewrendererbrush.h	/^struct _GimpViewRendererBrushClass$/;"	s
_GimpViewRendererBuffer	widgets/gimpviewrendererbuffer.h	/^struct _GimpViewRendererBuffer$/;"	s
_GimpViewRendererBufferClass	widgets/gimpviewrendererbuffer.h	/^struct _GimpViewRendererBufferClass$/;"	s
_GimpViewRendererClass	widgets/gimpviewrenderer.h	/^struct _GimpViewRendererClass$/;"	s
_GimpViewRendererDrawable	widgets/gimpviewrendererdrawable.h	/^struct _GimpViewRendererDrawable$/;"	s
_GimpViewRendererDrawableClass	widgets/gimpviewrendererdrawable.h	/^struct _GimpViewRendererDrawableClass$/;"	s
_GimpViewRendererGradient	widgets/gimpviewrenderergradient.h	/^struct _GimpViewRendererGradient$/;"	s
_GimpViewRendererGradientClass	widgets/gimpviewrenderergradient.h	/^struct _GimpViewRendererGradientClass$/;"	s
_GimpViewRendererImage	widgets/gimpviewrendererimage.h	/^struct _GimpViewRendererImage$/;"	s
_GimpViewRendererImageClass	widgets/gimpviewrendererimage.h	/^struct _GimpViewRendererImageClass$/;"	s
_GimpViewRendererImagefile	widgets/gimpviewrendererimagefile.h	/^struct _GimpViewRendererImagefile$/;"	s
_GimpViewRendererImagefileClass	widgets/gimpviewrendererimagefile.h	/^struct _GimpViewRendererImagefileClass$/;"	s
_GimpViewRendererLayer	widgets/gimpviewrendererlayer.h	/^struct _GimpViewRendererLayer$/;"	s
_GimpViewRendererLayerClass	widgets/gimpviewrendererlayer.h	/^struct _GimpViewRendererLayerClass$/;"	s
_GimpViewRendererPalette	widgets/gimpviewrendererpalette.h	/^struct _GimpViewRendererPalette$/;"	s
_GimpViewRendererPaletteClass	widgets/gimpviewrendererpalette.h	/^struct _GimpViewRendererPaletteClass$/;"	s
_GimpViewRendererVectors	widgets/gimpviewrenderervectors.h	/^struct _GimpViewRendererVectors$/;"	s
_GimpViewRendererVectorsClass	widgets/gimpviewrenderervectors.h	/^struct _GimpViewRendererVectorsClass$/;"	s
_GimpViewable	core/gimpviewable.h	/^struct _GimpViewable$/;"	s
_GimpViewableButton	widgets/gimpviewablebutton.h	/^struct _GimpViewableButton$/;"	s
_GimpViewableButtonClass	widgets/gimpviewablebutton.h	/^struct _GimpViewableButtonClass$/;"	s
_GimpViewableClass	core/gimpviewable.h	/^struct _GimpViewableClass$/;"	s
_GimpViewableDialog	widgets/gimpviewabledialog.h	/^struct _GimpViewableDialog$/;"	s
_GimpViewableDialogClass	widgets/gimpviewabledialog.h	/^struct _GimpViewableDialogClass$/;"	s
_GimpXmlParser	config/gimpxmlparser.c	/^struct _GimpXmlParser$/;"	s	file:
_GtkHWrapBox	widgets/gtkhwrapbox.h	/^struct _GtkHWrapBox$/;"	s
_GtkHWrapBoxClass	widgets/gtkhwrapbox.h	/^struct _GtkHWrapBoxClass$/;"	s
_GtkVWrapBox	widgets/gtkvwrapbox.h	/^struct _GtkVWrapBox$/;"	s
_GtkVWrapBoxClass	widgets/gtkvwrapbox.h	/^struct _GtkVWrapBoxClass$/;"	s
_GtkWrapBox	widgets/gtkwrapbox.h	/^struct _GtkWrapBox$/;"	s
_GtkWrapBoxChild	widgets/gtkwrapbox.h	/^struct _GtkWrapBoxChild$/;"	s
_GtkWrapBoxClass	widgets/gtkwrapbox.h	/^struct _GtkWrapBoxClass$/;"	s
_HueSaturation	base/hue-saturation.h	/^struct _HueSaturation$/;"	s
_ICurve	tools/gimpiscissorstool.c	/^struct _ICurve$/;"	s	file:
_ImageMergeLayersDialog	dialogs/image-merge-layers-dialog.h	/^struct _ImageMergeLayersDialog$/;"	s
_ImgColors	core/gimppalette-import.c	/^struct _ImgColors$/;"	s	file:
_KeyboardEvent	widgets/gimpcontrollerkeyboard.c	/^struct _KeyboardEvent$/;"	s	file:
_LayerAddMaskDialog	dialogs/layer-add-mask-dialog.h	/^struct _LayerAddMaskDialog$/;"	s
_LayerMode	paint-funcs/paint-funcs.c	/^struct _LayerMode$/;"	s	file:
_LayerOptionsDialog	dialogs/layer-options-dialog.h	/^struct _LayerOptionsDialog$/;"	s
_Levels	base/levels.h	/^struct _Levels$/;"	s
_Line	widgets/gtkhwrapbox.c	/^struct _Line$/;"	s	file:
_Line	widgets/gtkvwrapbox.c	/^struct _Line$/;"	s	file:
_O_BINARY	base/tile-swap.c	45;"	d	file:
_O_BINARY	core/gimpbrush-load.c	35;"	d	file:
_O_BINARY	core/gimpbrushpipe-load.c	34;"	d	file:
_O_BINARY	core/gimppalette-load.c	32;"	d	file:
_O_BINARY	core/gimppattern-load.c	42;"	d	file:
_O_BINARY	plug-in/gimpinterpreterdb.c	56;"	d	file:
_O_BINARY	plug-in/gimpplugin.c	69;"	d	file:
_O_TEMPORARY	base/tile-swap.c	48;"	d	file:
_O_TEXT	plug-in/gimpplugin.c	67;"	d	file:
_PDBDump	pdb/gimppdb-query.c	/^struct _PDBDump$/;"	s	file:
_PDBQuery	pdb/gimppdb-query.c	/^struct _PDBQuery$/;"	s	file:
_PDBStrings	pdb/gimppdb-query.c	/^struct _PDBStrings$/;"	s	file:
_PatternHeader	core/gimppattern-header.h	/^struct _PatternHeader$/;"	s
_PixelProcessor	base/pixel-processor.c	/^struct _PixelProcessor$/;"	s	file:
_PixelRegion	base/pixel-region.h	/^struct _PixelRegion$/;"	s
_PixelRegionHolder	base/pixel-region.h	/^struct _PixelRegionHolder$/;"	s
_PixelRegionIterator	base/pixel-region.h	/^struct _PixelRegionIterator$/;"	s
_PixelSurround	base/pixel-surround.c	/^struct _PixelSurround$/;"	s	file:
_PlugInMenuEntry	menus/plug-in-menus.c	/^struct _PlugInMenuEntry$/;"	s	file:
_QuantizeObj	core/gimpimage-convert.c	/^struct _QuantizeObj$/;"	s	file:
_RenderContext	text/gimptext-vectors.c	/^struct _RenderContext$/;"	s	file:
_RenderInfo	display/gimpdisplayshell-render.c	/^struct _RenderInfo$/;"	s	file:
_Selection	display/gimpdisplayshell-selection.c	/^struct _Selection$/;"	s	file:
_SioxState	base/siox.c	/^struct _SioxState$/;"	s	file:
_SvgHandler	vectors/gimpvectors-import.c	/^struct _SvgHandler$/;"	s	file:
_SwapFile	base/tile-swap.c	/^struct _SwapFile$/;"	s	file:
_SwapFileGap	base/tile-swap.c	/^struct _SwapFileGap$/;"	s	file:
_TempBuf	base/temp-buf.h	/^struct _TempBuf$/;"	s
_TemplateOptionsDialog	dialogs/template-options-dialog.h	/^struct _TemplateOptionsDialog$/;"	s
_Threshold	base/threshold.h	/^struct _Threshold$/;"	s
_Tile	base/tile-private.h	/^struct _Tile$/;"	s
_TileLink	base/tile-private.h	/^struct _TileLink$/;"	s
_TileList	base/tile-cache.c	/^typedef struct _TileList$/;"	s	file:
_TileManager	base/tile-manager-private.h	/^struct _TileManager$/;"	s
_TilePyramid	base/tile-pyramid.c	/^struct _TilePyramid$/;"	s	file:
_VectorsExportDialog	dialogs/vectors-export-dialog.h	/^struct _VectorsExportDialog$/;"	s
_VectorsImportDialog	dialogs/vectors-import-dialog.h	/^struct _VectorsImportDialog$/;"	s
_VectorsOptionsDialog	dialogs/vectors-options-dialog.h	/^struct _VectorsOptionsDialog$/;"	s
_WheelEvent	widgets/gimpcontrollerwheel.c	/^struct _WheelEvent$/;"	s	file:
_XcfInfo	xcf/xcf-private.h	/^struct _XcfInfo$/;"	s
__ABOUT_DIALOG_H__	dialogs/about-dialog.h	20;"	d
__ABOUT_H__	about.h	20;"	d
__ACTIONS_H__	actions/actions.h	20;"	d
__ACTIONS_TYPES_H__	actions/actions-types.h	20;"	d
__APP_GIMP_CONFIG_UTILS_H__	config/gimpconfig-utils.h	23;"	d
__APP_GIMP_UNIT_H__	core/gimpunit.h	20;"	d
__APP_GIMP_UTILS_H__	core/gimp-utils.h	20;"	d
__APP_H__	app.h	20;"	d
__BASE_ENUMS_H__	base/base-enums.h	20;"	d
__BASE_H__	base/base.h	20;"	d
__BASE_TYPES_H__	base/base-types.h	20;"	d
__BATCH_H__	batch.h	20;"	d
__BOUNDARY_H__	base/boundary.h	20;"	d
__BRUSHES_ACTIONS_H__	actions/brushes-actions.h	20;"	d
__BRUSH_EDITOR_ACTIONS_H__	actions/brush-editor-actions.h	20;"	d
__BUFFERS_ACTIONS_H__	actions/buffers-actions.h	20;"	d
__BUFFERS_COMMANDS_H__	actions/buffers-commands.h	20;"	d
__CHANNELS_ACTIONS_H__	actions/channels-actions.h	20;"	d
__CHANNELS_COMMANDS_H__	actions/channels-commands.h	20;"	d
__CHANNEL_OPTIONS_DIALOG_H__	dialogs/channel-options-dialog.h	20;"	d
__COLORIZE_H__	base/colorize.h	20;"	d
__COLORMAP_ACTIONS_H__	actions/colormap-actions.h	20;"	d
__COLORMAP_COMMANDS_H__	actions/colormap-commands.h	20;"	d
__COLOR_BALANCE_H__	base/color-balance.h	20;"	d
__COLOR_HISTORY_H__	gui/color-history.h	23;"	d
__CONFIG_TYPES_H__	config/config-types.h	23;"	d
__CONTEXT_ACTIONS_H__	actions/context-actions.h	20;"	d
__CONTEXT_COMMANDS_H__	actions/context-commands.h	20;"	d
__CONVERT_DATA_H__	core/gimpimage-convert-data.h	23;"	d
__CONVERT_DIALOG_H__	dialogs/convert-dialog.h	20;"	d
__CORE_ENUMS_H__	core/core-enums.h	20;"	d
__CORE_TYPES_H__	core/core-types.h	20;"	d
__CPERCEP_H__	base/cpercep.h	35;"	d
__CURSOR_INFO_ACIONS_H__	actions/cursor-info-actions.h	20;"	d
__CURSOR_INFO_COMMANDS_H__	actions/cursor-info-commands.h	20;"	d
__CURVES_H__	base/curves.h	20;"	d
__DATA_COMMANDS_H__	actions/data-commands.h	20;"	d
__DATA_EDITOR_COMMANDS_H__	actions/data-editor-commands.h	20;"	d
__DEBUG_ACTIONS_H__	actions/debug-actions.h	20;"	d
__DEBUG_COMMANDS_H__	actions/debug-commands.h	20;"	d
__DESATURATE_DIALOG_H__	dialogs/desaturate-dialog.h	20;"	d
__DIALOGS_ACTIONS_H__	actions/dialogs-actions.h	20;"	d
__DIALOGS_COMMANDS_H__	actions/dialogs-commands.h	20;"	d
__DIALOGS_CONSTRUCTORS_H__	dialogs/dialogs-constructors.h	20;"	d
__DIALOGS_H__	dialogs/dialogs.h	20;"	d
__DIALOGS_TYPES_H__	dialogs/dialogs-types.h	20;"	d
__DISPLAY_ENUMS_H__	display/display-enums.h	20;"	d
__DISPLAY_TYPES_H__	display/display-types.h	20;"	d
__DOCKABLE_ACTIONS_H__	actions/dockable-actions.h	20;"	d
__DOCKABLE_COMMANDS_H__	actions/dockable-commands.h	20;"	d
__DOCKABLE_MENU_H__	menus/dockable-menu.h	20;"	d
__DOCK_ACTIONS_H__	actions/dock-actions.h	20;"	d
__DOCK_COMMANDS_H__	actions/dock-commands.h	20;"	d
__DOCUMENTS_ACTIONS_H__	actions/documents-actions.h	20;"	d
__DOCUMENTS_COMMANDS_H__	actions/documents-commands.h	20;"	d
__DRAWABLE_ACTIONS_H__	actions/drawable-actions.h	20;"	d
__DRAWABLE_COMMANDS_H__	actions/drawable-commands.h	20;"	d
__EDIT_ACTIONS_H__	actions/edit-actions.h	20;"	d
__EDIT_COMMANDS_H__	actions/edit-commands.h	20;"	d
__ERRORS_H__	errors.h	20;"	d
__ERROR_CONSOLE_ACIONS_H__	actions/error-console-actions.h	20;"	d
__ERROR_CONSOLE_COMMANDS_H__	actions/error-console-commands.h	20;"	d
__FADE_DIALOG_H__	dialogs/fade-dialog.h	20;"	d
__FILE_ACTIONS_H__	actions/file-actions.h	20;"	d
__FILE_COMMANDS_H__	actions/file-commands.h	20;"	d
__FILE_MENU_H__	menus/file-menu.h	20;"	d
__FILE_OPEN_DIALOG_H__	dialogs/file-open-dialog.h	20;"	d
__FILE_OPEN_H__	file/file-open.h	22;"	d
__FILE_OPEN_LOCATION_DIALOG_H__	dialogs/file-open-location-dialog.h	20;"	d
__FILE_PROCEDURE_H__	file/file-procedure.h	22;"	d
__FILE_SAVE_DIALOG_H__	dialogs/file-save-dialog.h	20;"	d
__FILE_SAVE_H__	file/file-save.h	22;"	d
__FILE_UTILS_H__	file/file-utils.h	22;"	d
__FONTS_ACTIONS_H__	actions/fonts-actions.h	20;"	d
__FONTS_COMMANDS_H__	actions/fonts-commands.h	20;"	d
__GIMP_ACTION_FACTORY_H__	widgets/gimpactionfactory.h	23;"	d
__GIMP_ACTION_GROUP_H__	widgets/gimpactiongroup.h	23;"	d
__GIMP_ACTION_H__	widgets/gimpaction.h	23;"	d
__GIMP_ACTION_VIEW_H__	widgets/gimpactionview.h	23;"	d
__GIMP_AIRBRUSH_H__	paint/gimpairbrush.h	20;"	d
__GIMP_AIRBRUSH_OPTIONS_H__	paint/gimpairbrushoptions.h	20;"	d
__GIMP_AIRBRUSH_TOOL_H__	tools/gimpairbrushtool.h	20;"	d
__GIMP_ALIGN_OPTIONS_H__	tools/gimpalignoptions.h	20;"	d
__GIMP_ALIGN_TOOL_H__	tools/gimpaligntool.h	20;"	d
__GIMP_ANCHOR_H__	vectors/gimpanchor.h	23;"	d
__GIMP_APP_PROP_WIDGETS_H__	widgets/gimppropwidgets.h	23;"	d
__GIMP_AREA_H__	core/gimparea.h	20;"	d
__GIMP_BASE_CONFIG_H__	config/gimpbaseconfig.h	23;"	d
__GIMP_BEZIER_STROKE_H__	vectors/gimpbezierstroke.h	23;"	d
__GIMP_BLEND_OPTIONS_H__	tools/gimpblendoptions.h	20;"	d
__GIMP_BLEND_TOOL_H__	tools/gimpblendtool.h	20;"	d
__GIMP_BLOB_EDITOR_H__	widgets/gimpblobeditor.h	22;"	d
__GIMP_BRIGHTNESS_CONTRAST_TOOL_H__	tools/gimpbrightnesscontrasttool.h	20;"	d
__GIMP_BRUSH_CLIPBOARD_H__	core/gimpbrushclipboard.h	23;"	d
__GIMP_BRUSH_CORE_H__	paint/gimpbrushcore.h	20;"	d
__GIMP_BRUSH_CORE_KERNELS_H__	paint/gimpbrushcore-kernels.h	8;"	d
__GIMP_BRUSH_EDITOR_H__	widgets/gimpbrusheditor.h	23;"	d
__GIMP_BRUSH_FACTORY_VIEW_H__	widgets/gimpbrushfactoryview.h	23;"	d
__GIMP_BRUSH_GENERATED_H__	core/gimpbrushgenerated.h	22;"	d
__GIMP_BRUSH_GENERATED_LOAD_H__	core/gimpbrushgenerated-load.h	22;"	d
__GIMP_BRUSH_GENERATED_SAVE_H__	core/gimpbrushgenerated-save.h	22;"	d
__GIMP_BRUSH_HEADER_H__	core/gimpbrush-header.h	20;"	d
__GIMP_BRUSH_H__	core/gimpbrush.h	20;"	d
__GIMP_BRUSH_LOAD_H__	core/gimpbrush-load.h	20;"	d
__GIMP_BRUSH_PIPE_H__	core/gimpbrushpipe.h	21;"	d
__GIMP_BRUSH_PIPE_LOAD_H__	core/gimpbrushpipe-load.h	21;"	d
__GIMP_BRUSH_SCALE_H__	core/gimpbrush-scale.h	22;"	d
__GIMP_BRUSH_SELECT_H__	widgets/gimpbrushselect.h	23;"	d
__GIMP_BRUSH_TOOL_H__	tools/gimpbrushtool.h	20;"	d
__GIMP_BUCKET_FILL_OPTIONS_H__	tools/gimpbucketfilloptions.h	20;"	d
__GIMP_BUCKET_FILL_TOOL_H__	tools/gimpbucketfilltool.h	20;"	d
__GIMP_BUFFER_H__	core/gimpbuffer.h	20;"	d
__GIMP_BUFFER_VIEW_H__	widgets/gimpbufferview.h	23;"	d
__GIMP_BY_COLOR_SELECT_TOOL_H__	tools/gimpbycolorselecttool.h	22;"	d
__GIMP_CANVAS_H__	display/gimpcanvas.h	20;"	d
__GIMP_CELL_RENDERER_DASHES_H__	widgets/gimpcellrendererdashes.h	23;"	d
__GIMP_CELL_RENDERER_VIEWABLE_H__	widgets/gimpcellrendererviewable.h	23;"	d
__GIMP_CHANNEL_COMBINE_H__	core/gimpchannel-combine.h	20;"	d
__GIMP_CHANNEL_H__	core/gimpchannel.h	20;"	d
__GIMP_CHANNEL_PROP_UNDO_H__	core/gimpchannelpropundo.h	20;"	d
__GIMP_CHANNEL_SELECT_H__	core/gimpchannel-select.h	20;"	d
__GIMP_CHANNEL_TREE_VIEW_H__	widgets/gimpchanneltreeview.h	23;"	d
__GIMP_CHANNEL_UNDO_H__	core/gimpchannelundo.h	20;"	d
__GIMP_CLIPBOARD_H__	widgets/gimpclipboard.h	20;"	d
__GIMP_CLONE_H__	paint/gimpclone.h	20;"	d
__GIMP_CLONE_OPTIONS_H__	paint/gimpcloneoptions.h	20;"	d
__GIMP_CLONE_TOOL_H__	tools/gimpclonetool.h	20;"	d
__GIMP_COLORIZE_TOOL_H__	tools/gimpcolorizetool.h	20;"	d
__GIMP_COLORMAP_EDITOR_H__	widgets/gimpcolormapeditor.h	20;"	d
__GIMP_COLOR_BALANCE_DIALOG_H__	tools/gimpcolorbalancetool.h	20;"	d
__GIMP_COLOR_BAR_H__	widgets/gimpcolorbar.h	20;"	d
__GIMP_COLOR_DIALOG_H__	widgets/gimpcolordialog.h	22;"	d
__GIMP_COLOR_DISPLAY_EDITOR_H__	widgets/gimpcolordisplayeditor.h	23;"	d
__GIMP_COLOR_EDITOR_H__	widgets/gimpcoloreditor.h	23;"	d
__GIMP_COLOR_FRAME_H__	widgets/gimpcolorframe.h	20;"	d
__GIMP_COLOR_OPTIONS_H__	tools/gimpcoloroptions.h	20;"	d
__GIMP_COLOR_PANEL_H__	widgets/gimpcolorpanel.h	20;"	d
__GIMP_COLOR_PICKER_OPTIONS_H__	tools/gimpcolorpickeroptions.h	20;"	d
__GIMP_COLOR_PICKER_TOOL_H__	tools/gimpcolorpickertool.h	20;"	d
__GIMP_COLOR_SELECTOR_PALETTE_H__	widgets/gimpcolorselectorpalette.h	23;"	d
__GIMP_COLOR_TOOL_H__	tools/gimpcolortool.h	20;"	d
__GIMP_COMPONENT_EDITOR_H__	widgets/gimpcomponenteditor.h	23;"	d
__GIMP_COMPOSITE_H__	composite/gimp-composite.h	23;"	d
__GIMP_COMPOSITE_UTIL_H__	composite/gimp-composite-util.h	3;"	d
__GIMP_CONFIG_DUMP_H__	config/gimpconfig-dump.h	22;"	d
__GIMP_CONFIG_FILE_H__	config/gimpconfig-file.h	23;"	d
__GIMP_CONTAINER_BOX_H__	widgets/gimpcontainerbox.h	23;"	d
__GIMP_CONTAINER_COMBO_BOX_H__	widgets/gimpcontainercombobox.h	23;"	d
__GIMP_CONTAINER_EDITOR_H__	widgets/gimpcontainereditor.h	23;"	d
__GIMP_CONTAINER_ENTRY_H__	widgets/gimpcontainerentry.h	23;"	d
__GIMP_CONTAINER_FILTER_H__	core/gimpcontainer-filter.h	23;"	d
__GIMP_CONTAINER_GRID_VIEW_H__	widgets/gimpcontainergridview.h	23;"	d
__GIMP_CONTAINER_H__	core/gimpcontainer.h	23;"	d
__GIMP_CONTAINER_POPUP_H__	widgets/gimpcontainerpopup.h	23;"	d
__GIMP_CONTAINER_TREE_VIEW_DND_H__	widgets/gimpcontainertreeview-dnd.h	23;"	d
__GIMP_CONTAINER_TREE_VIEW_H__	widgets/gimpcontainertreeview.h	23;"	d
__GIMP_CONTAINER_VIEW_H__	widgets/gimpcontainerview.h	23;"	d
__GIMP_CONTAINER_VIEW_UTILS_H__	widgets/gimpcontainerview-utils.h	23;"	d
__GIMP_CONTEXTS_H__	core/gimp-contexts.h	22;"	d
__GIMP_CONTEXT_H__	core/gimpcontext.h	23;"	d
__GIMP_CONTROLLERS_H__	widgets/gimpcontrollers.h	23;"	d
__GIMP_CONTROLLER_EDITOR_H__	widgets/gimpcontrollereditor.h	23;"	d
__GIMP_CONTROLLER_INFO_H__	widgets/gimpcontrollerinfo.h	23;"	d
__GIMP_CONTROLLER_KEYBOARD_H__	widgets/gimpcontrollerkeyboard.h	23;"	d
__GIMP_CONTROLLER_LIST_H__	widgets/gimpcontrollerlist.h	23;"	d
__GIMP_CONTROLLER_WHEEL_H__	widgets/gimpcontrollerwheel.h	23;"	d
__GIMP_CONVOLVE_H__	paint/gimpconvolve.h	20;"	d
__GIMP_CONVOLVE_OPTIONS_H__	paint/gimpconvolveoptions.h	20;"	d
__GIMP_CONVOLVE_TOOL_H__	tools/gimpconvolvetool.h	20;"	d
__GIMP_COORDS_H__	core/gimpcoords.h	23;"	d
__GIMP_CORE_CONFIG_H__	config/gimpcoreconfig.h	23;"	d
__GIMP_CROP_OPTIONS_H__	tools/gimpcropoptions.h	20;"	d
__GIMP_CROP_TOOL_H__	tools/gimpcroptool.h	20;"	d
__GIMP_CURSOR_H__	widgets/gimpcursor.h	20;"	d
__GIMP_CURSOR_VIEW_H__	widgets/gimpcursorview.h	23;"	d
__GIMP_CURVES_TOOL_H__	tools/gimpcurvestool.h	20;"	d
__GIMP_DASH_EDITOR_H__	widgets/gimpdasheditor.h	23;"	d
__GIMP_DASH_PATTERN_H__	core/gimpdashpattern.h	24;"	d
__GIMP_DATA_EDITOR_H__	widgets/gimpdataeditor.h	23;"	d
__GIMP_DATA_FACTORY_H__	core/gimpdatafactory.h	23;"	d
__GIMP_DATA_FACTORY_VIEW_H__	widgets/gimpdatafactoryview.h	23;"	d
__GIMP_DATA_H__	core/gimpdata.h	23;"	d
__GIMP_DBUS_SERVICE_H__	widgets/gimpdbusservice.h	23;"	d
__GIMP_DEVICES_H__	widgets/gimpdevices.h	20;"	d
__GIMP_DEVICE_INFO_H__	widgets/gimpdeviceinfo.h	20;"	d
__GIMP_DEVICE_STATUS_H__	widgets/gimpdevicestatus.h	23;"	d
__GIMP_DIALOG_FACTORY_H__	widgets/gimpdialogfactory.h	23;"	d
__GIMP_DISPLAY_CONFIG_H__	config/gimpdisplayconfig.h	23;"	d
__GIMP_DISPLAY_FOREACH_H__	display/gimpdisplay-foreach.h	20;"	d
__GIMP_DISPLAY_HANDLERS_H__	display/gimpdisplay-handlers.h	20;"	d
__GIMP_DISPLAY_H__	display/gimpdisplay.h	20;"	d
__GIMP_DISPLAY_OPTIONS_H__	display/gimpdisplayoptions.h	23;"	d
__GIMP_DISPLAY_SHELL_APPEARANCE_H__	display/gimpdisplayshell-appearance.h	20;"	d
__GIMP_DISPLAY_SHELL_AUTOSCROLL_H__	display/gimpdisplayshell-autoscroll.h	20;"	d
__GIMP_DISPLAY_SHELL_CALLBACKS_H__	display/gimpdisplayshell-callbacks.h	20;"	d
__GIMP_DISPLAY_SHELL_CLOSE_H__	display/gimpdisplayshell-close.h	20;"	d
__GIMP_DISPLAY_SHELL_COORDS_H__	display/gimpdisplayshell-coords.h	20;"	d
__GIMP_DISPLAY_SHELL_CURSOR_H__	display/gimpdisplayshell-cursor.h	20;"	d
__GIMP_DISPLAY_SHELL_DND_H__	display/gimpdisplayshell-dnd.h	20;"	d
__GIMP_DISPLAY_SHELL_DRAW_H__	display/gimpdisplayshell-draw.h	20;"	d
__GIMP_DISPLAY_SHELL_FILTER_DIALOG_H__	display/gimpdisplayshell-filter-dialog.h	20;"	d
__GIMP_DISPLAY_SHELL_FILTER_H__	display/gimpdisplayshell-filter.h	20;"	d
__GIMP_DISPLAY_SHELL_HANDLERS_H__	display/gimpdisplayshell-handlers.h	20;"	d
__GIMP_DISPLAY_SHELL_H__	display/gimpdisplayshell.h	20;"	d
__GIMP_DISPLAY_SHELL_LAYER_SELECT_H__	display/gimpdisplayshell-layer-select.h	20;"	d
__GIMP_DISPLAY_SHELL_PREVIEW_H__	display/gimpdisplayshell-preview.h	20;"	d
__GIMP_DISPLAY_SHELL_PROGRESS_H__	display/gimpdisplayshell-progress.h	20;"	d
__GIMP_DISPLAY_SHELL_RENDER_H__	display/gimpdisplayshell-render.h	20;"	d
__GIMP_DISPLAY_SHELL_SCALE_H__	display/gimpdisplayshell-scale.h	20;"	d
__GIMP_DISPLAY_SHELL_SCROLL_H__	display/gimpdisplayshell-scroll.h	20;"	d
__GIMP_DISPLAY_SHELL_SELECTION_H__	display/gimpdisplayshell-selection.h	20;"	d
__GIMP_DISPLAY_SHELL_TITLE_H__	display/gimpdisplayshell-title.h	20;"	d
__GIMP_DISPLAY_SHELL_TRANSFORM_H__	display/gimpdisplayshell-transform.h	20;"	d
__GIMP_DND_H__	widgets/gimpdnd.h	20;"	d
__GIMP_DND_XDS_H__	widgets/gimpdnd-xds.h	26;"	d
__GIMP_DOCKABLE_H__	widgets/gimpdockable.h	23;"	d
__GIMP_DOCKBOOK_H__	widgets/gimpdockbook.h	23;"	d
__GIMP_DOCKED_H__	widgets/gimpdocked.h	23;"	d
__GIMP_DOCK_H__	widgets/gimpdock.h	23;"	d
__GIMP_DOCK_SEPARATOR_H__	widgets/gimpdockseparator.h	23;"	d
__GIMP_DOCUMENTS_H__	core/gimp-documents.h	20;"	d
__GIMP_DOCUMENT_LIST_H__	core/gimpdocumentlist.h	20;"	d
__GIMP_DOCUMENT_VIEW_H__	widgets/gimpdocumentview.h	23;"	d
__GIMP_DODGE_BURN_H__	paint/gimpdodgeburn.h	20;"	d
__GIMP_DODGE_BURN_OPTIONS_H__	paint/gimpdodgeburnoptions.h	20;"	d
__GIMP_DODGE_BURN_TOOL_H__	tools/gimpdodgeburntool.h	20;"	d
__GIMP_DRAWABLE_BLEND_H__	core/gimpdrawable-blend.h	20;"	d
__GIMP_DRAWABLE_BUCKET_FILL_H__	core/gimpdrawable-bucket-fill.h	20;"	d
__GIMP_DRAWABLE_COMBINE_H__	core/gimpdrawable-combine.h	20;"	d
__GIMP_DRAWABLE_CONVERT_H__	core/gimpdrawable-convert.h	20;"	d
__GIMP_DRAWABLE_DESATURATE_H__	core/gimpdrawable-desaturate.h	20;"	d
__GIMP_DRAWABLE_EQUALIZE_H__	core/gimpdrawable-equalize.h	20;"	d
__GIMP_DRAWABLE_FOREGROUND_EXTRACT_H__	core/gimpdrawable-foreground-extract.h	20;"	d
__GIMP_DRAWABLE_HISTOGRAM_H__	core/gimpdrawable-histogram.h	22;"	d
__GIMP_DRAWABLE_H__	core/gimpdrawable.h	20;"	d
__GIMP_DRAWABLE_INVERT_H__	core/gimpdrawable-invert.h	20;"	d
__GIMP_DRAWABLE_LEVELS_H__	core/gimpdrawable-levels.h	20;"	d
__GIMP_DRAWABLE_MOD_UNDO_H__	core/gimpdrawablemodundo.h	20;"	d
__GIMP_DRAWABLE_OFFSET_H__	core/gimpdrawable-offset.h	20;"	d
__GIMP_DRAWABLE_STROKE_H__	core/gimpdrawable-stroke.h	23;"	d
__GIMP_DRAWABLE_TRANSFORM_H__	core/gimpdrawable-transform.h	20;"	d
__GIMP_DRAWABLE_TREE_VIEW_H__	widgets/gimpdrawabletreeview.h	23;"	d
__GIMP_DRAWABLE_UNDO_H__	core/gimpdrawableundo.h	20;"	d
__GIMP_DRAWABLE__PREVIEW_H__	core/gimpdrawable-preview.h	20;"	d
__GIMP_DRAW_TOOL_H__	tools/gimpdrawtool.h	20;"	d
__GIMP_EDITOR_H__	widgets/gimpeditor.h	23;"	d
__GIMP_EDIT_H__	core/gimp-edit.h	20;"	d
__GIMP_EDIT_SELECTION_TOOL_H__	tools/gimpeditselectiontool.h	20;"	d
__GIMP_ELLIPSE_SELECT_TOOL_H__	tools/gimpellipseselecttool.h	20;"	d
__GIMP_ENUM_ACTION_H__	widgets/gimpenumaction.h	23;"	d
__GIMP_ENVIRON_TABLE_H__	plug-in/gimpenvirontable.h	23;"	d
__GIMP_ERASER_H__	paint/gimperaser.h	20;"	d
__GIMP_ERASER_OPTIONS_H__	paint/gimperaseroptions.h	20;"	d
__GIMP_ERASER_TOOL_H__	tools/gimperasertool.h	20;"	d
__GIMP_ERROR_CONSOLE_H__	widgets/gimperrorconsole.h	23;"	d
__GIMP_ERROR_DIALOG_H__	widgets/gimperrordialog.h	23;"	d
__GIMP_FG_BG_EDITOR_H__	widgets/gimpfgbgeditor.h	23;"	d
__GIMP_FG_BG_VIEW_H__	widgets/gimpfgbgview.h	23;"	d
__GIMP_FILE_DIALOG_H__	widgets/gimpfiledialog.h	23;"	d
__GIMP_FILE_PROC_VIEW_H__	widgets/gimpfileprocview.h	23;"	d
__GIMP_FLIP_OPTIONS_H__	tools/gimpflipoptions.h	20;"	d
__GIMP_FLIP_TOOL_H__	tools/gimpfliptool.h	20;"	d
__GIMP_FLOATING_SEL_UNDO_H__	core/gimpfloatingselundo.h	20;"	d
__GIMP_FONTS_H__	text/gimp-fonts.h	20;"	d
__GIMP_FONT_H__	text/gimpfont.h	24;"	d
__GIMP_FONT_LIST_H__	text/gimpfontlist.h	24;"	d
__GIMP_FONT_SELECT_H__	widgets/gimpfontselect.h	23;"	d
__GIMP_FONT_UTILS_H__	text/gimpfont-utils.h	23;"	d
__GIMP_FONT_VIEW_H__	widgets/gimpfontview.h	23;"	d
__GIMP_FOREGROUND_SELECT_OPTIONS_H__	tools/gimpforegroundselectoptions.h	20;"	d
__GIMP_FOREGROUND_SELECT_TOOL_H__	tools/gimpforegroundselecttool.h	20;"	d
__GIMP_FOREGROUND_SELECT_TOOL_UNDO_H__	tools/gimpforegroundselecttoolundo.h	20;"	d
__GIMP_FREE_SELECT_TOOL_H__	tools/gimpfreeselecttool.h	20;"	d
__GIMP_FUZZY_SELECT_TOOL_H__	tools/gimpfuzzyselecttool.h	22;"	d
__GIMP_GRADIENTS__	core/gimp-gradients.h	23;"	d
__GIMP_GRADIENT_EDITOR_H__	widgets/gimpgradienteditor.h	23;"	d
__GIMP_GRADIENT_H__	core/gimpgradient.h	20;"	d
__GIMP_GRADIENT_LOAD_H__	core/gimpgradient-load.h	20;"	d
__GIMP_GRADIENT_SAVE_H__	core/gimpgradient-save.h	20;"	d
__GIMP_GRADIENT_SELECT_H__	widgets/gimpgradientselect.h	23;"	d
__GIMP_GRID_EDITOR_H__	widgets/gimpgrideditor.h	23;"	d
__GIMP_GRID_H__	core/gimpgrid.h	23;"	d
__GIMP_GUIDE_H__	core/gimpguide.h	23;"	d
__GIMP_GUIDE_UNDO_H__	core/gimpguideundo.h	20;"	d
__GIMP_GUI_CONFIG_H__	config/gimpguiconfig.h	23;"	d
__GIMP_GUI_H__	core/gimp-gui.h	20;"	d
__GIMP_HEAL_H__	paint/gimpheal.h	20;"	d
__GIMP_HEAL_TOOL_H__	tools/gimphealtool.h	20;"	d
__GIMP_HELP_H__	widgets/gimphelp.h	23;"	d
__GIMP_HELP_IDS_H__	widgets/gimphelp-ids.h	23;"	d
__GIMP_HISTOGRAM_BOX_H__	widgets/gimphistogrambox.h	20;"	d
__GIMP_HISTOGRAM_EDITOR_H__	widgets/gimphistogrameditor.h	20;"	d
__GIMP_HISTOGRAM_H__	base/gimphistogram.h	22;"	d
__GIMP_HISTOGRAM_OPTIONS_H__	tools/gimphistogramoptions.h	20;"	d
__GIMP_HISTOGRAM_VIEW_H__	widgets/gimphistogramview.h	20;"	d
__GIMP_HUE_SATURATION_TOOL_H__	tools/gimphuesaturationtool.h	20;"	d
__GIMP_H__	core/gimp.h	20;"	d
__GIMP_IMAGEFILE_H__	core/gimpimagefile.h	28;"	d
__GIMP_IMAGE_ARRANGE_H__	core/gimpimage-arrange.h	20;"	d
__GIMP_IMAGE_COLORMAP_H__	core/gimpimage-colormap.h	20;"	d
__GIMP_IMAGE_COLOR_HASH_H__	core/gimpimage-colorhash.h	20;"	d
__GIMP_IMAGE_COMMENT_EDITOR_H__	widgets/gimpimagecommenteditor.h	23;"	d
__GIMP_IMAGE_CONTIGUOUS_REGION_H__	core/gimpimage-contiguous-region.h	20;"	d
__GIMP_IMAGE_CONVERT_FSDITHER_H__	core/gimpimage-convert-fsdither.h	20;"	d
__GIMP_IMAGE_CONVERT_H__	core/gimpimage-convert.h	20;"	d
__GIMP_IMAGE_CROP_H__	core/gimpimage-crop.h	20;"	d
__GIMP_IMAGE_DOCK_H__	widgets/gimpimagedock.h	23;"	d
__GIMP_IMAGE_DUPLICATE_H__	core/gimpimage-duplicate.h	20;"	d
__GIMP_IMAGE_EDITOR_H__	widgets/gimpimageeditor.h	20;"	d
__GIMP_IMAGE_FLIP_H__	core/gimpimage-flip.h	20;"	d
__GIMP_IMAGE_GRID_H__	core/gimpimage-grid.h	23;"	d
__GIMP_IMAGE_GUIDES_H__	core/gimpimage-guides.h	20;"	d
__GIMP_IMAGE_H__	core/gimpimage.h	20;"	d
__GIMP_IMAGE_ITEM_LIST_H__	core/gimpimage-item-list.h	20;"	d
__GIMP_IMAGE_MAP_H__	core/gimpimagemap.h	20;"	d
__GIMP_IMAGE_MAP_OPTIONS_H__	tools/gimpimagemapoptions.h	20;"	d
__GIMP_IMAGE_MAP_TOOL_H__	tools/gimpimagemaptool.h	20;"	d
__GIMP_IMAGE_MERGE_H__	core/gimpimage-merge.h	20;"	d
__GIMP_IMAGE_NEW_H__	core/gimpimage-new.h	20;"	d
__GIMP_IMAGE_PARASITE_VIEW_H__	widgets/gimpimageparasiteview.h	23;"	d
__GIMP_IMAGE_PICK_COLOR_H__	core/gimpimage-pick-color.h	20;"	d
__GIMP_IMAGE_PREVIEW_H__	core/gimpimage-preview.h	20;"	d
__GIMP_IMAGE_PROFILE_VIEW_H__	widgets/gimpimageprofileview.h	23;"	d
__GIMP_IMAGE_PROP_VIEW_H__	widgets/gimpimagepropview.h	23;"	d
__GIMP_IMAGE_QUICK_MASK_H__	core/gimpimage-quick-mask.h	20;"	d
__GIMP_IMAGE_RESIZE_H__	core/gimpimage-resize.h	20;"	d
__GIMP_IMAGE_ROTATE_H__	core/gimpimage-rotate.h	20;"	d
__GIMP_IMAGE_SAMPLE_POINTS_H__	core/gimpimage-sample-points.h	20;"	d
__GIMP_IMAGE_SCALE_H__	core/gimpimage-scale.h	20;"	d
__GIMP_IMAGE_SNAP_H__	core/gimpimage-snap.h	20;"	d
__GIMP_IMAGE_UNDO_H__	core/gimpimageundo.h	20;"	d
__GIMP_IMAGE_UNDO_PUSH_H__	core/gimpimage-undo-push.h	20;"	d
__GIMP_IMAGE_VIEW_H__	widgets/gimpimageview.h	23;"	d
__GIMP_IMAGE__UNDO_H__	core/gimpimage-undo.h	20;"	d
__GIMP_INK_BLOB_H__	paint/gimpink-blob.h	26;"	d
__GIMP_INK_H__	paint/gimpink.h	20;"	d
__GIMP_INK_OPTIONS_GUI_H__	tools/gimpinkoptions-gui.h	20;"	d
__GIMP_INK_OPTIONS_H__	paint/gimpinkoptions.h	20;"	d
__GIMP_INK_TOOL_H__	tools/gimpinktool.h	20;"	d
__GIMP_INK_UNDO_H__	paint/gimpinkundo.h	20;"	d
__GIMP_INTERPRETER_DB_H__	plug-in/gimpinterpreterdb.h	23;"	d
__GIMP_INTL_H__	gimp-intl.h	20;"	d
__GIMP_ISCISSORS_TOOL_H__	tools/gimpiscissorstool.h	20;"	d
__GIMP_ITEM_H__	core/gimpitem.h	20;"	d
__GIMP_ITEM_LINKED_H__	core/gimpitem-linked.h	20;"	d
__GIMP_ITEM_PROP_UNDO_H__	core/gimpitempropundo.h	20;"	d
__GIMP_ITEM_TREE_VIEW_H__	widgets/gimpitemtreeview.h	23;"	d
__GIMP_ITEM_UNDO_H__	core/gimpitemundo.h	20;"	d
__GIMP_ITEM__PREVIEW_H__	core/gimpitem-preview.h	20;"	d
__GIMP_LAYER_FLOATING_SEL_H__	core/gimplayer-floating-sel.h	20;"	d
__GIMP_LAYER_H__	core/gimplayer.h	20;"	d
__GIMP_LAYER_MASK_H__	core/gimplayermask.h	20;"	d
__GIMP_LAYER_MASK_PROP_UNDO_H__	core/gimplayermaskpropundo.h	20;"	d
__GIMP_LAYER_MASK_UNDO_H__	core/gimplayermaskundo.h	20;"	d
__GIMP_LAYER_PROP_UNDO_H__	core/gimplayerpropundo.h	20;"	d
__GIMP_LAYER_TREE_VIEW_H__	widgets/gimplayertreeview.h	23;"	d
__GIMP_LAYER_UNDO_H__	core/gimplayerundo.h	20;"	d
__GIMP_LEVELS_TOOL_H__	tools/gimplevelstool.h	20;"	d
__GIMP_LIST_H__	core/gimplist.h	23;"	d
__GIMP_LUT_H__	base/gimplut.h	22;"	d
__GIMP_MAGNIFY_OPTIONS_H__	tools/gimpmagnifyoptions.h	20;"	d
__GIMP_MAGNIFY_TOOL_H__	tools/gimpmagnifytool.h	20;"	d
__GIMP_MASK_UNDO_H__	core/gimpmaskundo.h	20;"	d
__GIMP_MEASURE_OPTIONS_H__	tools/gimpmeasureoptions.h	20;"	d
__GIMP_MEASURE_TOOL_H__	tools/gimpmeasuretool.h	20;"	d
__GIMP_MENU_DOCK_H__	widgets/gimpmenudock.h	23;"	d
__GIMP_MENU_FACTORY_H__	widgets/gimpmenufactory.h	23;"	d
__GIMP_MESSAGE_BOX_H__	widgets/gimpmessagebox.h	23;"	d
__GIMP_MESSAGE_DIALOG_H__	widgets/gimpmessagedialog.h	23;"	d
__GIMP_MODULES_H__	core/gimp-modules.h	23;"	d
__GIMP_MOVE_OPTIONS_H__	tools/gimpmoveoptions.h	20;"	d
__GIMP_MOVE_TOOL_H__	tools/gimpmovetool.h	20;"	d
__GIMP_NAVIGATION_EDITOR_H__	display/gimpnavigationeditor.h	26;"	d
__GIMP_NAVIGATION_VIEW_H__	widgets/gimpnavigationview.h	26;"	d
__GIMP_OBJECT_H__	core/gimpobject.h	20;"	d
__GIMP_PAINTBRUSH_H__	paint/gimppaintbrush.h	20;"	d
__GIMP_PAINTBRUSH_TOOL_H__	tools/gimppaintbrushtool.h	20;"	d
__GIMP_PAINT_CORE_H__	paint/gimppaintcore.h	20;"	d
__GIMP_PAINT_CORE_STROKE_H__	paint/gimppaintcore-stroke.h	20;"	d
__GIMP_PAINT_CORE_UNDO_H__	paint/gimppaintcoreundo.h	20;"	d
__GIMP_PAINT_H__	paint/gimp-paint.h	20;"	d
__GIMP_PAINT_INFO_H__	core/gimppaintinfo.h	20;"	d
__GIMP_PAINT_OPTIONS_GUI_H__	tools/gimppaintoptions-gui.h	20;"	d
__GIMP_PAINT_OPTIONS_H__	paint/gimppaintoptions.h	20;"	d
__GIMP_PAINT_TOOL_H__	tools/gimppainttool.h	20;"	d
__GIMP_PALETTE_EDITOR_H__	widgets/gimppaletteeditor.h	20;"	d
__GIMP_PALETTE_H__	core/gimppalette.h	20;"	d
__GIMP_PALETTE_IMPORT__	core/gimppalette-import.h	20;"	d
__GIMP_PALETTE_LOAD_H__	core/gimppalette-load.h	20;"	d
__GIMP_PALETTE_SAVE_H__	core/gimppalette-save.h	20;"	d
__GIMP_PALETTE_SELECT_H__	widgets/gimppaletteselect.h	23;"	d
__GIMP_PALETTE_VIEW_H__	widgets/gimppaletteview.h	23;"	d
__GIMP_PARAM_SPECS_DESC_H__	core/gimpparamspecs-desc.h	20;"	d
__GIMP_PARAM_SPECS_H__	core/gimpparamspecs.h	20;"	d
__GIMP_PARASITES_H__	core/gimp-parasites.h	19;"	d
__GIMP_PARASITE_LIST_H__	core/gimpparasitelist.h	19;"	d
__GIMP_PATTERN_CLIPBOARD_H__	core/gimppatternclipboard.h	23;"	d
__GIMP_PATTERN_FACTORY_VIEW_H__	widgets/gimppatternfactoryview.h	23;"	d
__GIMP_PATTERN_HEADER_H__	core/gimppattern-header.h	20;"	d
__GIMP_PATTERN_H__	core/gimppattern.h	20;"	d
__GIMP_PATTERN_LOAD_H__	core/gimppattern-load.h	20;"	d
__GIMP_PATTERN_SELECT_H__	widgets/gimppatternselect.h	23;"	d
__GIMP_PDB_COMPAT_H__	pdb/gimp-pdb-compat.h	20;"	d
__GIMP_PDB_DIALOG_H__	widgets/gimppdbdialog.h	23;"	d
__GIMP_PDB_H__	pdb/gimppdb.h	20;"	d
__GIMP_PDB_PROGRESS_H__	core/gimppdbprogress.h	23;"	d
__GIMP_PDB_QUERY_H__	pdb/gimppdb-query.h	20;"	d
__GIMP_PENCIL_H__	paint/gimppencil.h	20;"	d
__GIMP_PENCIL_OPTIONS_H__	paint/gimppenciloptions.h	20;"	d
__GIMP_PENCIL_TOOL_H__	tools/gimppenciltool.h	20;"	d
__GIMP_PERSPECTIVE_CLONE_H__	paint/gimpperspectiveclone.h	20;"	d
__GIMP_PERSPECTIVE_CLONE_OPTIONS_H__	paint/gimpperspectivecloneoptions.h	20;"	d
__GIMP_PERSPECTIVE_CLONE_TOOL_H__	tools/gimpperspectiveclonetool.h	20;"	d
__GIMP_PERSPECTIVE_TOOL_H__	tools/gimpperspectivetool.h	20;"	d
__GIMP_PICKABLE_H__	core/gimppickable.h	23;"	d
__GIMP_PIXBUF_H__	widgets/gimppixbuf.h	23;"	d
__GIMP_PLUGIN_CONFIG_H__	config/gimppluginconfig.h	23;"	d
__GIMP_PLUG_IN_ACTION_H__	widgets/gimppluginaction.h	23;"	d
__GIMP_PLUG_IN_CLEANUP_H__	plug-in/gimpplugin-cleanup.h	22;"	d
__GIMP_PLUG_IN_CONTEXT_H__	plug-in/gimpplugin-context.h	22;"	d
__GIMP_PLUG_IN_DEBUG_H__	plug-in/gimpplugindebug.h	22;"	d
__GIMP_PLUG_IN_DEF_H__	plug-in/gimpplugindef.h	22;"	d
__GIMP_PLUG_IN_ERROR_H__	plug-in/gimppluginerror.h	20;"	d
__GIMP_PLUG_IN_H__	plug-in/gimpplugin.h	22;"	d
__GIMP_PLUG_IN_MANAGER_CALL_H__	plug-in/gimppluginmanager-call.h	22;"	d
__GIMP_PLUG_IN_MANAGER_DATA_H__	plug-in/gimppluginmanager-data.h	22;"	d
__GIMP_PLUG_IN_MANAGER_FILE_H__	plug-in/gimppluginmanager-file.h	22;"	d
__GIMP_PLUG_IN_MANAGER_HELP_DOMAIN_H__	plug-in/gimppluginmanager-help-domain.h	22;"	d
__GIMP_PLUG_IN_MANAGER_HISTORY_H__	plug-in/gimppluginmanager-history.h	22;"	d
__GIMP_PLUG_IN_MANAGER_H__	plug-in/gimppluginmanager.h	22;"	d
__GIMP_PLUG_IN_MANAGER_LOCALE_DOMAIN_H__	plug-in/gimppluginmanager-locale-domain.h	22;"	d
__GIMP_PLUG_IN_MANAGER_MENU_BRANCH_H__	plug-in/gimppluginmanager-menu-branch.h	22;"	d
__GIMP_PLUG_IN_MANAGER_QUERY_H__	plug-in/gimppluginmanager-query.h	22;"	d
__GIMP_PLUG_IN_MANAGER_RESTORE_H__	plug-in/gimppluginmanager-restore.h	22;"	d
__GIMP_PLUG_IN_MESSAGE_H__	plug-in/gimpplugin-message.h	22;"	d
__GIMP_PLUG_IN_PROCEDURE_H__	plug-in/gimppluginprocedure.h	22;"	d
__GIMP_PLUG_IN_PROGRESS_H__	plug-in/gimpplugin-progress.h	22;"	d
__GIMP_PLUG_IN_PRON_FRAME_H__	plug-in/gimppluginprocframe.h	22;"	d
__GIMP_PLUG_IN_SHM_H__	plug-in/gimppluginshm.h	22;"	d
__GIMP_POSTERIZE_TOOL_H__	tools/gimpposterizetool.h	20;"	d
__GIMP_PREVIEW_CACHE_H__	core/gimppreviewcache.h	20;"	d
__GIMP_PROCEDURE_H__	pdb/gimpprocedure.h	20;"	d
__GIMP_PROFILE_CHOOSER_DIALOG_H__	widgets/gimpprofilechooserdialog.h	23;"	d
__GIMP_PROGRESS_BOX_H__	widgets/gimpprogressbox.h	23;"	d
__GIMP_PROGRESS_DIALOG_H__	widgets/gimpprogressdialog.h	23;"	d
__GIMP_PROGRESS_H__	core/gimpprogress.h	23;"	d
__GIMP_PROJECTION_CONSTRUCT_H__	core/gimpprojection-construct.h	20;"	d
__GIMP_PROJECTION_H__	core/gimpprojection.h	20;"	d
__GIMP_RC_BLURBS_H__	config/gimprc-blurbs.h	4;"	d
__GIMP_RC_DESERIALIZE_H__	config/gimprc-deserialize.h	23;"	d
__GIMP_RC_H__	config/gimprc.h	23;"	d
__GIMP_RC_SERIALIZE_H__	config/gimprc-serialize.h	23;"	d
__GIMP_RC_UNKNOWN_H__	config/gimprc-unknown.h	23;"	d
__GIMP_RECENT_ITEM_H__	file/gimprecentitem.h	27;"	d
__GIMP_RECENT_LIST_H__	file/gimprecentlist.h	27;"	d
__GIMP_RECTANGLE_OPTIONS_H__	tools/gimprectangleoptions.h	20;"	d
__GIMP_RECTANGLE_TOOL_H__	tools/gimprectangletool.h	20;"	d
__GIMP_RECT_SELECT_OPTIONS_H__	tools/gimprectangleselectoptions.h	20;"	d
__GIMP_RECT_SELECT_TOOL_H__	tools/gimprectangleselecttool.h	20;"	d
__GIMP_REGION_SELECT_TOOL_H__	tools/gimpregionselecttool.h	22;"	d
__GIMP_RENDER_H__	widgets/gimprender.h	20;"	d
__GIMP_ROTATE_TOOL_H__	tools/gimprotatetool.h	20;"	d
__GIMP_SAMPLE_POINT_EDITOR_H__	widgets/gimpsamplepointeditor.h	23;"	d
__GIMP_SAMPLE_POINT_H__	core/gimpsamplepoint.h	20;"	d
__GIMP_SAMPLE_POINT_UNDO_H__	core/gimpsamplepointundo.h	20;"	d
__GIMP_SCALE_COMBO_BOX_H__	display/gimpscalecombobox.h	23;"	d
__GIMP_SCALE_TOOL_H__	tools/gimpscaletool.h	20;"	d
__GIMP_SCAN_CONVERT_H__	core/gimpscanconvert.h	20;"	d
__GIMP_SELECTION_DATA_H__	widgets/gimpselectiondata.h	20;"	d
__GIMP_SELECTION_EDITOR_H__	widgets/gimpselectioneditor.h	20;"	d
__GIMP_SELECTION_H__	core/gimpselection.h	20;"	d
__GIMP_SELECTION_OPTIONS_H__	tools/gimpselectionoptions.h	20;"	d
__GIMP_SELECTION_TOOL_H__	tools/gimpselectiontool.h	20;"	d
__GIMP_SESSION_INFO_AUX_H__	widgets/gimpsessioninfo-aux.h	23;"	d
__GIMP_SESSION_INFO_BOOK_H__	widgets/gimpsessioninfo-book.h	23;"	d
__GIMP_SESSION_INFO_DOCKABLE_H__	widgets/gimpsessioninfo-dockable.h	23;"	d
__GIMP_SESSION_INFO_DOCK_H__	widgets/gimpsessioninfo-dock.h	23;"	d
__GIMP_SESSION_INFO_H__	widgets/gimpsessioninfo.h	23;"	d
__GIMP_SHEAR_TOOL_H__	tools/gimpsheartool.h	20;"	d
__GIMP_SIZE_BOX_H__	widgets/gimpsizebox.h	23;"	d
__GIMP_SMUDGE_H__	paint/gimpsmudge.h	20;"	d
__GIMP_SMUDGE_OPTIONS_H__	paint/gimpsmudgeoptions.h	20;"	d
__GIMP_SMUDGE_TOOL_H__	tools/gimpsmudgetool.h	20;"	d
__GIMP_SOURCE_CORE_H__	paint/gimpsourcecore.h	20;"	d
__GIMP_SOURCE_OPTIONS_H__	paint/gimpsourceoptions.h	20;"	d
__GIMP_SOURCE_TOOL_H__	tools/gimpsourcetool.h	20;"	d
__GIMP_STATUSBAR_H__	display/gimpstatusbar.h	20;"	d
__GIMP_STRING_ACTION_H__	widgets/gimpstringaction.h	23;"	d
__GIMP_STROKE_DESC_H__	core/gimpstrokedesc.h	23;"	d
__GIMP_STROKE_EDITOR_H__	widgets/gimpstrokeeditor.h	23;"	d
__GIMP_STROKE_H__	vectors/gimpstroke.h	23;"	d
__GIMP_STROKE_OPTIONS_H__	core/gimpstrokeoptions.h	23;"	d
__GIMP_SUB_PROGRESS_H__	core/gimpsubprogress.h	20;"	d
__GIMP_TEMPLATES_H__	core/gimp-templates.h	20;"	d
__GIMP_TEMPLATE_EDITOR_H__	widgets/gimptemplateeditor.h	23;"	d
__GIMP_TEMPLATE_H__	core/gimptemplate.h	23;"	d
__GIMP_TEMPLATE_VIEW_H__	widgets/gimptemplateview.h	23;"	d
__GIMP_TEMPORARY_PROCEDURE_H__	plug-in/gimptemporaryprocedure.h	22;"	d
__GIMP_TEXT_BITMAP_H__	text/gimptext-bitmap.h	23;"	d
__GIMP_TEXT_COMPAT_H__	text/gimptext-compat.h	23;"	d
__GIMP_TEXT_EDITOR_H__	widgets/gimptexteditor.h	23;"	d
__GIMP_TEXT_H__	text/gimptext.h	23;"	d
__GIMP_TEXT_LAYER_H__	text/gimptextlayer.h	23;"	d
__GIMP_TEXT_LAYER_TRANSFORM_H__	text/gimptextlayer-transform.h	23;"	d
__GIMP_TEXT_LAYER_XCF_H__	text/gimptextlayer-xcf.h	23;"	d
__GIMP_TEXT_LAYOUT_H__	text/gimptextlayout.h	23;"	d
__GIMP_TEXT_LAYOUT_PRIVATE_H__	text/gimptext-private.h	23;"	d
__GIMP_TEXT_LAYOUT_RENDER_H__	text/gimptextlayout-render.h	23;"	d
__GIMP_TEXT_OPTIONS_H__	tools/gimptextoptions.h	20;"	d
__GIMP_TEXT_PARASITE_H__	text/gimptext-parasite.h	23;"	d
__GIMP_TEXT_TOOL_H__	tools/gimptexttool.h	20;"	d
__GIMP_TEXT_UNDO_H__	text/gimptextundo.h	20;"	d
__GIMP_TEXT_VECTORS_H__	text/gimptext-vectors.h	23;"	d
__GIMP_TEXT_XLFD_H__	text/gimptext-xlfd.h	23;"	d
__GIMP_THRESHOLD_TOOL_H__	tools/gimpthresholdtool.h	20;"	d
__GIMP_THUMB_BOX_H__	widgets/gimpthumbbox.h	20;"	d
__GIMP_TOOLBOX_COLOR_AREA_H__	widgets/gimptoolbox-color-area.h	20;"	d
__GIMP_TOOLBOX_DND_H__	widgets/gimptoolbox-dnd.h	20;"	d
__GIMP_TOOLBOX_H__	widgets/gimptoolbox.h	20;"	d
__GIMP_TOOLBOX_IMAGE_AREA_H__	widgets/gimptoolbox-image-area.h	20;"	d
__GIMP_TOOLBOX_INDICATOR_AREA_H__	widgets/gimptoolbox-indicator-area.h	20;"	d
__GIMP_TOOLS_H__	tools/gimp-tools.h	20;"	d
__GIMP_TOOL_CONTROL_H__	tools/gimptoolcontrol.h	20;"	d
__GIMP_TOOL_DIALOG_H__	widgets/gimptooldialog.h	23;"	d
__GIMP_TOOL_H__	tools/gimptool.h	20;"	d
__GIMP_TOOL_INFO_H__	core/gimptoolinfo.h	20;"	d
__GIMP_TOOL_OPTIONS_EDITOR_H__	widgets/gimptooloptionseditor.h	23;"	d
__GIMP_TOOL_OPTIONS_GUI_H__	tools/gimptooloptions-gui.h	20;"	d
__GIMP_TOOL_OPTIONS_H__	core/gimptooloptions.h	20;"	d
__GIMP_TOOL_PRESETS_H__	core/gimptoolpresets.h	23;"	d
__GIMP_TOOL_VIEW_H__	widgets/gimptoolview.h	23;"	d
__GIMP_TRANSFORM_OPTIONS_H_	tools/gimptransformoptions.h	20;"	d
__GIMP_TRANSFORM_REGION_H__	core/gimp-transform-region.h	20;"	d
__GIMP_TRANSFORM_RESIZE_H__	core/gimp-transform-resize.h	20;"	d
__GIMP_TRANSFORM_TOOL_H__	tools/gimptransformtool.h	20;"	d
__GIMP_TRANSFORM_TOOL_UNDO_H__	tools/gimptransformtoolundo.h	20;"	d
__GIMP_TRANSFORM_UTILS_H__	core/gimp-transform-utils.h	20;"	d
__GIMP_UI_MANAGER_H__	widgets/gimpuimanager.h	23;"	d
__GIMP_UNDO_EDITOR_H__	widgets/gimpundoeditor.h	20;"	d
__GIMP_UNDO_H__	core/gimpundo.h	20;"	d
__GIMP_UNDO_STACK_H__	core/gimpundostack.h	20;"	d
__GIMP_UNITS_H__	core/gimp-units.h	20;"	d
__GIMP_UNIT_COMBO_BOX_H__	widgets/gimpunitcombobox.h	23;"	d
__GIMP_UNIT_STORE_H__	widgets/gimpunitstore.h	23;"	d
__GIMP_USER_INSTALL_H__	core/gimp-user-install.h	20;"	d
__GIMP_VECTORS_COMPAT_H__	vectors/gimpvectors-compat.h	23;"	d
__GIMP_VECTORS_EXPORT_H__	vectors/gimpvectors-export.h	20;"	d
__GIMP_VECTORS_H__	vectors/gimpvectors.h	23;"	d
__GIMP_VECTORS_IMPORT_H__	vectors/gimpvectors-import.h	23;"	d
__GIMP_VECTORS_MOD_UNDO_H__	vectors/gimpvectorsmodundo.h	20;"	d
__GIMP_VECTORS_NEW_H__	vectors/gimpstroke-new.h	23;"	d
__GIMP_VECTORS_PREVIEW_H__	vectors/gimpvectors-preview.h	20;"	d
__GIMP_VECTORS_PROP_UNDO_H__	vectors/gimpvectorspropundo.h	20;"	d
__GIMP_VECTORS_TREE_VIEW_H__	widgets/gimpvectorstreeview.h	23;"	d
__GIMP_VECTORS_UNDO_H__	vectors/gimpvectorsundo.h	20;"	d
__GIMP_VECTORS_WARP_H__	vectors/gimpvectors-warp.h	23;"	d
__GIMP_VECTOR_OPTIONS_H__	tools/gimpvectoroptions.h	20;"	d
__GIMP_VECTOR_TOOL_H__	tools/gimpvectortool.h	23;"	d
__GIMP_VIEWABLE_BOX_H__	widgets/gimpviewablebox.h	20;"	d
__GIMP_VIEWABLE_BUTTON_H__	widgets/gimpviewablebutton.h	23;"	d
__GIMP_VIEWABLE_DIALOG_H__	widgets/gimpviewabledialog.h	23;"	d
__GIMP_VIEWABLE_H__	core/gimpviewable.h	23;"	d
__GIMP_VIEW_H__	widgets/gimpview.h	23;"	d
__GIMP_VIEW_POPUP_H__	widgets/gimpview-popup.h	23;"	d
__GIMP_VIEW_RENDERER_BRUSH_H__	widgets/gimpviewrendererbrush.h	23;"	d
__GIMP_VIEW_RENDERER_BUFFER_H__	widgets/gimpviewrendererbuffer.h	23;"	d
__GIMP_VIEW_RENDERER_DRAWABLE_H__	widgets/gimpviewrendererdrawable.h	23;"	d
__GIMP_VIEW_RENDERER_FRAME_H__	widgets/gimpviewrenderer-frame.h	23;"	d
__GIMP_VIEW_RENDERER_GRADIENT_H__	widgets/gimpviewrenderergradient.h	23;"	d
__GIMP_VIEW_RENDERER_H__	widgets/gimpviewrenderer.h	23;"	d
__GIMP_VIEW_RENDERER_IMAGEFILE_H__	widgets/gimpviewrendererimagefile.h	23;"	d
__GIMP_VIEW_RENDERER_IMAGE_H__	widgets/gimpviewrendererimage.h	23;"	d
__GIMP_VIEW_RENDERER_LAYER_H__	widgets/gimpviewrendererlayer.h	23;"	d
__GIMP_VIEW_RENDERER_PALETTE_H__	widgets/gimpviewrendererpalette.h	23;"	d
__GIMP_VIEW_RENDERER_UTILS_H__	widgets/gimpviewrenderer-utils.h	23;"	d
__GIMP_VIEW_RENDERER_VECTORS_H__	widgets/gimpviewrenderervectors.h	24;"	d
__GIMP_WIDGETS_CONSTRUCTORS_H__	widgets/gimpwidgets-constructors.h	20;"	d
__GIMP_WIDGETS_UTILS_H__	widgets/gimpwidgets-utils.h	23;"	d
__GIMP_XML_PARSER_H__	config/gimpxmlparser.h	23;"	d
__GRADIENTS_ACTIONS_H__	actions/gradients-actions.h	20;"	d
__GRADIENTS_COMMANDS_H__	actions/gradients-commands.h	20;"	d
__GRADIENT_EDITOR_ACTIONS_H__	actions/gradient-editor-actions.h	20;"	d
__GRADIENT_EDITOR_COMMANDS_H__	actions/gradient-editor-commands.h	20;"	d
__GRID_DIALOG_H__	dialogs/grid-dialog.h	22;"	d
__GTK_HWRAP_BOX_H__	widgets/gtkhwrapbox.h	24;"	d
__GTK_VWRAP_BOX_H__	widgets/gtkvwrapbox.h	24;"	d
__GTK_WRAP_BOX_H__	widgets/gtkwrapbox.h	24;"	d
__GUI_H__	gui/gui.h	20;"	d
__GUI_MESSAGE_H__	gui/gui-message.h	20;"	d
__GUI_TYPES_H__	gui/gui-types.h	20;"	d
__GUI_VTABLE_H__	gui/gui-vtable.h	20;"	d
__HELP_ACTIONS_H__	actions/help-actions.h	20;"	d
__HELP_COMMANDS_H__	actions/help-commands.h	20;"	d
__HUE_SATURATION_H__	base/hue-saturation.h	20;"	d
__IMAGES_ACTIONS_H__	actions/images-actions.h	20;"	d
__IMAGES_COMMANDS_H__	actions/images-commands.h	20;"	d
__IMAGE_ACTIONS_H__	actions/image-actions.h	20;"	d
__IMAGE_COMMANDS_H__	actions/image-commands.h	20;"	d
__IMAGE_MENU_H__	menus/image-menu.h	20;"	d
__IMAGE_MERGE_LAYERS_DIALOG_H__	dialogs/image-merge-layers-dialog.h	20;"	d
__IMAGE_NEW_DIALOG_H__	dialogs/image-new-dialog.h	20;"	d
__IMAGE_PROPERTIES_DIALOG_H__	dialogs/image-properties-dialog.h	23;"	d
__IMAGE_SCALE_DIALOG_H__	dialogs/image-scale-dialog.h	20;"	d
__INTERNAL_PROCS_H__	pdb/internal_procs.h	22;"	d
__KEYBOARD_SHORTCUTS_DIALOG_H__	dialogs/keyboard-shortcuts-dialog.h	20;"	d
__LAYERS_ACTIONS_H__	actions/layers-actions.h	20;"	d
__LAYERS_COMMANDS_H__	actions/layers-commands.h	20;"	d
__LAYER_ADD_MASK_DIALOG_H__	dialogs/layer-add-mask-dialog.h	20;"	d
__LAYER_OPTIONS_DIALOG_H__	dialogs/layer-options-dialog.h	20;"	d
__LEVELS_H__	base/levels.h	20;"	d
__LUT_FUNCS_H__	base/lut-funcs.h	20;"	d
__MENUS_H__	menus/menus.h	20;"	d
__MENUS_TYPES_H__	menus/menus-types.h	20;"	d
__OFFSET_DIALOG_H__	dialogs/offset-dialog.h	20;"	d
__PAINT_ENUMS_H__	paint/paint-enums.h	20;"	d
__PAINT_FUNCS_GENERIC_H__	paint-funcs/paint-funcs-generic.h	25;"	d
__PAINT_FUNCS_H__	paint-funcs/paint-funcs.h	20;"	d
__PAINT_FUNCS_TYPES_H__	paint-funcs/paint-funcs-types.h	20;"	d
__PAINT_TYPES_H__	paint/paint-types.h	20;"	d
__PALETTES_ACTIONS_H__	actions/palettes-actions.h	20;"	d
__PALETTES_COMMANDS_H__	actions/palettes-commands.h	20;"	d
__PALETTE_EDITOR_ACTIONS_H__	actions/palette-editor-actions.h	20;"	d
__PALETTE_EDITOR_COMMANDS_H__	actions/palette-editor-commands.h	20;"	d
__PALETTE_IMPORT_H__	dialogs/palette-import-dialog.h	20;"	d
__PATTERNS_ACTIONS_H__	actions/patterns-actions.h	20;"	d
__PDB_TYPES_H__	pdb/pdb-types.h	20;"	d
__PIXEL_PROCESSOR_H__	base/pixel-processor.h	22;"	d
__PIXEL_REGION_H__	base/pixel-region.h	20;"	d
__PIXEL_SURROUND_H__	base/pixel-surround.h	20;"	d
__PLUG_IN_ACTIONS_H__	actions/plug-in-actions.h	20;"	d
__PLUG_IN_COMMANDS_H__	actions/plug-in-commands.h	20;"	d
__PLUG_IN_ENUMS_H__	plug-in/plug-in-enums.h	20;"	d
__PLUG_IN_ICC_PROFILE_H__	plug-in/plug-in-icc-profile.h	23;"	d
__PLUG_IN_MENUS_H__	menus/plug-in-menus.h	20;"	d
__PLUG_IN_PARAMS_H__	plug-in/plug-in-params.h	20;"	d
__PLUG_IN_RC_H__	plug-in/plug-in-rc.h	23;"	d
__PLUG_IN_TYPES_H__	plug-in/plug-in-types.h	20;"	d
__PREFERENCES_DIALOG_H__	dialogs/preferences-dialog.h	20;"	d
__PRINT_SIZE_DIALOG_H__	dialogs/print-size-dialog.h	20;"	d
__QUICK_MASK_ACTIONS_H__	actions/quick-mask-actions.h	20;"	d
__QUICK_MASK_COMMANDS_H__	actions/quick-mask-commands.h	20;"	d
__QUIT_DIALOG_H__	dialogs/quit-dialog.h	22;"	d
__REDUCE_REGION_H__	paint-funcs/reduce-region.h	20;"	d
__RESIZE_DIALOG_H__	dialogs/resize-dialog.h	20;"	d
__RESOLUTION_CALIBRATE_DIALOG_H__	dialogs/resolution-calibrate-dialog.h	20;"	d
__SAMPLE_POINTS_ACIONS_H__	actions/sample-points-actions.h	20;"	d
__SAMPLE_POINTS_COMMANDS_H__	actions/sample-points-commands.h	20;"	d
__SANITY_H__	sanity.h	20;"	d
__SCALE_DIALOG_H__	dialogs/scale-dialog.h	20;"	d
__SCALE_REGION_H__	paint-funcs/scale-region.h	20;"	d
__SELECT_ACTIONS_H__	actions/select-actions.h	20;"	d
__SELECT_COMMANDS_H__	actions/select-commands.h	20;"	d
__SESSION_H__	gui/session.h	20;"	d
__SIOX_H__	base/siox.h	37;"	d
__SPLASH_H__	gui/splash.h	20;"	d
__STROKE_DIALOG_H__	dialogs/stroke-dialog.h	22;"	d
__SUBSAMPLE_REGION_H__	paint-funcs/subsample-region.h	20;"	d
__TEMPLATES_ACTIONS_H__	actions/templates-actions.h	20;"	d
__TEMPLATES_COMMANDS_H__	actions/templates-commands.h	20;"	d
__TEMPLATE_OPTIONS_DIALOG_H__	dialogs/template-options-dialog.h	20;"	d
__TEMP_BUF_H__	base/temp-buf.h	20;"	d
__TEXT_EDITOR_ACIONS_H__	actions/text-editor-actions.h	20;"	d
__TEXT_EDITOR_COMMANDS_H__	actions/text-editor-commands.h	20;"	d
__TEXT_ENUMS_H__	text/text-enums.h	20;"	d
__TEXT_TYPES_H__	text/text-types.h	23;"	d
__THEMES_H__	gui/themes.h	20;"	d
__THRESHOLD_H__	base/threshold.h	20;"	d
__TILE_CACHE_H__	base/tile-cache.h	20;"	d
__TILE_H__	base/tile.h	20;"	d
__TILE_MANAGER_CROP_H__	base/tile-manager-crop.h	20;"	d
__TILE_MANAGER_H__	base/tile-manager.h	20;"	d
__TILE_MANAGER_PREVIEW_H__	base/tile-manager-preview.h	20;"	d
__TILE_MANAGER_PVT_H__	base/tile-manager-private.h	20;"	d
__TILE_PRIVATE_H__	base/tile-private.h	20;"	d
__TILE_PYRAMID_H__	base/tile-pyramid.h	20;"	d
__TILE_SWAP_H__	base/tile-swap.h	20;"	d
__TIPS_DIALOG_H__	dialogs/tips-dialog.h	20;"	d
__TIPS_PARSER_H__	dialogs/tips-parser.h	23;"	d
__TOOLBOX_MENU_H__	menus/toolbox-menu.h	20;"	d
__TOOLS_ACTIONS_H__	actions/tools-actions.h	20;"	d
__TOOLS_COMMANDS_H__	actions/tools-commands.h	20;"	d
__TOOLS_ENUMS_H__	tools/tools-enums.h	20;"	d
__TOOLS_TYPES_H__	tools/tools-types.h	20;"	d
__TOOLS_UTILS_H__	tools/tools-utils.h	20;"	d
__TOOL_MANAGER_H__	tools/tool_manager.h	20;"	d
__TOOL_OPTIONS_ACTIONS_H__	actions/tool-options-actions.h	20;"	d
__TOOL_OPTIONS_COMMANDS_H__	actions/tool-options-commands.h	20;"	d
__TOOL_OPTIONS_MENU_H__	menus/tool-options-menu.h	20;"	d
__UNITS_H__	units.h	20;"	d
__USER_INSTALL_DIALOG_H__	dialogs/user-install-dialog.h	20;"	d
__VECTORS_ACTIONS_H__	actions/vectors-actions.h	20;"	d
__VECTORS_COMMANDS_H__	actions/vectors-commands.h	20;"	d
__VECTORS_ENUMS_H__	vectors/vectors-enums.h	23;"	d
__VECTORS_EXPORT_DIALOG_H__	dialogs/vectors-export-dialog.h	20;"	d
__VECTORS_IMPORT_DIALOG_H__	dialogs/vectors-import-dialog.h	20;"	d
__VECTORS_OPTIONS_DIALOG_H__	dialogs/vectors-options-dialog.h	20;"	d
__VECTORS_TYPES_H__	vectors/vectors-types.h	23;"	d
__VIEW_ACTIONS_H__	actions/view-actions.h	20;"	d
__VIEW_COMMANDS_H__	actions/view-commands.h	20;"	d
__WIDGETS_ENUMS_H__	widgets/widgets-enums.h	20;"	d
__WIDGETS_TYPES_H__	widgets/widgets-types.h	20;"	d
__WINDOW_ACTIONS_H__	actions/window-actions.h	20;"	d
__WINDOW_COMMANDS_H__	actions/window-commands.h	20;"	d
__WINDOW_MENU_H__	menus/window-menu.h	20;"	d
__XCF_H__	xcf/xcf.h	20;"	d
__XCF_LOAD_H__	xcf/xcf-load.h	20;"	d
__XCF_PRIVATE_H__	xcf/xcf-private.h	20;"	d
__XCF_READ_H__	xcf/xcf-read.h	20;"	d
__XCF_SAVE_H__	xcf/xcf-save.h	20;"	d
__XCF_SEEK_H__	xcf/xcf-seek.h	20;"	d
__XCF_WRITE_H__	xcf/xcf-write.h	20;"	d
__YES_I_NEED_GIMP_PLUG_IN_MANAGER_CALL__	plug-in/gimppluginmanager-call.c	45;"	d	file:
__YES_I_NEED_GIMP_PLUG_IN_MANAGER_CALL__	plug-in/gimppluginmanager-restore.c	42;"	d	file:
__YES_I_NEED_GIMP_PLUG_IN_MANAGER_CALL__	plug-in/gimppluginprocedure.c	36;"	d	file:
__YES_I_NEED_GIMP_PLUG_IN_MANAGER_CALL__	plug-in/gimptemporaryprocedure.c	30;"	d	file:
__dbus_glib_marshal_gimp_MARSHAL_H__	widgets/gimpdbusservice-glue.h	5;"	d
__gimp_marshal_MARSHAL_H__	core/gimpmarshal.h	3;"	d
__init__	composite/ns.py	/^    def __init__(self, objfile=None):$/;"	m	class:nmx
__uint64	composite/gimp-composite-x86.h	/^typedef struct { uint64 __uint64[2]; } uint128;$/;"	m	struct:__anon38
_gimp_composite_generic	composite/gimp-composite-generic-installer.c	/^} _gimp_composite_generic[] = {$/;"	v	typeref:struct:install_table	file:
_gimp_composite_mmx	composite/gimp-composite-mmx-installer.c	/^} _gimp_composite_mmx[] = {$/;"	v	typeref:struct:install_table	file:
_gimp_composite_sse	composite/gimp-composite-sse-installer.c	/^} _gimp_composite_sse[] = {$/;"	v	typeref:struct:install_table	file:
_gimp_composite_sse2	composite/gimp-composite-sse2-installer.c	/^} _gimp_composite_sse2[] = {$/;"	v	typeref:struct:install_table	file:
_gimp_paintbrush_motion	paint/gimppaintbrush.c	/^_gimp_paintbrush_motion (GimpPaintCore    *paint_core,$/;"	f
_gimp_unit_get_abbreviation	core/gimpunit.c	/^_gimp_unit_get_abbreviation (Gimp     *gimp,$/;"	f
_gimp_unit_get_deletion_flag	core/gimpunit.c	/^_gimp_unit_get_deletion_flag (Gimp     *gimp,$/;"	f
_gimp_unit_get_digits	core/gimpunit.c	/^_gimp_unit_get_digits (Gimp     *gimp,$/;"	f
_gimp_unit_get_factor	core/gimpunit.c	/^_gimp_unit_get_factor (Gimp     *gimp,$/;"	f
_gimp_unit_get_identifier	core/gimpunit.c	/^_gimp_unit_get_identifier (Gimp     *gimp,$/;"	f
_gimp_unit_get_number_of_built_in_units	core/gimpunit.c	/^_gimp_unit_get_number_of_built_in_units (Gimp *gimp)$/;"	f
_gimp_unit_get_number_of_units	core/gimpunit.c	/^_gimp_unit_get_number_of_units (Gimp *gimp)$/;"	f
_gimp_unit_get_plural	core/gimpunit.c	/^_gimp_unit_get_plural (Gimp     *gimp,$/;"	f
_gimp_unit_get_singular	core/gimpunit.c	/^_gimp_unit_get_singular (Gimp     *gimp,$/;"	f
_gimp_unit_get_symbol	core/gimpunit.c	/^_gimp_unit_get_symbol (Gimp     *gimp,$/;"	f
_gimp_unit_get_user_unit	core/gimpunit.c	/^_gimp_unit_get_user_unit (Gimp     *gimp,$/;"	f	file:
_gimp_unit_new	core/gimpunit.c	/^_gimp_unit_new (Gimp        *gimp,$/;"	f
_gimp_unit_set_deletion_flag	core/gimpunit.c	/^_gimp_unit_set_deletion_flag (Gimp     *gimp,$/;"	f
_stdcall	main.c	413;"	d	file:
a	base/siox.c	/^  gfloat a;$/;"	m	struct:__anon7	file:
a	composite/gimp-composite-regression.h	/^  guint16  a;$/;"	m	struct:__anon24
a	composite/gimp-composite-regression.h	/^  guint16  a;$/;"	m	struct:__anon26
a	composite/gimp-composite-regression.h	/^  guint32  a;$/;"	m	struct:__anon28
a	composite/gimp-composite-regression.h	/^  guint32  a;$/;"	m	struct:__anon30
a	composite/gimp-composite-regression.h	/^  guint8  a;$/;"	m	struct:__anon20
a	composite/gimp-composite-regression.h	/^  guint8  a;$/;"	m	struct:__anon22
a	composite/gimp-composite-util.h	/^  guchar  a;$/;"	m	struct:__anon39
a	composite/gimp-composite-util.h	/^  guchar  a;$/;"	m	struct:__anon42
a	core/gimp-transform-resize.c	/^  Point   a, b, c, d;$/;"	m	struct:__anon164	file:
abbreviation	core/gimpunit.c	/^  gchar    *abbreviation;$/;"	m	struct:__anon105	file:
about_dialog_add_animation	dialogs/about-dialog.c	/^about_dialog_add_animation (GtkWidget       *vbox,$/;"	f	file:
about_dialog_add_message	dialogs/about-dialog.c	/^about_dialog_add_message (GtkWidget *vbox)$/;"	f	file:
about_dialog_anim_expose	dialogs/about-dialog.c	/^about_dialog_anim_expose (GtkWidget       *widget,$/;"	f	file:
about_dialog_create	dialogs/about-dialog.c	/^about_dialog_create (GimpContext *context)$/;"	f
about_dialog_load_logo	dialogs/about-dialog.c	/^about_dialog_load_logo (void)$/;"	f	file:
about_dialog_load_url	dialogs/about-dialog.c	/^about_dialog_load_url (GtkAboutDialog *dialog,$/;"	f	file:
about_dialog_map	dialogs/about-dialog.c	/^about_dialog_map (GtkWidget       *widget,$/;"	f	file:
about_dialog_reshuffle	dialogs/about-dialog.c	/^about_dialog_reshuffle (GimpAboutDialog *dialog)$/;"	f	file:
about_dialog_timer	dialogs/about-dialog.c	/^about_dialog_timer (gpointer data)$/;"	f	file:
about_dialog_unmap	dialogs/about-dialog.c	/^about_dialog_unmap (GtkWidget       *widget,$/;"	f	file:
abr_reach_8bim_section	core/gimpbrush-load.c	/^abr_reach_8bim_section (FILE        *abr,$/;"	f	file:
abr_read_char	core/gimpbrush-load.c	/^abr_read_char (FILE *file)$/;"	f	file:
abr_read_long	core/gimpbrush-load.c	/^abr_read_long (FILE *file)$/;"	f	file:
abr_read_short	core/gimpbrush-load.c	/^abr_read_short (FILE *file)$/;"	f	file:
abr_read_ucs2_text	core/gimpbrush-load.c	/^abr_read_ucs2_text (FILE *file)$/;"	f	file:
abr_rle_decode	core/gimpbrush-load.c	/^abr_rle_decode (FILE   *file,$/;"	f	file:
abr_supported	core/gimpbrush-load.c	/^abr_supported (AbrHeader *abr_hdr)$/;"	f	file:
accel_key	widgets/gimpactionview.c	/^  guint            accel_key;$/;"	m	struct:__anon373	file:
accel_mask	widgets/gimpactionview.c	/^  GdkModifierType  accel_mask;$/;"	m	struct:__anon373	file:
accel_path	widgets/gimpactionview.c	/^  gchar           *accel_path;$/;"	m	struct:__anon373	file:
accelerator	widgets/gimpactiongroup.h	/^  const gchar         *accelerator;$/;"	m	struct:_GimpPlugInActionEntry
accelerator	widgets/gimpactiongroup.h	/^  const gchar *accelerator;$/;"	m	struct:_GimpActionEntry
accelerator	widgets/gimpactiongroup.h	/^  const gchar *accelerator;$/;"	m	struct:_GimpEnumActionEntry
accelerator	widgets/gimpactiongroup.h	/^  const gchar *accelerator;$/;"	m	struct:_GimpRadioActionEntry
accelerator	widgets/gimpactiongroup.h	/^  const gchar *accelerator;$/;"	m	struct:_GimpStringActionEntry
accelerator	widgets/gimpactiongroup.h	/^  const gchar *accelerator;$/;"	m	struct:_GimpToggleActionEntry
accumPR	paint/gimpsmudge.h	/^  PixelRegion    accumPR;$/;"	m	struct:_GimpSmudge
accum_data	paint/gimpsmudge.h	/^  guchar        *accum_data;$/;"	m	struct:_GimpSmudge
action	core/gimp-user-install.c	/^  GimpUserInstallAction  action;$/;"	m	struct:__anon161	file:
action	widgets/gimpeditor.c	/^  GtkAction       *action;$/;"	m	struct:__anon346	file:
action_data_get_context	actions/actions.c	/^action_data_get_context (gpointer data)$/;"	f
action_data_get_display	actions/actions.c	/^action_data_get_display (gpointer data)$/;"	f
action_data_get_gimp	actions/actions.c	/^action_data_get_gimp (gpointer data)$/;"	f
action_data_get_image	actions/actions.c	/^action_data_get_image (gpointer data)$/;"	f
action_data_get_widget	actions/actions.c	/^action_data_get_widget (gpointer data)$/;"	f
action_factory	widgets/gimpmenufactory.h	/^  GimpActionFactory *action_factory;$/;"	m	struct:_GimpMenuFactory
action_group	widgets/gimpitemtreeview.h	/^  const gchar          *action_group;$/;"	m	struct:_GimpItemTreeViewClass
action_groups	actions/actions.c	/^static GimpActionFactoryEntry action_groups[] =$/;"	v	file:
action_groups	widgets/gimpmenufactory.h	/^  GList *action_groups;$/;"	m	struct:_GimpMenuFactoryEntry
action_object_1	tools/gimptoolcontrol.h	/^  gchar             *action_object_1;$/;"	m	struct:_GimpToolControl
action_object_2	tools/gimptoolcontrol.h	/^  gchar             *action_object_2;$/;"	m	struct:_GimpToolControl
action_select_object	actions/actions.c	/^action_select_object (GimpActionSelectType  select_type,$/;"	f
action_select_property	actions/actions.c	/^action_select_property (GimpActionSelectType  select_type,$/;"	f
action_select_value	actions/actions.c	/^action_select_value (GimpActionSelectType  select_type,$/;"	f
action_signals	widgets/gimpenumaction.c	/^static guint action_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
action_signals	widgets/gimppluginaction.c	/^static guint action_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
action_signals	widgets/gimpstringaction.c	/^static guint action_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
action_value_1	tools/gimptoolcontrol.h	/^  gchar             *action_value_1;$/;"	m	struct:_GimpToolControl
action_value_2	tools/gimptoolcontrol.h	/^  gchar             *action_value_2;$/;"	m	struct:_GimpToolControl
action_value_3	tools/gimptoolcontrol.h	/^  gchar             *action_value_3;$/;"	m	struct:_GimpToolControl
action_value_4	tools/gimptoolcontrol.h	/^  gchar             *action_value_4;$/;"	m	struct:_GimpToolControl
actions_added	display/gimpscalecombobox.h	/^  gboolean          actions_added;$/;"	m	struct:_GimpScaleComboBox
actions_exit	actions/actions.c	/^actions_exit (Gimp *gimp)$/;"	f
actions_init	actions/actions.c	/^actions_init (Gimp *gimp)$/;"	f
activate_action	widgets/gimpitemtreeview.h	/^  const gchar          *activate_action;$/;"	m	struct:_GimpItemTreeViewClass
activate_item	widgets/gimpcontainereditor.h	/^  void (* activate_item) (GimpContainerEditor *editor,$/;"	m	struct:_GimpContainerEditorClass
activate_item	widgets/gimpcontainerview.h	/^  void     (* activate_item) (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
activate_on_focus	config/gimpdisplayconfig.h	/^  gboolean            activate_on_focus;$/;"	m	struct:_GimpDisplayConfig
active	core/gimpimage.h	/^  gboolean           active[MAX_CHANNELS];  \/*  active channels              *\/$/;"	m	struct:_GimpImage
active	core/gimppdbprogress.h	/^  gboolean     active;$/;"	m	struct:_GimpPdbProgress
active	tools/gimptoolcontrol.h	/^  gboolean           active;             \/*  state of tool activity          *\/$/;"	m	struct:_GimpToolControl
active	widgets/gimpblobeditor.h	/^  gboolean             active;$/;"	m	struct:_GimpBlobEditor
active	widgets/gimpprogressbox.h	/^  gboolean    active;$/;"	m	struct:_GimpProgressBox
active_channel	core/gimpimage.h	/^  GimpChannel       *active_channel;        \/*  the active channel           *\/$/;"	m	struct:_GimpImage
active_channel	xcf/xcf-private.h	/^  GimpChannel        *active_channel;$/;"	m	struct:_XcfInfo
active_channel_changed	core/gimpimage.h	/^  void (* active_channel_changed)       (GimpImage            *image);$/;"	m	struct:_GimpImageClass
active_color	widgets/gimpfgbgeditor.h	/^  GimpActiveColor  active_color;$/;"	m	struct:_GimpFgBgEditor
active_layer	core/gimpimage.h	/^  GimpLayer         *active_layer;          \/*  the active layer             *\/$/;"	m	struct:_GimpImage
active_layer	xcf/xcf-private.h	/^  GimpLayer          *active_layer;$/;"	m	struct:_XcfInfo
active_layer_changed	core/gimpimage.h	/^  void (* active_layer_changed)         (GimpImage            *image);$/;"	m	struct:_GimpImageClass
active_modifier_key	tools/gimptool.h	/^  void          (* active_modifier_key) (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
active_modifier_state	tools/gimptool.h	/^  GdkModifierType  active_modifier_state;$/;"	m	struct:_GimpTool
active_only	dialogs/vectors-export-dialog.h	/^  gboolean   active_only;$/;"	m	struct:_VectorsExportDialog
active_picker	tools/gimplevelstool.h	/^  GtkWidget            *active_picker;$/;"	m	struct:_GimpLevelsTool
active_slider	tools/gimplevelstool.h	/^  gint                  active_slider;$/;"	m	struct:_GimpLevelsTool
active_slider	widgets/gimphistogrambox.h	/^  gint              active_slider;$/;"	m	struct:_GimpHistogramBox
active_tool	tools/tool_manager.c	/^  GimpTool *active_tool;$/;"	m	struct:_GimpToolManager	file:
active_vectors	core/gimpimage.h	/^  GimpVectors       *active_vectors;        \/*  the active vectors           *\/$/;"	m	struct:_GimpImage
active_vectors_changed	core/gimpimage.h	/^  void (* active_vectors_changed)       (GimpImage            *image);$/;"	m	struct:_GimpImageClass
actual_number_of_colors	core/gimpimage-convert.c	/^  int actual_number_of_colors;      \/* Number of colors actually needed  *\/$/;"	m	struct:_QuantizeObj	file:
add	core/gimpcontainer.h	/^  void         (* add)                (GimpContainer       *container,$/;"	m	struct:_GimpContainerClass
add	core/gimpparasitelist.h	/^  void (* add)    (GimpParasiteList *list,$/;"	m	struct:_GimpParasiteListClass
add_alpha_pixels	paint-funcs/paint-funcs-generic.h	/^add_alpha_pixels (const guchar *src,$/;"	f
add_alpha_region	paint-funcs/paint-funcs.c	/^add_alpha_region (PixelRegion *src,$/;"	f
add_button	widgets/gimpcolordisplayeditor.h	/^  GtkWidget             *add_button;$/;"	m	struct:_GimpColorDisplayEditor
add_button	widgets/gimpcolormapeditor.h	/^  GtkWidget       *add_button;$/;"	m	struct:_GimpColormapEditor
add_button	widgets/gimpcontrollerlist.h	/^  GtkWidget          *add_button;$/;"	m	struct:_GimpControllerList
add_item	widgets/gimpitemtreeview.h	/^  GimpAddItemFunc       add_item;$/;"	m	struct:_GimpItemTreeViewClass
add_lut	composite/gimp-composite-generic.c	/^static guchar  add_lut[511];$/;"	v	file:
add_lut	paint-funcs/paint-funcs-generic.h	/^static guchar  add_lut[511];$/;"	v
add_lut_func	base/lut-funcs.c	/^add_lut_func (gdouble *amount,$/;"	f	file:
add_lut_new	base/lut-funcs.c	/^add_lut_new (gdouble amount,$/;"	f
add_lut_setup	base/lut-funcs.c	/^add_lut_setup (GimpLut *lut,$/;"	f	file:
add_mask_type	dialogs/layer-add-mask-dialog.h	/^  GimpAddMaskType  add_mask_type;$/;"	m	struct:_LayerAddMaskDialog
add_pixels	paint-funcs/paint-funcs-generic.h	/^add_pixels (const guchar *src1,$/;"	f
add_rectangle	core/gimp-transform-resize.c	/^add_rectangle (Point      points[4],$/;"	f	file:
add_to_inhibit_string	core/gimp-modules.c	/^add_to_inhibit_string (gpointer data,$/;"	f	file:
add_to_palette	tools/gimpcolorpickeroptions.h	/^  gboolean           add_to_palette; \/* unused *\/$/;"	m	struct:_GimpColorPickerOptions
affect	composite/gimp-composite.h	/^  struct { gint opacity; gchar affect;   } replace;$/;"	m	struct:__anon33::__anon34
affect	paint-funcs/paint-funcs.c	/^  const gboolean       *affect;$/;"	m	struct:combine_regions_struct	file:
affect	paint-funcs/paint-funcs.c	/^  const gboolean       *affect;$/;"	m	struct:initial_regions_struct	file:
affect_alpha	paint-funcs/paint-funcs.c	/^  const guint   affect_alpha     : 1; \/*  does the layer mode affect the$/;"	m	struct:_LayerMode	file:
affect_opacity	composite/gimp-composite.h	/^  guchar affect_opacity;$/;"	m	struct:GimpCompositeOperationEffects
airbrush_default_invoker	pdb/paint_tools_cmds.c	/^airbrush_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
airbrush_invoker	pdb/paint_tools_cmds.c	/^airbrush_invoker (GimpProcedure     *procedure,$/;"	f	file:
align_mode	paint/gimpsourceoptions.h	/^  GimpSourceAlignMode  align_mode;$/;"	m	struct:_GimpSourceOptions
align_reference_type	tools/gimpaligntool.h	/^  GimpAlignReferenceType align_reference_type;$/;"	m	struct:_GimpAlignTool
align_type	tools/gimpaligntool.h	/^  GimpAlignmentType      align_type;$/;"	m	struct:_GimpAlignTool
all	core/gimpchannel.h	/^  void     (* all)           (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
all_button	widgets/gimpselectioneditor.h	/^  GtkWidget       *all_button;$/;"	m	struct:_GimpSelectionEditor
all_desc	core/gimpchannel.h	/^  const gchar *all_desc;$/;"	m	struct:_GimpChannelClass
allow_move	tools/gimpselectiontool.h	/^  gboolean       allow_move;$/;"	m	struct:_GimpSelectionTool
allow_non_utf8	core/gimpparamspecs.h	/^  guint            allow_non_utf8 : 1;$/;"	m	struct:_GimpParamSpecString
along_vectors_button	tools/gimptextoptions.h	/^  GtkWidget             *along_vectors_button;$/;"	m	struct:_GimpTextOptions
alpha	display/gimpdisplayshell-render.c	/^  const guint      *alpha;$/;"	m	struct:_RenderInfo	file:
alpha	tools/gimpcurvestool.h	/^  gboolean              alpha;$/;"	m	struct:_GimpCurvesTool
alpha	tools/gimplevelstool.h	/^  gboolean              alpha;$/;"	m	struct:_GimpLevelsTool
alpha_changed	core/gimpdrawable.h	/^  void (* alpha_changed)         (GimpDrawable         *drawable);$/;"	m	struct:_GimpDrawableClass
alpha_changed	core/gimpimage.h	/^  gboolean alpha_changed;$/;"	m	struct:_GimpImageFlushAccumulator
alpha_changed	core/gimpimage.h	/^  void (* alpha_changed)                (GimpImage            *image);$/;"	m	struct:_GimpImageClass
alpha_changed	core/gimpundo.h	/^  gboolean alpha_changed;$/;"	m	struct:_GimpUndoAccumulator
alpha_changed_handler_id	widgets/gimplayertreeview.h	/^  GQuark                alpha_changed_handler_id;$/;"	m	struct:_GimpLayerTreeView
alpha_dither	dialogs/convert-dialog.c	/^  gboolean                alpha_dither;$/;"	m	struct:__anon171	file:
alphamask	composite/gimp-composite-altivec.c	/^static const vector unsigned char alphamask = (const vector unsigned char)$/;"	v	file:
alphify	paint-funcs/paint-funcs.c	1342;"	d	file:
alphify	paint-funcs/paint-funcs.c	879;"	d	file:
anchor	text/gimptext-vectors.c	/^  GimpAnchor   *anchor;$/;"	m	struct:_RenderContext	file:
anchor_convert	vectors/gimpstroke.h	/^  void          (* anchor_convert)       (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
anchor_delete	vectors/gimpstroke.h	/^  void          (* anchor_delete)        (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
anchor_delete	vectors/gimpvectors.h	/^  void          (* anchor_delete)     (GimpVectors       *vectors,$/;"	m	struct:_GimpVectorsClass
anchor_get	vectors/gimpstroke.h	/^  GimpAnchor  * (* anchor_get)           (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
anchor_get	vectors/gimpvectors.h	/^  GimpAnchor  * (* anchor_get)        (const GimpVectors *vectors,$/;"	m	struct:_GimpVectorsClass
anchor_get_next	vectors/gimpstroke.h	/^  GimpAnchor  * (* anchor_get_next)      (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
anchor_insert	vectors/gimpstroke.h	/^  GimpAnchor  * (* anchor_insert)        (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
anchor_is_insertable	vectors/gimpstroke.h	/^  gboolean      (* anchor_is_insertable) (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
anchor_move_absolute	vectors/gimpstroke.h	/^  void          (* anchor_move_absolute) (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
anchor_move_relative	vectors/gimpstroke.h	/^  void          (* anchor_move_relative) (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
anchor_select	vectors/gimpstroke.h	/^  void          (* anchor_select)        (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
anchors	vectors/gimpstroke.h	/^  GList      *anchors;$/;"	m	struct:_GimpStroke
angle	core/gimpbrushgenerated.h	/^  gfloat                  angle;        \/* in degrees *\/$/;"	m	struct:_GimpBrushGenerated
angle	widgets/gimpblobeditor.h	/^  gdouble              angle;$/;"	m	struct:_GimpBlobEditor
angle1	tools/gimpmeasuretool.h	/^  gdouble          angle1;      \/*  first angle                *\/$/;"	m	struct:_GimpMeasureTool
angle2	tools/gimpmeasuretool.h	/^  gdouble          angle2;      \/*  second angle               *\/$/;"	m	struct:_GimpMeasureTool
angle_adj	tools/gimprotatetool.h	/^  GtkObject         *angle_adj;$/;"	m	struct:_GimpRotateTool
angle_data	widgets/gimpbrusheditor.h	/^  GtkAdjustment  *angle_data;$/;"	m	struct:_GimpBrushEditor
angle_label	tools/gimpmeasuretool.h	/^  GtkWidget       *angle_label[2];$/;"	m	struct:_GimpMeasureTool
anim_area	dialogs/about-dialog.c	/^  GtkWidget    *anim_area;$/;"	m	struct:__anon168	file:
animstep	dialogs/about-dialog.c	/^  gint          animstep;$/;"	m	struct:__anon168	file:
anti_erase	paint/gimperaseroptions.h	/^  gboolean          anti_erase;$/;"	m	struct:_GimpEraserOptions
anti_erase_indexed_pixels	paint-funcs/paint-funcs.c	/^anti_erase_indexed_pixels (const guchar   *src1,$/;"	f	file:
anti_erase_inten_pixels	paint-funcs/paint-funcs.c	/^anti_erase_inten_pixels (const guchar   *src1,$/;"	f	file:
antialias	core/gimpimage-contiguous-region.c	/^  gboolean             antialias;$/;"	m	struct:__anon100	file:
antialias	core/gimpscanconvert.c	/^  gboolean        antialias;$/;"	m	struct:_GimpScanConvert	file:
antialias	core/gimpstrokeoptions.h	/^  gboolean         antialias;$/;"	m	struct:_GimpStrokeOptions
antialias	text/gimptext.h	/^  gboolean               antialias;$/;"	m	struct:_GimpText
antialias	tools/gimpselectionoptions.h	/^  gboolean            antialias;$/;"	m	struct:_GimpSelectionOptions
antialias	tools/gimptextoptions.h	/^  gboolean               antialias;$/;"	m	struct:_GimpTextOptions
antialias_toggle	tools/gimpselectionoptions.h	/^  GtkWidget          *antialias_toggle;$/;"	m	struct:_GimpSelectionOptions
antialiasing	core/gimpbrush-load.c	/^  gchar    antialiasing;$/;"	m	struct:_AbrSampledBrushHeader	file:
app_abort	app.c	/^app_abort (gboolean     no_interface,$/;"	f
app_exit	app.c	/^app_exit (gint status)$/;"	f
app_exit_after_callback	app.c	/^app_exit_after_callback (Gimp      *gimp,$/;"	f	file:
app_init_update_none	app.c	/^app_init_update_none (const gchar *text1,$/;"	f	file:
app_libs_init	app.c	/^app_libs_init (GOptionContext *context,$/;"	f
app_run	app.c	/^app_run (const gchar         *full_prog_name,$/;"	f
application_mode	paint/gimppaintoptions.h	/^  GimpPaintApplicationMode  application_mode;$/;"	m	struct:_GimpPaintOptions
application_mode_save	paint/gimppaintoptions.h	/^  GimpPaintApplicationMode  application_mode_save;$/;"	m	struct:_GimpPaintOptions
applied	dialogs/fade-dialog.c	/^  gboolean              applied;$/;"	m	struct:__anon180	file:
apply	core/gimplayermaskpropundo.h	/^  gboolean      apply;$/;"	m	struct:_GimpLayerMaskPropUndo
apply_changed	core/gimplayermask.h	/^  void (* apply_changed) (GimpLayerMask *layer_mask);$/;"	m	struct:_GimpLayerMaskClass
apply_func	core/gimpimagemap.c	/^  GimpImageMapApplyFunc  apply_func;$/;"	m	struct:_GimpImageMap	file:
apply_indexed_layer_mode	paint-funcs/paint-funcs.c	/^apply_indexed_layer_mode (guchar                *src1,$/;"	f	file:
apply_layer_mode_replace	paint-funcs/paint-funcs.c	/^apply_layer_mode_replace (const guchar   *src1,$/;"	f	file:
apply_layer_mode_struct	paint-funcs/paint-funcs-generic.h	/^struct apply_layer_mode_struct$/;"	s
apply_mask	core/gimplayermask.h	/^  gboolean     apply_mask;    \/*  controls mask application  *\/$/;"	m	struct:_GimpLayerMask
apply_mask_to_alpha_channel	paint-funcs/paint-funcs-generic.h	/^apply_mask_to_alpha_channel (guchar       *src,$/;"	f
apply_mask_to_region	paint-funcs/paint-funcs.c	/^apply_mask_to_region (PixelRegion *src,$/;"	f
apply_mask_to_sub_region	paint-funcs/paint-funcs.c	/^apply_mask_to_sub_region (gint        *opacityp,$/;"	f	file:
apply_region	core/gimpdrawable.h	/^  void (* apply_region)          (GimpDrawable         *drawable,$/;"	m	struct:_GimpDrawableClass
arcto_circleparam	vectors/gimpbezierstroke.c	/^arcto_circleparam (gdouble h, gdouble *y)$/;"	f	file:
arcto_ellipsesegment	vectors/gimpbezierstroke.c	/^arcto_ellipsesegment (gdouble     radius_x,$/;"	f	file:
arcto_subdivide	vectors/gimpbezierstroke.c	/^arcto_subdivide (gdouble t, gint part, GimpCoords *p)$/;"	f	file:
area	core/gimp-transform-resize.c	/^  gdouble area;$/;"	m	struct:__anon164	file:
area	dialogs/resize-dialog.c	/^  GtkWidget          *area;$/;"	m	struct:__anon170	file:
area	gui/splash.c	/^  GtkWidget      *area;$/;"	m	struct:__anon201	file:
area_columns	widgets/gimptoolbox.h	/^  gint           area_columns;$/;"	m	struct:_GimpToolbox
area_rows	widgets/gimptoolbox.h	/^  gint           area_rows;$/;"	m	struct:_GimpToolbox
area_wbox	widgets/gimptoolbox.h	/^  GtkWidget     *area_wbox;$/;"	m	struct:_GimpToolbox
args	pdb/gimpprocedure.h	/^  GParamSpec      **args;           \/* Array of procedure arguments   *\/$/;"	m	struct:_GimpProcedure
args	plug-in/gimpplugindebug.c	/^  gchar **args;$/;"	m	struct:_GimpPlugInDebug	file:
arrow	widgets/gimpdevicestatus.c	/^  GtkWidget      *arrow;$/;"	m	struct:_GimpDeviceStatusEntry	file:
art_stroke	vectors/gimpstroke.h	/^  void          (* art_stroke)           (const GimpStroke      *stroke);$/;"	m	struct:_GimpStrokeClass
artists	dialogs/authors.h	/^static const gchar * const artists[] =$/;"	v
as_new	main.c	/^static gboolean            as_new            = FALSE;$/;"	v	file:
aspect	core/gimp-transform-resize.c	/^  gdouble aspect;$/;"	m	struct:__anon164	file:
aspect	tools/gimptransformtool.h	/^  gdouble         aspect;          \/*  original aspect ratio             *\/$/;"	m	struct:_GimpTransformTool
aspect	widgets/gimpblobeditor.h	/^  gdouble              aspect;$/;"	m	struct:_GimpBlobEditor
aspect_button	widgets/gimptemplateeditor.h	/^  GtkWidget     *aspect_button;$/;"	m	struct:_GimpTemplateEditor
aspect_button_box	tools/gimprectangleoptions.h	/^  GtkWidget                  *aspect_button_box;$/;"	m	struct:_GimpRectangleOptionsPrivate
aspect_denominator	tools/gimprectangleoptions.h	/^  gdouble                     aspect_denominator;$/;"	m	struct:_GimpRectangleOptionsPrivate
aspect_history	tools/gimprectangleoptions.h	/^  GtkListStore               *aspect_history;$/;"	m	struct:_GimpRectangleOptionsPrivate
aspect_numerator	tools/gimprectangleoptions.h	/^  gdouble                     aspect_numerator;$/;"	m	struct:_GimpRectangleOptionsPrivate
aspect_ratio	core/gimpbrushgenerated.h	/^  gfloat                  aspect_ratio; \/* y\/x        *\/$/;"	m	struct:_GimpBrushGenerated
aspect_ratio	widgets/gtkwrapbox.h	/^  gfloat           aspect_ratio; \/* 1\/256..256 *\/$/;"	m	struct:_GtkWrapBox
aspect_ratio_data	widgets/gimpbrusheditor.h	/^  GtkAdjustment  *aspect_ratio_data;$/;"	m	struct:_GimpBrushEditor
author	pdb/gimppdb-query.c	/^  gchar    *author;$/;"	m	struct:_PDBStrings	file:
author	pdb/gimpprocedure.h	/^  gchar            *author;         \/* Author field                   *\/$/;"	m	struct:_GimpProcedure
author_regex	pdb/gimppdb-query.c	/^  regex_t   author_regex;$/;"	m	struct:_PDBQuery	file:
authors	dialogs/authors.h	/^static const gchar * const authors[] =$/;"	v
auto_button	widgets/gimpmenudock.h	/^  GtkWidget     *auto_button;$/;"	m	struct:_GimpMenuDock
auto_follow_active	widgets/gimpmenudock.h	/^  gboolean       auto_follow_active;$/;"	m	struct:_GimpMenuDock
auto_rename	text/gimptextlayer.h	/^  gboolean      auto_rename;$/;"	m	struct:_GimpTextLayer
auto_resize	tools/gimpmagnifyoptions.h	/^  gboolean          auto_resize;$/;"	m	struct:_GimpMagnifyOptions
auto_shrink	tools/gimprectangleoptions.h	/^  gboolean                    auto_shrink;$/;"	m	struct:_GimpRectangleOptionsPrivate
auto_shrink	tools/gimpselectionoptions.h	/^  gboolean            auto_shrink;$/;"	m	struct:_GimpSelectionOptions
auto_shrink_button	tools/gimprectangleoptions.h	/^  GtkWidget                  *auto_shrink_button;$/;"	m	struct:_GimpRectangleOptionsPrivate
auto_snap_to	tools/gimptoolcontrol.h	/^  gboolean           auto_snap_to;       \/*  snap to guides automatically    *\/$/;"	m	struct:_GimpToolControl
autohint	text/gimptext.h	/^  gboolean               autohint;$/;"	m	struct:_GimpText
autohint	tools/gimptextoptions.h	/^  gboolean               autohint;$/;"	m	struct:_GimpTextOptions
autosave	config/gimprc.h	/^  gboolean          autosave;$/;"	m	struct:_GimpRc
aux_info	widgets/gimpsessioninfo-dockable.h	/^  GList        *aux_info;$/;"	m	struct:_GimpSessionInfoDockable
aux_info	widgets/gimpsessioninfo.h	/^  GList                  *aux_info;$/;"	m	struct:_GimpSessionInfo
average_radius	tools/gimpcoloroptions.h	/^  gdouble              average_radius;$/;"	m	struct:_GimpColorOptions
axes	widgets/gimpdeviceinfo.h	/^  GdkAxisUse    *axes;$/;"	m	struct:_GimpDeviceInfo
axisType	core/gimpimage-convert.c	/^typedef enum {AXIS_UNDEF, AXIS_RED, AXIS_BLUE, AXIS_GREEN} axisType;$/;"	t	typeref:enum:__anon107	file:
b	base/siox.c	/^  gfloat b;$/;"	m	struct:__anon7	file:
b	composite/gimp-composite-regression.h	/^  guint16  b;$/;"	m	struct:__anon25
b	composite/gimp-composite-regression.h	/^  guint16  b;$/;"	m	struct:__anon26
b	composite/gimp-composite-regression.h	/^  guint32  b;$/;"	m	struct:__anon29
b	composite/gimp-composite-regression.h	/^  guint32  b;$/;"	m	struct:__anon30
b	composite/gimp-composite-regression.h	/^  guint8  b;$/;"	m	struct:__anon21
b	composite/gimp-composite-regression.h	/^  guint8  b;$/;"	m	struct:__anon22
b	composite/gimp-composite-util.h	/^  guchar  b;$/;"	m	struct:__anon39
b	composite/gimp-composite-util.h	/^  guchar  b;$/;"	m	struct:__anon40
b	core/gimp-transform-resize.c	/^  Point   a, b, c, d;$/;"	m	struct:__anon164	file:
b	core/gimppalette-import.c	/^  guchar b;$/;"	m	struct:_ImgColors	file:
b_adj	core/gimppalette-import.c	/^  guint  b_adj;$/;"	m	struct:_ImgColors	file:
b_lookup	base/color-balance.h	/^  guchar   b_lookup[256];$/;"	m	struct:_ColorBalance
background	core/gimpcontext.h	/^  GimpRGB               background;$/;"	m	struct:_GimpContext
background	tools/gimpforegroundselectoptions.h	/^  gboolean              background;$/;"	m	struct:_GimpForegroundSelectOptions
background	tools/gimpforegroundselecttool.c	/^  gboolean     background;$/;"	m	struct:__anon286	file:
background	widgets/gimpdevicestatus.c	/^  GtkWidget      *background;$/;"	m	struct:_GimpDeviceStatusEntry	file:
background_changed	core/gimpcontext.h	/^  void (* background_changed) (GimpContext          *context,$/;"	m	struct:_GimpContextClass
backing_store	core/gimplayer.h	/^    TileManager  *backing_store;      \/*  for obscured regions           *\/$/;"	m	struct:_GimpLayer::__anon125
base_config	base/base.c	/^static GimpBaseConfig *base_config = NULL;$/;"	v	file:
base_dir	text/gimptext.h	/^  GimpTextDirection      base_dir;$/;"	m	struct:_GimpText
base_dir	tools/gimptextoptions.h	/^  GimpTextDirection      base_dir;$/;"	m	struct:_GimpTextOptions
base_dir	widgets/gimptexteditor.h	/^  GimpTextDirection  base_dir;$/;"	m	struct:_GimpTextEditor
base_exit	base/base.c	/^base_exit (void)$/;"	f
base_iface	core/gimppickable.h	/^  GTypeInterface base_iface;$/;"	m	struct:_GimpPickableInterface
base_iface	core/gimpprogress.h	/^  GTypeInterface base_iface;$/;"	m	struct:_GimpProgressInterface
base_iface	tools/gimprectangleoptions.h	/^  GTypeInterface base_iface;$/;"	m	struct:_GimpRectangleOptionsInterface
base_iface	tools/gimprectangletool.h	/^  GTypeInterface base_iface;$/;"	m	struct:_GimpRectangleToolInterface
base_iface	widgets/gimpcontainerview.h	/^  GTypeInterface base_iface;$/;"	m	struct:_GimpContainerViewInterface
base_iface	widgets/gimpdocked.h	/^  GTypeInterface base_iface;$/;"	m	struct:_GimpDockedInterface
base_init	base/base.c	/^base_init (GimpBaseConfig *config,$/;"	f
base_item	widgets/gimpundoeditor.h	/^  GimpUndo        *base_item;$/;"	m	struct:_GimpUndoEditor
base_num_processors_notify	base/base.c	/^base_num_processors_notify (GObject    *config,$/;"	f	file:
base_tile_cache_size_notify	base/base.c	/^base_tile_cache_size_notify (GObject    *config,$/;"	f	file:
base_toast_old_swap_files	base/base.c	/^base_toast_old_swap_files (const gchar *swap_path)$/;"	f	file:
base_type	core/gimpimage.h	/^  GimpImageBaseType  base_type;             \/*  base gimp_image type         *\/$/;"	m	struct:_GimpImage
base_type	core/gimpimageundo.h	/^  GimpImageBaseType  base_type;$/;"	m	struct:_GimpImageUndo
base_x	core/gimpprojection.h	/^  gint    base_x;$/;"	m	struct:_GimpProjectionIdleRender
base_y	core/gimpprojection.h	/^  gint    base_y;$/;"	m	struct:_GimpProjectionIdleRender
basename	widgets/gimpuimanager.h	/^  gchar                  *basename;$/;"	m	struct:_GimpUIManagerUIEntry
batch_commands	main.c	/^static const gchar       **batch_commands    = NULL;$/;"	v	file:
batch_exit_after_callback	batch.c	/^batch_exit_after_callback (Gimp     *gimp,$/;"	f	file:
batch_interpreter	main.c	/^static const gchar        *batch_interpreter = NULL;$/;"	v	file:
batch_run	batch.c	/^batch_run (Gimp         *gimp,$/;"	f
batch_run_cmd	batch.c	/^batch_run_cmd (Gimp          *gimp,$/;"	f	file:
be_verbose	core/gimp.h	/^  gboolean                be_verbose;$/;"	m	struct:_Gimp
be_verbose	main.c	/^static gboolean            be_verbose        = FALSE;$/;"	v	file:
behind_indexed_pixels	paint-funcs/paint-funcs.c	/^behind_indexed_pixels (const guchar   *src1,$/;"	f	file:
behind_inten_pixels	paint-funcs/paint-funcs.c	/^behind_inten_pixels (const guchar   *src1,$/;"	f	file:
berror	core/gimpimage-convert.c	/^  guint64 berror;$/;"	m	struct:__anon108	file:
bg	base/pixel-surround.c	/^  guchar      *bg;         \/*  buffer filled with background color  *\/$/;"	m	struct:_PixelSurround	file:
bg	core/gimpdrawable-blend.c	/^  GimpRGB           fg, bg;$/;"	m	struct:__anon117	file:
bg_stock_id	widgets/gimpviewrenderer.h	/^  gchar              *bg_stock_id;$/;"	m	struct:_GimpViewRenderer
bgcolor	core/gimpgrid.h	/^  GimpRGB        bgcolor;$/;"	m	struct:_GimpGrid
bgdist	base/siox.c	/^  gfloat bgdist;$/;"	m	struct:__anon8	file:
bgsig	base/siox.c	/^  lab          *bgsig;$/;"	m	struct:_SioxState	file:
bgsiglen	base/siox.c	/^  gint          bgsiglen;$/;"	m	struct:_SioxState	file:
bitmap	widgets/gimpcursor.c	/^  GdkBitmap    *bitmap;$/;"	m	struct:_GimpCursor	file:
bits	composite/gimp-composite.h	/^  gulong  bits;$/;"	m	struct:GimpCompositeOptions
bits	widgets/gimpcursor.c	/^  const guchar *bits;$/;"	m	struct:_GimpCursor	file:
black_color	widgets/gimpcontainergridview.c	/^static GimpRGB  black_color;$/;"	v	file:
black_color	widgets/gimpviewrenderer.c	/^static GimpRGB  black_color;$/;"	v	file:
blend	composite/gimp-composite.h	/^  struct { gint blend;                   } blend;$/;"	m	struct:__anon33	typeref:struct:__anon33::__anon36
blend	composite/gimp-composite.h	/^  struct { gint blend;                   } blend;$/;"	m	struct:__anon33::__anon36
blend_mode	core/gimpdrawable-blend.c	/^  GimpBlendMode     blend_mode;$/;"	m	struct:__anon117	file:
blend_options_gradient_type_notify	tools/gimpblendoptions.c	/^blend_options_gradient_type_notify (GimpBlendOptions *options,$/;"	f	file:
blend_pixels	paint-funcs/paint-funcs-generic.h	/^blend_pixels (const guchar *src1,$/;"	f
blend_region	paint-funcs/paint-funcs.c	/^blend_region (PixelRegion *src1,$/;"	f
blink_counter	widgets/gimpdockable.h	/^  gint          blink_counter;$/;"	m	struct:_GimpDockable
blink_timeout_id	widgets/gimpdockable.h	/^  guint         blink_timeout_id;$/;"	m	struct:_GimpDockable
blob	base/siox.c	/^struct blob$/;"	s	file:
blob_angle	paint/gimpinkoptions.h	/^  gdouble           blob_angle;$/;"	m	struct:_GimpInkOptions
blob_aspect	paint/gimpinkoptions.h	/^  gdouble           blob_aspect;$/;"	m	struct:_GimpInkOptions
blob_bounds	paint/gimpink-blob.c	/^blob_bounds (Blob *b,$/;"	f
blob_convex_union	paint/gimpink-blob.c	/^blob_convex_union (Blob *b1,$/;"	f
blob_diamond	paint/gimpink-blob.c	/^blob_diamond (gdouble xc,$/;"	f
blob_duplicate	paint/gimpink-blob.c	/^blob_duplicate (Blob *b)$/;"	f
blob_ellipse	paint/gimpink-blob.c	/^blob_ellipse (gdouble xc,$/;"	f
blob_fill	paint/gimpink-blob.c	/^blob_fill (Blob     *b,$/;"	f	file:
blob_image_new	tools/gimpinkoptions-gui.c	/^blob_image_new (GimpInkBlobType blob_type)$/;"	f	file:
blob_make_convex	paint/gimpink-blob.c	/^blob_make_convex (Blob     *b,$/;"	f	file:
blob_new	paint/gimpink-blob.c	/^blob_new (gint y,$/;"	f	file:
blob_polygon	paint/gimpink-blob.c	/^blob_polygon (BlobPoint *points,$/;"	f
blob_square	paint/gimpink-blob.c	/^blob_square (gdouble xc,$/;"	f
blob_type	paint/gimpinkoptions.h	/^  GimpInkBlobType   blob_type;$/;"	m	struct:_GimpInkOptions
block_aspect	widgets/gimptemplateeditor.h	/^  gboolean       block_aspect;$/;"	m	struct:_GimpTemplateEditor
block_height	widgets/gimpdasheditor.h	/^  gint               block_height;$/;"	m	struct:_GimpDashEditor
block_width	widgets/gimpdasheditor.h	/^  gint               block_width;$/;"	m	struct:_GimpDashEditor
blue	core/gimpimage-convert.c	/^  int blue;$/;"	m	struct:_Color	file:
blur_32	tools/gimpiscissorstool.c	/^static const gfloat blur_32[9] =$/;"	v	file:
blurb	core/gimppaintinfo.h	/^  gchar            *blurb;$/;"	m	struct:_GimpPaintInfo
blurb	core/gimptoolinfo.h	/^  gchar               *blurb;$/;"	m	struct:_GimpToolInfo
blurb	pdb/gimppdb-query.c	/^  gchar    *blurb;$/;"	m	struct:_PDBStrings	file:
blurb	pdb/gimpprocedure.h	/^  gchar            *blurb;          \/* Short procedure description    *\/$/;"	m	struct:_GimpProcedure
blurb	widgets/gimpcontrollerkeyboard.c	/^  gchar                 *blurb;$/;"	m	struct:_KeyboardEvent	file:
blurb	widgets/gimpcontrollerwheel.c	/^  gchar                    *blurb;$/;"	m	struct:_WheelEvent	file:
blurb	widgets/gimpdialogfactory.h	/^  gchar             *blurb;$/;"	m	struct:_GimpDialogFactoryEntry
blurb	widgets/gimpdockable.h	/^  gchar        *blurb;$/;"	m	struct:_GimpDockable
blurb_regex	pdb/gimppdb-query.c	/^  regex_t   blurb_regex;$/;"	m	struct:_PDBQuery	file:
bold_attrs	widgets/gimplayertreeview.h	/^  PangoAttrList        *bold_attrs;$/;"	m	struct:_GimpLayerTreeView
book_added	widgets/gimpdock.h	/^  void    (* book_added)   (GimpDock       *dock,$/;"	m	struct:_GimpDockClass
book_removed	widgets/gimpdock.h	/^  void    (* book_removed) (GimpDock       *dock,$/;"	m	struct:_GimpDockClass
books	widgets/gimpsessioninfo.h	/^  GList                  *books;$/;"	m	struct:_GimpSessionInfo
border	core/gimpchannel.h	/^  void     (* border)        (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
border	text/gimptext.h	/^  gdouble                border;$/;"	m	struct:_GimpText
border_color	widgets/gimpviewrenderer.h	/^  GimpRGB             border_color;$/;"	m	struct:_GimpViewRenderer
border_desc	core/gimpchannel.h	/^  const gchar *border_desc;$/;"	m	struct:_GimpChannelClass
border_region	paint-funcs/paint-funcs.c	/^border_region (PixelRegion *src,$/;"	f
border_type	widgets/gimpviewrenderer.h	/^  GimpViewBorderType  border_type;$/;"	m	struct:_GimpViewRenderer
border_width	widgets/gimphistogramview.h	/^  gint                   border_width;$/;"	m	struct:_GimpHistogramView
border_width	widgets/gimpviewrenderer.h	/^  gint                border_width;$/;"	m	struct:_GimpViewRenderer
boundary	core/gimpchannel.h	/^  gboolean (* boundary)      (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
boundary_add_seg	base/boundary.c	/^boundary_add_seg (Boundary *boundary,$/;"	f	file:
boundary_find	base/boundary.c	/^boundary_find (PixelRegion  *maskPR,$/;"	f
boundary_free	base/boundary.c	/^boundary_free (Boundary *boundary,$/;"	f	file:
boundary_known	core/gimpchannel.h	/^  gboolean      boundary_known;    \/*  is the current boundary valid  *\/$/;"	m	struct:_GimpChannel
boundary_known	core/gimplayer.h	/^    gboolean      boundary_known;     \/*  is the current boundary valid  *\/$/;"	m	struct:_GimpLayer::__anon125
boundary_new	base/boundary.c	/^boundary_new (PixelRegion *PR)$/;"	f	file:
boundary_simplify	base/boundary.c	/^boundary_simplify (BoundSeg *sorted_segs,$/;"	f
boundary_sort	base/boundary.c	/^boundary_sort (const BoundSeg *segs,$/;"	f
bounds	core/gimpbrush-load.c	/^  gint16   bounds[4];$/;"	m	struct:_AbrSampledBrushHeader	file:
bounds	core/gimpchannel.h	/^  gboolean (* bounds)        (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
bounds_known	core/gimpchannel.h	/^  gboolean      bounds_known;      \/*  recalculate the bounds?        *\/$/;"	m	struct:_GimpChannel
bounds_long	core/gimpbrush-load.c	/^  gint32   bounds_long[4];$/;"	m	struct:_AbrSampledBrushHeader	file:
box	core/gimpimage-convert.c	/^} box, *boxptr;$/;"	t	typeref:struct:__anon108	file:
box	dialogs/resize-dialog.c	/^  GtkWidget          *box;$/;"	m	struct:__anon170	file:
box	dialogs/scale-dialog.c	/^  GtkWidget             *box;$/;"	m	struct:__anon173	file:
box	tools/gimpscaletool.h	/^  GtkWidget         *box;$/;"	m	struct:_GimpScaleTool
box	widgets/gimphistogrameditor.h	/^  GtkWidget            *box;$/;"	m	struct:_GimpHistogramEditor
box	widgets/gimpmessagedialog.h	/^  GimpMessageBox  *box;$/;"	m	struct:_GimpMessageDialog
box	widgets/gimpprogressdialog.h	/^  GtkWidget  *box;$/;"	m	struct:_GimpProgressDialog
box_height	text/gimptext.h	/^  gdouble                box_height;$/;"	m	struct:_GimpText
box_mode	text/gimptext.h	/^  GimpTextBoxMode        box_mode;$/;"	m	struct:_GimpText
box_unit	text/gimptext.h	/^  GimpUnit               box_unit;$/;"	m	struct:_GimpText
box_width	text/gimptext.h	/^  gdouble                box_width;$/;"	m	struct:_GimpText
boxptr	core/gimpimage-convert.c	/^} box, *boxptr;$/;"	t	typeref:struct:__anon108	file:
bpp	base/pixel-surround.c	/^  gint         bpp;        \/*  bytes per pixel in tile manager      *\/$/;"	m	struct:_PixelSurround	file:
bpp	base/siox.c	/^  gint          bpp;$/;"	m	struct:_SioxState	file:
bpp	base/tile-manager-private.h	/^  gint               bpp;           \/*  the bpp of each tile                 *\/$/;"	m	struct:_TileManager
bpp	base/tile-private.h	/^  guchar  bpp;          \/* the bytes per pixel (1, 2, 3 or 4) *\/$/;"	m	struct:_Tile
brightness	base/lut-funcs.c	/^  gdouble brightness;$/;"	m	struct:__anon15	file:
brightness	tools/gimpbrightnesscontrasttool.h	/^  gdouble           brightness;$/;"	m	struct:_GimpBrightnessContrastTool
brightness_contrast_brightness_changed	tools/gimpbrightnesscontrasttool.c	/^brightness_contrast_brightness_changed (GtkAdjustment              *adjustment,$/;"	f	file:
brightness_contrast_contrast_changed	tools/gimpbrightnesscontrasttool.c	/^brightness_contrast_contrast_changed (GtkAdjustment              *adjustment,$/;"	f	file:
brightness_contrast_invoker	pdb/color_cmds.c	/^brightness_contrast_invoker (GimpProcedure     *procedure,$/;"	f	file:
brightness_contrast_lut_func	base/lut-funcs.c	/^brightness_contrast_lut_func (BrightnessContrastLutData *data,$/;"	f	file:
brightness_contrast_lut_new	base/lut-funcs.c	/^brightness_contrast_lut_new (gdouble brightness,$/;"	f
brightness_contrast_lut_setup	base/lut-funcs.c	/^brightness_contrast_lut_setup (GimpLut *lut,$/;"	f
brightness_contrast_update	tools/gimpbrightnesscontrasttool.c	/^brightness_contrast_update (GimpBrightnessContrastTool *bc_tool,$/;"	f	file:
brightness_data	tools/gimpbrightnesscontrasttool.h	/^  GtkAdjustment    *brightness_data;$/;"	m	struct:_GimpBrightnessContrastTool
brush	core/gimpcontext.h	/^  GimpBrush            *brush;$/;"	m	struct:_GimpContext
brush	paint/gimpbrushcore.h	/^  GimpBrush     *brush;$/;"	m	struct:_GimpBrushCore
brush	widgets/gimpdevicestatus.c	/^  GtkWidget      *brush;$/;"	m	struct:_GimpDeviceStatusEntry	file:
brush_bound_height	paint/gimpbrushcore.h	/^  gint           brush_bound_height;$/;"	m	struct:_GimpBrushCore
brush_bound_segs	paint/gimpbrushcore.h	/^  BoundSeg      *brush_bound_segs;$/;"	m	struct:_GimpBrushCore
brush_bound_width	paint/gimpbrushcore.h	/^  gint           brush_bound_width;$/;"	m	struct:_GimpBrushCore
brush_box_new	widgets/gimpviewablebox.c	/^brush_box_new (GimpContainer *container,$/;"	f	file:
brush_changed	core/gimpcontext.h	/^  void (* brush_changed)      (GimpContext          *context,$/;"	m	struct:_GimpContextClass
brush_delete_invoker	pdb/brush_cmds.c	/^brush_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_duplicate_invoker	pdb/brush_cmds.c	/^brush_duplicate_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_editor_actions	actions/brush-editor-actions.c	/^static const GimpActionEntry brush_editor_actions[] =$/;"	v	file:
brush_editor_actions_setup	actions/brush-editor-actions.c	/^brush_editor_actions_setup (GimpActionGroup *group)$/;"	f
brush_editor_actions_update	actions/brush-editor-actions.c	/^brush_editor_actions_update (GimpActionGroup *group,$/;"	f
brush_editor_toggle_actions	actions/brush-editor-actions.c	/^static const GimpToggleActionEntry brush_editor_toggle_actions[] =$/;"	v	file:
brush_factory	core/gimp.h	/^  GimpDataFactory        *brush_factory;$/;"	m	struct:_Gimp
brush_get_angle_invoker	pdb/brush_cmds.c	/^brush_get_angle_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_get_aspect_ratio_invoker	pdb/brush_cmds.c	/^brush_get_aspect_ratio_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_get_hardness_invoker	pdb/brush_cmds.c	/^brush_get_hardness_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_get_info_invoker	pdb/brush_cmds.c	/^brush_get_info_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_get_pixels_invoker	pdb/brush_cmds.c	/^brush_get_pixels_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_get_radius_invoker	pdb/brush_cmds.c	/^brush_get_radius_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_get_shape_invoker	pdb/brush_cmds.c	/^brush_get_shape_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_get_spacing_invoker	pdb/brush_cmds.c	/^brush_get_spacing_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_get_spikes_invoker	pdb/brush_cmds.c	/^brush_get_spikes_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_is_editable_invoker	pdb/brush_cmds.c	/^brush_is_editable_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_is_generated_invoker	pdb/brush_cmds.c	/^brush_is_generated_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_name	core/gimpcontext.h	/^  gchar                *brush_name;$/;"	m	struct:_GimpContext
brush_new_invoker	pdb/brush_cmds.c	/^brush_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_path	config/gimpcoreconfig.h	/^  gchar                  *brush_path;$/;"	m	struct:_GimpCoreConfig
brush_path_writable	config/gimpcoreconfig.h	/^  gchar                  *brush_path_writable;$/;"	m	struct:_GimpCoreConfig
brush_preview_clicked	widgets/gimptoolbox-indicator-area.c	/^brush_preview_clicked (GtkWidget       *widget,$/;"	f	file:
brush_preview_drop_brush	widgets/gimptoolbox-indicator-area.c	/^brush_preview_drop_brush (GtkWidget    *widget,$/;"	f	file:
brush_rename_invoker	pdb/brush_cmds.c	/^brush_rename_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_scale	paint/gimppaintoptions.h	/^  gdouble                   brush_scale;$/;"	m	struct:_GimpPaintOptions
brush_set_angle_invoker	pdb/brush_cmds.c	/^brush_set_angle_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_set_aspect_ratio_invoker	pdb/brush_cmds.c	/^brush_set_aspect_ratio_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_set_hardness_invoker	pdb/brush_cmds.c	/^brush_set_hardness_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_set_radius_invoker	pdb/brush_cmds.c	/^brush_set_radius_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_set_shape_invoker	pdb/brush_cmds.c	/^brush_set_shape_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_set_spacing_invoker	pdb/brush_cmds.c	/^brush_set_spacing_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_set_spikes_invoker	pdb/brush_cmds.c	/^brush_set_spikes_invoker (GimpProcedure     *procedure,$/;"	f	file:
brush_signals	core/gimpbrush.c	/^static guint brush_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
brush_view_size	paint/gimppaintoptions.h	/^  GimpViewSize              brush_view_size;$/;"	m	struct:_GimpPaintOptions
brush_view_type	paint/gimppaintoptions.h	/^  GimpViewType              brush_view_type;$/;"	m	struct:_GimpPaintOptions
brush_x	tools/gimpbrushtool.h	/^  gdouble        brush_x;$/;"	m	struct:_GimpBrushTool
brush_y	tools/gimpbrushtool.h	/^  gdouble        brush_y;$/;"	m	struct:_GimpBrushTool
brushes	core/gimpbrushpipe.h	/^  GimpBrush       **brushes;$/;"	m	struct:_GimpBrushPipe
brushes_actions	actions/brushes-actions.c	/^static const GimpActionEntry brushes_actions[] =$/;"	v	file:
brushes_actions_setup	actions/brushes-actions.c	/^brushes_actions_setup (GimpActionGroup *group)$/;"	f
brushes_actions_update	actions/brushes-actions.c	/^brushes_actions_update (GimpActionGroup *group,$/;"	f
brushes_close_popup_invoker	pdb/brush_select_cmds.c	/^brushes_close_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
brushes_edit_actions	actions/brushes-actions.c	/^static const GimpStringActionEntry brushes_edit_actions[] =$/;"	v	file:
brushes_get_brush_data_invoker	pdb/brushes_cmds.c	/^brushes_get_brush_data_invoker (GimpProcedure     *procedure,$/;"	f	file:
brushes_get_brush_invoker	pdb/brushes_cmds.c	/^brushes_get_brush_invoker (GimpProcedure     *procedure,$/;"	f	file:
brushes_get_list_invoker	pdb/brushes_cmds.c	/^brushes_get_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
brushes_get_spacing_invoker	pdb/brushes_cmds.c	/^brushes_get_spacing_invoker (GimpProcedure     *procedure,$/;"	f	file:
brushes_popup_invoker	pdb/brush_select_cmds.c	/^brushes_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
brushes_refresh_invoker	pdb/brushes_cmds.c	/^brushes_refresh_invoker (GimpProcedure     *procedure,$/;"	f	file:
brushes_set_popup_invoker	pdb/brush_select_cmds.c	/^brushes_set_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
brushes_set_spacing_invoker	pdb/brushes_cmds.c	/^brushes_set_spacing_invoker (GimpProcedure     *procedure,$/;"	f	file:
buf	base/pixel-surround.c	/^  guchar      *buf;        \/*  buffer used for combining tile data  *\/$/;"	m	struct:_PixelSurround	file:
buf	core/gimppreviewcache.c	/^  TempBuf *buf;$/;"	m	struct:__anon110	file:
buf	core/gimpscanconvert.c	/^  guchar         *buf;$/;"	m	struct:_GimpScanConvert	file:
buf	widgets/gimpcolorbar.h	/^  guchar          buf[3 * 256];$/;"	m	struct:_GimpColorBar
buffer	core/gimpcontext.h	/^  GimpBuffer           *buffer;$/;"	m	struct:_GimpContext
buffer	widgets/gimpclipboard.c	/^  GimpBuffer     *buffer;$/;"	m	struct:_GimpClipboard	file:
buffer	widgets/gimpimagecommenteditor.h	/^  GtkTextBuffer         *buffer;$/;"	m	struct:_GimpImageCommentEditor
buffer	widgets/gimpimageprofileview.h	/^  GtkTextBuffer         *buffer;$/;"	m	struct:_GimpImageProfileView
buffer	widgets/gimpprofilechooserdialog.h	/^  GtkTextBuffer        *buffer;$/;"	m	struct:_GimpProfileChooserDialog
buffer	widgets/gimpviewrenderer.h	/^  guchar             *buffer;$/;"	m	struct:_GimpViewRenderer
buffer_changed	core/gimp.h	/^  void     (* buffer_changed) (Gimp               *gimp);$/;"	m	struct:_GimpClass
buffer_changed	core/gimpcontext.h	/^  void (* buffer_changed)     (GimpContext          *context,$/;"	m	struct:_GimpContextClass
buffer_delete_invoker	pdb/buffer_cmds.c	/^buffer_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
buffer_get_bytes_invoker	pdb/buffer_cmds.c	/^buffer_get_bytes_invoker (GimpProcedure     *procedure,$/;"	f	file:
buffer_get_height_invoker	pdb/buffer_cmds.c	/^buffer_get_height_invoker (GimpProcedure     *procedure,$/;"	f	file:
buffer_get_image_type_invoker	pdb/buffer_cmds.c	/^buffer_get_image_type_invoker (GimpProcedure     *procedure,$/;"	f	file:
buffer_get_width_invoker	pdb/buffer_cmds.c	/^buffer_get_width_invoker (GimpProcedure     *procedure,$/;"	f	file:
buffer_name	core/gimpcontext.h	/^  gchar                *buffer_name;$/;"	m	struct:_GimpContext
buffer_rename_invoker	pdb/buffer_cmds.c	/^buffer_rename_invoker (GimpProcedure     *procedure,$/;"	f	file:
buffers_actions	actions/buffers-actions.c	/^static const GimpActionEntry buffers_actions[] =$/;"	v	file:
buffers_actions_setup	actions/buffers-actions.c	/^buffers_actions_setup (GimpActionGroup *group)$/;"	f
buffers_actions_update	actions/buffers-actions.c	/^buffers_actions_update (GimpActionGroup *group,$/;"	f
buffers_delete_cmd_callback	actions/buffers-commands.c	/^buffers_delete_cmd_callback (GtkAction *action,$/;"	f
buffers_get_list_invoker	pdb/buffer_cmds.c	/^buffers_get_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
buffers_paste	actions/buffers-commands.c	/^buffers_paste (GimpBufferView *view,$/;"	f	file:
buffers_paste_as_new_cmd_callback	actions/buffers-commands.c	/^buffers_paste_as_new_cmd_callback (GtkAction *action,$/;"	f
buffers_paste_cmd_callback	actions/buffers-commands.c	/^buffers_paste_cmd_callback (GtkAction *action,$/;"	f
buffers_paste_into_cmd_callback	actions/buffers-commands.c	/^buffers_paste_into_cmd_callback (GtkAction *action,$/;"	f
burn_lut	composite/gimp-composite-generic.c	/^static guchar  burn_lut[256][256];$/;"	v	file:
burn_pixels	paint-funcs/paint-funcs-generic.h	/^burn_pixels (const guchar *src1,$/;"	f
busy	core/gimp.h	/^  gint                    busy;$/;"	m	struct:_Gimp
busy	widgets/gimpfiledialog.h	/^  gboolean              busy;$/;"	m	struct:_GimpFileDialog
busy_idle_id	core/gimp.h	/^  guint                   busy_idle_id;$/;"	m	struct:_Gimp
button	dialogs/module-dialog.c	/^  GtkWidget    *button;$/;"	m	struct:__anon182	file:
button	tools/gimpaligntool.h	/^  GtkWidget             *button[ALIGN_TOOL_NUM_BUTTONS];$/;"	m	struct:_GimpAlignTool
button	widgets/gimpview-popup.c	/^  gint          button;$/;"	m	struct:_GimpViewPopup	file:
button_append_modifier	tools/gimpvectoroptions.c	/^button_append_modifier (GtkWidget       *button,$/;"	f	file:
button_box	widgets/gimpeditor.h	/^  GtkWidget       *button_box;$/;"	m	struct:_GimpEditor
button_label	dialogs/module-dialog.c	/^  GtkWidget    *button_label;$/;"	m	struct:__anon182	file:
button_press	tools/gimptool.h	/^  void          (* button_press)        (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
button_press_before_focus	display/gimpdisplayshell.h	/^  gboolean          button_press_before_focus;$/;"	m	struct:_GimpDisplayShell
button_press_coords	tools/gimptool.h	/^  GimpCoords       button_press_coords;$/;"	m	struct:_GimpTool
button_press_state	tools/gimptool.h	/^  GdkModifierType  button_press_state;$/;"	m	struct:_GimpTool
button_press_time	tools/gimptool.h	/^  guint32          button_press_time;$/;"	m	struct:_GimpTool
button_release	tools/gimptool.h	/^  void          (* button_release)      (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
button_view_size	widgets/gimpviewablebutton.h	/^  gint               button_view_size;$/;"	m	struct:_GimpViewableButton
button_with_stock	tools/gimpaligntool.c	/^button_with_stock (GimpAlignmentType  action,$/;"	f	file:
button_x	widgets/gimpview-popup.c	/^  gint          button_x;$/;"	m	struct:_GimpViewPopup	file:
button_y	widgets/gimpview-popup.c	/^  gint          button_y;$/;"	m	struct:_GimpViewPopup	file:
by_color_select_full_invoker	pdb/selection_tools_cmds.c	/^by_color_select_full_invoker (GimpProcedure     *procedure,$/;"	f	file:
by_color_select_invoker	pdb/selection_tools_cmds.c	/^by_color_select_invoker (GimpProcedure     *procedure,$/;"	f	file:
bytes	base/pixel-region.h	/^  gint         bytes;          \/*  bytes per pixel               *\/$/;"	m	struct:_PixelRegion
bytes	base/temp-buf.h	/^  gint    bytes;      \/*  the necessary info                             *\/$/;"	m	struct:_TempBuf
bytes	base/tile-pyramid.c	/^  gint           bytes;$/;"	m	struct:_TilePyramid	file:
bytes	core/gimpbrush-header.h	/^  guint32   bytes;        \/*  depth of brush in bytes--always 1 *\/$/;"	m	struct:_BrushHeader
bytes	core/gimpdrawable-blend.c	/^  gint         bytes;$/;"	m	struct:__anon118	file:
bytes	core/gimpdrawable.h	/^  gint           bytes;              \/* bytes per pixel                *\/$/;"	m	struct:_GimpDrawable
bytes	core/gimppattern-header.h	/^  guint32   bytes;        \/*  depth of pattern in bytes  *\/$/;"	m	struct:_PatternHeader
bytes	plug-in/gimppluginmanager-data.c	/^  gint32  bytes;$/;"	m	struct:_GimpPlugInData	file:
bytes	widgets/gimpviewrenderer.h	/^  gint                bytes;$/;"	m	struct:_GimpViewRenderer
bytes1	paint-funcs/paint-funcs-generic.h	/^  guint              bytes1 : 3;$/;"	m	struct:apply_layer_mode_struct
bytes2	paint-funcs/paint-funcs-generic.h	/^  guint              bytes2 : 3;$/;"	m	struct:apply_layer_mode_struct
c	core/gimp-transform-resize.c	/^  Point   a, b, c, d;$/;"	m	struct:__anon164	file:
cache	base/siox.c	/^  GHashTable   *cache;$/;"	m	struct:_SioxState	file:
cache	core/gimpdatafactory.c	/^  GHashTable      *cache;$/;"	m	struct:__anon52	file:
cache_invalid	paint/gimpbrushcore.h	/^  gboolean       cache_invalid;$/;"	m	struct:_GimpBrushCore
cached_num	base/tile-manager-private.h	/^  gint               cached_num;    \/*  number of cached tile                *\/$/;"	m	struct:_TileManager
cached_tile	base/tile-manager-private.h	/^  Tile              *cached_tile;   \/*  the actual cached tile               *\/$/;"	m	struct:_TileManager
calc_lab	base/siox.c	/^calc_lab (const guchar *src,$/;"	f	file:
calculate_curve	tools/gimpiscissorstool.c	/^calculate_curve (GimpTool *tool,$/;"	f	file:
calculate_link	tools/gimpiscissorstool.c	/^calculate_link (TileManager *gradient_map,$/;"	f	file:
calibrate_entry	dialogs/resolution-calibrate-dialog.c	/^static GtkWidget *calibrate_entry = NULL;$/;"	v	file:
calibrate_xres	dialogs/resolution-calibrate-dialog.c	/^static gdouble    calibrate_xres  = 1.0;$/;"	v	file:
calibrate_yres	dialogs/resolution-calibrate-dialog.c	/^static gdouble    calibrate_yres  = 1.0;$/;"	v	file:
call_mode	plug-in/gimpplugin.h	/^  GimpPlugInCallMode   call_mode;       \/*  QUERY, INIT or RUN                *\/$/;"	m	struct:_GimpPlugIn
callback	core/gimpcontainer.c	/^  GCallback  callback;$/;"	m	struct:_GimpContainerHandler	file:
callback	dialogs/image-scale-dialog.c	/^  GimpScaleCallback      callback;$/;"	m	struct:__anon167	file:
callback	dialogs/print-size-dialog.c	/^  GimpResolutionCallback  callback;$/;"	m	struct:__anon183	file:
callback	dialogs/resize-dialog.c	/^  GimpResizeCallback  callback;$/;"	m	struct:__anon170	file:
callback	dialogs/scale-dialog.c	/^  GimpScaleCallback      callback;$/;"	m	struct:__anon173	file:
callback	widgets/gimpactiongroup.h	/^  GCallback    callback;$/;"	m	struct:_GimpActionEntry
callback	widgets/gimpactiongroup.h	/^  GCallback    callback;$/;"	m	struct:_GimpToggleActionEntry
callback_busy	core/gimppdbprogress.h	/^  gboolean     callback_busy;$/;"	m	struct:_GimpPdbProgress
callback_busy	widgets/gimppdbdialog.h	/^  gboolean         callback_busy;$/;"	m	struct:_GimpPdbDialog
callback_data	core/gimpcontainer.c	/^  gpointer   callback_data;$/;"	m	struct:_GimpContainerHandler	file:
callback_name	core/gimppdbprogress.h	/^  gchar       *callback_name;$/;"	m	struct:_GimpPdbProgress
callback_name	widgets/gimppdbdialog.h	/^  gchar           *callback_name;$/;"	m	struct:_GimpPdbDialog
caller_context	widgets/gimppdbdialog.h	/^  GimpContext     *caller_context;$/;"	m	struct:_GimpPdbDialog
can_change_accels	config/gimpguiconfig.h	/^  gboolean             can_change_accels;$/;"	m	struct:_GimpGuiConfig
cancel	core/gimpprogress.h	/^  void           (* cancel)     (GimpProgress        *progress);$/;"	m	struct:_GimpProgressInterface
cancel	tools/gimprectangletool.h	/^  void     (* cancel)            (GimpRectangleTool *rect_tool);$/;"	m	struct:_GimpRectangleToolInterface
cancel	widgets/gimpcontainerpopup.h	/^  void (* cancel)  (GimpContainerPopup *popup);$/;"	m	struct:_GimpContainerPopupClass
cancel_button	display/gimpstatusbar.h	/^  GtkWidget        *cancel_button;$/;"	m	struct:_GimpStatusbar
cancelable	widgets/gimpprogressbox.h	/^  gboolean    cancelable;$/;"	m	struct:_GimpProgressBox
canceled	widgets/gimpfiledialog.h	/^  gboolean              canceled;$/;"	m	struct:_GimpFileDialog
canvas	display/gimpdisplayshell.h	/^  GtkWidget        *canvas;            \/*  GimpCanvas widget                  *\/$/;"	m	struct:_GimpDisplayShell
canvas_buf	paint/gimppaintcore.h	/^  TempBuf     *canvas_buf;       \/*  the buffer to paint pixels to       *\/$/;"	m	struct:_GimpPaintCore
canvas_tiles	paint/gimppaintcore.h	/^  TileManager *canvas_tiles;     \/*  the buffer to paint the mask to     *\/$/;"	m	struct:_GimpPaintCore
canvas_tiles_to_canvas_buf	paint/gimppaintcore.c	/^canvas_tiles_to_canvas_buf (GimpPaintCore *core)$/;"	f	file:
cap_style	core/gimpstrokeoptions.h	/^  GimpCapStyle     cap_style;$/;"	m	struct:_GimpStrokeOptions
cardinality	base/siox.c	/^  gint   cardinality;$/;"	m	struct:__anon7	file:
cbrt	base/cpercep.c	65;"	d	file:
cell_height	widgets/gimpviewrendererpalette.h	/^  gint              cell_height;$/;"	m	struct:_GimpViewRendererPalette
cell_size	widgets/gimpviewrendererpalette.h	/^  gint              cell_size;$/;"	m	struct:_GimpViewRendererPalette
cell_width	widgets/gimpviewrendererpalette.h	/^  gint              cell_width;$/;"	m	struct:_GimpViewRendererPalette
cellsize	widgets/gimpcolormapeditor.h	/^  gint             cellsize;$/;"	m	struct:_GimpColormapEditor
center_x	tools/gimpcolortool.h	/^  gint               center_x;$/;"	m	struct:_GimpColorTool
center_x	tools/gimprectangleoptions.h	/^  gdouble                     center_x;$/;"	m	struct:_GimpRectangleOptionsPrivate
center_x_on_fixed_center	tools/gimprectangletool.c	/^  gint                    center_x_on_fixed_center;$/;"	m	struct:_GimpRectangleToolPrivate	file:
center_y	tools/gimpcolortool.h	/^  gint               center_y;$/;"	m	struct:_GimpColorTool
center_y	tools/gimprectangleoptions.h	/^  gdouble                     center_y;$/;"	m	struct:_GimpRectangleOptionsPrivate
center_y_on_fixed_center	tools/gimprectangletool.c	/^  gint                    center_y_on_fixed_center;$/;"	m	struct:_GimpRectangleToolPrivate	file:
chain	dialogs/print-size-dialog.c	/^  GimpChainButton        *chain;$/;"	m	struct:__anon183	file:
chain_cell	widgets/gimpitemtreeview.h	/^  GtkCellRenderer       *chain_cell;$/;"	m	struct:_GimpItemTreeView
change_brush_spacing	widgets/gimpbrushfactoryview.h	/^  gboolean             change_brush_spacing;$/;"	m	struct:_GimpBrushFactoryView
change_notify	widgets/gimpdevices.c	/^  GimpDeviceChangeNotify  change_notify;$/;"	m	struct:_GimpDeviceManager	file:
changed	core/gimptoolpresets.h	/^  void (* changed) (GimpToolPresets *presets);$/;"	m	struct:_GimpToolPresetsClass
changed	vectors/gimpstroke.h	/^  void          (* changed)              (GimpStroke            *stroke);$/;"	m	struct:_GimpStrokeClass
changed	widgets/gimpdeviceinfo.h	/^  void (* changed) (GimpDeviceInfo *device_info);$/;"	m	struct:_GimpDeviceInfoClass
changed	widgets/gimpfileprocview.h	/^  void (* changed) (GimpFileProcView *view);$/;"	m	struct:_GimpFileProcViewClass
channel	dialogs/channel-options-dialog.h	/^  GimpChannel *channel;$/;"	m	struct:_ChannelOptionsDialog
channel	dialogs/layer-add-mask-dialog.h	/^  GimpChannel     *channel;$/;"	m	struct:_LayerAddMaskDialog
channel	tools/gimpcurvestool.h	/^  GimpHistogramChannel  channel;$/;"	m	struct:_GimpCurvesTool
channel	tools/gimplevelstool.h	/^  GimpHistogramChannel  channel;$/;"	m	struct:_GimpLevelsTool
channel	widgets/gimphistogramview.h	/^  GimpHistogramChannel   channel;$/;"	m	struct:_GimpHistogramView
channel	widgets/gimpviewrendererimage.h	/^  GimpChannelType     channel;$/;"	m	struct:_GimpViewRendererImage
channel_color	actions/channels-commands.c	/^static GimpRGB  channel_color = { 0.0, 0.0, 0.0, 0.5 };$/;"	v	file:
channel_color_changed_handler	core/gimpimage.h	/^  GQuark             channel_color_changed_handler;$/;"	m	struct:_GimpImage
channel_combine_masks_invoker	pdb/channel_cmds.c	/^channel_combine_masks_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_copy_invoker	pdb/channel_cmds.c	/^channel_copy_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_get_color_invoker	pdb/channel_cmds.c	/^channel_get_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_get_opacity_invoker	pdb/channel_cmds.c	/^channel_get_opacity_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_get_show_masked_invoker	pdb/channel_cmds.c	/^channel_get_show_masked_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_menu	tools/gimpcurvestool.h	/^  GtkWidget            *channel_menu;$/;"	m	struct:_GimpCurvesTool
channel_menu	tools/gimplevelstool.h	/^  GtkWidget            *channel_menu;$/;"	m	struct:_GimpLevelsTool
channel_name	actions/channels-commands.c	/^static gchar   *channel_name  = NULL;$/;"	v	file:
channel_name_changed_handler	core/gimpimage.h	/^  GQuark             channel_name_changed_handler;$/;"	m	struct:_GimpImage
channel_new_from_component_invoker	pdb/channel_cmds.c	/^channel_new_from_component_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_new_invoker	pdb/channel_cmds.c	/^channel_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_options_color_changed	dialogs/channel-options-dialog.c	/^channel_options_color_changed (GimpColorButton *button,$/;"	f	file:
channel_options_dialog_free	dialogs/channel-options-dialog.c	/^channel_options_dialog_free (ChannelOptionsDialog *options)$/;"	f	file:
channel_options_dialog_new	dialogs/channel-options-dialog.c	/^channel_options_dialog_new (GimpImage     *image,$/;"	f
channel_options_opacity_update	dialogs/channel-options-dialog.c	/^channel_options_opacity_update (GtkAdjustment *adjustment,$/;"	f	file:
channel_set_color_invoker	pdb/channel_cmds.c	/^channel_set_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_set_opacity_invoker	pdb/channel_cmds.c	/^channel_set_opacity_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_set_show_masked_invoker	pdb/channel_cmds.c	/^channel_set_show_masked_invoker (GimpProcedure     *procedure,$/;"	f	file:
channel_signals	core/gimpchannel.c	/^static guint channel_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
channel_update_handler	core/gimpimage.h	/^  GQuark             channel_update_handler;$/;"	m	struct:_GimpImage
channel_visible_handler	core/gimpimage.h	/^  GQuark             channel_visible_handler;$/;"	m	struct:_GimpImage
channels	core/gimpimage.h	/^  GimpContainer     *channels;              \/*  the list of masks            *\/$/;"	m	struct:_GimpImage
channels_actions	actions/channels-actions.c	/^static const GimpActionEntry channels_actions[] =$/;"	v	file:
channels_actions_setup	actions/channels-actions.c	/^channels_actions_setup (GimpActionGroup *group)$/;"	f
channels_actions_update	actions/channels-actions.c	/^channels_actions_update (GimpActionGroup *group,$/;"	f
channels_delete_cmd_callback	actions/channels-commands.c	/^channels_delete_cmd_callback (GtkAction *action,$/;"	f
channels_duplicate_cmd_callback	actions/channels-commands.c	/^channels_duplicate_cmd_callback (GtkAction *action,$/;"	f
channels_edit_attributes_cmd_callback	actions/channels-commands.c	/^channels_edit_attributes_cmd_callback (GtkAction *action,$/;"	f
channels_edit_channel_response	actions/channels-commands.c	/^channels_edit_channel_response (GtkWidget            *widget,$/;"	f	file:
channels_label	widgets/gimpimagepropview.h	/^  GtkWidget *channels_label;$/;"	m	struct:_GimpImagePropView
channels_lower_cmd_callback	actions/channels-commands.c	/^channels_lower_cmd_callback (GtkAction *action,$/;"	f
channels_lower_to_bottom_cmd_callback	actions/channels-commands.c	/^channels_lower_to_bottom_cmd_callback (GtkAction *action,$/;"	f
channels_new_channel_response	actions/channels-commands.c	/^channels_new_channel_response (GtkWidget            *widget,$/;"	f	file:
channels_new_cmd_callback	actions/channels-commands.c	/^channels_new_cmd_callback (GtkAction *action,$/;"	f
channels_new_last_vals_cmd_callback	actions/channels-commands.c	/^channels_new_last_vals_cmd_callback (GtkAction *action,$/;"	f
channels_raise_cmd_callback	actions/channels-commands.c	/^channels_raise_cmd_callback (GtkAction *action,$/;"	f
channels_raise_to_top_cmd_callback	actions/channels-commands.c	/^channels_raise_to_top_cmd_callback (GtkAction *action,$/;"	f
channels_to_selection_actions	actions/channels-actions.c	/^static const GimpEnumActionEntry channels_to_selection_actions[] =$/;"	v	file:
channels_to_selection_cmd_callback	actions/channels-commands.c	/^channels_to_selection_cmd_callback (GtkAction *action,$/;"	f
check_mod	display/gimpdisplayshell-render.c	/^static guint   check_mod   = 0;$/;"	v	file:
check_param_spec	widgets/gimppropwidgets.c	/^check_param_spec (GObject     *object,$/;"	f	file:
check_param_spec_w	widgets/gimppropwidgets.c	/^check_param_spec_w (GObject     *object,$/;"	f	file:
check_shift	display/gimpdisplayshell-render.c	/^static guint   check_shift = 0;$/;"	v	file:
child_limit	widgets/gtkwrapbox.h	/^  guint            child_limit;$/;"	m	struct:_GtkWrapBox
children	widgets/gtkhwrapbox.c	/^  GSList  *children;$/;"	m	struct:_Line	file:
children	widgets/gtkvwrapbox.c	/^  GSList  *children;$/;"	m	struct:_Line	file:
children	widgets/gtkwrapbox.h	/^  GtkWrapBoxChild *children;$/;"	m	struct:_GtkWrapBox
children_type	core/gimpcontainer.h	/^  GType                children_type;$/;"	m	struct:_GimpContainer
classresult	base/siox.c	/^} classresult;$/;"	t	typeref:struct:__anon8	file:
clean	core/gimpimage.h	/^  void (* clean)                        (GimpImage            *image,$/;"	m	struct:_GimpImageClass
clean_list	base/tile-cache.c	/^static TileList      clean_list      = { NULL, NULL };$/;"	v	file:
cleanups	plug-in/gimppluginprocframe.h	/^  GList         *cleanups;$/;"	m	struct:_GimpPlugInProcFrame
clear	core/gimpchannel.h	/^  void     (* clear)         (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
clear	core/gimpcontainer.h	/^  void         (* clear)              (GimpContainer       *container);$/;"	m	struct:_GimpContainerClass
clear_all_selected_objects	tools/gimpaligntool.c	/^clear_all_selected_objects (GimpAlignTool *align_tool)$/;"	f	file:
clear_button	widgets/gimperrorconsole.h	/^  GtkWidget     *clear_button;$/;"	m	struct:_GimpErrorConsole
clear_button	widgets/gimpundoeditor.h	/^  GtkWidget       *clear_button;$/;"	m	struct:_GimpUndoEditor
clear_desc	core/gimpchannel.h	/^  const gchar *clear_desc;$/;"	m	struct:_GimpChannelClass
clear_items	widgets/gimpcontainerview.h	/^  void     (* clear_items)   (GimpContainerView *view);$/;"	m	struct:_GimpContainerViewInterface
clear_selected_object	tools/gimpaligntool.c	/^clear_selected_object (GObject       *object,$/;"	f	file:
click_target	widgets/gimpfgbgeditor.h	/^  gint             click_target;$/;"	m	struct:_GimpFgBgEditor
clickable	widgets/gimpview.h	/^  guint             clickable : 1;$/;"	m	struct:_GimpView
clicked	widgets/gimpcellrendererviewable.h	/^  void (* clicked) (GimpCellRendererViewable *cell,$/;"	m	struct:_GimpCellRendererViewableClass
clicked	widgets/gimpview.h	/^  void        (* clicked)        (GimpView        *view,$/;"	m	struct:_GimpViewClass
clicked_component	widgets/gimpcomponenteditor.h	/^  GimpChannelType    clicked_component;$/;"	m	struct:_GimpComponentEditor
clicked_on_curve	tools/gimpiscissorstool.c	/^clicked_on_curve (GimpIscissorsTool *iscissors,$/;"	f	file:
clicked_on_vertex	tools/gimpiscissorstool.c	/^clicked_on_vertex (GimpIscissorsTool *iscissors,$/;"	f	file:
clin	core/gimpimage-convert.c	/^  Color clin[256];                  \/* .. converted back to linear space *\/$/;"	m	struct:_QuantizeObj	file:
clip	core/gimpscanconvert.c	/^  gboolean        clip;$/;"	m	struct:_GimpScanConvert	file:
clip	tools/gimptransformoptions.h	/^  gboolean                  clip;$/;"	m	struct:_GimpTransformOptions
clip_h	core/gimpscanconvert.c	/^  gint            clip_h;$/;"	m	struct:_GimpScanConvert	file:
clip_w	core/gimpscanconvert.c	/^  gint            clip_w;$/;"	m	struct:_GimpScanConvert	file:
clip_x	core/gimpscanconvert.c	/^  gint            clip_x;$/;"	m	struct:_GimpScanConvert	file:
clip_y	core/gimpscanconvert.c	/^  gint            clip_y;$/;"	m	struct:_GimpScanConvert	file:
clone_default_invoker	pdb/paint_tools_cmds.c	/^clone_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
clone_invoker	pdb/paint_tools_cmds.c	/^clone_invoker (GimpProcedure     *procedure,$/;"	f	file:
clone_mode	paint/gimpperspectivecloneoptions.h	/^  GimpPerspectiveCloneMode  clone_mode;$/;"	m	struct:_GimpPerspectiveCloneOptions
clone_type	paint/gimpcloneoptions.h	/^  GimpCloneType      clone_type;$/;"	m	struct:_GimpCloneOptions
close	vectors/gimpstroke.h	/^  void          (* close)                (GimpStroke            *stroke);$/;"	m	struct:_GimpStrokeClass
close_after_saving	widgets/gimpfiledialog.h	/^  gboolean              close_after_saving;$/;"	m	struct:_GimpFileDialog
close_all_dialog_new	dialogs/quit-dialog.c	/^close_all_dialog_new (Gimp *gimp)$/;"	f
close_dialog	display/gimpdisplayshell.h	/^  GtkWidget        *close_dialog;      \/*  close dialog                       *\/$/;"	m	struct:_GimpDisplayShell
closed	vectors/gimpstroke.h	/^  gboolean    closed;$/;"	m	struct:_GimpStroke
cmap	core/gimpimage-convert.c	/^  Color cmap[256];                  \/* colormap created by quantization  *\/$/;"	m	struct:_QuantizeObj	file:
cmap	core/gimpimage.h	/^  guchar            *cmap;                  \/*  colormap--for indexed        *\/$/;"	m	struct:_GimpImage
cmd	vectors/gimpvectors-import.c	/^  gchar        cmd;       \/* current command (lowercase)                 *\/$/;"	m	struct:__anon305	file:
cmp_segptr_xy1	base/boundary.c	/^cmp_segptr_xy1 (const BoundSeg **seg_ptr_a, const BoundSeg **seg_ptr_b)$/;"	f	file:
cmp_segptr_xy1_addr	base/boundary.c	/^cmp_segptr_xy1_addr (const BoundSeg **seg_ptr_a,$/;"	f	file:
cmp_segptr_xy2	base/boundary.c	/^cmp_segptr_xy2 (const BoundSeg **seg_ptr_a,$/;"	f	file:
cmp_segptr_xy2_addr	base/boundary.c	/^cmp_segptr_xy2_addr (const BoundSeg **seg_ptr_a,$/;"	f	file:
cmp_xy	base/boundary.c	/^cmp_xy(gint ax, gint ay, gint bx, gint by)$/;"	f	file:
col_index	widgets/gimpcolormapeditor.h	/^  gint             col_index;$/;"	m	struct:_GimpColormapEditor
col_value	tools/gimpcurvestool.h	/^  gint                  col_value[5];$/;"	m	struct:_GimpCurvesTool
col_width	widgets/gimppaletteeditor.h	/^  gint              col_width;$/;"	m	struct:_GimpPaletteEditor
collect_extensions	plug-in/gimpinterpreterdb.c	/^collect_extensions (const gchar *ext,$/;"	f	file:
color	base/threshold.h	/^  gboolean color;$/;"	m	struct:_Threshold
color	core/gimpchannel.h	/^  GimpRGB       color;             \/*  Also stores the opacity        *\/$/;"	m	struct:_GimpChannel
color	core/gimpchannelpropundo.h	/^  GimpRGB       color;$/;"	m	struct:_GimpChannelPropUndo
color	core/gimpgradient-load.c	/^  GimpRGB       color;$/;"	m	struct:__anon152	file:
color	core/gimpgradient.h	/^  GimpGradientSegmentColor color;         \/*  Segment's coloring type      *\/$/;"	m	struct:_GimpGradientSegment
color	core/gimpimage-contiguous-region.c	/^  guchar               color[MAX_CHANNELS];$/;"	m	struct:__anon100	file:
color	core/gimppalette.h	/^  GimpRGB  color;$/;"	m	struct:_GimpPaletteEntry
color	paint/gimppaintoptions.h	/^  gboolean  color;$/;"	m	struct:_GimpPressureOptions
color	text/gimptext.h	/^  GimpRGB                color;$/;"	m	struct:_GimpText
color	tools/gimpcurvestool.h	/^  gboolean              color;$/;"	m	struct:_GimpCurvesTool
color	tools/gimplevelstool.h	/^  gboolean              color;$/;"	m	struct:_GimpLevelsTool
color	widgets/gimpaction.h	/^  GimpRGB      *color;$/;"	m	struct:_GimpAction
color	widgets/gimpcolorframe.h	/^  GimpRGB             color;$/;"	m	struct:_GimpColorFrame
color	widgets/gimppaletteeditor.h	/^  GimpPaletteEntry *color;$/;"	m	struct:_GimpPaletteEditor
color_area	tools/gimpcolorpickertool.h	/^  GtkWidget     *color_area;$/;"	m	struct:_GimpColorPickerTool
color_area	widgets/gimpcolorframe.h	/^  GtkWidget          *color_area;$/;"	m	struct:_GimpColorFrame
color_area	widgets/gimptoolbox-color-area.c	/^static GtkWidget       *color_area          = NULL;$/;"	v	file:
color_area	widgets/gimptoolbox.h	/^  GtkWidget     *color_area;$/;"	m	struct:_GimpToolbox
color_area_color_clicked	widgets/gimptoolbox-color-area.c	/^color_area_color_clicked (GimpFgBgEditor  *editor,$/;"	f	file:
color_area_dialog_update	widgets/gimptoolbox-color-area.c	/^color_area_dialog_update (GimpColorDialog      *dialog,$/;"	f	file:
color_balance	base/color-balance.c	/^color_balance (ColorBalance *cb,$/;"	f
color_balance	tools/gimpcolorbalancetool.h	/^  ColorBalance     *color_balance;$/;"	m	struct:_GimpColorBalanceTool
color_balance_cr_adjustment_update	tools/gimpcolorbalancetool.c	/^color_balance_cr_adjustment_update (GtkAdjustment        *adjustment,$/;"	f	file:
color_balance_create_lookup_tables	base/color-balance.c	/^color_balance_create_lookup_tables (ColorBalance *cb)$/;"	f
color_balance_init	base/color-balance.c	/^color_balance_init (ColorBalance *cb)$/;"	f
color_balance_invoker	pdb/color_cmds.c	/^color_balance_invoker (GimpProcedure     *procedure,$/;"	f	file:
color_balance_mg_adjustment_update	tools/gimpcolorbalancetool.c	/^color_balance_mg_adjustment_update (GtkAdjustment        *adjustment,$/;"	f	file:
color_balance_preserve_update	tools/gimpcolorbalancetool.c	/^color_balance_preserve_update (GtkWidget            *widget,$/;"	f	file:
color_balance_range_callback	tools/gimpcolorbalancetool.c	/^color_balance_range_callback (GtkWidget            *widget,$/;"	f	file:
color_balance_range_reset	base/color-balance.c	/^color_balance_range_reset (ColorBalance     *cb,$/;"	f
color_balance_range_reset_callback	tools/gimpcolorbalancetool.c	/^color_balance_range_reset_callback (GtkWidget            *widget,$/;"	f	file:
color_balance_transfer_init	base/color-balance.c	/^color_balance_transfer_init (void)$/;"	f	file:
color_balance_update	tools/gimpcolorbalancetool.c	/^color_balance_update (GimpColorBalanceTool *cb_tool,$/;"	f	file:
color_balance_yb_adjustment_update	tools/gimpcolorbalancetool.c	/^color_balance_yb_adjustment_update (GtkAdjustment        *adjustment,$/;"	f	file:
color_changed	core/gimpchannel.h	/^  void     (* color_changed) (GimpChannel     *channel);$/;"	m	struct:_GimpChannelClass
color_clicked	widgets/gimpfgbgeditor.h	/^  void (* color_clicked) (GimpFgBgEditor  *editor,$/;"	m	struct:_GimpFgBgEditorClass
color_dialog	widgets/gimpcolormapeditor.h	/^  GtkWidget       *color_dialog;$/;"	m	struct:_GimpColormapEditor
color_dialog	widgets/gimpcolorpanel.h	/^  GtkWidget       *color_dialog;$/;"	m	struct:_GimpColorPanel
color_dialog	widgets/gimpgradienteditor.h	/^  GtkWidget      *color_dialog;$/;"	m	struct:_GimpGradientEditor
color_dialog	widgets/gimppaletteeditor.h	/^  GtkWidget        *color_dialog;$/;"	m	struct:_GimpPaletteEditor
color_dialog	widgets/gimptoolbox-color-area.c	/^static GtkWidget       *color_dialog        = NULL;$/;"	v	file:
color_dialog_active	widgets/gimptoolbox-color-area.c	/^static gboolean         color_dialog_active = FALSE;$/;"	v	file:
color_dialog_signals	widgets/gimpcolordialog.c	/^static guint color_dialog_signals[LAST_SIGNAL] = { 0, };$/;"	v	file:
color_dialogs	widgets/gimpcolordialog.c	/^static GList *color_dialogs = NULL;$/;"	v	file:
color_dropped	widgets/gimppaletteview.h	/^  void (* color_dropped)   (GimpPaletteView  *view,$/;"	m	struct:_GimpPaletteViewClass
color_entry	widgets/gimpcolormapeditor.h	/^  GtkWidget       *color_entry;$/;"	m	struct:_GimpColormapEditor
color_erase_helper	paint-funcs/paint-funcs.c	/^color_erase_helper (GimpRGB       *src,$/;"	f	file:
color_erase_inten_pixels	paint-funcs/paint-funcs.c	/^color_erase_inten_pixels (const guchar   *src1,$/;"	f	file:
color_frame1	tools/gimpcolorpickertool.h	/^  GtkWidget     *color_frame1;$/;"	m	struct:_GimpColorPickerTool
color_frame2	tools/gimpcolorpickertool.h	/^  GtkWidget     *color_frame2;$/;"	m	struct:_GimpColorPickerTool
color_frame_1	widgets/gimpcursorview.h	/^  GtkWidget   *color_frame_1;$/;"	m	struct:_GimpCursorView
color_frame_2	widgets/gimpcursorview.h	/^  GtkWidget   *color_frame_2;$/;"	m	struct:_GimpCursorView
color_frames	widgets/gimpsamplepointeditor.h	/^  GtkWidget       *color_frames[4];$/;"	m	struct:_GimpSamplePointEditor
color_hash_hits	core/gimpimage-colorhash.c	/^static gint       color_hash_hits;$/;"	v	file:
color_hash_misses	core/gimpimage-colorhash.c	/^static gint       color_hash_misses;$/;"	v	file:
color_hash_table	core/gimpimage-colorhash.c	/^static ColorHash  color_hash_table[HASH_TABLE_SIZE];$/;"	v	file:
color_hbox	widgets/gimpcursorview.h	/^  GtkWidget   *color_hbox;$/;"	m	struct:_GimpCursorView
color_history	gui/color-history.c	/^static GimpRGB   color_history[COLOR_HISTORY_SIZE];$/;"	v	file:
color_history_add	gui/color-history.c	/^color_history_add (const GimpRGB *rgb)$/;"	f
color_history_add_from_rc	gui/color-history.c	/^color_history_add_from_rc (GimpRGB *color)$/;"	f	file:
color_history_get	gui/color-history.c	/^color_history_get (gint     index,$/;"	f
color_history_init	gui/color-history.c	/^color_history_init (void)$/;"	f	file:
color_history_initialized	gui/color-history.c	/^static gboolean  color_history_initialized = FALSE;$/;"	v	file:
color_history_restore	gui/color-history.c	/^color_history_restore (Gimp *gimp)$/;"	f
color_history_save	gui/color-history.c	/^color_history_save (Gimp *gimp)$/;"	f
color_history_set	gui/color-history.c	/^color_history_set (gint           index,$/;"	f
color_index	widgets/gimpcolorframe.h	/^  gint                color_index;$/;"	m	struct:_GimpColorFrame
color_management	config/gimpcoreconfig.h	/^  GimpColorConfig        *color_management;$/;"	m	struct:_GimpCoreConfig
color_name	widgets/gimppaletteeditor.h	/^  GtkWidget        *color_name;$/;"	m	struct:_GimpPaletteEditor
color_only_pixels	paint-funcs/paint-funcs-generic.h	/^color_only_pixels (const guchar *src1,$/;"	f
color_panel	dialogs/channel-options-dialog.h	/^  GtkWidget   *color_panel;$/;"	m	struct:_ChannelOptionsDialog
color_pixels	paint-funcs/paint-funcs-generic.h	/^color_pixels (guchar       *dest,$/;"	f
color_pixels_mask	paint-funcs/paint-funcs-generic.h	/^color_pixels_mask (guchar       *dest,$/;"	f
color_profile_policy	config/gimpcoreconfig.h	/^  GimpColorProfilePolicy  color_profile_policy;$/;"	m	struct:_GimpCoreConfig
color_quicksort	core/gimpimage-convert.c	/^color_quicksort (const void *c1,$/;"	f	file:
color_region	paint-funcs/paint-funcs.c	/^color_region (PixelRegion  *dest,$/;"	f
color_region_mask	paint-funcs/paint-funcs.c	/^color_region_mask (PixelRegion  *dest,$/;"	f
colorcount	core/gimpimage-convert.c	/^  long  colorcount;$/;"	m	struct:__anon108	file:
colorize	base/colorize.c	/^colorize (Colorize    *colorize,$/;"	f
colorize	tools/gimpcolorizetool.h	/^  Colorize         *colorize;$/;"	m	struct:_GimpColorizeTool
colorize_calculate	base/colorize.c	/^colorize_calculate (Colorize *colorize)$/;"	f
colorize_hue_adj_update	tools/gimpcolorizetool.c	/^colorize_hue_adj_update (GtkAdjustment    *adjustment,$/;"	f	file:
colorize_init	base/colorize.c	/^colorize_init (Colorize *colorize)$/;"	f
colorize_invoker	pdb/color_cmds.c	/^colorize_invoker (GimpProcedure     *procedure,$/;"	f	file:
colorize_lightness_adj_update	tools/gimpcolorizetool.c	/^colorize_lightness_adj_update (GtkAdjustment    *adjustment,$/;"	f	file:
colorize_saturation_adj_update	tools/gimpcolorizetool.c	/^colorize_saturation_adj_update (GtkAdjustment    *adjustment,$/;"	f	file:
colorize_update	tools/gimpcolorizetool.c	/^colorize_update (GimpColorizeTool *col_tool,$/;"	f	file:
colormap	base/siox.c	/^  const guchar *colormap;$/;"	m	struct:_SioxState	file:
colormap	core/gimpimageundo.h	/^  guchar            *colormap;$/;"	m	struct:_GimpImageUndo
colormap_actions	actions/colormap-actions.c	/^static const GimpActionEntry colormap_actions[] =$/;"	v	file:
colormap_actions_setup	actions/colormap-actions.c	/^colormap_actions_setup (GimpActionGroup *group)$/;"	f
colormap_actions_update	actions/colormap-actions.c	/^colormap_actions_update (GimpActionGroup *group,$/;"	f
colormap_add_color_actions	actions/colormap-actions.c	/^static const GimpEnumActionEntry colormap_add_color_actions[] =$/;"	v	file:
colormap_add_color_cmd_callback	actions/colormap-commands.c	/^colormap_add_color_cmd_callback (GtkAction *action,$/;"	f
colormap_changed	core/gimpimage.h	/^  void (* colormap_changed)             (GimpImage            *image,$/;"	m	struct:_GimpImageClass
colormap_edit_color_cmd_callback	actions/colormap-commands.c	/^colormap_edit_color_cmd_callback (GtkAction *action,$/;"	f
colormap_edit_color_update	actions/colormap-commands.c	/^colormap_edit_color_update (GimpColorDialog      *dialog,$/;"	f	file:
colors	core/gimppalette.h	/^  GList    *colors;$/;"	m	struct:_GimpPalette
colorspace_label	widgets/gimpimagepropview.h	/^  GtkWidget *colorspace_label;$/;"	m	struct:_GimpImagePropView
column_types	widgets/gimpunitstore.c	/^static GType column_types[GIMP_UNIT_STORE_UNIT_COLUMNS] =$/;"	v	file:
columns	dialogs/palette-import-dialog.c	/^  GtkAdjustment *columns;$/;"	m	struct:__anon178	file:
columns	widgets/gimpcontainergridview.h	/^  gint              columns;$/;"	m	struct:_GimpContainerGridView
columns	widgets/gimppaletteeditor.h	/^  gint              columns;$/;"	m	struct:_GimpPaletteEditor
columns	widgets/gimpviewrendererpalette.h	/^  gint              columns;$/;"	m	struct:_GimpViewRendererPalette
columns_data	widgets/gimppaletteeditor.h	/^  GtkAdjustment    *columns_data;$/;"	m	struct:_GimpPaletteEditor
combine	composite/gimp-composite.h	/^  CombinationMode        combine;$/;"	m	struct:__anon33
combine	paint-funcs/paint-funcs-generic.h	/^  CombinationMode    combine;$/;"	m	struct:apply_layer_mode_struct
combine_high_bytes	composite/gimp-composite-altivec.c	/^static const vector unsigned char combine_high_bytes = (const vector unsigned char)$/;"	v	file:
combine_indexed_a_and_indexed_a_pixels	paint-funcs/paint-funcs.c	/^combine_indexed_a_and_indexed_a_pixels (const guchar   *src1,$/;"	f
combine_indexed_and_indexed_a_pixels	paint-funcs/paint-funcs.c	/^combine_indexed_and_indexed_a_pixels (const guchar   *src1,$/;"	f
combine_indexed_and_indexed_pixels	paint-funcs/paint-funcs.c	/^combine_indexed_and_indexed_pixels (const guchar   *src1,$/;"	f
combine_inten_a_and_channel_mask_pixels	paint-funcs/paint-funcs.c	/^combine_inten_a_and_channel_mask_pixels (const guchar *src,$/;"	f
combine_inten_a_and_channel_selection_pixels	paint-funcs/paint-funcs.c	/^combine_inten_a_and_channel_selection_pixels (const guchar *src,$/;"	f
combine_inten_a_and_indexed_a_pixels	paint-funcs/paint-funcs.c	/^combine_inten_a_and_indexed_a_pixels (const guchar *src1,$/;"	f
combine_inten_a_and_indexed_pixels	paint-funcs/paint-funcs.c	/^combine_inten_a_and_indexed_pixels (const guchar *src1,$/;"	f
combine_inten_a_and_inten_a_pixels	paint-funcs/paint-funcs.c	/^combine_inten_a_and_inten_a_pixels (const guchar   *src1,$/;"	f
combine_inten_a_and_inten_pixels	paint-funcs/paint-funcs.c	/^combine_inten_a_and_inten_pixels (const guchar   *src1,$/;"	f
combine_inten_and_inten_a_pixels	paint-funcs/paint-funcs.c	/^combine_inten_and_inten_a_pixels (const guchar   *src1,$/;"	f
combine_inten_and_inten_pixels	paint-funcs/paint-funcs.c	/^combine_inten_and_inten_pixels (const guchar   *src1,$/;"	f
combine_mask_and_alpha_channel_stipple	paint-funcs/paint-funcs-generic.h	/^combine_mask_and_alpha_channel_stipple (guchar       *src,$/;"	f
combine_mask_and_alpha_channel_stroke	paint-funcs/paint-funcs-generic.h	/^combine_mask_and_alpha_channel_stroke (guchar       *src,$/;"	f
combine_mask_and_region	paint-funcs/paint-funcs.c	/^combine_mask_and_region (PixelRegion *src,$/;"	f
combine_mask_and_sub_region_stipple	paint-funcs/paint-funcs.c	/^combine_mask_and_sub_region_stipple (gint        *opacityp,$/;"	f	file:
combine_mask_and_sub_region_stroke	paint-funcs/paint-funcs.c	/^combine_mask_and_sub_region_stroke (gint        *opacityp,$/;"	f	file:
combine_regions	paint-funcs/paint-funcs.c	/^combine_regions (PixelRegion          *src1,$/;"	f
combine_regions_replace	paint-funcs/paint-funcs.c	/^combine_regions_replace (PixelRegion     *src1,$/;"	f
combine_regions_struct	paint-funcs/paint-funcs.c	/^struct combine_regions_struct$/;"	s	file:
combine_sub_region	paint-funcs/paint-funcs.c	/^combine_sub_region (struct combine_regions_struct *st,$/;"	f	file:
combo	dialogs/image-new-dialog.c	/^  GtkWidget    *combo;$/;"	m	struct:__anon179	file:
combo	dialogs/scale-dialog.c	/^  GtkWidget             *combo;$/;"	m	struct:__anon173	file:
comment	core/gimptemplate.h	/^  gchar             *comment;$/;"	m	struct:_GimpTemplate
compat	pdb/gimppdb-query.c	/^  gboolean  compat;$/;"	m	struct:_PDBStrings	file:
compat_proc_names	pdb/gimppdb.h	/^  GHashTable *compat_proc_names;$/;"	m	struct:_GimpPDB
component_active_changed	core/gimpimage.h	/^  void (* component_active_changed)     (GimpImage            *image,$/;"	m	struct:_GimpImageClass
component_editor	widgets/gimpchanneltreeview.h	/^  GtkWidget            *component_editor;$/;"	m	struct:_GimpChannelTreeView
component_visibility_changed	core/gimpimage.h	/^  void (* component_visibility_changed) (GimpImage            *image,$/;"	m	struct:_GimpImageClass
compose	core/gimpscanconvert.c	/^compose (GimpChannelOps  op,$/;"	f	file:
compression	xcf/xcf-private.h	/^  XcfCompressionType  compression;$/;"	m	struct:_XcfInfo
compute_border	paint-funcs/paint-funcs.c	/^compute_border (gint16  *circ,$/;"	f	file:
compute_color_gray	core/gimpimage-convert.c	/^compute_color_gray (QuantizeObj *quantobj,$/;"	f	file:
compute_color_lin8	core/gimpimage-convert.c	/^compute_color_lin8 (QuantizeObj *quantobj,$/;"	f	file:
compute_color_rgb	core/gimpimage-convert.c	/^compute_color_rgb (QuantizeObj *quantobj,$/;"	f	file:
compute_offset	core/gimpimage-arrange.c	/^compute_offset (GObject *object,$/;"	f	file:
compute_offsets	core/gimpimage-arrange.c	/^compute_offsets (GList             *list,$/;"	f	file:
compute_sample	display/gimpdisplayshell-render.c	/^compute_sample (gdouble       scale_x,$/;"	f	file:
compute_transition	paint-funcs/paint-funcs.c	/^compute_transition (guchar    *transition,$/;"	f	file:
config	core/gimp.h	/^  GimpCoreConfig         *config;$/;"	m	struct:_Gimp
config	widgets/gimppropwidgets.c	/^  GObject     *config;$/;"	m	struct:__anon382	file:
config_box	widgets/gimpcolordisplayeditor.h	/^  GtkWidget             *config_box;$/;"	m	struct:_GimpColorDisplayEditor
config_frame	widgets/gimpcolordisplayeditor.h	/^  GtkWidget             *config_frame;$/;"	m	struct:_GimpColorDisplayEditor
config_widget	widgets/gimpcolordisplayeditor.h	/^  GtkWidget             *config_widget;$/;"	m	struct:_GimpColorDisplayEditor
confirm	widgets/gimpcontainerpopup.h	/^  void (* confirm) (GimpContainerPopup *popup);$/;"	m	struct:_GimpContainerPopupClass
confirm_dialog	dialogs/image-new-dialog.c	/^  GtkWidget    *confirm_dialog;$/;"	m	struct:__anon179	file:
confirm_dialog	tools/gimptexttool.h	/^  GtkWidget     *confirm_dialog;$/;"	m	struct:_GimpTextTool
confirm_on_close	config/gimpdisplayconfig.h	/^  gboolean            confirm_on_close;$/;"	m	struct:_GimpDisplayConfig
conicto	text/gimptext-vectors.c	/^conicto (const FT_Vector *ftcontrol,$/;"	f	file:
connect_notify	widgets/gimppropwidgets.c	/^connect_notify (GObject     *config,$/;"	f	file:
connect_stroke	vectors/gimpstroke.h	/^  gboolean      (* connect_stroke)       (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
connected	tools/gimpiscissorstool.h	/^  gboolean        connected;    \/*  is the region closed?                 *\/$/;"	m	struct:_GimpIscissorsTool
console_messages	core/gimp.h	/^  gboolean                console_messages;$/;"	m	struct:_Gimp
console_messages	main.c	/^static gboolean            console_messages  = FALSE;$/;"	v	file:
constrain	tools/gimptransformoptions.h	/^  gboolean                  constrain;$/;"	m	struct:_GimpTransformOptions
constraint	tools/gimprectangletool.c	/^  GimpRectangleConstraint constraint;$/;"	m	struct:_GimpRectangleToolPrivate	file:
construct_flag	core/gimpprojection.h	/^  gboolean                  construct_flag;$/;"	m	struct:_GimpProjection
constructor	widgets/gimpdialogfactory.h	/^  GimpDialogConstructor  constructor;$/;"	m	struct:_GimpDialogFactory
container	actions/templates-commands.c	/^  GimpContainer *container;$/;"	m	struct:__anon1	file:
container	core/gimpcontainer-filter.c	/^  GimpContainer         *container;$/;"	m	struct:__anon59	file:
container	core/gimpdatafactory.h	/^  GimpContainer                    *container;$/;"	m	struct:_GimpDataFactory
container	dialogs/convert-dialog.c	/^  GimpContainer          *container;$/;"	m	struct:__anon171	file:
container	widgets/gimpcontainerpopup.h	/^  GimpContainer       *container;$/;"	m	struct:_GimpContainerPopup
container	widgets/gimpcontainerview.c	/^  GimpContainer *container;$/;"	m	struct:_GimpContainerViewPrivate	file:
container	widgets/gimpundoeditor.h	/^  GimpContainer   *container;$/;"	m	struct:_GimpUndoEditor
container	widgets/gimpviewablebutton.h	/^  GimpContainer     *container;$/;"	m	struct:_GimpViewableButton
container	widgets/gtkwrapbox.h	/^  GtkContainer     container;$/;"	m	struct:_GtkWrapBox
container_signals	core/gimpcontainer.c	/^static guint container_signals[LAST_SIGNAL] = { 0, };$/;"	v	file:
context	actions/data-commands.c	/^  GimpContext         *context;$/;"	m	struct:_GimpDataDeleteData	file:
context	actions/image-commands.c	/^  GimpContext *context;$/;"	m	struct:__anon5	file:
context	actions/templates-commands.c	/^  GimpContext   *context;$/;"	m	struct:__anon1	file:
context	config/gimpxmlparser.c	/^  GMarkupParseContext *context;$/;"	m	struct:_GimpXmlParser	file:
context	core/gimpdrawable-blend.c	/^  GimpContext      *context;$/;"	m	struct:__anon117	file:
context	core/gimppdbprogress.h	/^  GimpContext *context;$/;"	m	struct:_GimpPdbProgress
context	core/gimpundo.c	/^  GimpContext *context;$/;"	m	struct:_GimpUndoIdle	file:
context	dialogs/channel-options-dialog.h	/^  GimpContext *context;$/;"	m	struct:_ChannelOptionsDialog
context	dialogs/convert-dialog.c	/^  GimpContext            *context;$/;"	m	struct:__anon171	file:
context	dialogs/fade-dialog.c	/^  GimpContext          *context;$/;"	m	struct:__anon180	file:
context	dialogs/image-merge-layers-dialog.h	/^  GimpContext   *context;$/;"	m	struct:_ImageMergeLayersDialog
context	dialogs/image-new-dialog.c	/^  GimpContext  *context;$/;"	m	struct:__anon179	file:
context	dialogs/layer-options-dialog.h	/^  GimpContext  *context;$/;"	m	struct:_LayerOptionsDialog
context	dialogs/offset-dialog.c	/^  GimpContext    *context;$/;"	m	struct:__anon169	file:
context	dialogs/palette-import-dialog.c	/^  GimpContext   *context;$/;"	m	struct:__anon178	file:
context	display/gimpnavigationeditor.h	/^  GimpContext      *context;$/;"	m	struct:_GimpNavigationEditor
context	widgets/gimpaction.h	/^  GimpContext  *context;$/;"	m	struct:_GimpAction
context	widgets/gimpcoloreditor.h	/^  GimpContext *context;$/;"	m	struct:_GimpColorEditor
context	widgets/gimpcolorpanel.h	/^  GimpContext     *context;$/;"	m	struct:_GimpColorPanel
context	widgets/gimpcolorselectorpalette.h	/^  GimpContext       *context;$/;"	m	struct:_GimpColorSelectorPalette
context	widgets/gimpcontainerpopup.h	/^  GimpContext         *context;$/;"	m	struct:_GimpContainerPopup
context	widgets/gimpcontainerview.c	/^  GimpContext   *context;$/;"	m	struct:_GimpContainerViewPrivate	file:
context	widgets/gimpcontrollereditor.h	/^  GimpContext        *context;$/;"	m	struct:_GimpControllerEditor
context	widgets/gimpdataeditor.h	/^  GimpContext     *context;$/;"	m	struct:_GimpDataEditor
context	widgets/gimpdialogfactory.h	/^  GimpContext           *context;$/;"	m	struct:_GimpDialogFactory
context	widgets/gimpdock.h	/^  GimpContext       *context;$/;"	m	struct:_GimpDock
context	widgets/gimpdockable.h	/^  GimpContext  *context;$/;"	m	struct:_GimpDockable
context	widgets/gimpfgbgeditor.h	/^  GimpContext     *context;$/;"	m	struct:_GimpFgBgEditor
context	widgets/gimpfgbgview.h	/^  GimpContext *context;$/;"	m	struct:_GimpFgBgView
context	widgets/gimpgrideditor.h	/^  GimpContext  *context;$/;"	m	struct:_GimpGridEditor
context	widgets/gimpimageeditor.h	/^  GimpContext *context;$/;"	m	struct:_GimpImageEditor
context	widgets/gimppdbdialog.h	/^  GimpContext     *context;$/;"	m	struct:_GimpPdbDialog
context	widgets/gimpthumbbox.h	/^  GimpContext   *context;$/;"	m	struct:_GimpThumbBox
context	widgets/gimpundoeditor.h	/^  GimpContext     *context;$/;"	m	struct:_GimpUndoEditor
context	widgets/gimpview-popup.c	/^  GimpContext  *context;$/;"	m	struct:_GimpViewPopup	file:
context	widgets/gimpview.h	/^  void        (* context)        (GimpView        *view);$/;"	m	struct:_GimpViewClass
context	widgets/gimpviewablebutton.h	/^  GimpContext       *context;$/;"	m	struct:_GimpViewableButton
context	widgets/gimpviewabledialog.h	/^  GimpContext *context;$/;"	m	struct:_GimpViewableDialog
context	widgets/gimpviewrenderer.h	/^  GimpContext        *context;$/;"	m	struct:_GimpViewRenderer
context_actions	actions/context-actions.c	/^static const GimpActionEntry context_actions[] =$/;"	v	file:
context_actions_setup	actions/context-actions.c	/^context_actions_setup (GimpActionGroup *group)$/;"	f
context_actions_update	actions/context-actions.c	/^context_actions_update (GimpActionGroup *group,$/;"	f
context_background_blue_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_background_blue_actions[] =$/;"	v	file:
context_background_blue_cmd_callback	actions/context-commands.c	/^context_background_blue_cmd_callback (GtkAction *action,$/;"	f
context_background_green_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_background_green_actions[] =$/;"	v	file:
context_background_green_cmd_callback	actions/context-commands.c	/^context_background_green_cmd_callback (GtkAction *action,$/;"	f
context_background_hue_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_background_hue_actions[] =$/;"	v	file:
context_background_hue_cmd_callback	actions/context-commands.c	/^context_background_hue_cmd_callback (GtkAction *action,$/;"	f
context_background_red_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_background_red_actions[] =$/;"	v	file:
context_background_red_cmd_callback	actions/context-commands.c	/^context_background_red_cmd_callback (GtkAction *action,$/;"	f
context_background_saturation_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_background_saturation_actions[] =$/;"	v	file:
context_background_saturation_cmd_callback	actions/context-commands.c	/^context_background_saturation_cmd_callback (GtkAction *action,$/;"	f
context_background_value_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_background_value_actions[] =$/;"	v	file:
context_background_value_cmd_callback	actions/context-commands.c	/^context_background_value_cmd_callback (GtkAction *action,$/;"	f
context_brush_angle_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_brush_angle_actions[] =$/;"	v	file:
context_brush_angle_cmd_callback	actions/context-commands.c	/^context_brush_angle_cmd_callback (GtkAction *action,$/;"	f
context_brush_aspect_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_brush_aspect_actions[] =$/;"	v	file:
context_brush_aspect_cmd_callback	actions/context-commands.c	/^context_brush_aspect_cmd_callback (GtkAction *action,$/;"	f
context_brush_hardness_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_brush_hardness_actions[] =$/;"	v	file:
context_brush_hardness_cmd_callback	actions/context-commands.c	/^context_brush_hardness_cmd_callback (GtkAction *action,$/;"	f
context_brush_radius_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_brush_radius_actions[] =$/;"	v	file:
context_brush_radius_cmd_callback	actions/context-commands.c	/^context_brush_radius_cmd_callback (GtkAction *action,$/;"	f
context_brush_select_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_brush_select_actions[] =$/;"	v	file:
context_brush_select_cmd_callback	actions/context-commands.c	/^context_brush_select_cmd_callback (GtkAction *action,$/;"	f
context_brush_shape_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_brush_shape_actions[] =$/;"	v	file:
context_brush_shape_cmd_callback	actions/context-commands.c	/^context_brush_shape_cmd_callback (GtkAction *action,$/;"	f
context_brush_spacing_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_brush_spacing_actions[] =$/;"	v	file:
context_brush_spacing_cmd_callback	actions/context-commands.c	/^context_brush_spacing_cmd_callback (GtkAction *action,$/;"	f
context_brush_spikes_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_brush_spikes_actions[] =$/;"	v	file:
context_brush_spikes_cmd_callback	actions/context-commands.c	/^context_brush_spikes_cmd_callback (GtkAction *action,$/;"	f
context_colormap_background_actions	actions/context-actions.c	/^static GimpEnumActionEntry context_colormap_background_actions[] =$/;"	v	file:
context_colormap_foreground_actions	actions/context-actions.c	/^static GimpEnumActionEntry context_colormap_foreground_actions[] =$/;"	v	file:
context_colors_default_cmd_callback	actions/context-commands.c	/^context_colors_default_cmd_callback (GtkAction *action,$/;"	f
context_colors_swap_cmd_callback	actions/context-commands.c	/^context_colors_swap_cmd_callback (GtkAction *action,$/;"	f
context_find_defined	core/gimpcontext.c	61;"	d	file:
context_font_select_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_font_select_actions[] =$/;"	v	file:
context_font_select_cmd_callback	actions/context-commands.c	/^context_font_select_cmd_callback (GtkAction *action,$/;"	f
context_foreground_blue_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_foreground_blue_actions[] =$/;"	v	file:
context_foreground_blue_cmd_callback	actions/context-commands.c	/^context_foreground_blue_cmd_callback (GtkAction *action,$/;"	f
context_foreground_green_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_foreground_green_actions[] =$/;"	v	file:
context_foreground_green_cmd_callback	actions/context-commands.c	/^context_foreground_green_cmd_callback (GtkAction *action,$/;"	f
context_foreground_hue_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_foreground_hue_actions[] =$/;"	v	file:
context_foreground_hue_cmd_callback	actions/context-commands.c	/^context_foreground_hue_cmd_callback (GtkAction *action,$/;"	f
context_foreground_red_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_foreground_red_actions[] =$/;"	v	file:
context_foreground_saturation_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_foreground_saturation_actions[] =$/;"	v	file:
context_foreground_saturation_cmd_callback	actions/context-commands.c	/^context_foreground_saturation_cmd_callback (GtkAction *action,$/;"	f
context_foreground_value_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_foreground_value_actions[] =$/;"	v	file:
context_foreground_value_cmd_callback	actions/context-commands.c	/^context_foreground_value_cmd_callback (GtkAction *action,$/;"	f
context_get_background_invoker	pdb/context_cmds.c	/^context_get_background_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_brush_invoker	pdb/context_cmds.c	/^context_get_brush_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_color_index	actions/context-commands.c	/^context_get_color_index (gboolean       use_colormap,$/;"	f	file:
context_get_colormap_editor	actions/context-commands.c	/^context_get_colormap_editor (void)$/;"	f	file:
context_get_font_invoker	pdb/context_cmds.c	/^context_get_font_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_foreground_invoker	pdb/context_cmds.c	/^context_get_foreground_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_gradient_invoker	pdb/context_cmds.c	/^context_get_gradient_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_opacity_invoker	pdb/context_cmds.c	/^context_get_opacity_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_paint_method_invoker	pdb/context_cmds.c	/^context_get_paint_method_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_paint_mode_invoker	pdb/context_cmds.c	/^context_get_paint_mode_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_palette_editor	actions/context-commands.c	/^context_get_palette_editor (void)$/;"	f	file:
context_get_palette_invoker	pdb/context_cmds.c	/^context_get_palette_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_get_pattern_invoker	pdb/context_cmds.c	/^context_get_pattern_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_gradient_select_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_gradient_select_actions[] =$/;"	v	file:
context_gradient_select_cmd_callback	actions/context-commands.c	/^context_gradient_select_cmd_callback (GtkAction *action,$/;"	f
context_id	display/gimpstatusbar.c	/^  guint  context_id;$/;"	m	struct:_GimpStatusbarMsg	file:
context_ids	display/gimpstatusbar.h	/^  GHashTable       *context_ids;$/;"	m	struct:_GimpStatusbar
context_item	widgets/gimpcontainereditor.h	/^  void (* context_item)  (GimpContainerEditor *editor,$/;"	m	struct:_GimpContainerEditorClass
context_item	widgets/gimpcontainerview.h	/^  void     (* context_item)  (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
context_list	core/gimp.h	/^  GList                  *context_list;$/;"	m	struct:_Gimp
context_max_color_index	actions/context-commands.c	/^context_max_color_index (gboolean use_colormap,$/;"	f	file:
context_opacity_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_opacity_actions[] =$/;"	v	file:
context_opacity_cmd_callback	actions/context-commands.c	/^context_opacity_cmd_callback (GtkAction *action,$/;"	f
context_paint_mode_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_paint_mode_actions[] =$/;"	v	file:
context_paint_mode_cmd_callback	actions/context-commands.c	/^context_paint_mode_cmd_callback (GtkAction *action,$/;"	f
context_paint_mode_index	actions/context-commands.c	/^context_paint_mode_index (GimpLayerModeEffects paint_mode)$/;"	f	file:
context_palette_background_actions	actions/context-actions.c	/^static GimpEnumActionEntry context_palette_background_actions[] =$/;"	v	file:
context_palette_foreground_actions	actions/context-actions.c	/^static GimpEnumActionEntry context_palette_foreground_actions[] =$/;"	v	file:
context_palette_select_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_palette_select_actions[] =$/;"	v	file:
context_palette_select_cmd_callback	actions/context-commands.c	/^context_palette_select_cmd_callback (GtkAction *action,$/;"	f
context_pattern_select_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_pattern_select_actions[] =$/;"	v	file:
context_pattern_select_cmd_callback	actions/context-commands.c	/^context_pattern_select_cmd_callback (GtkAction *action,$/;"	f
context_pop_invoker	pdb/context_cmds.c	/^context_pop_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_props	core/gimptoolinfo.h	/^  GimpContextPropMask  context_props;$/;"	m	struct:_GimpToolInfo
context_push_invoker	pdb/context_cmds.c	/^context_push_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_select_color	actions/context-commands.c	/^context_select_color (GimpActionSelectType  select_type,$/;"	f	file:
context_select_object	actions/context-commands.c	/^context_select_object (GimpActionSelectType  select_type,$/;"	f	file:
context_set_background_invoker	pdb/context_cmds.c	/^context_set_background_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_brush_invoker	pdb/context_cmds.c	/^context_set_brush_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_color_index	actions/context-commands.c	/^context_set_color_index (gint      index,$/;"	f	file:
context_set_default_colors_invoker	pdb/context_cmds.c	/^context_set_default_colors_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_font_invoker	pdb/context_cmds.c	/^context_set_font_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_foreground_invoker	pdb/context_cmds.c	/^context_set_foreground_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_gradient_invoker	pdb/context_cmds.c	/^context_set_gradient_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_opacity_invoker	pdb/context_cmds.c	/^context_set_opacity_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_paint_method_invoker	pdb/context_cmds.c	/^context_set_paint_method_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_paint_mode_invoker	pdb/context_cmds.c	/^context_set_paint_mode_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_palette_invoker	pdb/context_cmds.c	/^context_set_palette_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_set_pattern_invoker	pdb/context_cmds.c	/^context_set_pattern_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_stack	plug-in/gimppluginprocframe.h	/^  GList         *context_stack;$/;"	m	struct:_GimpPlugInProcFrame
context_swap_colors_invoker	pdb/context_cmds.c	/^context_swap_colors_invoker (GimpProcedure     *procedure,$/;"	f	file:
context_swatch_background_actions	actions/context-actions.c	/^static GimpEnumActionEntry context_swatch_background_actions[] =$/;"	v	file:
context_swatch_foreground_actions	actions/context-actions.c	/^static GimpEnumActionEntry context_swatch_foreground_actions[] =$/;"	v	file:
context_tool_select_actions	actions/context-actions.c	/^static const GimpEnumActionEntry context_tool_select_actions[] =$/;"	v	file:
context_tool_select_cmd_callback	actions/context-commands.c	/^context_tool_select_cmd_callback (GtkAction *action,$/;"	f
contiguous	tools/gimpforegroundselectoptions.h	/^  gboolean              contiguous;$/;"	m	struct:_GimpForegroundSelectOptions
contiguous_region_by_color	core/gimpimage-contiguous-region.c	/^contiguous_region_by_color (ContinuousRegionData *cont,$/;"	f	file:
contrast	base/lut-funcs.c	/^  gdouble contrast;$/;"	m	struct:__anon15	file:
contrast	tools/gimpbrightnesscontrasttool.h	/^  gdouble           contrast;$/;"	m	struct:_GimpBrightnessContrastTool
contrast_data	tools/gimpbrightnesscontrasttool.h	/^  GtkAdjustment    *contrast_data;$/;"	m	struct:_GimpBrightnessContrastTool
control	tools/gimptool.h	/^  GimpToolControl *control;$/;"	m	struct:_GimpTool
control	tools/gimptool.h	/^  void          (* control)             (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
control	widgets/gimpgradienteditor.h	/^  GtkWidget      *control;$/;"	m	struct:_GimpGradientEditor
control_button_press	widgets/gimpgradienteditor.c	/^control_button_press (GimpGradientEditor *editor,$/;"	f	file:
control_calc_g_pos	widgets/gimpgradienteditor.c	/^control_calc_g_pos (GimpGradientEditor *editor,$/;"	f	file:
control_calc_p_pos	widgets/gimpgradienteditor.c	/^control_calc_p_pos (GimpGradientEditor *editor,$/;"	f	file:
control_click_time	widgets/gimpgradienteditor.h	/^  guint32                 control_click_time;   \/* Time when mouse was pressed *\/$/;"	m	struct:_GimpGradientEditor
control_compress	widgets/gimpgradienteditor.h	/^  gboolean                control_compress;     \/* Compressing\/expanding handles *\/$/;"	m	struct:_GimpGradientEditor
control_compress_left	widgets/gimpgradienteditor.c	/^control_compress_left (GimpGradient        *gradient,$/;"	f	file:
control_do_hint	widgets/gimpgradienteditor.c	/^control_do_hint (GimpGradientEditor *editor,$/;"	f	file:
control_drag_mode	widgets/gimpgradienteditor.h	/^  GradientEditorDragMode  control_drag_mode;    \/* What is being dragged? *\/$/;"	m	struct:_GimpGradientEditor
control_drag_segment	widgets/gimpgradienteditor.h	/^  GimpGradientSegment    *control_drag_segment; \/* Segment which is being dragged *\/$/;"	m	struct:_GimpGradientEditor
control_draw	widgets/gimpgradienteditor.c	/^control_draw (GimpGradientEditor *editor,$/;"	f	file:
control_draw_handle	widgets/gimpgradienteditor.c	/^control_draw_handle (GdkPixmap *pixmap,$/;"	f	file:
control_draw_middle_handle	widgets/gimpgradienteditor.c	/^control_draw_middle_handle (GimpGradientEditor *editor,$/;"	f	file:
control_draw_normal_handle	widgets/gimpgradienteditor.c	/^control_draw_normal_handle (GimpGradientEditor *editor,$/;"	f	file:
control_events	widgets/gimpgradienteditor.c	/^control_events (GtkWidget          *widget,$/;"	f	file:
control_extend_selection	widgets/gimpgradienteditor.c	/^control_extend_selection (GimpGradientEditor  *editor,$/;"	f	file:
control_last_gx	widgets/gimpgradienteditor.h	/^  gdouble                 control_last_gx;      \/* Last position (wrt gradient) when dragging *\/$/;"	m	struct:_GimpGradientEditor
control_last_x	widgets/gimpgradienteditor.h	/^  gint                    control_last_x;       \/* Last mouse position when dragging *\/$/;"	m	struct:_GimpGradientEditor
control_motion	widgets/gimpgradienteditor.c	/^control_motion (GimpGradientEditor *editor,$/;"	f	file:
control_move	widgets/gimpgradienteditor.c	/^control_move (GimpGradientEditor  *editor,$/;"	f	file:
control_orig_pos	widgets/gimpgradienteditor.h	/^  gdouble                 control_orig_pos;     \/* Original click position when dragging *\/$/;"	m	struct:_GimpGradientEditor
control_pixmap	widgets/gimpgradienteditor.h	/^  GdkPixmap              *control_pixmap;$/;"	m	struct:_GimpGradientEditor
control_point_in_handle	widgets/gimpgradienteditor.c	/^control_point_in_handle (GimpGradientEditor     *editor,$/;"	f	file:
control_points_get	vectors/gimpstroke.h	/^  GArray      * (* control_points_get)   (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
control_sel_l	widgets/gimpgradienteditor.h	/^  GimpGradientSegment    *control_sel_l;        \/* Left segment of selection *\/$/;"	m	struct:_GimpGradientEditor
control_sel_r	widgets/gimpgradienteditor.h	/^  GimpGradientSegment    *control_sel_r;        \/* Right segment of selection *\/$/;"	m	struct:_GimpGradientEditor
control_select_single_segment	widgets/gimpgradienteditor.c	/^control_select_single_segment (GimpGradientEditor  *editor,$/;"	f	file:
control_update	widgets/gimpgradienteditor.c	/^control_update (GimpGradientEditor *editor,$/;"	f	file:
controller	widgets/gimpcontrollerinfo.h	/^  GimpController             *controller;$/;"	m	struct:_GimpControllerInfo
controllers	widgets/gimpcontrollers.c	/^  GimpContainer  *controllers;$/;"	m	struct:_GimpControllerManager	file:
controls	tools/gimpaligntool.h	/^  GtkWidget             *controls;$/;"	m	struct:_GimpAlignTool
convert	core/gimpitem.h	/^  void       (* convert)      (GimpItem               *item,$/;"	m	struct:_GimpItemClass
convert_dialog_free	dialogs/convert-dialog.c	/^convert_dialog_free (IndexedDialog *dialog)$/;"	f	file:
convert_dialog_new	dialogs/convert-dialog.c	/^convert_dialog_new (GimpImage    *image,$/;"	f
convert_dialog_palette_box	dialogs/convert-dialog.c	/^convert_dialog_palette_box (IndexedDialog *dialog)$/;"	f	file:
convert_dialog_palette_changed	dialogs/convert-dialog.c	/^convert_dialog_palette_changed (GimpContext   *context,$/;"	f	file:
convert_dialog_palette_filter	dialogs/convert-dialog.c	/^convert_dialog_palette_filter (const GimpObject *object,$/;"	f	file:
convert_dialog_response	dialogs/convert-dialog.c	/^convert_dialog_response (GtkWidget     *widget,$/;"	f	file:
convolve_default_invoker	pdb/paint_tools_cmds.c	/^convolve_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
convolve_invoker	pdb/paint_tools_cmds.c	/^convolve_invoker (GimpProcedure     *procedure,$/;"	f	file:
convolve_region	paint-funcs/paint-funcs.c	/^convolve_region (PixelRegion         *srcR,$/;"	f
coord_hbox	widgets/gimpcursorview.h	/^  GtkWidget   *coord_hbox;$/;"	m	struct:_GimpCursorView
copy_color	paint-funcs/paint-funcs.c	/^copy_color (PixelRegion *src,$/;"	f
copy_color_pixels	paint-funcs/paint-funcs-generic.h	/^copy_color_pixels (const guchar *src,$/;"	f
copy_component	paint-funcs/paint-funcs.c	/^copy_component (PixelRegion *src,$/;"	f
copy_component_pixels	paint-funcs/paint-funcs-generic.h	/^copy_component_pixels (const guchar *src,$/;"	f
copy_gray_to_inten_a_pixels	paint-funcs/paint-funcs-generic.h	/^copy_gray_to_inten_a_pixels (const guchar *src,$/;"	f
copy_gray_to_region	paint-funcs/paint-funcs.c	/^copy_gray_to_region (PixelRegion *src,$/;"	f
copy_named_buffer_callback	actions/edit-commands.c	/^copy_named_buffer_callback (GtkWidget   *widget,$/;"	f	file:
copy_named_visible_buffer_callback	actions/edit-commands.c	/^copy_named_visible_buffer_callback (GtkWidget   *widget,$/;"	f	file:
copy_region	paint-funcs/paint-funcs.c	/^copy_region (PixelRegion *src,$/;"	f
copy_region_nocow	paint-funcs/paint-funcs.c	/^copy_region_nocow (PixelRegion *src,$/;"	f
copyright	pdb/gimppdb-query.c	/^  gchar    *copyright;$/;"	m	struct:_PDBStrings	file:
copyright	pdb/gimpprocedure.h	/^  gchar            *copyright;      \/* Copyright field                *\/$/;"	m	struct:_GimpProcedure
copyright_regex	pdb/gimppdb-query.c	/^  regex_t   copyright_regex;$/;"	m	struct:_PDBQuery	file:
core	tools/gimppainttool.h	/^  GimpPaintCore   *core;$/;"	m	struct:_GimpPaintTool
core_signals	paint/gimpbrushcore.c	/^static guint core_signals[LAST_SIGNAL] = { 0, };$/;"	v	file:
corner_radius	tools/gimprectangleselectoptions.h	/^  gdouble               corner_radius;$/;"	m	struct:_GimpRectSelectOptions
corner_radius	tools/gimprectangleselecttool.h	/^  gdouble            corner_radius;$/;"	m	struct:_GimpRectSelectTool
count	base/pixel-region.h	/^  gint         count;$/;"	m	struct:_PixelRegionHolder
count	core/gimpbrush-load.c	/^  gint16 count;$/;"	m	struct:_AbrHeader	file:
count	core/gimppalette-import.c	/^  guint  count;$/;"	m	struct:_ImgColors	file:
count_color_entries	core/gimppalette-import.c	/^static gint count_color_entries = 0;$/;"	v	file:
cp	xcf/xcf-private.h	/^  guint               cp;$/;"	m	struct:_XcfInfo
cpercep_init	base/cpercep.c	/^cpercep_init (void)$/;"	f
cpercep_rgb_to_space	base/cpercep.c	/^cpercep_rgb_to_space (double  inr,$/;"	f
cpercep_space_to_rgb	base/cpercep.c	/^cpercep_space_to_rgb (double  inr,$/;"	f
cpx	vectors/gimpvectors-import.c	/^  gdouble      cpx, cpy;  \/* current point                               *\/$/;"	m	struct:__anon305	file:
cpy	vectors/gimpvectors-import.c	/^  gdouble      cpx, cpy;  \/* current point                               *\/$/;"	m	struct:__anon305	file:
create_button	widgets/gimptemplateview.h	/^  GtkWidget           *create_button;$/;"	m	struct:_GimpTemplateView
create_key	base/siox.c	/^create_key (const guchar *src,$/;"	f	file:
create_lanczos_lookup	paint-funcs/scale-region.c	/^create_lanczos_lookup (void)$/;"	f
create_levels_scale	tools/gimpcolorbalancetool.c	/^create_levels_scale (const gchar   *left,$/;"	f	file:
create_signature	base/siox.c	/^create_signature (lab                *input,$/;"	f	file:
cubic	paint-funcs/paint-funcs.c	/^cubic (gdouble dx,$/;"	f	file:
cubic_spline_fit	paint-funcs/scale-region.c	/^cubic_spline_fit (gdouble dx,$/;"	f	file:
cubicto	text/gimptext-vectors.c	/^cubicto (const FT_Vector *ftcontrol1,$/;"	f	file:
cumlx	tools/gimpeditselectiontool.h	/^  gint                cumlx, cumly;    \/*  Cumulative changes to x and yed   *\/$/;"	m	struct:_GimpEditSelectionTool
cumly	tools/gimpeditselectiontool.h	/^  gint                cumlx, cumly;    \/*  Cumulative changes to x and yed   *\/$/;"	m	struct:_GimpEditSelectionTool
cur_anchor	tools/gimpvectortool.h	/^  GimpAnchor           *cur_anchor;     \/* the current Anchor                *\/$/;"	m	struct:_GimpVectorTool
cur_anchor2	tools/gimpvectortool.h	/^  GimpAnchor           *cur_anchor2;    \/* secondary Anchor (end on_curve)   *\/$/;"	m	struct:_GimpVectorTool
cur_blob	paint/gimpink.h	/^  Blob          *cur_blob;     \/*  current blob                   *\/$/;"	m	struct:_GimpInk
cur_cache_dirty	base/tile-cache.c	/^static gulong        cur_cache_dirty = 0;$/;"	v	file:
cur_cache_size	base/tile-cache.c	/^static gulong        cur_cache_size  = 0;$/;"	v	file:
cur_coords	paint/gimppaintcore.h	/^  GimpCoords   cur_coords;       \/*  current coords                      *\/$/;"	m	struct:_GimpPaintCore
cur_position	base/tile-swap.c	/^  gint64   cur_position;$/;"	m	struct:_SwapFile	file:
cur_position	tools/gimpvectortool.h	/^  gdouble               cur_position;   \/* the current Position on a segment *\/$/;"	m	struct:_GimpVectorTool
cur_stroke	tools/gimpvectortool.h	/^  GimpStroke           *cur_stroke;     \/* the current Stroke                *\/$/;"	m	struct:_GimpVectorTool
cur_tile	tools/gimpiscissorstool.c	/^static Tile   *cur_tile    = NULL;$/;"	v	file:
cur_vectors	tools/gimpvectortool.h	/^  GimpVectors          *cur_vectors;    \/* the vectors the tool is hovering  *\/$/;"	m	struct:_GimpVectorTool
current	core/gimpbrushpipe.h	/^  GimpBrush        *current;    \/* Currently selected brush *\/$/;"	m	struct:_GimpBrushPipe
current_color	widgets/gimpgradienteditor.h	/^  GtkWidget      *current_color;$/;"	m	struct:_GimpGradientEditor
current_cursor	display/gimpdisplayshell.h	/^  GimpCursorType      current_cursor;  \/*  Currently installed main cursor    *\/$/;"	m	struct:_GimpDisplayShell
current_device	widgets/gimpdevices.c	/^  GdkDevice              *current_device;$/;"	m	struct:_GimpDeviceManager	file:
current_device	widgets/gimpdevicestatus.h	/^  GdkDevice  *current_device;$/;"	m	struct:_GimpDeviceStatus
current_item	file/gimprecentlist.c	/^  GimpRecentItem *current_item;$/;"	m	struct:__anon198	file:
current_page	widgets/gimpsessioninfo-book.h	/^  gint       current_page;$/;"	m	struct:_GimpSessionInfoBook
current_plug_in	plug-in/gimppluginmanager.h	/^  GimpPlugIn        *current_plug_in;$/;"	m	struct:_GimpPlugInManager
current_tip	dialogs/tips-dialog.c	/^static GList     *current_tip   = NULL;$/;"	v	file:
current_tip	dialogs/tips-parser.c	/^  GimpTip               *current_tip;$/;"	m	struct:__anon176	file:
cursor	tools/gimptoolcontrol.h	/^  GimpCursorType     cursor;$/;"	m	struct:_GimpToolControl
cursor_format	config/gimpguiconfig.h	/^  GimpCursorFormat     cursor_format;$/;"	m	struct:_GimpGuiConfig
cursor_format	display/gimpdisplayshell.h	/^  GimpCursorFormat    cursor_format;   \/*  Currently used cursor format       *\/$/;"	m	struct:_GimpDisplayShell
cursor_format_str	display/gimpstatusbar.h	/^  gchar             cursor_format_str[CURSOR_FORMAT_LENGTH];$/;"	m	struct:_GimpStatusbar
cursor_frame	display/gimpstatusbar.h	/^  GtkWidget        *cursor_frame;$/;"	m	struct:_GimpStatusbar
cursor_info_actions	actions/cursor-info-actions.c	/^static const GimpActionEntry cursor_info_actions[] =$/;"	v	file:
cursor_info_actions_setup	actions/cursor-info-actions.c	/^cursor_info_actions_setup (GimpActionGroup *group)$/;"	f
cursor_info_actions_update	actions/cursor-info-actions.c	/^cursor_info_actions_update (GimpActionGroup *group,$/;"	f
cursor_info_sample_merged_cmd_callback	actions/cursor-info-commands.c	/^cursor_info_sample_merged_cmd_callback (GtkAction *action,$/;"	f
cursor_info_toggle_actions	actions/cursor-info-actions.c	/^static const GimpToggleActionEntry cursor_info_toggle_actions[] =$/;"	v	file:
cursor_label	display/gimpstatusbar.h	/^  GtkWidget        *cursor_label;$/;"	m	struct:_GimpStatusbar
cursor_layout	tools/gimpcurvestool.h	/^  PangoLayout          *cursor_layout;$/;"	m	struct:_GimpCurvesTool
cursor_mode	config/gimpdisplayconfig.h	/^  GimpCursorMode      cursor_mode;$/;"	m	struct:_GimpDisplayConfig
cursor_modifier	display/gimpdisplayshell.h	/^  GimpCursorModifier  cursor_modifier; \/*  Cursor modifier (plus, minus, ...) *\/$/;"	m	struct:_GimpDisplayShell
cursor_modifier	tools/gimptoolcontrol.h	/^  GimpCursorModifier cursor_modifier;$/;"	m	struct:_GimpToolControl
cursor_rect	tools/gimpcurvestool.h	/^  PangoRectangle        cursor_rect;$/;"	m	struct:_GimpCurvesTool
cursor_update	tools/gimptool.h	/^  void          (* cursor_update)       (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
cursor_updating	config/gimpdisplayconfig.h	/^  gboolean            cursor_updating;$/;"	m	struct:_GimpDisplayConfig
cursor_x	display/gimpdisplayshell.h	/^  gint              cursor_x;          \/* software cursor X value             *\/$/;"	m	struct:_GimpDisplayShell
cursor_x	tools/gimpcurvestool.h	/^  gint                  cursor_x;$/;"	m	struct:_GimpCurvesTool
cursor_y	display/gimpdisplayshell.h	/^  gint              cursor_y;          \/* software cursor Y value             *\/$/;"	m	struct:_GimpDisplayShell
cursor_y	tools/gimpcurvestool.h	/^  gint                  cursor_y;$/;"	m	struct:_GimpCurvesTool
curtile	base/pixel-region.h	/^  Tile        *curtile;        \/*  current tile                  *\/$/;"	m	struct:_PixelRegion
curve	base/curves.h	/^  guchar        curve[5][256];$/;"	m	struct:_Curves
curve1	tools/gimpiscissorstool.h	/^  ICurve         *curve1;       \/*  1st curve connected to current point  *\/$/;"	m	struct:_GimpIscissorsTool
curve2	tools/gimpiscissorstool.h	/^  ICurve         *curve2;       \/*  2nd curve connected to current point  *\/$/;"	m	struct:_GimpIscissorsTool
curve_type	base/curves.h	/^  GimpCurveType curve_type[5];$/;"	m	struct:_Curves
curve_type	tools/gimpcurvestool.h	/^  GtkWidget            *curve_type;$/;"	m	struct:_GimpCurvesTool
curves	tools/gimpcurvestool.h	/^  Curves               *curves;$/;"	m	struct:_GimpCurvesTool
curves	tools/gimpiscissorstool.h	/^  GQueue         *curves;       \/*  the list of curves                    *\/$/;"	m	struct:_GimpIscissorsTool
curves_add_point	tools/gimpcurvestool.c	/^curves_add_point (GimpCurvesTool *tool,$/;"	f	file:
curves_calculate_curve	base/curves.c	/^curves_calculate_curve (Curves               *curves,$/;"	f
curves_channel_callback	tools/gimpcurvestool.c	/^curves_channel_callback (GtkWidget      *widget,$/;"	f	file:
curves_channel_reset	base/curves.c	/^curves_channel_reset (Curves               *curves,$/;"	f
curves_channel_reset_callback	tools/gimpcurvestool.c	/^curves_channel_reset_callback (GtkWidget      *widget,$/;"	f	file:
curves_curve_type_callback	tools/gimpcurvestool.c	/^curves_curve_type_callback (GtkWidget      *widget,$/;"	f	file:
curves_explicit_invoker	pdb/color_cmds.c	/^curves_explicit_invoker (GimpProcedure     *procedure,$/;"	f	file:
curves_graph_events	tools/gimpcurvestool.c	/^curves_graph_events (GtkWidget      *widget,$/;"	f	file:
curves_graph_expose	tools/gimpcurvestool.c	/^curves_graph_expose (GtkWidget      *widget,$/;"	f	file:
curves_init	base/curves.c	/^curves_init (Curves *curves)$/;"	f
curves_key_press	tools/gimpcurvestool.c	/^curves_key_press (GimpCurvesTool *tool,$/;"	f	file:
curves_lut_func	base/curves.c	/^curves_lut_func (Curves *curves,$/;"	f
curves_menu_sensitivity	tools/gimpcurvestool.c	/^curves_menu_sensitivity (gint      value,$/;"	f	file:
curves_plot_curve	base/curves.c	/^curves_plot_curve (Curves *curves,$/;"	f	file:
curves_print_loc	tools/gimpcurvestool.c	/^curves_print_loc (GimpCurvesTool *tool)$/;"	f	file:
curves_set_cursor	tools/gimpcurvestool.c	/^curves_set_cursor (GimpCurvesTool *tool,$/;"	f	file:
curves_spline_invoker	pdb/color_cmds.c	/^curves_spline_invoker (GimpProcedure     *procedure,$/;"	f	file:
curves_update	tools/gimpcurvestool.c	/^curves_update (GimpCurvesTool *tool,$/;"	f	file:
curx	tools/gimpperspectiveclonetool.h	/^  gdouble         curx;           \/*  current x coord                  *\/$/;"	m	struct:_GimpPerspectiveCloneTool
curx	tools/gimptransformtool.h	/^  gdouble         curx;            \/*  current x coord                   *\/$/;"	m	struct:_GimpTransformTool
cury	tools/gimpperspectiveclonetool.h	/^  gdouble         cury;           \/*  current y coord                  *\/$/;"	m	struct:_GimpPerspectiveCloneTool
cury	tools/gimptransformtool.h	/^  gdouble         cury;            \/*  current y coord                   *\/$/;"	m	struct:_GimpTransformTool
custom_palette	dialogs/convert-dialog.c	/^  GimpPalette            *custom_palette;$/;"	m	struct:__anon171	file:
custompal_pass1	core/gimpimage-convert.c	/^custompal_pass1 (QuantizeObj *quantobj)$/;"	f	file:
cut_named_buffer_callback	actions/edit-commands.c	/^cut_named_buffer_callback (GtkWidget   *widget,$/;"	f	file:
cx	tools/gimptransformtool.h	/^  gdouble         cx, cy;          \/*  center point (for rotation)       *\/$/;"	m	struct:_GimpTransformTool
cy	tools/gimptransformtool.h	/^  gdouble         cx, cy;          \/*  center point (for rotation)       *\/$/;"	m	struct:_GimpTransformTool
cyan_red	base/color-balance.h	/^  gdouble  cyan_red[3];$/;"	m	struct:_ColorBalance
cyan_red_adj	tools/gimpcolorbalancetool.h	/^  GtkAdjustment    *cyan_red_adj;$/;"	m	struct:_GimpColorBalanceTool
d	core/gimp-transform-resize.c	/^  Point   a, b, c, d;$/;"	m	struct:__anon164	file:
darken_pixels	paint-funcs/paint-funcs-generic.h	/^darken_pixels (const guchar *src1,$/;"	f
dash_info	core/gimpstrokeoptions.h	/^  GArray          *dash_info;$/;"	m	struct:_GimpStrokeOptions
dash_info_changed	core/gimpstrokeoptions.h	/^  void (* dash_info_changed) (GimpStrokeOptions *stroke_options,$/;"	m	struct:_GimpStrokeOptionsClass
dash_length	widgets/gimpdasheditor.h	/^  gdouble            dash_length;$/;"	m	struct:_GimpDashEditor
dash_offset	core/gimpstrokeoptions.h	/^  gdouble          dash_offset;$/;"	m	struct:_GimpStrokeOptions
dash_x_to_index	widgets/gimpdasheditor.c	/^dash_x_to_index (GimpDashEditor *editor,$/;"	f	file:
data	actions/data-commands.c	/^  GimpData            *data;$/;"	m	struct:_GimpDataDeleteData	file:
data	base/pixel-processor.c	/^  gpointer             data;$/;"	m	struct:_PixelProcessor	file:
data	base/pixel-region.h	/^  guchar      *data;           \/*  pointer to region data        *\/$/;"	m	struct:_PixelRegion
data	base/temp-buf.h	/^  guchar *data;       \/*  The data buffer. Do never access this field$/;"	m	struct:_TempBuf
data	base/tile-private.h	/^  guchar *data;         \/* the data for the tile. this may be NULL in which$/;"	m	struct:_Tile
data	core/gimpcontainer.c	/^  gpointer          data;$/;"	m	struct:__anon58	file:
data	core/gimpparamspecs.h	/^  guint8   *data;$/;"	m	struct:_GimpArray
data	paint-funcs/paint-funcs.c	/^  guchar               *data;$/;"	m	struct:combine_regions_struct	file:
data	paint-funcs/paint-funcs.c	/^  guchar               *data;$/;"	m	struct:initial_regions_struct	file:
data	paint/gimpink-blob.h	/^  BlobSpan data[1];$/;"	m	struct:_Blob
data	plug-in/gimppluginmanager-data.c	/^  guint8 *data;$/;"	m	struct:_GimpPlugInData	file:
data	widgets/gimpdataeditor.h	/^  GimpData        *data;$/;"	m	struct:_GimpDataEditor
data_copy_location_cmd_callback	actions/data-commands.c	/^data_copy_location_cmd_callback (GtkAction *action,$/;"	f
data_delete_cmd_callback	actions/data-commands.c	/^data_delete_cmd_callback (GtkAction *action,$/;"	f
data_delete_confirm_response	actions/data-commands.c	/^data_delete_confirm_response (GtkWidget          *dialog,$/;"	f	file:
data_duplicate_cmd_callback	actions/data-commands.c	/^data_duplicate_cmd_callback (GtkAction *action,$/;"	f
data_edit_cmd_callback	actions/data-commands.c	/^data_edit_cmd_callback (GtkAction   *action,$/;"	f
data_editable	widgets/gimpdataeditor.h	/^  gboolean         data_editable;$/;"	m	struct:_GimpDataEditor
data_editor_edit_active_cmd_callback	actions/data-editor-commands.c	/^data_editor_edit_active_cmd_callback (GtkAction *action,$/;"	f
data_factory	widgets/gimpdataeditor.h	/^  GimpDataFactory *data_factory;$/;"	m	struct:_GimpDataEditor
data_get_standard_func	core/gimpdatafactory.h	/^  GimpDataGetStandardFunc           data_get_standard_func;$/;"	m	struct:_GimpDataFactory
data_list	plug-in/gimppluginmanager.h	/^  GList             *data_list;$/;"	m	struct:_GimpPlugInManager
data_new_cmd_callback	actions/data-commands.c	/^data_new_cmd_callback (GtkAction *action,$/;"	f
data_new_func	core/gimpdatafactory.h	/^  GimpDataNewFunc                   data_new_func;$/;"	m	struct:_GimpDataFactory
data_open_as_image_cmd_callback	actions/data-commands.c	/^data_open_as_image_cmd_callback (GtkAction *action,$/;"	f
data_refresh_cmd_callback	actions/data-commands.c	/^data_refresh_cmd_callback (GtkAction *action,$/;"	f
data_signals	core/gimpdata.c	/^static guint data_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
date	pdb/gimppdb-query.c	/^  gchar    *date;$/;"	m	struct:_PDBStrings	file:
date	pdb/gimpprocedure.h	/^  gchar            *date;           \/* Date field                     *\/$/;"	m	struct:_GimpProcedure
date_regex	pdb/gimppdb-query.c	/^  regex_t   date_regex;$/;"	m	struct:_PDBQuery	file:
dbus_connection	gui/gui.c	/^static DBusGConnection *dbus_connection  = NULL;$/;"	v	file:
dbus_glib_gimp_methods	widgets/gimpdbusservice-glue.h	/^static const DBusGMethodInfo dbus_glib_gimp_methods[] = {$/;"	v
dbus_glib_gimp_object_info	widgets/gimpdbusservice-glue.h	/^const DBusGObjectInfo dbus_glib_gimp_object_info = {$/;"	v
dbus_glib_marshal_gimp_BOOLEAN__POINTER	widgets/gimpdbusservice-glue.h	/^dbus_glib_marshal_gimp_BOOLEAN__POINTER (GClosure     *closure,$/;"	f
dbus_glib_marshal_gimp_BOOLEAN__STRING_POINTER_POINTER	widgets/gimpdbusservice-glue.h	/^dbus_glib_marshal_gimp_BOOLEAN__STRING_POINTER_POINTER (GClosure     *closure,$/;"	f
debug	plug-in/gimppluginmanager.h	/^  GimpPlugInDebug   *debug;$/;"	m	struct:_GimpPlugInManager
debug_actions	actions/debug-actions.c	/^static const GimpActionEntry debug_actions[] =$/;"	v	file:
debug_actions_setup	actions/debug-actions.c	/^debug_actions_setup (GimpActionGroup *group)$/;"	f
debug_actions_update	actions/debug-actions.c	/^debug_actions_update (GimpActionGroup *group,$/;"	f
debug_context	core/gimpviewable.c	/^static gboolean debug_context = TRUE;$/;"	v	file:
debug_dump_attached_data_cmd_callback	actions/debug-commands.c	/^debug_dump_attached_data_cmd_callback (GtkAction *action,$/;"	f
debug_dump_managers_cmd_callback	actions/debug-commands.c	/^debug_dump_managers_cmd_callback (GtkAction *action,$/;"	f
debug_dump_menus_cmd_callback	actions/debug-commands.c	/^debug_dump_menus_cmd_callback (GtkAction *action,$/;"	f
debug_dump_menus_recurse_menu	actions/debug-commands.c	/^debug_dump_menus_recurse_menu (GtkWidget *menu,$/;"	f	file:
debug_events	widgets/gimpcontrollerinfo.h	/^  gboolean                    debug_events;$/;"	m	struct:_GimpControllerInfo
debug_mem_profile_cmd_callback	actions/debug-commands.c	/^debug_mem_profile_cmd_callback (GtkAction *action,$/;"	f
debug_print_qdata	actions/debug-commands.c	/^debug_print_qdata (GimpObject *object)$/;"	f	file:
debug_print_qdata_foreach	actions/debug-commands.c	/^debug_print_qdata_foreach (GQuark   key_id,$/;"	f	file:
decorate_text	dialogs/about-dialog.c	/^decorate_text (GimpAboutDialog *dialog,$/;"	f	file:
decrease_opacity	composite/gimp-composite.h	/^  guchar decrease_opacity;$/;"	m	struct:GimpCompositeOperationEffects
decrease_opacity	paint-funcs/paint-funcs.c	/^  const guint   decrease_opacity : 1; \/*  layer mode can decrease opacity *\/$/;"	m	struct:_LayerMode	file:
default_aspect_denominator	tools/gimprectangleoptions.h	/^  gdouble                     default_aspect_denominator;$/;"	m	struct:_GimpRectangleOptionsPrivate
default_aspect_numerator	tools/gimprectangleoptions.h	/^  gdouble                     default_aspect_numerator;$/;"	m	struct:_GimpRectangleOptionsPrivate
default_brush	config/gimpcoreconfig.h	/^  gchar                  *default_brush;$/;"	m	struct:_GimpCoreConfig
default_colors	tools/gimphuesaturationtool.c	/^static gint default_colors[6][3] =$/;"	v	file:
default_context	core/gimp.h	/^  GimpContext            *default_context;$/;"	m	struct:_Gimp
default_coords	paint/gimppaintcore-stroke.c	/^static const GimpCoords default_coords = GIMP_COORDS_DEFAULT_VALUES;$/;"	v	file:
default_coords	pdb/paint_tools_cmds.c	/^static const GimpCoords default_coords = GIMP_COORDS_DEFAULT_VALUES;$/;"	v	file:
default_coords	vectors/gimpvectors-compat.c	/^static const GimpCoords default_coords = GIMP_COORDS_DEFAULT_VALUES;$/;"	v	file:
default_dot_for_dot	config/gimpdisplayconfig.h	/^  gboolean            default_dot_for_dot;$/;"	m	struct:_GimpDisplayConfig
default_fixed_size_height	tools/gimprectangleoptions.h	/^  gdouble                     default_fixed_size_height;$/;"	m	struct:_GimpRectangleOptionsPrivate
default_fixed_size_width	tools/gimprectangleoptions.h	/^  gdouble                     default_fixed_size_width;$/;"	m	struct:_GimpRectangleOptionsPrivate
default_font	config/gimpcoreconfig.h	/^  gchar                  *default_font;$/;"	m	struct:_GimpCoreConfig
default_fullscreen_view	config/gimpdisplayconfig.h	/^  GimpDisplayOptions *default_fullscreen_view;$/;"	m	struct:_GimpDisplayConfig
default_gradient	config/gimpcoreconfig.h	/^  gchar                  *default_gradient;$/;"	m	struct:_GimpCoreConfig
default_grid	config/gimpcoreconfig.h	/^  GimpGrid               *default_grid;$/;"	m	struct:_GimpCoreConfig
default_icon	widgets/gimpfgbgeditor.h	/^  GdkPixbuf       *default_icon;$/;"	m	struct:_GimpFgBgEditor
default_image	config/gimpcoreconfig.h	/^  GimpTemplate           *default_image;$/;"	m	struct:_GimpCoreConfig
default_left_number_property	widgets/gimppropwidgets.c	/^  const gchar *default_left_number_property;$/;"	m	struct:__anon382	file:
default_name	core/gimpitem.h	/^  const gchar *default_name;$/;"	m	struct:_GimpItemClass
default_palette	config/gimpcoreconfig.h	/^  gchar                  *default_palette;$/;"	m	struct:_GimpCoreConfig
default_pattern	config/gimpcoreconfig.h	/^  gchar                  *default_pattern;$/;"	m	struct:_GimpCoreConfig
default_right_number_property	widgets/gimppropwidgets.c	/^  const gchar *default_right_number_property;$/;"	m	struct:__anon382	file:
default_stock_id	core/gimpviewable.h	/^  const gchar     *default_stock_id;$/;"	m	struct:_GimpViewableClass
default_threshold	config/gimpguiconfig.h	/^  gint                 default_threshold;$/;"	m	struct:_GimpGuiConfig
default_view	config/gimpdisplayconfig.h	/^  GimpDisplayOptions *default_view;$/;"	m	struct:_GimpDisplayConfig
default_view_size	widgets/gimpcontainerpopup.h	/^  gint                 default_view_size;$/;"	m	struct:_GimpContainerPopup
defined_props	core/gimpcontext.h	/^  guint32               defined_props;$/;"	m	struct:_GimpContext
deletable	core/gimpdata.h	/^  guint         deletable : 1;$/;"	m	struct:_GimpData
delete_action	widgets/gimpitemtreeview.h	/^  const gchar          *delete_action;$/;"	m	struct:_GimpItemTreeViewClass
delete_button	widgets/gimpbufferview.h	/^  GtkWidget           *delete_button;$/;"	m	struct:_GimpBufferView
delete_button	widgets/gimpcontrollereditor.h	/^  GtkWidget          *delete_button;$/;"	m	struct:_GimpControllerEditor
delete_button	widgets/gimpdatafactoryview.h	/^  GtkWidget           *delete_button;$/;"	m	struct:_GimpDataFactoryView
delete_button	widgets/gimpimageview.h	/^  GtkWidget           *delete_button;$/;"	m	struct:_GimpImageView
delete_button	widgets/gimpitemtreeview.h	/^  GtkWidget             *delete_button;$/;"	m	struct:_GimpItemTreeView
delete_button	widgets/gimptemplateview.h	/^  GtkWidget           *delete_button;$/;"	m	struct:_GimpTemplateView
delete_button	widgets/gimptooloptionseditor.h	/^  GtkWidget       *delete_button;$/;"	m	struct:_GimpToolOptionsEditor
delete_func	core/gimpimage-convert.c	/^  Cleanup_Func delete_func;         \/* function to clean up data associated with private *\/$/;"	m	struct:_QuantizeObj	file:
delete_median_cut	core/gimpimage-convert.c	/^delete_median_cut (QuantizeObj *quantobj)$/;"	f	file:
delete_on_exit	core/gimpunit.c	/^  gboolean  delete_on_exit;$/;"	m	struct:__anon105	file:
denom_adj	display/gimpdisplayshell-scale.c	/^  GtkObject        *denom_adj;$/;"	m	struct:__anon190	file:
deprecated	pdb/gimpprocedure.h	/^  gchar            *deprecated;     \/* Replacement if deprecated      *\/$/;"	m	struct:_GimpProcedure
depth	core/gimpbrush-load.c	/^  gint16   depth;$/;"	m	struct:_AbrSampledBrushHeader	file:
depth_first_search	base/siox.c	/^depth_first_search (TileManager *mask,$/;"	f	file:
desaturate_dialog_free	dialogs/desaturate-dialog.c	/^desaturate_dialog_free (DesaturateDialog *dialog)$/;"	f	file:
desaturate_dialog_new	dialogs/desaturate-dialog.c	/^desaturate_dialog_new (GimpDrawable       *drawable,$/;"	f
desaturate_full_invoker	pdb/color_cmds.c	/^desaturate_full_invoker (GimpProcedure     *procedure,$/;"	f	file:
desaturate_invoker	pdb/color_cmds.c	/^desaturate_invoker (GimpProcedure     *procedure,$/;"	f	file:
desaturate_mode	actions/drawable-commands.c	/^static GimpDesaturateMode  desaturate_mode = GIMP_DESATURATE_LIGHTNESS;$/;"	v	file:
desaturate_region_average	core/gimpdrawable-desaturate.c	/^desaturate_region_average (gpointer     data,$/;"	f	file:
desaturate_region_lightness	core/gimpdrawable-desaturate.c	/^desaturate_region_lightness (gpointer     data,$/;"	f	file:
desaturate_region_luminosity	core/gimpdrawable-desaturate.c	/^desaturate_region_luminosity (gpointer     data,$/;"	f	file:
desaturate_response	actions/drawable-commands.c	/^desaturate_response (GtkWidget        *widget,$/;"	f	file:
desc	widgets/gimpprofilechooserdialog.h	/^  gchar                *desc;$/;"	m	struct:_GimpProfileChooserDialog
desc_label	widgets/gimpviewabledialog.h	/^  GtkWidget   *desc_label;$/;"	m	struct:_GimpViewableDialog
description	core/gimpimagefile.h	/^  gchar              *description;$/;"	m	struct:_GimpImagefile
desired_fixed_height	tools/gimprectangleoptions.h	/^  gdouble                     desired_fixed_height;$/;"	m	struct:_GimpRectangleOptionsPrivate
desired_fixed_size_height	tools/gimprectangleoptions.h	/^  gdouble                     desired_fixed_size_height;$/;"	m	struct:_GimpRectangleOptionsPrivate
desired_fixed_size_width	tools/gimprectangleoptions.h	/^  gdouble                     desired_fixed_size_width;$/;"	m	struct:_GimpRectangleOptionsPrivate
desired_fixed_width	tools/gimprectangleoptions.h	/^  gdouble                     desired_fixed_width;$/;"	m	struct:_GimpRectangleOptionsPrivate
desired_number_of_colors	core/gimpimage-convert.c	/^  int desired_number_of_colors;     \/* Number of colors we will allow    *\/$/;"	m	struct:_QuantizeObj	file:
dest	display/gimpdisplayshell-render.c	/^  guchar           *dest;$/;"	m	struct:_RenderInfo	file:
dest	paint-funcs/paint-funcs-generic.h	/^  guchar           **dest;$/;"	m	struct:apply_layer_mode_struct
dest	widgets/gimpcolordisplayeditor.h	/^  GtkListStore          *dest;$/;"	m	struct:_GimpColorDisplayEditor
dest	widgets/gimpcontrollerlist.h	/^  GtkWidget          *dest;$/;"	m	struct:_GimpControllerList
destPR	core/gimpimagemap.c	/^  PixelRegion            destPR;$/;"	m	struct:_GimpImageMap	file:
dest_bpl	display/gimpdisplayshell-render.c	/^  gint              dest_bpl;$/;"	m	struct:_RenderInfo	file:
dest_bpp	display/gimpdisplayshell-render.c	/^  gint              dest_bpp;$/;"	m	struct:_RenderInfo	file:
dest_info	widgets/gimpcontrollerlist.h	/^  GimpControllerInfo *dest_info;$/;"	m	struct:_GimpControllerList
dest_sel	widgets/gimpcolordisplayeditor.h	/^  GtkTreeSelection      *dest_sel;$/;"	m	struct:_GimpColorDisplayEditor
dest_width	display/gimpdisplayshell-render.c	/^  gint              dest_width;$/;"	m	struct:_RenderInfo	file:
dest_x_fv	paint/gimpperspectiveclone.h	/^  gdouble      dest_x_fv;    \/* destination coords in front_view perspective *\/$/;"	m	struct:_GimpPerspectiveClone
dest_y_fv	paint/gimpperspectiveclone.h	/^  gdouble      dest_y_fv;$/;"	m	struct:_GimpPerspectiveClone
device	display/gimpdisplayshell-autoscroll.c	/^  GdkDevice       *device;$/;"	m	struct:__anon189	file:
device	widgets/gimpdeviceinfo.h	/^  GdkDevice     *device;$/;"	m	struct:_GimpDeviceInfo
device_info	widgets/gimpdevicestatus.c	/^  GimpDeviceInfo *device_info;$/;"	m	struct:_GimpDeviceStatusEntry	file:
device_info_list	widgets/gimpdevices.c	/^  GimpContainer          *device_info_list;$/;"	m	struct:_GimpDeviceManager	file:
device_info_signals	widgets/gimpdeviceinfo.c	/^static guint device_info_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
devicerc_deleted	widgets/gimpdevices.c	/^  gboolean                devicerc_deleted;$/;"	m	struct:_GimpDeviceManager	file:
devices	widgets/gimpdevicestatus.h	/^  GList      *devices;$/;"	m	struct:_GimpDeviceStatus
diagonal_weight	tools/gimpiscissorstool.c	/^static gint    diagonal_weight[256];$/;"	v	file:
dialog	dialogs/about-dialog.c	/^  GtkWidget    *dialog;$/;"	m	struct:__anon168	file:
dialog	dialogs/channel-options-dialog.h	/^  GtkWidget   *dialog;$/;"	m	struct:_ChannelOptionsDialog
dialog	dialogs/convert-dialog.c	/^  GtkWidget              *dialog;$/;"	m	struct:__anon171	file:
dialog	dialogs/desaturate-dialog.h	/^  GtkWidget          *dialog;$/;"	m	struct:_DesaturateDialog
dialog	dialogs/image-merge-layers-dialog.h	/^  GtkWidget     *dialog;$/;"	m	struct:_ImageMergeLayersDialog
dialog	dialogs/image-new-dialog.c	/^  GtkWidget    *dialog;$/;"	m	struct:__anon179	file:
dialog	dialogs/image-scale-dialog.c	/^  GtkWidget             *dialog;$/;"	m	struct:__anon167	file:
dialog	dialogs/layer-add-mask-dialog.h	/^  GtkWidget       *dialog;$/;"	m	struct:_LayerAddMaskDialog
dialog	dialogs/layer-options-dialog.h	/^  GtkWidget    *dialog;$/;"	m	struct:_LayerOptionsDialog
dialog	dialogs/offset-dialog.c	/^  GtkWidget      *dialog;$/;"	m	struct:__anon169	file:
dialog	dialogs/palette-import-dialog.c	/^  GtkWidget     *dialog;$/;"	m	struct:__anon178	file:
dialog	dialogs/template-options-dialog.h	/^  GtkWidget    *dialog;$/;"	m	struct:_TemplateOptionsDialog
dialog	dialogs/vectors-export-dialog.h	/^  GtkWidget *dialog;$/;"	m	struct:_VectorsExportDialog
dialog	dialogs/vectors-import-dialog.h	/^  GtkWidget *dialog;$/;"	m	struct:_VectorsImportDialog
dialog	dialogs/vectors-options-dialog.h	/^  GtkWidget   *dialog;$/;"	m	struct:_VectorsOptionsDialog
dialog	display/gimpdisplayshell-filter-dialog.c	/^  GtkWidget             *dialog;$/;"	m	struct:__anon184	file:
dialog	tools/gimpcolorpickertool.h	/^  GtkWidget     *dialog;$/;"	m	struct:_GimpColorPickerTool
dialog	tools/gimpimagemaptool.h	/^  void     (* dialog)        (GimpImageMapTool  *image_map_tool);$/;"	m	struct:_GimpImageMapToolClass
dialog	tools/gimpmeasuretool.h	/^  GtkWidget       *dialog;$/;"	m	struct:_GimpMeasureTool
dialog	tools/gimptransformtool.h	/^  GtkWidget      *dialog;$/;"	m	struct:_GimpTransformTool
dialog	tools/gimptransformtool.h	/^  void          (* dialog)        (GimpTransformTool *tool);$/;"	m	struct:_GimpTransformToolClass
dialog_autoload_toggled	dialogs/module-dialog.c	/^dialog_autoload_toggled (GtkCellRendererToggle *celltoggle,$/;"	f	file:
dialog_destroy_callback	dialogs/module-dialog.c	/^dialog_destroy_callback (GtkWidget    *widget,$/;"	f	file:
dialog_factory	widgets/gimpcontainerpopup.h	/^  GimpDialogFactory   *dialog_factory;$/;"	m	struct:_GimpContainerPopup
dialog_factory	widgets/gimpdock.h	/^  GimpDialogFactory *dialog_factory;$/;"	m	struct:_GimpDock
dialog_factory	widgets/gimpviewablebutton.h	/^  GimpDialogFactory *dialog_factory;$/;"	m	struct:_GimpViewableButton
dialog_identifier	widgets/gimpcontainerpopup.h	/^  gchar               *dialog_identifier;$/;"	m	struct:_GimpContainerPopup
dialog_identifier	widgets/gimpviewablebutton.h	/^  gchar             *dialog_identifier;$/;"	m	struct:_GimpViewableButton
dialog_info_add	dialogs/module-dialog.c	/^dialog_info_add (GimpModuleDB *db,$/;"	f	file:
dialog_info_init	dialogs/module-dialog.c	/^dialog_info_init (ModuleDialog *dialog,$/;"	f	file:
dialog_info_remove	dialogs/module-dialog.c	/^dialog_info_remove (GimpModuleDB *db,$/;"	f	file:
dialog_info_update	dialogs/module-dialog.c	/^dialog_info_update (GimpModuleDB *db,$/;"	f	file:
dialog_load_unload_callback	dialogs/module-dialog.c	/^dialog_load_unload_callback (GtkWidget    *widget,$/;"	f	file:
dialog_response	dialogs/module-dialog.c	/^dialog_response (GtkWidget    *widget,$/;"	f	file:
dialog_select_callback	dialogs/module-dialog.c	/^dialog_select_callback (GtkTreeSelection *sel,$/;"	f	file:
dialog_stock_id	widgets/gimpcontainerpopup.h	/^  gchar               *dialog_stock_id;$/;"	m	struct:_GimpContainerPopup
dialog_stock_id	widgets/gimpviewablebutton.h	/^  gchar             *dialog_stock_id;$/;"	m	struct:_GimpViewableButton
dialog_target_table	widgets/gimpdockable.c	/^static const GtkTargetEntry dialog_target_table[] = { GIMP_TARGET_DIALOG };$/;"	v	file:
dialog_target_table	widgets/gimpdockbook.c	/^static const GtkTargetEntry dialog_target_table[] = { GIMP_TARGET_DIALOG };$/;"	v	file:
dialog_target_table	widgets/gimpdockseparator.c	/^static const GtkTargetEntry dialog_target_table[] = { GIMP_TARGET_DIALOG };$/;"	v	file:
dialog_tooltip	widgets/gimpcontainerpopup.h	/^  gchar               *dialog_tooltip;$/;"	m	struct:_GimpContainerPopup
dialog_tooltip	widgets/gimpviewablebutton.h	/^  gchar             *dialog_tooltip;$/;"	m	struct:_GimpViewableButton
dialog_update	tools/gimptransformtool.h	/^  void          (* dialog_update) (GimpTransformTool *tool);$/;"	m	struct:_GimpTransformToolClass
dialogs	widgets/gimppdbdialog.h	/^  GList           *dialogs;$/;"	m	struct:_GimpPdbDialogClass
dialogs_about_get	dialogs/dialogs-constructors.c	/^dialogs_about_get (GimpDialogFactory *factory,$/;"	f
dialogs_actions	actions/dialogs-actions.c	/^static const GimpActionEntry dialogs_actions[] =$/;"	v	file:
dialogs_actions_setup	actions/dialogs-actions.c	/^dialogs_actions_setup (GimpActionGroup *group)$/;"	f
dialogs_actions_update	actions/dialogs-actions.c	/^dialogs_actions_update (GimpActionGroup *group,$/;"	f
dialogs_brush_editor_get	dialogs/dialogs-constructors.c	/^dialogs_brush_editor_get (GimpDialogFactory *factory,$/;"	f
dialogs_brush_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_brush_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_brush_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_brush_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_buffer_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_buffer_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_buffer_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_buffer_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_channel_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_channel_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_close_all_get	dialogs/dialogs-constructors.c	/^dialogs_close_all_get (GimpDialogFactory *factory,$/;"	f
dialogs_color_editor_new	dialogs/dialogs-constructors.c	/^dialogs_color_editor_new (GimpDialogFactory *factory,$/;"	f
dialogs_colormap_editor_new	dialogs/dialogs-constructors.c	/^dialogs_colormap_editor_new (GimpDialogFactory *factory,$/;"	f
dialogs_create_data_cmd_callback	actions/dialogs-commands.c	/^dialogs_create_data_cmd_callback (GtkAction *action,$/;"	f
dialogs_create_dock	actions/dialogs-commands.c	/^dialogs_create_dock (GdkScreen          *screen,$/;"	f	file:
dialogs_create_dockable_cmd_callback	actions/dialogs-commands.c	/^dialogs_create_dockable_cmd_callback (GtkAction   *action,$/;"	f
dialogs_create_lc_cmd_callback	actions/dialogs-commands.c	/^dialogs_create_lc_cmd_callback (GtkAction *action,$/;"	f
dialogs_create_stuff_cmd_callback	actions/dialogs-commands.c	/^dialogs_create_stuff_cmd_callback (GtkAction *action,$/;"	f
dialogs_create_toplevel_cmd_callback	actions/dialogs-commands.c	/^dialogs_create_toplevel_cmd_callback (GtkAction   *action,$/;"	f
dialogs_cursor_view_new	dialogs/dialogs-constructors.c	/^dialogs_cursor_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_device_status_new	dialogs/dialogs-constructors.c	/^dialogs_device_status_new (GimpDialogFactory *factory,$/;"	f
dialogs_dock_new	dialogs/dialogs-constructors.c	/^dialogs_dock_new (GimpDialogFactory *factory,$/;"	f
dialogs_dockable_actions	actions/dialogs-actions.c	/^const GimpStringActionEntry dialogs_dockable_actions[] =$/;"	v
dialogs_dockable_constructor	dialogs/dialogs-constructors.c	/^dialogs_dockable_constructor (GimpDialogFactory      *factory,$/;"	f
dialogs_document_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_document_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_document_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_document_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_error_console_new	dialogs/dialogs-constructors.c	/^dialogs_error_console_new (GimpDialogFactory *factory,$/;"	f
dialogs_error_get	dialogs/dialogs-constructors.c	/^dialogs_error_get (GimpDialogFactory *factory,$/;"	f
dialogs_exit	dialogs/dialogs.c	/^dialogs_exit (Gimp *gimp)$/;"	f
dialogs_file_open_location_new	dialogs/dialogs-constructors.c	/^dialogs_file_open_location_new (GimpDialogFactory *factory,$/;"	f
dialogs_file_open_new	dialogs/dialogs-constructors.c	/^dialogs_file_open_new (GimpDialogFactory *factory,$/;"	f
dialogs_file_save_new	dialogs/dialogs-constructors.c	/^dialogs_file_save_new (GimpDialogFactory *factory,$/;"	f
dialogs_font_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_font_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_font_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_font_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_get_toolbox	dialogs/dialogs.c	/^dialogs_get_toolbox (void)$/;"	f
dialogs_gradient_editor_get	dialogs/dialogs-constructors.c	/^dialogs_gradient_editor_get (GimpDialogFactory *factory,$/;"	f
dialogs_gradient_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_gradient_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_gradient_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_gradient_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_histogram_editor_new	dialogs/dialogs-constructors.c	/^dialogs_histogram_editor_new (GimpDialogFactory *factory,$/;"	f
dialogs_image_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_image_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_image_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_image_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_image_new_new	dialogs/dialogs-constructors.c	/^dialogs_image_new_new (GimpDialogFactory *factory,$/;"	f
dialogs_indexed_palette_selected	dialogs/dialogs-constructors.c	/^dialogs_indexed_palette_selected (GimpColormapEditor *editor,$/;"	f	file:
dialogs_init	dialogs/dialogs.c	/^dialogs_init (Gimp            *gimp,$/;"	f
dialogs_keyboard_shortcuts_get	dialogs/dialogs-constructors.c	/^dialogs_keyboard_shortcuts_get (GimpDialogFactory *factory,$/;"	f
dialogs_layer_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_layer_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_module_get	dialogs/dialogs-constructors.c	/^dialogs_module_get (GimpDialogFactory *factory,$/;"	f
dialogs_navigation_editor_new	dialogs/dialogs-constructors.c	/^dialogs_navigation_editor_new (GimpDialogFactory *factory,$/;"	f
dialogs_palette_editor_get	dialogs/dialogs-constructors.c	/^dialogs_palette_editor_get (GimpDialogFactory *factory,$/;"	f
dialogs_palette_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_palette_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_palette_import_get	dialogs/dialogs-constructors.c	/^dialogs_palette_import_get (GimpDialogFactory *factory,$/;"	f
dialogs_palette_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_palette_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_pattern_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_pattern_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_pattern_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_pattern_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_preferences_get	dialogs/dialogs-constructors.c	/^dialogs_preferences_get (GimpDialogFactory *factory,$/;"	f
dialogs_quit_get	dialogs/dialogs-constructors.c	/^dialogs_quit_get (GimpDialogFactory *factory,$/;"	f
dialogs_sample_point_editor_new	dialogs/dialogs-constructors.c	/^dialogs_sample_point_editor_new (GimpDialogFactory *factory,$/;"	f
dialogs_selection_editor_new	dialogs/dialogs-constructors.c	/^dialogs_selection_editor_new (GimpDialogFactory *factory,$/;"	f
dialogs_show_toolbox	actions/dialogs-commands.c	/^dialogs_show_toolbox (void)$/;"	f
dialogs_show_toolbox_cmd_callback	actions/dialogs-commands.c	/^dialogs_show_toolbox_cmd_callback (GtkAction *action,$/;"	f
dialogs_shown	widgets/gimpdialogfactory.c	/^static gboolean dialogs_shown = TRUE;  \/* FIXME *\/$/;"	v	file:
dialogs_template_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_template_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_template_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_template_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_tips_get	dialogs/dialogs-constructors.c	/^dialogs_tips_get (GimpDialogFactory *factory,$/;"	f
dialogs_tool_grid_view_new	dialogs/dialogs-constructors.c	/^dialogs_tool_grid_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_tool_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_tool_list_view_new (GimpDialogFactory *factory,$/;"	f
dialogs_tool_options_new	dialogs/dialogs-constructors.c	/^dialogs_tool_options_new (GimpDialogFactory *factory,$/;"	f
dialogs_toolbox_get	dialogs/dialogs-constructors.c	/^dialogs_toolbox_get (GimpDialogFactory *factory,$/;"	f
dialogs_toplevel_actions	actions/dialogs-actions.c	/^static const GimpStringActionEntry dialogs_toplevel_actions[] =$/;"	v	file:
dialogs_undo_editor_new	dialogs/dialogs-constructors.c	/^dialogs_undo_editor_new (GimpDialogFactory *factory,$/;"	f
dialogs_vectors_list_view_new	dialogs/dialogs-constructors.c	/^dialogs_vectors_list_view_new (GimpDialogFactory *factory,$/;"	f
difference_pixels	paint-funcs/paint-funcs-generic.h	/^difference_pixels (const guchar *src1,$/;"	f
digits	core/gimpunit.c	/^  gint      digits;$/;"	m	struct:__anon105	file:
dilate_mask	base/siox.c	/^dilate_mask (TileManager *mask,$/;"	f	file:
dilate_region	paint-funcs/paint-funcs.c	/^dilate_region (PixelRegion *region)$/;"	f
dimension	core/gimpbrushpipe.h	/^  gint              dimension;$/;"	m	struct:_GimpBrushPipe
dir_changed	widgets/gimptexteditor.h	/^  void (* dir_changed)  (GimpTextEditor *editor);$/;"	m	struct:_GimpTextEditorClass
direction	tools/gimptransformoptions.h	/^  GimpTransformDirection    direction;$/;"	m	struct:_GimpTransformOptions
direction	tools/gimptransformtool.h	/^  GimpTransformDirection  direction;$/;"	m	struct:_GimpTransformTool
direction	widgets/gimpcontrollerwheel.c	/^  const GdkScrollDirection  direction;$/;"	m	struct:_WheelEvent	file:
direction_value	tools/gimpiscissorstool.c	/^static gint    direction_value[256][4];$/;"	v	file:
dirty	base/pixel-region.h	/^  gboolean     dirty;          \/*  will this region be dirtied?  *\/$/;"	m	struct:_PixelRegion
dirty	base/tile-private.h	/^  guint   dirty : 1;    \/* is the tile dirty? has it been modified? *\/$/;"	m	struct:_Tile
dirty	core/gimpdata.h	/^  guint         dirty     : 1;$/;"	m	struct:_GimpData
dirty	core/gimpdata.h	/^  void       (* dirty)         (GimpData  *data);$/;"	m	struct:_GimpDataClass
dirty	core/gimpimage.h	/^  gint               dirty;                 \/*  dirty flag -- # of ops       *\/$/;"	m	struct:_GimpImage
dirty	core/gimpimage.h	/^  void (* dirty)                        (GimpImage            *image,$/;"	m	struct:_GimpImageClass
dirty	widgets/gimpsamplepointeditor.h	/^  gboolean         dirty[4];$/;"	m	struct:_GimpSamplePointEditor
dirty_idle_id	widgets/gimpsamplepointeditor.h	/^  guint            dirty_idle_id;$/;"	m	struct:_GimpSamplePointEditor
dirty_list	base/tile-cache.c	/^static TileList      dirty_list      = { NULL, NULL };$/;"	v	file:
dirty_mask	core/gimpundo.h	/^  GimpDirtyMask     dirty_mask;     \/* affected parts of the image        *\/$/;"	m	struct:_GimpUndo
dirty_mask	tools/gimptoolcontrol.h	/^  GimpDirtyMask      dirty_mask;         \/*  if preserve is FALSE, cancel    *$/;"	m	struct:_GimpToolControl
dirty_tiles	base/pixel-region.h	/^  gint    dirty_tiles;$/;"	m	struct:_PixelRegionIterator
dirty_time	core/gimpimage.h	/^  guint              dirty_time;            \/*  time when image became dirty *\/$/;"	m	struct:_GimpImage
discard_invisible	dialogs/image-merge-layers-dialog.h	/^  gboolean       discard_invisible;$/;"	m	struct:_ImageMergeLayersDialog
disconnect	core/gimpobject.h	/^  void    (* disconnect)   (GimpObject *object);$/;"	m	struct:_GimpObjectClass
disconnected	core/gimpobject.h	/^  guint    disconnected : 1;$/;"	m	struct:_GimpObject
disp_count	core/gimpimage.h	/^  gint               disp_count;            \/*  number of displays           *\/$/;"	m	struct:_GimpImage
disp_height	display/gimpdisplayshell.h	/^  gint              disp_height;       \/*  height of drawing area             *\/$/;"	m	struct:_GimpDisplayShell
disp_width	display/gimpdisplayshell.h	/^  gint              disp_width;        \/*  width of drawing area              *\/$/;"	m	struct:_GimpDisplayShell
disp_xoffset	display/gimpdisplayshell.h	/^  gint              disp_xoffset;$/;"	m	struct:_GimpDisplayShell
disp_yoffset	display/gimpdisplayshell.h	/^  gint              disp_yoffset;$/;"	m	struct:_GimpDisplayShell
display	actions/image-commands.c	/^  GimpDisplay *display;$/;"	m	struct:__anon5	file:
display	core/gimpcontext.h	/^  gpointer              display;$/;"	m	struct:_GimpContext
display	display/gimpdisplayshell.h	/^  GimpDisplay      *display;$/;"	m	struct:_GimpDisplayShell
display	tools/gimpdrawtool.h	/^  GimpDisplay  *display;      \/*  The display we are drawing to (may be$/;"	m	struct:_GimpDrawTool
display	tools/gimptool.h	/^  GimpDisplay     *display;     \/*  pointer to currently active display    *\/$/;"	m	struct:_GimpTool
display	widgets/gimpdeviceinfo.h	/^  GdkDisplay    *display;$/;"	m	struct:_GimpDeviceInfo
display_changed	core/gimpcontext.h	/^  void (* display_changed)    (GimpContext          *context,$/;"	m	struct:_GimpContextClass
display_container	widgets/gimpmenudock.h	/^  GimpContainer *display_container;$/;"	m	struct:_GimpMenuDock
display_create	core/gimp-gui.h	/^  GimpObject   * (* display_create)      (GimpImage           *image,$/;"	m	struct:_GimpGui
display_delete	core/gimp-gui.h	/^  void           (* display_delete)      (GimpObject          *display);$/;"	m	struct:_GimpGui
display_delete_invoker	pdb/display_cmds.c	/^display_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
display_format_description	config/gimpconfig-dump.c	/^static const gchar display_format_description[] =$/;"	v	file:
display_get_by_id	core/gimp-gui.h	/^  GimpObject   * (* display_get_by_id)   (Gimp                *gimp,$/;"	m	struct:_GimpGui
display_get_id	core/gimp-gui.h	/^  gint           (* display_get_id)      (GimpObject          *display);$/;"	m	struct:_GimpGui
display_get_window	core/gimp-gui.h	/^  guint32        (* display_get_window)  (GimpObject          *display);$/;"	m	struct:_GimpGui
display_get_window_handle_invoker	pdb/display_cmds.c	/^display_get_window_handle_invoker (GimpProcedure     *procedure,$/;"	f	file:
display_is_valid_invoker	pdb/display_cmds.c	/^display_is_valid_invoker (GimpProcedure     *procedure,$/;"	f	file:
display_new_invoker	pdb/display_cmds.c	/^display_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
display_rc_style	display/gimpdisplayshell.c	/^static const gchar display_rc_style[] =$/;"	v	file:
display_shell_signals	display/gimpdisplayshell.c	/^static guint display_shell_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
displays	core/gimp.h	/^  GimpContainer          *displays;$/;"	m	struct:_Gimp
displays_flush_invoker	pdb/display_cmds.c	/^displays_flush_invoker (GimpProcedure     *procedure,$/;"	f	file:
displays_reconnect	core/gimp-gui.h	/^  void           (* displays_reconnect)  (Gimp                *gimp,$/;"	m	struct:_GimpGui
displays_reconnect_invoker	pdb/display_cmds.c	/^displays_reconnect_invoker (GimpProcedure     *procedure,$/;"	f	file:
dissolve	composite/gimp-composite.h	/^  struct { gint x; gint y; gint opacity; } dissolve;$/;"	m	struct:__anon33	typeref:struct:__anon33::__anon37
dissolve_pixels	paint-funcs/paint-funcs-generic.h	/^dissolve_pixels (const guchar *src,$/;"	f
dist	core/gimpdrawable-blend.c	/^  gdouble           dist;$/;"	m	struct:__anon117	file:
distR	core/gimpdrawable-blend.c	/^static PixelRegion distR =$/;"	v	file:
dist_smoother_add	paint/gimpink.c	/^dist_smoother_add (GimpInk *ink,$/;"	f	file:
dist_smoother_init	paint/gimpink.c	/^dist_smoother_init (GimpInk *ink,$/;"	f	file:
dist_smoother_result	paint/gimpink.c	/^dist_smoother_result (GimpInk *ink)$/;"	f	file:
distance	paint/gimppaintcore.h	/^  gdouble      distance;         \/*  distance traveled by brush          *\/$/;"	m	struct:_GimpPaintCore
distance_label	tools/gimpmeasuretool.h	/^  GtkWidget       *distance_label[2];$/;"	m	struct:_GimpMeasureTool
distance_weights	tools/gimpiscissorstool.c	/^static gfloat  distance_weights[GRADIENT_SEARCH * GRADIENT_SEARCH];$/;"	v	file:
dither	tools/gimpblendoptions.h	/^  gboolean          dither;$/;"	m	struct:_GimpBlendOptions
dither_rand	core/gimpdrawable-blend.c	/^  GRand       *dither_rand;$/;"	m	struct:__anon118	file:
dither_type	dialogs/convert-dialog.c	/^  GimpConvertDitherType   dither_type;$/;"	m	struct:__anon171	file:
divide_pixels	paint-funcs/paint-funcs-generic.h	/^divide_pixels (const guchar *src1,$/;"	f
dnd_col_index	widgets/gimpcolormapeditor.h	/^  gint             dnd_col_index;$/;"	m	struct:_GimpColormapEditor
dnd_data_defs	widgets/gimpdnd.c	/^static const GimpDndDataDef dnd_data_defs[] =$/;"	v	file:
dnd_drop_to_empty	widgets/gimpcontainertreeview.h	/^  gboolean           dnd_drop_to_empty;$/;"	m	struct:_GimpContainerTreeView
dnd_entry	widgets/gimppaletteview.h	/^  GimpPaletteEntry *dnd_entry;$/;"	m	struct:_GimpPaletteView
dnd_gimp	widgets/gimpcontainertreeview.h	/^  Gimp              *dnd_gimp; \/* eek *\/$/;"	m	struct:_GimpContainerTreeView
dnd_renderer	widgets/gimpcontainertreeview.h	/^  GimpViewRenderer  *dnd_renderer;$/;"	m	struct:_GimpContainerTreeView
dnd_widget	widgets/gimpcontainerview.c	/^  GtkWidget     *dnd_widget;$/;"	m	struct:_GimpContainerViewPrivate	file:
do_alignment	tools/gimpaligntool.c	/^do_alignment (GtkWidget *widget,$/;"	f	file:
do_parallel_regions	base/pixel-processor.c	/^do_parallel_regions (PixelProcessor *processor)$/;"	f	file:
do_parallel_regions_single	base/pixel-processor.c	/^do_parallel_regions_single (PixelProcessor             *processor,$/;"	f	file:
dock	widgets/gimpdockbook.h	/^  GimpDock      *dock;$/;"	m	struct:_GimpDockbook
dock	widgets/gimpdockseparator.h	/^  GimpDock    *dock;$/;"	m	struct:_GimpDockSeparator
dock_actions	actions/dock-actions.c	/^static const GimpActionEntry dock_actions[] =$/;"	v	file:
dock_actions_setup	actions/dock-actions.c	/^dock_actions_setup (GimpActionGroup *group)$/;"	f
dock_actions_update	actions/dock-actions.c	/^dock_actions_update (GimpActionGroup *group,$/;"	f
dock_entries	dialogs/dialogs.c	/^static const GimpDialogFactoryEntry dock_entries[] =$/;"	v	file:
dock_signals	widgets/gimpdock.c	/^static guint dock_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
dock_toggle_actions	actions/dock-actions.c	/^static const GimpToggleActionEntry dock_toggle_actions[] =$/;"	v	file:
dock_toggle_auto_cmd_callback	actions/dock-commands.c	/^dock_toggle_auto_cmd_callback (GtkAction *action,$/;"	f
dock_toggle_image_menu_cmd_callback	actions/dock-commands.c	/^dock_toggle_image_menu_cmd_callback (GtkAction *action,$/;"	f
dock_window_hint	config/gimpguiconfig.h	/^  GimpWindowHint       dock_window_hint;$/;"	m	struct:_GimpGuiConfig
dockable_actions	actions/dockable-actions.c	/^static const GimpActionEntry dockable_actions[] =$/;"	v	file:
dockable_actions_setup	actions/dockable-actions.c	/^dockable_actions_setup (GimpActionGroup *group)$/;"	f
dockable_actions_update	actions/dockable-actions.c	/^dockable_actions_update (GimpActionGroup *group,$/;"	f
dockable_add_tab_cmd_callback	actions/dockable-commands.c	/^dockable_add_tab_cmd_callback (GtkAction   *action,$/;"	f
dockable_added	widgets/gimpdockbook.h	/^  void (* dockable_added)     (GimpDockbook *dockbook,$/;"	m	struct:_GimpDockbookClass
dockable_close_tab_cmd_callback	actions/dockable-commands.c	/^dockable_close_tab_cmd_callback (GtkAction *action,$/;"	f
dockable_detach_tab_cmd_callback	actions/dockable-commands.c	/^dockable_detach_tab_cmd_callback (GtkAction *action,$/;"	f
dockable_entry	widgets/gimpsessioninfo.h	/^  GimpDialogFactoryEntry *dockable_entry;$/;"	m	struct:_GimpSessionInfo
dockable_menu_setup	menus/dockable-menu.c	/^dockable_menu_setup (GimpUIManager *manager,$/;"	f
dockable_removed	widgets/gimpdockbook.h	/^  void (* dockable_removed)   (GimpDockbook *dockbook,$/;"	m	struct:_GimpDockbookClass
dockable_reordered	widgets/gimpdockbook.h	/^  void (* dockable_reordered) (GimpDockbook *dockbook,$/;"	m	struct:_GimpDockbookClass
dockable_show_button_bar_cmd_callback	actions/dockable-commands.c	/^dockable_show_button_bar_cmd_callback (GtkAction *action,$/;"	f
dockable_tab_style_actions	actions/dockable-actions.c	/^static const GimpRadioActionEntry dockable_tab_style_actions[] =$/;"	v	file:
dockable_tab_style_cmd_callback	actions/dockable-commands.c	/^dockable_tab_style_cmd_callback (GtkAction *action,$/;"	f
dockable_toggle_actions	actions/dockable-actions.c	/^static const GimpToggleActionEntry dockable_toggle_actions[] =$/;"	v	file:
dockable_toggle_view_cmd_callback	actions/dockable-commands.c	/^dockable_toggle_view_cmd_callback (GtkAction *action,$/;"	f
dockable_view_size_actions	actions/dockable-actions.c	/^static const GimpRadioActionEntry dockable_view_size_actions[] =$/;"	v	file:
dockable_view_size_cmd_callback	actions/dockable-commands.c	/^dockable_view_size_cmd_callback (GtkAction *action,$/;"	f
dockable_view_type_actions	actions/dockable-actions.c	/^static const GimpRadioActionEntry dockable_view_type_actions[] =$/;"	v	file:
dockables	widgets/gimpsessioninfo-book.h	/^  GList     *dockables;$/;"	m	struct:_GimpSessionInfoBook
dockbook	widgets/gimpdockable.h	/^  GimpDockbook *dockbook;$/;"	m	struct:_GimpDockable
dockbook_signals	widgets/gimpdockbook.c	/^static guint dockbook_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
dockbooks	widgets/gimpdock.h	/^  GList             *dockbooks;$/;"	m	struct:_GimpDock
docked_signals	widgets/gimpdocked.c	/^static guint docked_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
document_symbol	core/gimpdocumentlist.c	/^static const gchar document_symbol[] = "document";$/;"	v	file:
documenters	dialogs/authors.h	/^static const gchar * const documenters[] =$/;"	v
documents	core/gimp.h	/^  GimpContainer          *documents;$/;"	m	struct:_Gimp
documents_actions	actions/documents-actions.c	/^static const GimpActionEntry documents_actions[] =$/;"	v	file:
documents_actions_setup	actions/documents-actions.c	/^documents_actions_setup (GimpActionGroup *group)$/;"	f
documents_actions_update	actions/documents-actions.c	/^documents_actions_update (GimpActionGroup *group,$/;"	f
documents_clear_cmd_callback	actions/documents-commands.c	/^documents_clear_cmd_callback (GtkAction *action,$/;"	f
documents_copy_location_cmd_callback	actions/documents-commands.c	/^documents_copy_location_cmd_callback (GtkAction *action,$/;"	f
documents_file_open_dialog_cmd_callback	actions/documents-commands.c	/^documents_file_open_dialog_cmd_callback (GtkAction *action,$/;"	f
documents_open_cmd_callback	actions/documents-commands.c	/^documents_open_cmd_callback (GtkAction *action,$/;"	f
documents_open_image	actions/documents-commands.c	/^documents_open_image (GtkWidget     *editor,$/;"	f	file:
documents_raise_display	actions/documents-commands.c	/^documents_raise_display (GimpDisplay  *display,$/;"	f	file:
documents_raise_or_open_cmd_callback	actions/documents-commands.c	/^documents_raise_or_open_cmd_callback (GtkAction *action,$/;"	f
documents_recreate_preview_cmd_callback	actions/documents-commands.c	/^documents_recreate_preview_cmd_callback (GtkAction *action,$/;"	f
documents_reload_previews_cmd_callback	actions/documents-commands.c	/^documents_reload_previews_cmd_callback (GtkAction *action,$/;"	f
documents_remove_cmd_callback	actions/documents-commands.c	/^documents_remove_cmd_callback (GtkAction *action,$/;"	f
documents_remove_dangling_cmd_callback	actions/documents-commands.c	/^documents_remove_dangling_cmd_callback (GtkAction *action,$/;"	f
documents_remove_dangling_foreach	actions/documents-commands.c	/^documents_remove_dangling_foreach (GimpImagefile *imagefile,$/;"	f	file:
dodge_pixels	paint-funcs/paint-funcs-generic.h	/^dodge_pixels (const guchar *src1,$/;"	f
dodgeburn_default_invoker	pdb/paint_tools_cmds.c	/^dodgeburn_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
dodgeburn_invoker	pdb/paint_tools_cmds.c	/^dodgeburn_invoker (GimpProcedure     *procedure,$/;"	f	file:
domain_name	plug-in/gimppluginmanager-help-domain.c	/^  gchar *domain_name;$/;"	m	struct:_GimpPlugInHelpDomain	file:
domain_name	plug-in/gimppluginmanager-locale-domain.c	/^  gchar *domain_name;$/;"	m	struct:_GimpPlugInLocaleDomain	file:
domain_path	plug-in/gimppluginmanager-locale-domain.c	/^  gchar *domain_path;$/;"	m	struct:_GimpPlugInLocaleDomain	file:
domain_uri	plug-in/gimppluginmanager-help-domain.c	/^  gchar *domain_uri;$/;"	m	struct:_GimpPlugInHelpDomain	file:
dot_for_dot	display/gimpdisplayshell.h	/^  gboolean          dot_for_dot;       \/*  is monitor resolution being ignored?    *\/$/;"	m	struct:_GimpDisplayShell
dot_for_dot	widgets/gimpview-popup.c	/^  gboolean      dot_for_dot;$/;"	m	struct:_GimpViewPopup	file:
dot_for_dot	widgets/gimpviewrenderer.h	/^  guint               dot_for_dot : 1;$/;"	m	struct:_GimpViewRenderer
double_clicked	widgets/gimpview.h	/^  void        (* double_clicked) (GimpView        *view);$/;"	m	struct:_GimpViewClass
down_button	widgets/gimpcolordisplayeditor.h	/^  GtkWidget             *down_button;$/;"	m	struct:_GimpColorDisplayEditor
down_button	widgets/gimpcontrollerlist.h	/^  GtkWidget          *down_button;$/;"	m	struct:_GimpControllerList
dp_buf	tools/gimpiscissorstool.h	/^  TempBuf        *dp_buf;       \/*  dynamic programming buffer            *\/$/;"	m	struct:_GimpIscissorsTool
drag_x	widgets/gimpdockable.h	/^  gint          drag_x;$/;"	m	struct:_GimpDockable
drag_y	widgets/gimpdockable.h	/^  gint          drag_y;$/;"	m	struct:_GimpDockable
draw	tools/gimpdrawtool.h	/^  void (* draw) (GimpDrawTool *draw_tool);$/;"	m	struct:_GimpDrawToolClass
draw	tools/gimpiscissorstool.h	/^  IscissorsDraw   draw;         \/*  items to draw on a draw request       *\/$/;"	m	struct:_GimpIscissorsTool
draw	widgets/gimpviewrenderer.h	/^  void (* draw)        (GimpViewRenderer   *renderer,$/;"	m	struct:_GimpViewRendererClass
draw_brush	tools/gimpbrushtool.h	/^  gboolean       draw_brush;$/;"	m	struct:_GimpBrushTool
draw_cursor	display/gimpdisplayshell.h	/^  gboolean          draw_cursor;       \/* should we draw software cursor ?    *\/$/;"	m	struct:_GimpDisplayShell
draw_frame_column	widgets/gimpviewrenderer-frame.c	/^draw_frame_column (GdkPixbuf *frame_image,$/;"	f	file:
draw_frame_row	widgets/gimpviewrenderer-frame.c	/^draw_frame_row (GdkPixbuf *frame_image,$/;"	f	file:
draw_grid	widgets/gimpviewrendererpalette.h	/^  gboolean          draw_grid;$/;"	m	struct:_GimpViewRendererPalette
draw_line	tools/gimppainttool.h	/^  gboolean         draw_line;$/;"	m	struct:_GimpPaintTool
drawable	core/gimpfloatingselundo.h	/^  GimpDrawable *drawable;$/;"	m	struct:_GimpFloatingSelUndo
drawable	core/gimpimagemap.c	/^  GimpDrawable          *drawable;$/;"	m	struct:_GimpImageMap	file:
drawable	core/gimplayer.h	/^    GimpDrawable *drawable;           \/*  floating sel is attached to    *\/$/;"	m	struct:_GimpLayer::__anon125
drawable	dialogs/desaturate-dialog.h	/^  GimpDrawable       *drawable;$/;"	m	struct:_DesaturateDialog
drawable	dialogs/fade-dialog.c	/^  GimpDrawable         *drawable;$/;"	m	struct:__anon180	file:
drawable	paint/gimpairbrush.h	/^  GimpDrawable     *drawable;$/;"	m	struct:_GimpAirbrush
drawable	tools/gimpimagemaptool.h	/^  GimpDrawable  *drawable;$/;"	m	struct:_GimpImageMapTool
drawable	tools/gimptool.h	/^  GimpDrawable    *drawable;    \/*  pointer to the tool's current drawable *\/$/;"	m	struct:_GimpTool
drawable	widgets/gimphistogrameditor.h	/^  GimpDrawable         *drawable;$/;"	m	struct:_GimpHistogramEditor
drawable_actions	actions/drawable-actions.c	/^static const GimpActionEntry drawable_actions[] =$/;"	v	file:
drawable_actions_setup	actions/drawable-actions.c	/^drawable_actions_setup (GimpActionGroup *group)$/;"	f
drawable_actions_update	actions/drawable-actions.c	/^drawable_actions_update (GimpActionGroup *group,$/;"	f
drawable_bpp_invoker	pdb/drawable_cmds.c	/^drawable_bpp_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_delete_invoker	pdb/drawable_cmds.c	/^drawable_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_desaturate_cmd_callback	actions/drawable-commands.c	/^drawable_desaturate_cmd_callback (GtkAction *action,$/;"	f
drawable_equalize_cmd_callback	actions/drawable-commands.c	/^drawable_equalize_cmd_callback (GtkAction *action,$/;"	f
drawable_fill_invoker	pdb/drawable_cmds.c	/^drawable_fill_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_flip_actions	actions/drawable-actions.c	/^static const GimpEnumActionEntry drawable_flip_actions[] =$/;"	v	file:
drawable_flip_cmd_callback	actions/drawable-commands.c	/^drawable_flip_cmd_callback (GtkAction *action,$/;"	f
drawable_foreground_extract_invoker	pdb/drawable_cmds.c	/^drawable_foreground_extract_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_get_image_invoker	pdb/drawable_cmds.c	/^drawable_get_image_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_get_linked_invoker	pdb/drawable_cmds.c	/^drawable_get_linked_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_get_name_invoker	pdb/drawable_cmds.c	/^drawable_get_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_get_pixel_invoker	pdb/drawable_cmds.c	/^drawable_get_pixel_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_get_tattoo_invoker	pdb/drawable_cmds.c	/^drawable_get_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_get_visible_invoker	pdb/drawable_cmds.c	/^drawable_get_visible_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_has_alpha_invoker	pdb/drawable_cmds.c	/^drawable_has_alpha_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_height_invoker	pdb/drawable_cmds.c	/^drawable_height_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_invert_cmd_callback	actions/drawable-commands.c	/^drawable_invert_cmd_callback (GtkAction *action,$/;"	f
drawable_is_channel_invoker	pdb/drawable_cmds.c	/^drawable_is_channel_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_is_gray_invoker	pdb/drawable_cmds.c	/^drawable_is_gray_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_is_indexed_invoker	pdb/drawable_cmds.c	/^drawable_is_indexed_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_is_layer_invoker	pdb/drawable_cmds.c	/^drawable_is_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_is_layer_mask_invoker	pdb/drawable_cmds.c	/^drawable_is_layer_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_is_rgb_invoker	pdb/drawable_cmds.c	/^drawable_is_rgb_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_is_valid_invoker	pdb/drawable_cmds.c	/^drawable_is_valid_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_levels_stretch_cmd_callback	actions/drawable-commands.c	/^drawable_levels_stretch_cmd_callback (GtkAction *action,$/;"	f
drawable_linked_cmd_callback	actions/drawable-commands.c	/^drawable_linked_cmd_callback (GtkAction *action,$/;"	f
drawable_mask_bounds_invoker	pdb/drawable_cmds.c	/^drawable_mask_bounds_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_mask_intersect_invoker	pdb/drawable_cmds.c	/^drawable_mask_intersect_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_merge_shadow_invoker	pdb/drawable_cmds.c	/^drawable_merge_shadow_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_offset_cmd_callback	actions/drawable-commands.c	/^drawable_offset_cmd_callback (GtkAction *action,$/;"	f
drawable_offset_invoker	pdb/drawable_cmds.c	/^drawable_offset_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_offsets_invoker	pdb/drawable_cmds.c	/^drawable_offsets_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_parasite_attach_invoker	pdb/parasite_cmds.c	/^drawable_parasite_attach_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_parasite_detach_invoker	pdb/parasite_cmds.c	/^drawable_parasite_detach_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_parasite_find_invoker	pdb/parasite_cmds.c	/^drawable_parasite_find_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_parasite_list_invoker	pdb/parasite_cmds.c	/^drawable_parasite_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_rotate_actions	actions/drawable-actions.c	/^static const GimpEnumActionEntry drawable_rotate_actions[] =$/;"	v	file:
drawable_rotate_cmd_callback	actions/drawable-commands.c	/^drawable_rotate_cmd_callback (GtkAction *action,$/;"	f
drawable_set_image_invoker	pdb/drawable_cmds.c	/^drawable_set_image_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_set_linked_invoker	pdb/drawable_cmds.c	/^drawable_set_linked_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_set_name_invoker	pdb/drawable_cmds.c	/^drawable_set_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_set_pixel_invoker	pdb/drawable_cmds.c	/^drawable_set_pixel_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_set_tattoo_invoker	pdb/drawable_cmds.c	/^drawable_set_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_set_visible_invoker	pdb/drawable_cmds.c	/^drawable_set_visible_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_sub_thumbnail_invoker	pdb/drawable_cmds.c	/^drawable_sub_thumbnail_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_thumbnail_invoker	pdb/drawable_cmds.c	/^drawable_thumbnail_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_toggle_actions	actions/drawable-actions.c	/^static const GimpToggleActionEntry drawable_toggle_actions[] =$/;"	v	file:
drawable_transform_2d_default_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_2d_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_2d_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_2d_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_flip_default_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_flip_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_flip_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_flip_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_flip_simple_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_flip_simple_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_matrix_default_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_matrix_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_matrix_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_matrix_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_perspective_default_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_perspective_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_perspective_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_perspective_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_rotate_default_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_rotate_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_rotate_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_rotate_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_rotate_simple_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_rotate_simple_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_scale_default_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_scale_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_scale_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_scale_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_shear_default_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_shear_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_transform_shear_invoker	pdb/drawable_transform_cmds.c	/^drawable_transform_shear_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_type_invoker	pdb/drawable_cmds.c	/^drawable_type_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_type_with_alpha_invoker	pdb/drawable_cmds.c	/^drawable_type_with_alpha_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_update_invoker	pdb/drawable_cmds.c	/^drawable_update_invoker (GimpProcedure     *procedure,$/;"	f	file:
drawable_visible_cmd_callback	actions/drawable-commands.c	/^drawable_visible_cmd_callback (GtkAction *action,$/;"	f
drawable_width_invoker	pdb/drawable_cmds.c	/^drawable_width_invoker (GimpProcedure     *procedure,$/;"	f	file:
drop_color	widgets/gimpcontainertreeview.h	/^  void     (* drop_color)     (GimpContainerTreeView   *tree_view,$/;"	m	struct:_GimpContainerTreeViewClass
drop_component	widgets/gimpcontainertreeview.h	/^  void     (* drop_component) (GimpContainerTreeView   *tree_view,$/;"	m	struct:_GimpContainerTreeViewClass
drop_pixbuf	widgets/gimpcontainertreeview.h	/^  void     (* drop_pixbuf)    (GimpContainerTreeView   *tree_view,$/;"	m	struct:_GimpContainerTreeViewClass
drop_possible	widgets/gimpcontainertreeview.h	/^  gboolean (* drop_possible)  (GimpContainerTreeView   *tree_view,$/;"	m	struct:_GimpContainerTreeViewClass
drop_svg	widgets/gimpcontainertreeview.h	/^  void     (* drop_svg)       (GimpContainerTreeView   *tree_view,$/;"	m	struct:_GimpContainerTreeViewClass
drop_uri_list	widgets/gimpcontainertreeview.h	/^  void     (* drop_uri_list)  (GimpContainerTreeView   *tree_view,$/;"	m	struct:_GimpContainerTreeViewClass
drop_viewable	widgets/gimpcontainertreeview.h	/^  void     (* drop_viewable)  (GimpContainerTreeView   *tree_view,$/;"	m	struct:_GimpContainerTreeViewClass
dt_buffer	paint/gimpink.h	/^  gdouble        dt_buffer[DIST_SMOOTHER_BUFFER];$/;"	m	struct:_GimpInk
dt_buffer	paint/gimpinkundo.h	/^  gdouble            dt_buffer[DIST_SMOOTHER_BUFFER];$/;"	m	struct:_GimpInkUndo
dt_index	paint/gimpink.h	/^  gint           dt_index;$/;"	m	struct:_GimpInk
dt_index	paint/gimpinkundo.h	/^  gint               dt_index;$/;"	m	struct:_GimpInkUndo
dump_describe_param	config/gimpconfig-dump.c	/^dump_describe_param (GParamSpec *param_spec)$/;"	f	file:
dump_gimprc_manpage	config/gimpconfig-dump.c	/^dump_gimprc_manpage (GimpConfig       *rc,$/;"	f	file:
dump_gimprc_system	config/gimpconfig-dump.c	/^dump_gimprc_system (GimpConfig       *rc,$/;"	f	file:
dump_with_linebreaks	config/gimpconfig-dump.c	/^dump_with_linebreaks (gint         fd,$/;"	f	file:
dumping_compat	pdb/gimppdb-query.c	/^  gboolean  dumping_compat;$/;"	m	struct:_PDBDump	file:
duplicate	core/gimpdata.h	/^  GimpData * (* duplicate)     (GimpData  *data);$/;"	m	struct:_GimpDataClass
duplicate	core/gimpitem.h	/^  GimpItem * (* duplicate)    (GimpItem               *item,$/;"	m	struct:_GimpItemClass
duplicate	vectors/gimpstroke.h	/^  GimpStroke  * (* duplicate)            (const GimpStroke      *stroke);$/;"	m	struct:_GimpStrokeClass
duplicate_action	widgets/gimpitemtreeview.h	/^  const gchar          *duplicate_action;$/;"	m	struct:_GimpItemTreeViewClass
duplicate_button	widgets/gimpdatafactoryview.h	/^  GtkWidget           *duplicate_button;$/;"	m	struct:_GimpDataFactoryView
duplicate_button	widgets/gimpitemtreeview.h	/^  GtkWidget             *duplicate_button;$/;"	m	struct:_GimpItemTreeView
duplicate_button	widgets/gimptemplateview.h	/^  GtkWidget           *duplicate_button;$/;"	m	struct:_GimpTemplateView
dx	tools/gimpbrightnesscontrasttool.h	/^  gdouble           dx, dy;$/;"	m	struct:_GimpBrightnessContrastTool
dy	tools/gimpbrightnesscontrasttool.h	/^  gdouble           dx, dy;$/;"	m	struct:_GimpBrightnessContrastTool
eat_button_events	widgets/gimpview.h	/^  guint             eat_button_events : 1;$/;"	m	struct:_GimpView
edit_action	widgets/gimpitemtreeview.h	/^  const gchar          *edit_action;$/;"	m	struct:_GimpItemTreeViewClass
edit_actions	actions/edit-actions.c	/^static const GimpActionEntry edit_actions[] =$/;"	v	file:
edit_actions_background_changed	actions/edit-actions.c	/^edit_actions_background_changed (GimpContext     *context,$/;"	f	file:
edit_actions_foreground_changed	actions/edit-actions.c	/^edit_actions_foreground_changed (GimpContext     *context,$/;"	f	file:
edit_actions_pattern_changed	actions/edit-actions.c	/^edit_actions_pattern_changed (GimpContext     *context,$/;"	f	file:
edit_actions_setup	actions/edit-actions.c	/^edit_actions_setup (GimpActionGroup *group)$/;"	f
edit_actions_update	actions/edit-actions.c	/^edit_actions_update (GimpActionGroup *group,$/;"	f
edit_active	widgets/gimpdataeditor.h	/^  gboolean         edit_active;$/;"	m	struct:_GimpDataEditor
edit_bg	widgets/gimpcoloreditor.h	/^  gboolean     edit_bg;$/;"	m	struct:_GimpColorEditor
edit_blend_invoker	pdb/edit_cmds.c	/^edit_blend_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_bucket_fill_full_invoker	pdb/edit_cmds.c	/^edit_bucket_fill_full_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_bucket_fill_invoker	pdb/edit_cmds.c	/^edit_bucket_fill_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_button	widgets/gimpcolormapeditor.h	/^  GtkWidget       *edit_button;$/;"	m	struct:_GimpColormapEditor
edit_button	widgets/gimpcontrollereditor.h	/^  GtkWidget          *edit_button;$/;"	m	struct:_GimpControllerEditor
edit_button	widgets/gimpcontrollerlist.h	/^  GtkWidget          *edit_button;$/;"	m	struct:_GimpControllerList
edit_button	widgets/gimpdatafactoryview.h	/^  GtkWidget           *edit_button;$/;"	m	struct:_GimpDataFactoryView
edit_button	widgets/gimpdevicestatus.h	/^  GtkWidget  *edit_button;$/;"	m	struct:_GimpDeviceStatus
edit_button	widgets/gimpitemtreeview.h	/^  GtkWidget             *edit_button;$/;"	m	struct:_GimpItemTreeView
edit_button	widgets/gimptemplateview.h	/^  GtkWidget           *edit_button;$/;"	m	struct:_GimpTemplateView
edit_button_x0	widgets/gimpdasheditor.h	/^  gint               edit_button_x0;$/;"	m	struct:_GimpDashEditor
edit_changed	core/gimplayermask.h	/^  void (* edit_changed)  (GimpLayerMask *layer_mask);$/;"	m	struct:_GimpLayerMaskClass
edit_clear_cmd_callback	actions/edit-commands.c	/^edit_clear_cmd_callback (GtkAction *action,$/;"	f
edit_clear_invoker	pdb/edit_cmds.c	/^edit_clear_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_color	widgets/gimptoolbox-color-area.c	/^static GimpActiveColor  edit_color;$/;"	v	file:
edit_config	core/gimp.h	/^  GimpCoreConfig         *edit_config; \/* don't use this one, it's just$/;"	m	struct:_Gimp
edit_copy_cmd_callback	actions/edit-commands.c	/^edit_copy_cmd_callback (GtkAction *action,$/;"	f
edit_copy_invoker	pdb/edit_cmds.c	/^edit_copy_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_copy_visible_cmd_callback	actions/edit-commands.c	/^edit_copy_visible_cmd_callback (GtkAction *action,$/;"	f
edit_copy_visible_invoker	pdb/edit_cmds.c	/^edit_copy_visible_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_cut_cmd_callback	actions/edit-commands.c	/^edit_cut_cmd_callback (GtkAction *action,$/;"	f
edit_cut_invoker	pdb/edit_cmds.c	/^edit_cut_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_dialog	widgets/gimpcontrollereditor.h	/^  GtkWidget          *edit_dialog;$/;"	m	struct:_GimpControllerEditor
edit_fade_cmd_callback	actions/edit-commands.c	/^edit_fade_cmd_callback (GtkAction *action,$/;"	f
edit_fill_actions	actions/edit-actions.c	/^static const GimpEnumActionEntry edit_fill_actions[] =$/;"	v	file:
edit_fill_cmd_callback	actions/edit-commands.c	/^edit_fill_cmd_callback (GtkAction *action,$/;"	f
edit_fill_invoker	pdb/edit_cmds.c	/^edit_fill_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_mask	core/gimplayermask.h	/^  gboolean     edit_mask;     \/*  edit mask or layer?        *\/$/;"	m	struct:_GimpLayerMask
edit_mode	tools/gimpeditselectiontool.h	/^  GimpTranslateMode   edit_mode;       \/*  Translate the mask or layer?      *\/$/;"	m	struct:_GimpEditSelectionTool
edit_mode	tools/gimpvectoroptions.h	/^  GimpVectorMode   edit_mode;$/;"	m	struct:_GimpVectorOptions
edit_mode	widgets/gimpdasheditor.h	/^  gboolean           edit_mode;$/;"	m	struct:_GimpDashEditor
edit_named_copy_cmd_callback	actions/edit-commands.c	/^edit_named_copy_cmd_callback (GtkAction *action,$/;"	f
edit_named_copy_invoker	pdb/edit_cmds.c	/^edit_named_copy_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_named_copy_visible_cmd_callback	actions/edit-commands.c	/^edit_named_copy_visible_cmd_callback (GtkAction *action,$/;"	f
edit_named_copy_visible_invoker	pdb/edit_cmds.c	/^edit_named_copy_visible_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_named_cut_cmd_callback	actions/edit-commands.c	/^edit_named_cut_cmd_callback (GtkAction *action,$/;"	f
edit_named_cut_invoker	pdb/edit_cmds.c	/^edit_named_cut_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_named_paste_as_new_invoker	pdb/edit_cmds.c	/^edit_named_paste_as_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_named_paste_cmd_callback	actions/edit-commands.c	/^edit_named_paste_cmd_callback (GtkAction *action,$/;"	f
edit_named_paste_invoker	pdb/edit_cmds.c	/^edit_named_paste_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_paste	actions/edit-commands.c	/^edit_paste (GimpDisplay *display,$/;"	f	file:
edit_paste_as_new_cmd_callback	actions/edit-commands.c	/^edit_paste_as_new_cmd_callback (GtkAction *action,$/;"	f
edit_paste_as_new_invoker	pdb/edit_cmds.c	/^edit_paste_as_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_paste_cmd_callback	actions/edit-commands.c	/^edit_paste_cmd_callback (GtkAction *action,$/;"	f
edit_paste_into_cmd_callback	actions/edit-commands.c	/^edit_paste_into_cmd_callback (GtkAction *action,$/;"	f
edit_paste_invoker	pdb/edit_cmds.c	/^edit_paste_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_redo_cmd_callback	actions/edit-commands.c	/^edit_redo_cmd_callback (GtkAction *action,$/;"	f
edit_resolution	widgets/gimpsizebox.h	/^  gboolean      edit_resolution;$/;"	m	struct:_GimpSizeBox
edit_sel	widgets/gimpcontrollereditor.h	/^  GtkTreeSelection   *edit_sel;$/;"	m	struct:_GimpControllerEditor
edit_stroke_invoker	pdb/edit_cmds.c	/^edit_stroke_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_stroke_vectors_invoker	pdb/edit_cmds.c	/^edit_stroke_vectors_invoker (GimpProcedure     *procedure,$/;"	f	file:
edit_strong_redo_cmd_callback	actions/edit-commands.c	/^edit_strong_redo_cmd_callback (GtkAction *action,$/;"	f
edit_strong_undo_cmd_callback	actions/edit-commands.c	/^edit_strong_undo_cmd_callback (GtkAction *action,$/;"	f
edit_undo_clear_cmd_callback	actions/edit-commands.c	/^edit_undo_clear_cmd_callback (GtkAction *action,$/;"	f
edit_undo_cmd_callback	actions/edit-commands.c	/^edit_undo_cmd_callback (GtkAction *action,$/;"	f
editable_cells	widgets/gimpcontainertreeview.h	/^  GList             *editable_cells;$/;"	m	struct:_GimpContainerTreeView
editor	dialogs/image-new-dialog.c	/^  GtkWidget    *editor;$/;"	m	struct:__anon179	file:
editor	dialogs/template-options-dialog.h	/^  GtkWidget    *editor;$/;"	m	struct:_TemplateOptionsDialog
editor	tools/gimptexttool.h	/^  GtkWidget     *editor;$/;"	m	struct:_GimpTextTool
editor	widgets/gimpcontainerpopup.h	/^  GimpContainerEditor *editor;$/;"	m	struct:_GimpContainerPopup
editor_signals	widgets/gimpcolormapeditor.c	/^static guint editor_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
editor_signals	widgets/gimpfgbgeditor.c	/^static guint  editor_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
eheight	base/tile-private.h	/^  gushort eheight;      \/* the effective height of the tile$/;"	m	struct:_Tile
ellipse_select_invoker	pdb/selection_tools_cmds.c	/^ellipse_select_invoker (GimpProcedure     *procedure,$/;"	f	file:
empty	core/gimpchannel.h	/^  gboolean      empty;             \/*  is the region empty?           *\/$/;"	m	struct:_GimpChannel
empty_segs_c	base/boundary.c	/^  gint     *empty_segs_c;$/;"	m	struct:_Boundary	file:
empty_segs_l	base/boundary.c	/^  gint     *empty_segs_l;$/;"	m	struct:_Boundary	file:
empty_segs_n	base/boundary.c	/^  gint     *empty_segs_n;$/;"	m	struct:_Boundary	file:
enabled	tools/gimpcolortool.h	/^  gboolean           enabled;$/;"	m	struct:_GimpColorTool
enabled	widgets/gimpcontrollerinfo.h	/^  gboolean                    enabled;$/;"	m	struct:_GimpControllerInfo
end	base/tile-swap.c	/^  gint64 end;$/;"	m	struct:_SwapFileGap	file:
end	core/gimpprogress.h	/^  void           (* end)        (GimpProgress        *progress);$/;"	m	struct:_GimpProgressInterface
end	core/gimpsubprogress.h	/^  gdouble       end;$/;"	m	struct:_GimpSubProgress
end	vectors/gimpvectors-import.c	/^  void (* end)   (SvgHandler   *handler,$/;"	m	struct:_SvgHandler	file:
end	widgets/gimphistogramview.h	/^  gint                   end;$/;"	m	struct:_GimpHistogramView
end_element_handler	file/gimprecentlist.c	/^end_element_handler (GMarkupParseContext  *context,$/;"	f	file:
end_x	tools/gimpblendtool.h	/^  gdouble       end_x;      \/*  ending x coord    *\/$/;"	m	struct:_GimpBlendTool
end_y	tools/gimpblendtool.h	/^  gdouble       end_y;      \/*  ending y coord    *\/$/;"	m	struct:_GimpBlendTool
entry	dialogs/palette-import-dialog.c	/^  GtkWidget     *entry;$/;"	m	struct:__anon178	file:
entry_activated	widgets/gimppaletteview.h	/^  void (* entry_activated) (GimpPaletteView  *view,$/;"	m	struct:_GimpPaletteViewClass
entry_alignment	tools/gimprectangleoptions.h	/^  GtkWidget                  *entry_alignment;$/;"	m	struct:_GimpRectangleOptionsPrivate
entry_clicked	widgets/gimppaletteview.h	/^  void (* entry_clicked)   (GimpPaletteView  *view,$/;"	m	struct:_GimpPaletteViewClass
entry_context	widgets/gimppaletteview.h	/^  void (* entry_context)   (GimpPaletteView  *view,$/;"	m	struct:_GimpPaletteViewClass
entry_selected	widgets/gimppaletteview.h	/^  void (* entry_selected)  (GimpPaletteView  *view,$/;"	m	struct:_GimpPaletteViewClass
environ_path	config/gimpcoreconfig.h	/^  gchar                  *environ_path;$/;"	m	struct:_GimpCoreConfig
environ_table	plug-in/gimppluginmanager.h	/^  GimpEnvironTable  *environ_table;$/;"	m	struct:_GimpPlugInManager
envp	plug-in/gimpenvirontable.h	/^  gchar      **envp;$/;"	m	struct:_GimpEnvironTable
equalize_invoker	pdb/color_cmds.c	/^equalize_invoker (GimpProcedure     *procedure,$/;"	f	file:
equalize_lut_func	base/lut-funcs.c	/^equalize_lut_func (hist_lut_struct *hlut,$/;"	f	file:
equalize_lut_new	base/lut-funcs.c	/^equalize_lut_new (GimpHistogram *histogram,$/;"	f
equalize_lut_setup	base/lut-funcs.c	/^equalize_lut_setup (GimpLut       *lut,$/;"	f	file:
erase_indexed_pixels	paint-funcs/paint-funcs.c	/^erase_indexed_pixels (const guchar   *src1,$/;"	f	file:
erase_inten_pixels	paint-funcs/paint-funcs.c	/^erase_inten_pixels (const guchar   *src1,$/;"	f	file:
eraser_default_invoker	pdb/paint_tools_cmds.c	/^eraser_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
eraser_invoker	pdb/paint_tools_cmds.c	/^eraser_invoker (GimpProcedure     *procedure,$/;"	f	file:
erode_mask	base/siox.c	/^erode_mask (TileManager *mask,$/;"	f	file:
erode_region	paint-funcs/paint-funcs.c	/^erode_region (PixelRegion *region)$/;"	f
error	core/gimpimage-convert.c	/^  guint64 error;$/;"	m	struct:__anon108	file:
error	xcf/xcf-save.c	/^  GError  *error;$/;"	m	struct:__anon418	file:
error_console_actions	actions/error-console-actions.c	/^static const GimpActionEntry error_console_actions[] =$/;"	v	file:
error_console_actions_setup	actions/error-console-actions.c	/^error_console_actions_setup (GimpActionGroup *group)$/;"	f
error_console_actions_update	actions/error-console-actions.c	/^error_console_actions_update (GimpActionGroup *group,$/;"	f
error_console_clear_cmd_callback	actions/error-console-commands.c	/^error_console_clear_cmd_callback (GtkAction *action,$/;"	f
error_console_save_actions	actions/error-console-actions.c	/^static const GimpEnumActionEntry error_console_save_actions[] =$/;"	v	file:
error_console_save_cmd_callback	actions/error-console-commands.c	/^error_console_save_cmd_callback (GtkAction *action,$/;"	f
error_console_save_response	actions/error-console-commands.c	/^error_console_save_response (GtkWidget        *dialog,$/;"	f	file:
error_console_select_all_cmd_callback	actions/error-console-commands.c	/^error_console_select_all_cmd_callback (GtkAction *action,$/;"	f
error_freedom	core/gimpimage-convert.c	/^  int      error_freedom;           \/* 0=much bleed, 1=controlled bleed *\/$/;"	m	struct:_QuantizeObj	file:
errors_exit	errors.c	/^errors_exit (void)$/;"	f
errors_init	errors.c	/^errors_init (Gimp               *gimp,$/;"	f
etype	core/gimpimage-convert.c	/^typedef double etype;$/;"	t	file:
euklid	base/siox.c	/^euklid (const lab *p,$/;"	f	file:
even	widgets/gimpviewrenderergradient.h	/^  guchar           *even;$/;"	m	struct:_GimpViewRendererGradient
event_mapped	widgets/gimpcontrollerinfo.h	/^  gboolean (* event_mapped) (GimpControllerInfo        *info,$/;"	m	struct:_GimpControllerInfoClass
event_mapped_id	widgets/gimpcontrollers.c	/^  GQuark          event_mapped_id;$/;"	m	struct:_GimpControllerManager	file:
event_window	widgets/gimpview.h	/^  GdkWindow        *event_window;$/;"	m	struct:_GimpView
ewidth	base/tile-private.h	/^  gushort ewidth;       \/* the effective width of the tile *\/$/;"	m	struct:_Tile
excluded_values	core/gimpparamspecs.h	/^  GSList         *excluded_values;$/;"	m	struct:_GimpParamSpecEnum
execute	pdb/gimpprocedure.h	/^  GValueArray * (* execute)       (GimpProcedure *procedure,$/;"	m	struct:_GimpProcedureClass
execute	tools/gimprectangletool.h	/^  gboolean (* execute)           (GimpRectangleTool *rect_tool,$/;"	m	struct:_GimpRectangleToolInterface
execute_async	pdb/gimpprocedure.h	/^  void          (* execute_async) (GimpProcedure *procedure,$/;"	m	struct:_GimpProcedureClass
exit	core/gimp.h	/^  gboolean (* exit)           (Gimp               *gimp,$/;"	m	struct:_GimpClass
expand	widgets/gimpview.h	/^  guint             expand : 1;$/;"	m	struct:_GimpView
expand	widgets/gtkhwrapbox.c	/^  guint    expand : 1;$/;"	m	struct:_Line	file:
expand	widgets/gtkvwrapbox.c	/^  guint    expand : 1;$/;"	m	struct:_Line	file:
expand_line	paint-funcs/scale-region.c	/^expand_line (gdouble               *dest,$/;"	f	file:
expanded	paint/gimppaintoptions.h	/^  gboolean  expanded;$/;"	m	struct:_GimpPressureOptions
expanded	tools/gimpforegroundselectoptions.h	/^  gboolean              expanded;$/;"	m	struct:_GimpForegroundSelectOptions
expander	widgets/gimptemplateeditor.h	/^  GtkWidget     *expander;$/;"	m	struct:_GimpTemplateEditor
exports	composite/ns.py	/^    def exports(self, name):$/;"	m	class:nmx
exports_re	composite/ns.py	/^    def exports_re(self, name):$/;"	m	class:nmx
exposure	paint/gimpdodgeburnoptions.h	/^  gdouble            exposure;$/;"	m	struct:_GimpDodgeBurnOptions
ext_main_loop	plug-in/gimpplugin.h	/^  GMainLoop           *ext_main_loop;   \/*  for waiting for extension_ack     *\/$/;"	m	struct:_GimpPlugIn
extend	vectors/gimpstroke.h	/^  GimpAnchor  * (* extend)               (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
extension	core/gimpdatafactory.h	/^  const gchar      *extension;$/;"	m	struct:_GimpDataFactoryLoaderEntry
extension_names	plug-in/gimpinterpreterdb.h	/^  GHashTable *extension_names;$/;"	m	struct:_GimpInterpreterDB
extensions	plug-in/gimpinterpreterdb.h	/^  GHashTable *extensions;$/;"	m	struct:_GimpInterpreterDB
extensions	plug-in/gimppluginprocedure.h	/^  gchar               *extensions;$/;"	m	struct:_GimpPlugInProcedure
extensions_list	plug-in/gimppluginprocedure.h	/^  GSList              *extensions_list;$/;"	m	struct:_GimpPlugInProcedure
extensions_parse	plug-in/gimppluginprocedure.c	/^extensions_parse (gchar *extensions)$/;"	f	file:
extents	text/gimptext-private.h	/^  PangoRectangle  extents;$/;"	m	struct:_GimpTextLayout
extract_alpha_pixels	paint-funcs/paint-funcs-generic.h	/^extract_alpha_pixels (const guchar *src,$/;"	f
extract_alpha_region	paint-funcs/paint-funcs.c	/^extract_alpha_region (PixelRegion *src,$/;"	f
extract_from_indexed_pixels	paint-funcs/paint-funcs.c	/^extract_from_indexed_pixels (guchar       *src,$/;"	f
extract_from_inten_pixels	paint-funcs/paint-funcs.c	/^extract_from_inten_pixels (guchar       *src,$/;"	f
extract_from_region	paint-funcs/paint-funcs.c	/^extract_from_region (PixelRegion       *src,$/;"	f
eye_cell	widgets/gimpcomponenteditor.h	/^  GtkCellRenderer   *eye_cell;$/;"	m	struct:_GimpComponentEditor
eye_cell	widgets/gimpitemtreeview.h	/^  GtkCellRenderer       *eye_cell;$/;"	m	struct:_GimpItemTreeView
eye_column	widgets/gimpcomponenteditor.h	/^  GtkTreeViewColumn *eye_column;$/;"	m	struct:_GimpComponentEditor
factor	core/gimpunit.c	/^  gdouble   factor;$/;"	m	struct:__anon105	file:
factories	widgets/gimpdialogfactory.h	/^  GHashTable      *factories;$/;"	m	struct:_GimpDialogFactoryClass
factory	core/gimpdatafactory.c	/^  GimpDataFactory *factory;$/;"	m	struct:__anon52	file:
factory	widgets/gimpdatafactoryview.h	/^  GimpDataFactory     *factory;$/;"	m	struct:_GimpDataFactoryView
fade_dialog_context_changed	dialogs/fade-dialog.c	/^fade_dialog_context_changed (FadeDialog *private)$/;"	f	file:
fade_dialog_free	dialogs/fade-dialog.c	/^fade_dialog_free (FadeDialog *private)$/;"	f	file:
fade_dialog_new	dialogs/fade-dialog.c	/^fade_dialog_new (GimpImage *image,$/;"	f
fade_dialog_response	dialogs/fade-dialog.c	/^fade_dialog_response (GtkWidget  *dialog,$/;"	f	file:
fade_length	paint/gimppaintoptions.h	/^  gdouble   fade_length;$/;"	m	struct:_GimpFadeOptions
fade_options	paint/gimppaintoptions.h	/^  GimpFadeOptions          *fade_options;$/;"	m	struct:_GimpPaintOptions
fade_options_gui	tools/gimppaintoptions-gui.c	/^fade_options_gui (GimpFadeOptions  *fade,$/;"	f	file:
fade_unit	paint/gimppaintoptions.h	/^  GimpUnit  fade_unit;$/;"	m	struct:_GimpFadeOptions
fatten_region	paint-funcs/paint-funcs.c	/^fatten_region (PixelRegion *region,$/;"	f
fd	base/tile-swap.c	/^  gint     fd;$/;"	m	struct:_SwapFile	file:
feather	core/gimpchannel.h	/^  void     (* feather)       (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
feather	tools/gimpselectionoptions.h	/^  gboolean            feather;$/;"	m	struct:_GimpSelectionOptions
feather_desc	core/gimpchannel.h	/^  const gchar *feather_desc;$/;"	m	struct:_GimpChannelClass
feather_radius	tools/gimpselectionoptions.h	/^  gdouble             feather_radius;$/;"	m	struct:_GimpSelectionOptions
ffunc	base/cpercep.c	/^ffunc(const double t)$/;"	f	file:
ffunc_inv	base/cpercep.c	/^ffunc_inv(const double t)$/;"	f	file:
fg	core/gimpdrawable-blend.c	/^  GimpRGB           fg, bg;$/;"	m	struct:__anon117	file:
fg_bg	widgets/gimpcoloreditor.h	/^  GtkWidget   *fg_bg;$/;"	m	struct:_GimpColorEditor
fgcolor	core/gimpgrid.h	/^  GimpRGB        fgcolor;$/;"	m	struct:_GimpGrid
fgdist	base/siox.c	/^  gfloat fgdist;$/;"	m	struct:__anon8	file:
fgsig	base/siox.c	/^  lab          *fgsig;$/;"	m	struct:_SioxState	file:
fgsiglen	base/siox.c	/^  gint          fgsiglen;$/;"	m	struct:_SioxState	file:
file	pdb/gimppdb-query.c	/^  FILE     *file;$/;"	m	struct:_PDBDump	file:
file_actions	actions/file-actions.c	/^static const GimpActionEntry file_actions[] =$/;"	v	file:
file_actions_close_all_update	actions/file-actions.c	/^file_actions_close_all_update (GimpContainer   *container,$/;"	f	file:
file_actions_last_opened_reorder	actions/file-actions.c	/^file_actions_last_opened_reorder (GimpContainer   *container,$/;"	f	file:
file_actions_last_opened_update	actions/file-actions.c	/^file_actions_last_opened_update (GimpContainer   *container,$/;"	f	file:
file_actions_setup	actions/file-actions.c	/^file_actions_setup (GimpActionGroup *group)$/;"	f
file_actions_update	actions/file-actions.c	/^file_actions_update (GimpActionGroup *group,$/;"	f
file_check_magic_list	file/file-procedure.c	/^file_check_magic_list (GSList       *magics_list,$/;"	f	file:
file_check_single_magic	file/file-procedure.c	/^file_check_single_magic (const gchar  *offset,$/;"	f	file:
file_chooser	dialogs/palette-import-dialog.c	/^  GtkWidget     *file_chooser;$/;"	m	struct:__anon178	file:
file_close_all_cmd_callback	actions/file-commands.c	/^file_close_all_cmd_callback (GtkAction *action,$/;"	f
file_convert_string	file/file-procedure.c	/^file_convert_string (const gchar *instr,$/;"	f	file:
file_dialog	widgets/gimperrorconsole.h	/^  GtkWidget     *file_dialog;$/;"	m	struct:_GimpErrorConsole
file_dialog	widgets/gimptexteditor.h	/^  GtkWidget         *file_dialog;$/;"	m	struct:_GimpTextEditor
file_file_open_dialog	actions/file-commands.c	/^file_file_open_dialog (Gimp        *gimp,$/;"	f
file_last_opened_cmd_callback	actions/file-commands.c	/^file_last_opened_cmd_callback (GtkAction *action,$/;"	f
file_load_invoker	pdb/fileops_cmds.c	/^file_load_invoker (GimpProcedure     *procedure,$/;"	f	file:
file_load_layer_invoker	pdb/fileops_cmds.c	/^file_load_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
file_load_layers_invoker	pdb/fileops_cmds.c	/^file_load_layers_invoker (GimpProcedure     *procedure,$/;"	f	file:
file_load_thumbnail_invoker	pdb/fileops_cmds.c	/^file_load_thumbnail_invoker (GimpProcedure     *procedure,$/;"	f	file:
file_menu_setup	menus/file-menu.c	/^file_menu_setup (GimpUIManager *manager,$/;"	f
file_new_template_callback	actions/file-commands.c	/^file_new_template_callback (GtkWidget   *widget,$/;"	f	file:
file_open_as_layers_cmd_callback	actions/file-commands.c	/^file_open_as_layers_cmd_callback (GtkAction *action,$/;"	f
file_open_cmd_callback	actions/file-commands.c	/^file_open_cmd_callback (GtkAction *action,$/;"	f
file_open_dialog_new	dialogs/file-open-dialog.c	/^file_open_dialog_new (Gimp *gimp)$/;"	f
file_open_dialog_open_image	dialogs/file-open-dialog.c	/^file_open_dialog_open_image (GtkWidget           *open_dialog,$/;"	f	file:
file_open_dialog_open_layers	dialogs/file-open-dialog.c	/^file_open_dialog_open_layers (GtkWidget           *open_dialog,$/;"	f	file:
file_open_dialog_response	dialogs/file-open-dialog.c	/^file_open_dialog_response (GtkWidget *open_dialog,$/;"	f	file:
file_open_dialog_show	actions/file-commands.c	/^file_open_dialog_show (GtkWidget   *parent,$/;"	f	file:
file_open_from_command_line	file/file-open.c	/^file_open_from_command_line (Gimp        *gimp,$/;"	f
file_open_handle_color_profile	file/file-open.c	/^file_open_handle_color_profile (GimpImage    *image,$/;"	f	file:
file_open_image	file/file-open.c	/^file_open_image (Gimp                *gimp,$/;"	f
file_open_layers	file/file-open.c	/^file_open_layers (Gimp                *gimp,$/;"	f
file_open_location_cmd_callback	actions/file-commands.c	/^file_open_location_cmd_callback (GtkAction *action,$/;"	f
file_open_location_completion	dialogs/file-open-location-dialog.c	/^file_open_location_completion (GtkEntryCompletion *completion,$/;"	f	file:
file_open_location_dialog_new	dialogs/file-open-location-dialog.c	/^file_open_location_dialog_new (Gimp *gimp)$/;"	f
file_open_location_response	dialogs/file-open-location-dialog.c	/^file_open_location_response (GtkDialog *dialog,$/;"	f	file:
file_open_profile_apply_rgb	file/file-open.c	/^file_open_profile_apply_rgb (GimpImage    *image,$/;"	f	file:
file_open_sanitize_image	file/file-open.c	/^file_open_sanitize_image (GimpImage *image,$/;"	f	file:
file_open_thumbnail	file/file-open.c	/^file_open_thumbnail (Gimp          *gimp,$/;"	f
file_open_with_display	file/file-open.c	/^file_open_with_display (Gimp               *gimp,$/;"	f
file_open_with_proc_and_display	file/file-open.c	/^file_open_with_proc_and_display (Gimp                *gimp,$/;"	f
file_proc	plug-in/gimppluginprocedure.h	/^  gboolean             file_proc;$/;"	m	struct:_GimpPlugInProcedure
file_proc	widgets/gimpfiledialog.h	/^  GimpPlugInProcedure  *file_proc;$/;"	m	struct:_GimpFileDialog
file_proc_find_by_extension	file/file-procedure.c	/^file_proc_find_by_extension (GSList      *procs,$/;"	f	file:
file_proc_find_by_name	file/file-procedure.c	/^file_proc_find_by_name (GSList      *procs,$/;"	f	file:
file_proc_find_by_prefix	file/file-procedure.c	/^file_proc_find_by_prefix (GSList      *procs,$/;"	f	file:
file_procedure_find	file/file-procedure.c	/^file_procedure_find (GSList       *procs,$/;"	f
file_procedure_find_by_extension	file/file-procedure.c	/^file_procedure_find_by_extension (GSList      *procs,$/;"	f
file_procedure_find_by_prefix	file/file-procedure.c	/^file_procedure_find_by_prefix (GSList      *procs,$/;"	f
file_quit_cmd_callback	actions/file-commands.c	/^file_quit_cmd_callback (GtkAction *action,$/;"	f
file_radio	dialogs/palette-import-dialog.c	/^  GtkWidget     *file_radio;$/;"	m	struct:__anon178	file:
file_revert_cmd_callback	actions/file-commands.c	/^file_revert_cmd_callback (GtkAction *action,$/;"	f
file_revert_confirm_response	actions/file-commands.c	/^file_revert_confirm_response (GtkWidget   *dialog,$/;"	f	file:
file_save	file/file-save.c	/^file_save (GimpImage           *image,$/;"	f
file_save_actions	actions/file-actions.c	/^static const GimpEnumActionEntry file_save_actions[] =$/;"	v	file:
file_save_cmd_callback	actions/file-commands.c	/^file_save_cmd_callback (GtkAction *action,$/;"	f
file_save_dialog_check_uri	dialogs/file-save-dialog.c	/^file_save_dialog_check_uri (GtkWidget            *save_dialog,$/;"	f	file:
file_save_dialog_destroyed	actions/file-commands.c	/^file_save_dialog_destroyed (GtkWidget *dialog,$/;"	f	file:
file_save_dialog_new	dialogs/file-save-dialog.c	/^file_save_dialog_new (Gimp *gimp)$/;"	f
file_save_dialog_response	dialogs/file-save-dialog.c	/^file_save_dialog_response (GtkWidget *save_dialog,$/;"	f	file:
file_save_dialog_save_image	dialogs/file-save-dialog.c	/^file_save_dialog_save_image (GtkWidget           *save_dialog,$/;"	f	file:
file_save_dialog_show	actions/file-commands.c	/^file_save_dialog_show (GimpImage   *image,$/;"	f	file:
file_save_dialog_use_extension	dialogs/file-save-dialog.c	/^file_save_dialog_use_extension (GtkWidget   *save_dialog,$/;"	f	file:
file_save_invoker	pdb/fileops_cmds.c	/^file_save_invoker (GimpProcedure     *procedure,$/;"	f	file:
file_save_template_cmd_callback	actions/file-commands.c	/^file_save_template_cmd_callback (GtkAction *action,$/;"	f
file_save_thumbnail_invoker	pdb/fileops_cmds.c	/^file_save_thumbnail_invoker (GimpProcedure     *procedure,$/;"	f	file:
file_system	widgets/gimpviewrendererimagefile.h	/^  gpointer         file_system;$/;"	m	struct:_GimpViewRendererImagefile
file_utils_any_to_uri	file/file-utils.c	/^file_utils_any_to_uri (Gimp         *gimp,$/;"	f
file_utils_filename_from_uri	file/file-utils.c	/^file_utils_filename_from_uri (const gchar *uri)$/;"	f
file_utils_filename_is_uri	file/file-utils.c	/^file_utils_filename_is_uri (const gchar  *filename,$/;"	f
file_utils_filename_to_uri	file/file-utils.c	/^file_utils_filename_to_uri (Gimp         *gimp,$/;"	f
file_utils_load_thumbnail	file/file-utils.c	/^file_utils_load_thumbnail (const gchar *filename)$/;"	f
file_utils_save_thumbnail	file/file-utils.c	/^file_utils_save_thumbnail (GimpImage   *image,$/;"	f
file_utils_unescape_uri	file/file-utils.c	/^file_utils_unescape_uri (const gchar *escaped,$/;"	f	file:
file_utils_uri_display_basename	file/file-utils.c	/^file_utils_uri_display_basename (const gchar *uri)$/;"	f
file_utils_uri_display_name	file/file-utils.c	/^file_utils_uri_display_name (const gchar *uri)$/;"	f
file_utils_uri_to_utf8_basename	file/file-utils.c	/^file_utils_uri_to_utf8_basename (const gchar *uri)$/;"	f	file:
file_utils_uri_to_utf8_filename	file/file-utils.c	/^file_utils_uri_to_utf8_filename (const gchar *uri)$/;"	f
file_version	xcf/xcf-private.h	/^  gint                file_version;$/;"	m	struct:_XcfInfo
filename	base/tile-swap.c	/^  gchar   *filename;$/;"	m	struct:_SwapFile	file:
filename	core/gimpdata.h	/^  gchar        *filename;$/;"	m	struct:_GimpData
filename	core/gimptemplate.h	/^  gchar             *filename;$/;"	m	struct:_GimpTemplate
filename	widgets/gimpprofilechooserdialog.h	/^  gchar                *filename;$/;"	m	struct:_GimpProfileChooserDialog
filename	widgets/gimpthumbbox.h	/^  GtkWidget     *filename;$/;"	m	struct:_GimpThumbBox
filename	xcf/xcf-private.h	/^  const gchar        *filename;$/;"	m	struct:_XcfInfo
filename_label	widgets/gimpimagepropview.h	/^  GtkWidget *filename_label;$/;"	m	struct:_GimpImagePropView
filenameify	composite/make-installer.py	/^def filenameify(filename):$/;"	f
filenames	main.c	/^static const gchar       **filenames         = NULL;$/;"	v	file:
filesize_label	widgets/gimpimagepropview.h	/^  GtkWidget *filesize_label;$/;"	m	struct:_GimpImagePropView
filetype_label	widgets/gimpimagepropview.h	/^  GtkWidget *filetype_label;$/;"	m	struct:_GimpImagePropView
fill_criterion	tools/gimpbucketfilloptions.h	/^  GimpSelectCriterion fill_criterion;$/;"	m	struct:_GimpBucketFillOptions
fill_inverse_cmap_gray	core/gimpimage-convert.c	/^fill_inverse_cmap_gray (QuantizeObj *quantobj,$/;"	f	file:
fill_inverse_cmap_rgb	core/gimpimage-convert.c	/^fill_inverse_cmap_rgb (QuantizeObj *quantobj,$/;"	f	file:
fill_mode	tools/gimpbucketfilloptions.h	/^  GimpBucketFillMode  fill_mode;$/;"	m	struct:_GimpBucketFillOptions
fill_run	paint/gimpink.c	/^fill_run (guchar *dest,$/;"	f	file:
fill_selection	tools/gimpbucketfilloptions.h	/^  gboolean            fill_selection;$/;"	m	struct:_GimpBucketFillOptions
fill_transparent	tools/gimpbucketfilloptions.h	/^  gboolean            fill_transparent;$/;"	m	struct:_GimpBucketFillOptions
fill_type	core/gimptemplate.h	/^  GimpFillType       fill_type;$/;"	m	struct:_GimpTemplate
fill_type	dialogs/layer-options-dialog.h	/^  GimpFillType  fill_type;$/;"	m	struct:_LayerOptionsDialog
fill_type	dialogs/offset-dialog.c	/^  GimpOffsetType  fill_type;$/;"	m	struct:__anon169	file:
filter	core/gimpcontainer-filter.c	/^  GimpObjectFilterFunc   filter;$/;"	m	struct:__anon59	file:
filter_idle_id	display/gimpdisplayshell.h	/^  guint                  filter_idle_id;$/;"	m	struct:_GimpDisplayShell
filter_stack	display/gimpdisplayshell.h	/^  GimpColorDisplayStack *filter_stack;   \/* color display conversion stuff    *\/$/;"	m	struct:_GimpDisplayShell
filters_dialog	display/gimpdisplayshell.h	/^  GtkWidget             *filters_dialog; \/* color display filter dialog       *\/$/;"	m	struct:_GimpDisplayShell
final_blue_lookup	base/colorize.h	/^  gint    final_blue_lookup[256];$/;"	m	struct:_Colorize
final_green_lookup	base/colorize.h	/^  gint    final_green_lookup[256];$/;"	m	struct:_Colorize
final_red_lookup	base/colorize.h	/^  gint    final_red_lookup[256];$/;"	m	struct:_Colorize
find_best_colors	core/gimpimage-convert.c	/^find_best_colors (QuantizeObj *quantobj,$/;"	f	file:
find_biggest_volume	core/gimpimage-convert.c	/^find_biggest_volume (const boxptr boxlist,$/;"	f	file:
find_contiguous_region_helper	core/gimpimage-contiguous-region.c	/^find_contiguous_region_helper (GimpImage           *image,$/;"	f	file:
find_contiguous_segment	core/gimpimage-contiguous-region.c	/^find_contiguous_segment (GimpImage           *image,$/;"	f	file:
find_empty_segs	base/boundary.c	/^find_empty_segs (PixelRegion  *maskPR,$/;"	f	file:
find_max_blob	base/siox.c	/^find_max_blob (TileManager *mask,$/;"	f	file:
find_max_gradient	tools/gimpiscissorstool.c	/^find_max_gradient (GimpIscissorsTool *iscissors,$/;"	f	file:
find_maximum_aspect_rectangle	core/gimp-transform-resize.c	/^find_maximum_aspect_rectangle (Rectangle *r,$/;"	f	file:
find_nearby_colors	core/gimpimage-convert.c	/^find_nearby_colors (QuantizeObj *quantobj,$/;"	f	file:
find_optimal_path	tools/gimpiscissorstool.c	/^find_optimal_path (TileManager *gradient_map,$/;"	f	file:
find_param_spec	widgets/gimppropwidgets.c	/^find_param_spec (GObject     *object,$/;"	f	file:
find_segment	base/boundary.c	/^find_segment (const BoundSeg **segs_by_xy1,$/;"	f	file:
find_segment_with_func	base/boundary.c	/^find_segment_with_func (const BoundSeg **segs,$/;"	f	file:
find_split_candidate	core/gimpimage-convert.c	/^find_split_candidate (const boxptr  boxlist,$/;"	f	file:
find_three_point_rectangle	core/gimp-transform-resize.c	/^find_three_point_rectangle (Rectangle *r,$/;"	f	file:
find_three_point_rectangle_corner	core/gimp-transform-resize.c	/^find_three_point_rectangle_corner (Rectangle *r,$/;"	f	file:
find_three_point_rectangle_triangle	core/gimp-transform-resize.c	/^find_three_point_rectangle_triangle (Rectangle *r,$/;"	f	file:
find_two_point_rectangle	core/gimp-transform-resize.c	/^find_two_point_rectangle (Rectangle *r,$/;"	f	file:
first	base/pixel-processor.c	/^  gboolean             first;$/;"	m	struct:_PixelProcessor	file:
first	base/tile-cache.c	/^  Tile *first;$/;"	m	struct:_TileList	file:
first	core/gimpscanconvert.c	/^  GimpVector2     first;$/;"	m	struct:_GimpScanConvert	file:
first_move	tools/gimpeditselectiontool.h	/^  gboolean            first_move;      \/*  Don't push undos after the first  *\/$/;"	m	struct:_GimpEditSelectionTool
first_pass	core/gimpimage-convert.c	/^  Pass1_Func first_pass;            \/* first pass over image data creates colormap  *\/$/;"	m	struct:_QuantizeObj	file:
first_point	tools/gimpiscissorstool.h	/^  gboolean        first_point;  \/*  is this the first point?              *\/$/;"	m	struct:_GimpIscissorsTool
first_stroke	paint/gimpsourcecore.h	/^  gboolean       first_stroke;$/;"	m	struct:_GimpSourceCore
fixed_aspect_hbox	tools/gimprectangleoptions.h	/^  GtkWidget                  *fixed_aspect_hbox;$/;"	m	struct:_GimpRectangleOptionsPrivate
fixed_center	tools/gimprectangleoptions.h	/^  gboolean                    fixed_center;$/;"	m	struct:_GimpRectangleOptionsPrivate
fixed_height_entry	tools/gimprectangleoptions.h	/^  GtkWidget                  *fixed_height_entry;$/;"	m	struct:_GimpRectangleOptionsPrivate
fixed_rule	tools/gimprectangleoptions.h	/^  GimpRectangleToolFixedRule  fixed_rule;$/;"	m	struct:_GimpRectangleOptionsPrivate
fixed_rule_active	tools/gimprectangleoptions.h	/^  gboolean                    fixed_rule_active;$/;"	m	struct:_GimpRectangleOptionsPrivate
fixed_size_hbox	tools/gimprectangleoptions.h	/^  GtkWidget                  *fixed_size_hbox;$/;"	m	struct:_GimpRectangleOptionsPrivate
fixed_width_entry	tools/gimprectangleoptions.h	/^  GtkWidget                  *fixed_width_entry;$/;"	m	struct:_GimpRectangleOptionsPrivate
flags	plug-in/gimpplugindebug.c	/^  guint   flags;$/;"	m	struct:_GimpPlugInDebug	file:
flatten_pixels	paint-funcs/paint-funcs-generic.h	/^flatten_pixels (const guchar *src,$/;"	f
flatten_region	paint-funcs/paint-funcs.c	/^flatten_region (PixelRegion *src,$/;"	f
flip	core/gimpitem.h	/^  void       (* flip)         (GimpItem               *item,$/;"	m	struct:_GimpItemClass
flip	vectors/gimpstroke.h	/^  void          (* flip)                 (GimpStroke             *stroke,$/;"	m	struct:_GimpStrokeClass
flip_desc	core/gimpitem.h	/^  const gchar *flip_desc;$/;"	m	struct:_GimpItemClass
flip_free	vectors/gimpstroke.h	/^  void          (* flip_free)            (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
flip_invoker	pdb/transform_tools_cmds.c	/^flip_invoker (GimpProcedure     *procedure,$/;"	f	file:
flip_type	tools/gimpflipoptions.h	/^  GimpOrientationType   flip_type;$/;"	m	struct:_GimpFlipOptions
floating_layer	tools/gimpmovetool.h	/^  GimpLayer           *floating_layer;$/;"	m	struct:_GimpMoveTool
floating_sel	core/gimpimage.h	/^  GimpLayer         *floating_sel;          \/*  the FS layer                 *\/$/;"	m	struct:_GimpImage
floating_sel	xcf/xcf-private.h	/^  GimpLayer          *floating_sel;$/;"	m	struct:_XcfInfo
floating_sel_activate_drawable	core/gimplayer-floating-sel.c	/^floating_sel_activate_drawable (GimpLayer *layer)$/;"	f
floating_sel_anchor	core/gimplayer-floating-sel.c	/^floating_sel_anchor (GimpLayer *layer)$/;"	f
floating_sel_anchor_invoker	pdb/floating_sel_cmds.c	/^floating_sel_anchor_invoker (GimpProcedure     *procedure,$/;"	f	file:
floating_sel_attach	core/gimplayer-floating-sel.c	/^floating_sel_attach (GimpLayer    *layer,$/;"	f
floating_sel_attach_invoker	pdb/floating_sel_cmds.c	/^floating_sel_attach_invoker (GimpProcedure     *procedure,$/;"	f	file:
floating_sel_boundary	core/gimplayer-floating-sel.c	/^floating_sel_boundary (GimpLayer *layer,$/;"	f
floating_sel_composite	core/gimplayer-floating-sel.c	/^floating_sel_composite (GimpLayer *layer,$/;"	f
floating_sel_drawable	xcf/xcf-private.h	/^  GimpDrawable       *floating_sel_drawable;$/;"	m	struct:_XcfInfo
floating_sel_invalidate	core/gimplayer-floating-sel.c	/^floating_sel_invalidate (GimpLayer *layer)$/;"	f
floating_sel_offset	xcf/xcf-private.h	/^  guint               floating_sel_offset;$/;"	m	struct:_XcfInfo
floating_sel_relax	core/gimplayer-floating-sel.c	/^floating_sel_relax (GimpLayer *layer,$/;"	f
floating_sel_relax_invoker	pdb/floating_sel_cmds.c	/^floating_sel_relax_invoker (GimpProcedure     *procedure,$/;"	f	file:
floating_sel_remove	core/gimplayer-floating-sel.c	/^floating_sel_remove (GimpLayer *layer)$/;"	f
floating_sel_remove_invoker	pdb/floating_sel_cmds.c	/^floating_sel_remove_invoker (GimpProcedure     *procedure,$/;"	f	file:
floating_sel_restore	core/gimplayer-floating-sel.c	/^floating_sel_restore (GimpLayer *layer,$/;"	f
floating_sel_rigor	core/gimplayer-floating-sel.c	/^floating_sel_rigor (GimpLayer *layer,$/;"	f
floating_sel_rigor_invoker	pdb/floating_sel_cmds.c	/^floating_sel_rigor_invoker (GimpProcedure     *procedure,$/;"	f	file:
floating_sel_store	core/gimplayer-floating-sel.c	/^floating_sel_store (GimpLayer *layer,$/;"	f
floating_sel_to_layer	core/gimplayer-floating-sel.c	/^floating_sel_to_layer (GimpLayer *layer)$/;"	f
floating_sel_to_layer_invoker	pdb/floating_sel_cmds.c	/^floating_sel_to_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
floating_selection_changed	core/gimpimage.h	/^  void (* floating_selection_changed)   (GimpImage            *image);$/;"	m	struct:_GimpImageClass
floyd_steinberg_error1	core/gimpimage-convert-fsdither.h	/^static const gshort floyd_steinberg_error1[] = {$/;"	v
floyd_steinberg_error2	core/gimpimage-convert-fsdither.h	/^static const gshort floyd_steinberg_error2[] = {$/;"	v
floyd_steinberg_error3	core/gimpimage-convert-fsdither.h	/^static const gshort floyd_steinberg_error3[] = {$/;"	v
floyd_steinberg_error4	core/gimpimage-convert-fsdither.h	/^static const gshort floyd_steinberg_error4[] = {$/;"	v
flush	core/gimpimage.h	/^  void (* flush)                        (GimpImage            *image,$/;"	m	struct:_GimpImageClass
flush	core/gimpimagemap.h	/^  void (* flush) (GimpImageMap *image_map);$/;"	m	struct:_GimpImageMapClass
flush	core/gimppickable.h	/^  void            (* flush)          (GimpPickable *pickable);$/;"	m	struct:_GimpPickableInterface
flush_accum	core/gimpimage.h	/^  GimpImageFlushAccumulator  flush_accum;$/;"	m	struct:_GimpImage
focus_display	tools/gimptool.h	/^  GimpDisplay     *focus_display;$/;"	m	struct:_GimpTool
font	core/gimpcontext.h	/^  GimpFont             *font;$/;"	m	struct:_GimpContext
font	text/gimptext.h	/^  gchar                 *font;$/;"	m	struct:_GimpText
font_box_new	widgets/gimpviewablebox.c	/^font_box_new (GimpContainer *container,$/;"	f	file:
font_changed	core/gimpcontext.h	/^  void (* font_changed)       (GimpContext          *context,$/;"	m	struct:_GimpContextClass
font_desc_to_string	text/gimpfontlist.c	/^static GimpFontDescToStringFunc font_desc_to_string = NULL;$/;"	v	file:
font_name	core/gimpcontext.h	/^  gchar                *font_name;$/;"	m	struct:_GimpContext
font_name	widgets/gimptexteditor.h	/^  gchar             *font_name;$/;"	m	struct:_GimpTextEditor
font_path	config/gimpcoreconfig.h	/^  gchar                  *font_path;$/;"	m	struct:_GimpCoreConfig
font_path_writable	config/gimpcoreconfig.h	/^  gchar                  *font_path_writable;  \/*  unused  *\/$/;"	m	struct:_GimpCoreConfig
font_size	text/gimptext.h	/^  gdouble                font_size;$/;"	m	struct:_GimpText
font_size	tools/gimptextoptions.h	/^  gdouble                font_size;$/;"	m	struct:_GimpTextOptions
font_toggle	widgets/gimptexteditor.h	/^  GtkWidget         *font_toggle;$/;"	m	struct:_GimpTextEditor
font_view_size	tools/gimptextoptions.h	/^  GimpViewSize           font_view_size;$/;"	m	struct:_GimpTextOptions
font_view_type	tools/gimptextoptions.h	/^  GimpViewType           font_view_type;$/;"	m	struct:_GimpTextOptions
fonts	core/gimp.h	/^  GimpContainer          *fonts;$/;"	m	struct:_Gimp
fonts_actions	actions/fonts-actions.c	/^static const GimpActionEntry fonts_actions[] =$/;"	v	file:
fonts_actions_setup	actions/fonts-actions.c	/^fonts_actions_setup (GimpActionGroup *group)$/;"	f
fonts_actions_update	actions/fonts-actions.c	/^fonts_actions_update (GimpActionGroup *group,$/;"	f
fonts_close_popup_invoker	pdb/font_select_cmds.c	/^fonts_close_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
fonts_get_list_invoker	pdb/fonts_cmds.c	/^fonts_get_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
fonts_popup_invoker	pdb/font_select_cmds.c	/^fonts_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
fonts_refresh_cmd_callback	actions/fonts-commands.c	/^fonts_refresh_cmd_callback (GtkAction *action,$/;"	f
fonts_refresh_invoker	pdb/fonts_cmds.c	/^fonts_refresh_invoker (GimpProcedure     *procedure,$/;"	f	file:
fonts_set_popup_invoker	pdb/font_select_cmds.c	/^fonts_set_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
foo_area	widgets/gimptoolbox.h	/^  GtkWidget     *foo_area;$/;"	m	struct:_GimpToolbox
foreach	core/gimpcontainer.h	/^  void         (* foreach)            (const GimpContainer *container,$/;"	m	struct:_GimpContainerClass
foreground	core/gimpcontext.h	/^  GimpRGB               foreground;$/;"	m	struct:_GimpContext
foreground	widgets/gimpdevicestatus.c	/^  GtkWidget      *foreground;$/;"	m	struct:_GimpDeviceStatusEntry	file:
foreground_changed	core/gimpcontext.h	/^  void (* foreground_changed) (GimpContext          *context,$/;"	m	struct:_GimpContextClass
foreground_select_tool	tools/gimpforegroundselecttoolundo.h	/^  GimpForegroundSelectTool *foreground_select_tool;$/;"	m	struct:_GimpForegroundSelectToolUndo
found	actions/documents-commands.c	/^  gboolean     found;$/;"	m	struct:__anon2	file:
found_cols	core/gimpimage-convert.c	/^static guchar    found_cols[MAXNUMCOLORS][3];$/;"	v	file:
fp	xcf/xcf-private.h	/^  FILE               *fp;$/;"	m	struct:_XcfInfo
fractalexplorer_path	config/gimppluginconfig.h	/^  gchar              *fractalexplorer_path;$/;"	m	struct:_GimpPluginConfig
frame	widgets/gimpcontainerpopup.h	/^  GtkWidget           *frame;$/;"	m	struct:_GimpContainerPopup
frame	widgets/gimpdockseparator.h	/^  GtkWidget   *frame;$/;"	m	struct:_GimpDockSeparator
frame	widgets/gimpviewrenderer.h	/^  GdkPixbuf     *frame;$/;"	m	struct:_GimpViewRendererClass
frame_bottom	widgets/gimpviewrenderer.h	/^  gint           frame_bottom;$/;"	m	struct:_GimpViewRendererClass
frame_left	widgets/gimpviewrenderer.h	/^  gint           frame_left;$/;"	m	struct:_GimpViewRendererClass
frame_mode	widgets/gimpcolorframe.h	/^  GimpColorFrameMode  frame_mode;$/;"	m	struct:_GimpColorFrame
frame_right	widgets/gimpviewrenderer.h	/^  gint           frame_right;$/;"	m	struct:_GimpViewRendererClass
frame_top	widgets/gimpviewrenderer.h	/^  gint           frame_top;$/;"	m	struct:_GimpViewRendererClass
free	core/gimpundo.h	/^  void (* free) (GimpUndo            *undo,$/;"	m	struct:_GimpUndoClass
free_select_invoker	pdb/selection_tools_cmds.c	/^free_select_invoker (GimpProcedure     *procedure,$/;"	f	file:
freeze	core/gimpcontainer.h	/^  void         (* freeze)             (GimpContainer       *container);$/;"	m	struct:_GimpContainerClass
freeze	vectors/gimpvectors.h	/^  void          (* freeze)            (GimpVectors       *vectors);$/;"	m	struct:_GimpVectorsClass
freeze_count	core/gimpcontainer.h	/^  gint                 freeze_count;$/;"	m	struct:_GimpContainer
freeze_count	core/gimpdata.h	/^  gint          freeze_count;$/;"	m	struct:_GimpData
freeze_count	vectors/gimpvectors.h	/^  gint      freeze_count;$/;"	m	struct:_GimpVectors
fs	core/gimplayer.h	/^  } fs;$/;"	m	struct:_GimpLayer	typeref:struct:_GimpLayer::__anon125
full_prog_name	errors.c	/^static gchar               *full_prog_name    = NULL;$/;"	v	file:
fullscreen_options	display/gimpdisplayshell.h	/^  GimpDisplayOptions *fullscreen_options;$/;"	m	struct:_GimpDisplayShell
func	base/pixel-processor.c	/^  PixelProcessorFunc   func;$/;"	m	struct:_PixelProcessor	file:
func	core/gimp-utils.c	/^  GimpMemsizeFunc func;$/;"	m	struct:__anon112	file:
function	composite/gimp-composite-generic-installer.c	/^  void (*function)(GimpCompositeContext *);$/;"	m	struct:install_table	file:
function	composite/gimp-composite-mmx-installer.c	/^  void (*function)(GimpCompositeContext *);$/;"	m	struct:install_table	file:
function	composite/gimp-composite-sse-installer.c	/^  void (*function)(GimpCompositeContext *);$/;"	m	struct:install_table	file:
function	composite/gimp-composite-sse2-installer.c	/^  void (*function)(GimpCompositeContext *);$/;"	m	struct:install_table	file:
function	tools/gimpmeasuretool.h	/^  MeasureFunction  function;    \/*  function we're performing  *\/$/;"	m	struct:_GimpMeasureTool
function	tools/gimpperspectiveclonetool.h	/^  TransformAction function;       \/*  current tool activity            *\/$/;"	m	struct:_GimpPerspectiveCloneTool
function	tools/gimprectangletool.c	/^  guint                   function;$/;"	m	struct:_GimpRectangleToolPrivate	file:
function	tools/gimpselectiontool.h	/^  SelectFunction function;         \/*  selection function        *\/$/;"	m	struct:_GimpSelectionTool
function	tools/gimptransformtool.h	/^  TransformAction function;        \/*  current tool activity             *\/$/;"	m	struct:_GimpTransformTool
function	tools/gimpvectortool.h	/^  GimpVectorFunction    function;       \/* function we're performing         *\/$/;"	m	struct:_GimpVectorTool
functionnameify	composite/make-installer.py	/^def functionnameify(filename):$/;"	f
fuzzy_select_full_invoker	pdb/selection_tools_cmds.c	/^fuzzy_select_full_invoker (GimpProcedure     *procedure,$/;"	f	file:
fuzzy_select_invoker	pdb/selection_tools_cmds.c	/^fuzzy_select_invoker (GimpProcedure     *procedure,$/;"	f	file:
g	composite/gimp-composite-regression.h	/^  guint16  g;$/;"	m	struct:__anon25
g	composite/gimp-composite-regression.h	/^  guint16  g;$/;"	m	struct:__anon26
g	composite/gimp-composite-regression.h	/^  guint32  g;$/;"	m	struct:__anon29
g	composite/gimp-composite-regression.h	/^  guint32  g;$/;"	m	struct:__anon30
g	composite/gimp-composite-regression.h	/^  guint8  g;$/;"	m	struct:__anon21
g	composite/gimp-composite-regression.h	/^  guint8  g;$/;"	m	struct:__anon22
g	composite/gimp-composite-util.h	/^  guchar  g;$/;"	m	struct:__anon39
g	composite/gimp-composite-util.h	/^  guchar  g;$/;"	m	struct:__anon40
g	core/gimppalette-import.c	/^  guchar g;$/;"	m	struct:_ImgColors	file:
g_adj	core/gimppalette-import.c	/^  guint  g_adj;$/;"	m	struct:_ImgColors	file:
g_lookup	base/color-balance.h	/^  guchar   g_lookup[256];$/;"	m	struct:_ColorBalance
g_marshal_value_peek_boolean	core/gimpmarshal.c	30;"	d	file:
g_marshal_value_peek_boolean	core/gimpmarshal.c	7;"	d	file:
g_marshal_value_peek_boolean	widgets/gimpdbusservice-glue.h	12;"	d
g_marshal_value_peek_boxed	core/gimpmarshal.c	22;"	d	file:
g_marshal_value_peek_boxed	core/gimpmarshal.c	45;"	d	file:
g_marshal_value_peek_boxed	widgets/gimpdbusservice-glue.h	27;"	d
g_marshal_value_peek_char	core/gimpmarshal.c	31;"	d	file:
g_marshal_value_peek_char	core/gimpmarshal.c	8;"	d	file:
g_marshal_value_peek_char	widgets/gimpdbusservice-glue.h	13;"	d
g_marshal_value_peek_double	core/gimpmarshal.c	19;"	d	file:
g_marshal_value_peek_double	core/gimpmarshal.c	42;"	d	file:
g_marshal_value_peek_double	widgets/gimpdbusservice-glue.h	24;"	d
g_marshal_value_peek_enum	core/gimpmarshal.c	16;"	d	file:
g_marshal_value_peek_enum	core/gimpmarshal.c	39;"	d	file:
g_marshal_value_peek_enum	widgets/gimpdbusservice-glue.h	21;"	d
g_marshal_value_peek_flags	core/gimpmarshal.c	17;"	d	file:
g_marshal_value_peek_flags	core/gimpmarshal.c	40;"	d	file:
g_marshal_value_peek_flags	widgets/gimpdbusservice-glue.h	22;"	d
g_marshal_value_peek_float	core/gimpmarshal.c	18;"	d	file:
g_marshal_value_peek_float	core/gimpmarshal.c	41;"	d	file:
g_marshal_value_peek_float	widgets/gimpdbusservice-glue.h	23;"	d
g_marshal_value_peek_int	core/gimpmarshal.c	10;"	d	file:
g_marshal_value_peek_int	core/gimpmarshal.c	33;"	d	file:
g_marshal_value_peek_int	widgets/gimpdbusservice-glue.h	15;"	d
g_marshal_value_peek_int64	core/gimpmarshal.c	14;"	d	file:
g_marshal_value_peek_int64	core/gimpmarshal.c	37;"	d	file:
g_marshal_value_peek_int64	widgets/gimpdbusservice-glue.h	19;"	d
g_marshal_value_peek_long	core/gimpmarshal.c	12;"	d	file:
g_marshal_value_peek_long	core/gimpmarshal.c	35;"	d	file:
g_marshal_value_peek_long	widgets/gimpdbusservice-glue.h	17;"	d
g_marshal_value_peek_object	core/gimpmarshal.c	24;"	d	file:
g_marshal_value_peek_object	core/gimpmarshal.c	47;"	d	file:
g_marshal_value_peek_object	widgets/gimpdbusservice-glue.h	29;"	d
g_marshal_value_peek_param	core/gimpmarshal.c	21;"	d	file:
g_marshal_value_peek_param	core/gimpmarshal.c	44;"	d	file:
g_marshal_value_peek_param	widgets/gimpdbusservice-glue.h	26;"	d
g_marshal_value_peek_pointer	core/gimpmarshal.c	23;"	d	file:
g_marshal_value_peek_pointer	core/gimpmarshal.c	46;"	d	file:
g_marshal_value_peek_pointer	widgets/gimpdbusservice-glue.h	28;"	d
g_marshal_value_peek_string	core/gimpmarshal.c	20;"	d	file:
g_marshal_value_peek_string	core/gimpmarshal.c	43;"	d	file:
g_marshal_value_peek_string	widgets/gimpdbusservice-glue.h	25;"	d
g_marshal_value_peek_uchar	core/gimpmarshal.c	32;"	d	file:
g_marshal_value_peek_uchar	core/gimpmarshal.c	9;"	d	file:
g_marshal_value_peek_uchar	widgets/gimpdbusservice-glue.h	14;"	d
g_marshal_value_peek_uint	core/gimpmarshal.c	11;"	d	file:
g_marshal_value_peek_uint	core/gimpmarshal.c	34;"	d	file:
g_marshal_value_peek_uint	widgets/gimpdbusservice-glue.h	16;"	d
g_marshal_value_peek_uint64	core/gimpmarshal.c	15;"	d	file:
g_marshal_value_peek_uint64	core/gimpmarshal.c	38;"	d	file:
g_marshal_value_peek_uint64	widgets/gimpdbusservice-glue.h	20;"	d
g_marshal_value_peek_ulong	core/gimpmarshal.c	13;"	d	file:
g_marshal_value_peek_ulong	core/gimpmarshal.c	36;"	d	file:
g_marshal_value_peek_ulong	widgets/gimpdbusservice-glue.h	18;"	d
gamma	base/levels.h	/^  gdouble gamma[5];$/;"	m	struct:_Levels
gamma	tools/gimplevelstool.h	/^  GtkAdjustment        *gamma;$/;"	m	struct:_GimpLevelsTool
gaps	base/tile-swap.c	/^  GList   *gaps;$/;"	m	struct:_SwapFile	file:
gauss	core/gimpbrushgenerated.c	/^gauss (gdouble f)$/;"	f	file:
gaussian_blur_region	paint-funcs/paint-funcs.c	/^gaussian_blur_region (PixelRegion *srcR,$/;"	f
gc	display/gimpcanvas.h	/^  GdkGC          *gc[GIMP_CANVAS_NUM_STYLES];$/;"	m	struct:_GimpCanvas
gc	gui/splash.c	/^  GdkGC          *gc;$/;"	m	struct:__anon201	file:
gc	widgets/gimpnavigationview.h	/^  GdkGC       *gc;$/;"	m	struct:_GimpNavigationView
gc	widgets/gimppaletteview.h	/^  GdkGC            *gc;$/;"	m	struct:_GimpPaletteView
gc	widgets/gimpviewrenderer.h	/^  GdkGC              *gc;$/;"	m	struct:_GimpViewRenderer
generate_boundary	base/boundary.c	/^generate_boundary (PixelRegion  *PR,$/;"	f	file:
generate_histogram_gray	core/gimpimage-convert.c	/^generate_histogram_gray (CFHistogram  histogram,$/;"	f	file:
generate_histogram_rgb	core/gimpimage-convert.c	/^generate_histogram_rgb (CFHistogram   histogram,$/;"	f	file:
gerror	core/gimpimage-convert.c	/^  guint64 gerror;$/;"	m	struct:__anon108	file:
get_active_components	core/gimpdrawable.h	/^  void (* get_active_components) (const GimpDrawable   *drawable,$/;"	m	struct:_GimpDrawableClass
get_active_item	widgets/gimpitemtreeview.h	/^  GimpGetItemFunc       get_active_item;$/;"	m	struct:_GimpItemTreeViewClass
get_appropriate_monitor	widgets/gimpsessioninfo.c	/^get_appropriate_monitor (GdkScreen *screen,$/;"	f	file:
get_aux_info	widgets/gimpdock.h	/^  GList * (* get_aux_info) (GimpDock       *dock);$/;"	m	struct:_GimpDockClass
get_aux_info	widgets/gimpdocked.h	/^  GList         * (* get_aux_info)        (GimpDocked   *docked);$/;"	m	struct:_GimpDockedInterface
get_bytes	core/gimppickable.h	/^  gint            (* get_bytes)      (GimpPickable *pickable);$/;"	m	struct:_GimpPickableInterface
get_child_by_index	core/gimpcontainer.h	/^  GimpObject * (* get_child_by_index) (const GimpContainer *container,$/;"	m	struct:_GimpContainerClass
get_child_by_name	core/gimpcontainer.h	/^  GimpObject * (* get_child_by_name)  (const GimpContainer *container,$/;"	m	struct:_GimpContainerClass
get_child_index	core/gimpcontainer.h	/^  gint         (* get_child_index)    (const GimpContainer *container,$/;"	m	struct:_GimpContainerClass
get_child_requisition	widgets/gtkhwrapbox.c	/^get_child_requisition (GtkWrapBox     *wbox,$/;"	f	file:
get_child_requisition	widgets/gtkvwrapbox.c	/^get_child_requisition (GtkWrapBox     *wbox,$/;"	f	file:
get_clustersize	base/siox.c	/^get_clustersize (const gfloat *limits)$/;"	f	file:
get_color_configuration_invoker	pdb/gimprc_cmds.c	/^get_color_configuration_invoker (GimpProcedure     *procedure,$/;"	f	file:
get_container	widgets/gimpitemtreeview.h	/^  GimpGetContainerFunc  get_container;$/;"	m	struct:_GimpItemTreeViewClass
get_cursor_bitmap	widgets/gimpcursor.c	/^get_cursor_bitmap (GimpCursor *cursor)$/;"	f	file:
get_cursor_mask	widgets/gimpcursor.c	/^get_cursor_mask (GimpCursor *cursor)$/;"	f	file:
get_cursor_pixbuf	widgets/gimpcursor.c	/^get_cursor_pixbuf (GimpCursor *cursor)$/;"	f	file:
get_data_data_name	widgets/gimpdnd.c	/^  const gchar         *get_data_data_name;$/;"	m	struct:_GimpDndDataDef	file:
get_data_func	widgets/gimpdnd.c	/^  GimpDndDragDataFunc  get_data_func;$/;"	m	struct:_GimpDndDataDef	file:
get_data_func_name	widgets/gimpdnd.c	/^  const gchar         *get_data_func_name;$/;"	m	struct:_GimpDndDataDef	file:
get_default_comment_invoker	pdb/gimprc_cmds.c	/^get_default_comment_invoker (GimpProcedure     *procedure,$/;"	f	file:
get_default_unit_invoker	pdb/gimprc_cmds.c	/^get_default_unit_invoker (GimpProcedure     *procedure,$/;"	f	file:
get_description	core/gimpviewable.h	/^  gchar     * (* get_description)    (GimpViewable  *viewable,$/;"	m	struct:_GimpViewableClass
get_display_name	core/gimp-gui.h	/^  gchar        * (* get_display_name)    (Gimp                *gimp,$/;"	m	struct:_GimpGui
get_distance	vectors/gimpstroke.h	/^  gdouble       (* get_distance)         (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
get_distance	vectors/gimpvectors.h	/^  gdouble       (* get_distance)      (const GimpVectors *vectors,$/;"	m	struct:_GimpVectorsClass
get_draw_anchors	vectors/gimpstroke.h	/^  GList       * (* get_draw_anchors)     (const GimpStroke      *stroke);$/;"	m	struct:_GimpStrokeClass
get_draw_controls	vectors/gimpstroke.h	/^  GList       * (* get_draw_controls)    (const GimpStroke      *stroke);$/;"	m	struct:_GimpStrokeClass
get_draw_lines	vectors/gimpstroke.h	/^  GArray      * (* get_draw_lines)       (const GimpStroke      *stroke);$/;"	m	struct:_GimpStrokeClass
get_extension	core/gimpdata.h	/^  gchar    * (* get_extension) (GimpData  *data);$/;"	m	struct:_GimpDataClass
get_icon_func	widgets/gimpdnd.c	/^  GimpDndGetIconFunc   get_icon_func;$/;"	m	struct:_GimpDndDataDef	file:
get_image	core/gimppickable.h	/^  GimpImage     * (* get_image)      (GimpPickable *pickable);$/;"	m	struct:_GimpPickableInterface
get_image_type	core/gimppickable.h	/^  GimpImageType   (* get_image_type) (GimpPickable *pickable);$/;"	m	struct:_GimpPickableInterface
get_layout_size	widgets/gtkhwrapbox.c	/^get_layout_size (GtkHWrapBox *this,$/;"	f	file:
get_layout_size	widgets/gtkvwrapbox.c	/^get_layout_size (GtkVWrapBox *this,$/;"	f	file:
get_length	vectors/gimpstroke.h	/^  gdouble       (* get_length)           (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
get_length	vectors/gimpvectors.h	/^  gdouble       (* get_length)        (const GimpVectors *vectors,$/;"	m	struct:_GimpVectorsClass
get_mask	tools/gimpregionselecttool.h	/^  GimpChannel * (* get_mask) (GimpRegionSelectTool *region_tool,$/;"	m	struct:_GimpRegionSelectToolClass
get_memsize	core/gimpobject.h	/^  gint64  (* get_memsize)  (GimpObject *object,$/;"	m	struct:_GimpObjectClass
get_menu	widgets/gimpdocked.h	/^  GimpUIManager * (* get_menu)            (GimpDocked   *docked,$/;"	m	struct:_GimpDockedInterface
get_module_load_inhibit_invoker	pdb/gimprc_cmds.c	/^get_module_load_inhibit_invoker (GimpProcedure     *procedure,$/;"	f	file:
get_monitor_resolution_invoker	pdb/gimprc_cmds.c	/^get_monitor_resolution_invoker (GimpProcedure     *procedure,$/;"	f	file:
get_new_pixbuf	core/gimpviewable.h	/^  GdkPixbuf * (* get_new_pixbuf)     (GimpViewable  *viewable,$/;"	m	struct:_GimpViewableClass
get_new_preview	core/gimpviewable.h	/^  TempBuf   * (* get_new_preview)    (GimpViewable  *viewable,$/;"	m	struct:_GimpViewableClass
get_opacity_at	core/gimppickable.h	/^  gint            (* get_opacity_at) (GimpPickable *pickable,$/;"	m	struct:_GimpPickableInterface
get_paint_area	paint/gimppaintcore.h	/^  TempBuf  * (* get_paint_area) (GimpPaintCore    *core,$/;"	m	struct:_GimpPaintCoreClass
get_param_spec	widgets/gimppropwidgets.c	/^get_param_spec (GObject *object)$/;"	f	file:
get_path_by_tattoo_invoker	pdb/paths_cmds.c	/^get_path_by_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
get_pixbuf	core/gimpviewable.h	/^  GdkPixbuf * (* get_pixbuf)         (GimpViewable  *viewable,$/;"	m	struct:_GimpViewableClass
get_pixel_at	core/gimppickable.h	/^  gboolean        (* get_pixel_at)   (GimpPickable *pickable,$/;"	m	struct:_GimpPickableInterface
get_point_at_dist	vectors/gimpstroke.h	/^  gboolean      (* get_point_at_dist)    (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
get_popup_size	core/gimpviewable.h	/^  gboolean    (* get_popup_size)     (GimpViewable  *viewable,$/;"	m	struct:_GimpViewableClass
get_portion_height	base/pixel-region.c	/^get_portion_height (PixelRegionIterator *PRI)$/;"	f	file:
get_portion_width	base/pixel-region.c	/^get_portion_width (PixelRegionIterator *PRI)$/;"	f	file:
get_premultiplied_double_row	paint-funcs/scale-region.c	/^get_premultiplied_double_row (PixelRegion *srcPR,$/;"	f	file:
get_preview	core/gimpviewable.h	/^  TempBuf   * (* get_preview)        (GimpViewable  *viewable,$/;"	m	struct:_GimpViewableClass
get_preview	widgets/gimpdocked.h	/^  GtkWidget     * (* get_preview)         (GimpDocked   *docked,$/;"	m	struct:_GimpDockedInterface
get_preview_size	core/gimpviewable.h	/^  void        (* get_preview_size)   (GimpViewable  *viewable,$/;"	m	struct:_GimpViewableClass
get_progname	plug-in/gimppluginprocedure.h	/^  const gchar * (* get_progname)    (const GimpPlugInProcedure *procedure);$/;"	m	struct:_GimpPlugInProcedureClass
get_program_class	core/gimp-gui.h	/^  const gchar  * (* get_program_class)   (Gimp                *gimp);$/;"	m	struct:_GimpGui
get_sample	core/gimp-transform-region.c	/^get_sample (TileManager  *tm,$/;"	f	file:
get_scaled_row	paint-funcs/scale-region.c	/^get_scaled_row (gdouble              **src,$/;"	f	file:
get_show_button_bar	widgets/gimpdocked.h	/^  gboolean        (* get_show_button_bar) (GimpDocked   *docked);$/;"	m	struct:_GimpDockedInterface
get_size	core/gimpviewable.h	/^  gboolean    (* get_size)           (GimpViewable  *viewable,$/;"	m	struct:_GimpViewableClass
get_source	paint/gimpsourcecore.h	/^  gboolean (* get_source) (GimpSourceCore   *source_core,$/;"	m	struct:_GimpSourceCoreClass
get_theme_dir	core/gimp-gui.h	/^  const gchar  * (* get_theme_dir)       (Gimp                *gimp);$/;"	m	struct:_GimpGui
get_theme_dir_invoker	pdb/gimprc_cmds.c	/^get_theme_dir_invoker (GimpProcedure     *procedure,$/;"	f	file:
get_tiles	core/gimppickable.h	/^  TileManager   * (* get_tiles)      (GimpPickable *pickable);$/;"	m	struct:_GimpPickableInterface
get_title	widgets/gimpdocked.h	/^  gchar         * (* get_title)           (GimpDocked   *docked);$/;"	m	struct:_GimpDockedInterface
get_value	core/gimpprogress.h	/^  gdouble        (* get_value)  (GimpProgress        *progress);$/;"	m	struct:_GimpProgressInterface
get_window	core/gimpprogress.h	/^  guint32        (* get_window) (GimpProgress        *progress);$/;"	m	struct:_GimpProgressInterface
getpid	base/tile-swap.c	39;"	d	file:
getpid_invoker	pdb/misc_cmds.c	/^getpid_invoker (GimpProcedure     *procedure,$/;"	f	file:
getword	text/gimpfont-utils.c	/^getword (const char *str, const char *last, size_t *wordlen)$/;"	f	file:
gfig_path	config/gimppluginconfig.h	/^  gchar              *gfig_path;$/;"	m	struct:_GimpPluginConfig
gflare_path	config/gimppluginconfig.h	/^  gchar              *gflare_path;$/;"	m	struct:_GimpPluginConfig
gimp	core/gimpbrushclipboard.h	/^  Gimp      *gimp;$/;"	m	struct:_GimpBrushClipboard
gimp	core/gimpcontext.h	/^  Gimp                 *gimp;$/;"	m	struct:_GimpContext
gimp	core/gimpdatafactory.h	/^  Gimp                             *gimp;$/;"	m	struct:_GimpDataFactory
gimp	core/gimpdocumentlist.h	/^  Gimp     *gimp;$/;"	m	struct:_GimpDocumentList
gimp	core/gimpimage.h	/^  Gimp              *gimp;                  \/*  the GIMP the image belongs to*\/$/;"	m	struct:_GimpImage
gimp	core/gimpimagefile.h	/^  Gimp               *gimp;$/;"	m	struct:_GimpImagefile
gimp	core/gimppaintinfo.h	/^  Gimp             *gimp;$/;"	m	struct:_GimpPaintInfo
gimp	core/gimpparamspecs.h	/^  Gimp          *gimp;$/;"	m	struct:_GimpParamSpecDisplayID
gimp	core/gimpparamspecs.h	/^  Gimp          *gimp;$/;"	m	struct:_GimpParamSpecImageID
gimp	core/gimpparamspecs.h	/^  Gimp          *gimp;$/;"	m	struct:_GimpParamSpecItemID
gimp	core/gimppatternclipboard.h	/^  Gimp        *gimp;$/;"	m	struct:_GimpPatternClipboard
gimp	core/gimpstrokedesc.h	/^  Gimp              *gimp;$/;"	m	struct:_GimpStrokeDesc
gimp	core/gimptoolinfo.h	/^  Gimp                *gimp;$/;"	m	struct:_GimpToolInfo
gimp	dialogs/module-dialog.c	/^  Gimp         *gimp;$/;"	m	struct:__anon182	file:
gimp	dialogs/template-options-dialog.h	/^  Gimp         *gimp;$/;"	m	struct:_TemplateOptionsDialog
gimp	display/gimpcanvas.h	/^  Gimp           *gimp;$/;"	m	struct:_GimpCanvas
gimp	pdb/gimppdb.h	/^  Gimp       *gimp;$/;"	m	struct:_GimpPDB
gimp	plug-in/gimppluginmanager.h	/^  Gimp              *gimp;$/;"	m	struct:_GimpPlugInManager
gimp	widgets/gimpactionfactory.h	/^  Gimp       *gimp;$/;"	m	struct:_GimpActionFactory
gimp	widgets/gimpactiongroup.h	/^  Gimp                      *gimp;$/;"	m	struct:_GimpActionGroup
gimp	widgets/gimpcontrollerlist.h	/^  Gimp               *gimp;$/;"	m	struct:_GimpControllerList
gimp	widgets/gimpdbusservice.h	/^  Gimp    *gimp;$/;"	m	struct:_GimpDBusService
gimp	widgets/gimpdevices.c	/^  Gimp                   *gimp;$/;"	m	struct:_GimpDeviceManager	file:
gimp	widgets/gimpdevicestatus.h	/^  Gimp       *gimp;$/;"	m	struct:_GimpDeviceStatus
gimp	widgets/gimperrorconsole.h	/^  Gimp          *gimp;$/;"	m	struct:_GimpErrorConsole
gimp	widgets/gimphelp.c	/^  Gimp  *gimp;$/;"	m	struct:_GimpIdleHelp	file:
gimp	widgets/gimpmenufactory.h	/^  Gimp              *gimp;$/;"	m	struct:_GimpMenuFactory
gimp	widgets/gimpprofilechooserdialog.h	/^  Gimp                 *gimp;$/;"	m	struct:_GimpProfileChooserDialog
gimp	widgets/gimptooloptionseditor.h	/^  Gimp            *gimp;$/;"	m	struct:_GimpToolOptionsEditor
gimp	widgets/gimpuimanager.h	/^  Gimp         *gimp;$/;"	m	struct:_GimpUIManager
gimp	xcf/xcf-private.h	/^  Gimp               *gimp;$/;"	m	struct:_XcfInfo
gimp_action_class_init	widgets/gimpaction.c	/^gimp_action_class_init (GimpActionClass *klass)$/;"	f	file:
gimp_action_connect_proxy	widgets/gimpaction.c	/^gimp_action_connect_proxy (GtkAction *action,$/;"	f	file:
gimp_action_factory_class_init	widgets/gimpactionfactory.c	/^gimp_action_factory_class_init (GimpActionFactoryClass *klass)$/;"	f	file:
gimp_action_factory_finalize	widgets/gimpactionfactory.c	/^gimp_action_factory_finalize (GObject *object)$/;"	f	file:
gimp_action_factory_group_new	widgets/gimpactionfactory.c	/^gimp_action_factory_group_new (GimpActionFactory *factory,$/;"	f
gimp_action_factory_group_register	widgets/gimpactionfactory.c	/^gimp_action_factory_group_register (GimpActionFactory         *factory,$/;"	f
gimp_action_factory_init	widgets/gimpactionfactory.c	/^gimp_action_factory_init (GimpActionFactory *factory)$/;"	f	file:
gimp_action_factory_new	widgets/gimpactionfactory.c	/^gimp_action_factory_new (Gimp     *gimp,$/;"	f
gimp_action_finalize	widgets/gimpaction.c	/^gimp_action_finalize (GObject *object)$/;"	f	file:
gimp_action_get_property	widgets/gimpaction.c	/^gimp_action_get_property (GObject    *object,$/;"	f	file:
gimp_action_group_activate_action	widgets/gimpactiongroup.c	/^gimp_action_group_activate_action (GimpActionGroup *group,$/;"	f
gimp_action_group_add_actions	widgets/gimpactiongroup.c	/^gimp_action_group_add_actions (GimpActionGroup       *group,$/;"	f
gimp_action_group_add_enum_actions	widgets/gimpactiongroup.c	/^gimp_action_group_add_enum_actions (GimpActionGroup           *group,$/;"	f
gimp_action_group_add_plug_in_actions	widgets/gimpactiongroup.c	/^gimp_action_group_add_plug_in_actions (GimpActionGroup             *group,$/;"	f
gimp_action_group_add_radio_actions	widgets/gimpactiongroup.c	/^gimp_action_group_add_radio_actions (GimpActionGroup            *group,$/;"	f
gimp_action_group_add_string_actions	widgets/gimpactiongroup.c	/^gimp_action_group_add_string_actions (GimpActionGroup             *group,$/;"	f
gimp_action_group_add_toggle_actions	widgets/gimpactiongroup.c	/^gimp_action_group_add_toggle_actions (GimpActionGroup             *group,$/;"	f
gimp_action_group_class_init	widgets/gimpactiongroup.c	/^gimp_action_group_class_init (GimpActionGroupClass *klass)$/;"	f	file:
gimp_action_group_constructor	widgets/gimpactiongroup.c	/^gimp_action_group_constructor (GType                  type,$/;"	f	file:
gimp_action_group_dispose	widgets/gimpactiongroup.c	/^gimp_action_group_dispose (GObject *object)$/;"	f	file:
gimp_action_group_finalize	widgets/gimpactiongroup.c	/^gimp_action_group_finalize (GObject *object)$/;"	f	file:
gimp_action_group_get_property	widgets/gimpactiongroup.c	/^gimp_action_group_get_property (GObject    *object,$/;"	f	file:
gimp_action_group_init	widgets/gimpactiongroup.c	/^gimp_action_group_init (GimpActionGroup *group)$/;"	f	file:
gimp_action_group_new	widgets/gimpactiongroup.c	/^gimp_action_group_new (Gimp                      *gimp,$/;"	f
gimp_action_group_set_action_active	widgets/gimpactiongroup.c	/^gimp_action_group_set_action_active (GimpActionGroup *group,$/;"	f
gimp_action_group_set_action_color	widgets/gimpactiongroup.c	/^gimp_action_group_set_action_color (GimpActionGroup *group,$/;"	f
gimp_action_group_set_action_hide_empty	widgets/gimpactiongroup.c	/^gimp_action_group_set_action_hide_empty (GimpActionGroup *group,$/;"	f
gimp_action_group_set_action_label	widgets/gimpactiongroup.c	/^gimp_action_group_set_action_label (GimpActionGroup *group,$/;"	f
gimp_action_group_set_action_sensitive	widgets/gimpactiongroup.c	/^gimp_action_group_set_action_sensitive (GimpActionGroup *group,$/;"	f
gimp_action_group_set_action_viewable	widgets/gimpactiongroup.c	/^gimp_action_group_set_action_viewable (GimpActionGroup *group,$/;"	f
gimp_action_group_set_action_visible	widgets/gimpactiongroup.c	/^gimp_action_group_set_action_visible (GimpActionGroup *group,$/;"	f
gimp_action_group_set_property	widgets/gimpactiongroup.c	/^gimp_action_group_set_property (GObject      *object,$/;"	f	file:
gimp_action_group_update	widgets/gimpactiongroup.c	/^gimp_action_group_update (GimpActionGroup *group,$/;"	f
gimp_action_groups_from_name	widgets/gimpactiongroup.c	/^gimp_action_groups_from_name (const gchar *name)$/;"	f
gimp_action_init	widgets/gimpaction.c	/^gimp_action_init (GimpAction *action)$/;"	f	file:
gimp_action_name_compare	widgets/gimpaction.c	/^gimp_action_name_compare (GimpAction  *action1,$/;"	f
gimp_action_new	widgets/gimpaction.c	/^gimp_action_new (const gchar *name,$/;"	f
gimp_action_set_property	widgets/gimpaction.c	/^gimp_action_set_property (GObject      *object,$/;"	f	file:
gimp_action_set_proxy	widgets/gimpaction.c	/^gimp_action_set_proxy (GimpAction *action,$/;"	f	file:
gimp_action_set_proxy_tooltip	widgets/gimpaction.c	/^gimp_action_set_proxy_tooltip (GimpAction *action,$/;"	f	file:
gimp_action_view_accel_changed	widgets/gimpactionview.c	/^gimp_action_view_accel_changed (GtkAccelGroup   *accel_group,$/;"	f	file:
gimp_action_view_accel_cleared	widgets/gimpactionview.c	/^gimp_action_view_accel_cleared (GtkCellRendererAccel *accel,$/;"	f	file:
gimp_action_view_accel_edited	widgets/gimpactionview.c	/^gimp_action_view_accel_edited (GtkCellRendererAccel *accel,$/;"	f	file:
gimp_action_view_accel_find_func	widgets/gimpactionview.c	/^gimp_action_view_accel_find_func (GtkAccelKey *key,$/;"	f	file:
gimp_action_view_button_press	widgets/gimpactionview.c	/^gimp_action_view_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_action_view_class_init	widgets/gimpactionview.c	/^gimp_action_view_class_init (GimpActionViewClass *klass)$/;"	f	file:
gimp_action_view_conflict_confirm	widgets/gimpactionview.c	/^gimp_action_view_conflict_confirm (GimpActionView  *view,$/;"	f	file:
gimp_action_view_conflict_response	widgets/gimpactionview.c	/^gimp_action_view_conflict_response (GtkWidget   *dialog,$/;"	f	file:
gimp_action_view_dispose	widgets/gimpactionview.c	/^gimp_action_view_dispose (GObject *object)$/;"	f	file:
gimp_action_view_get_accel_action	widgets/gimpactionview.c	/^gimp_action_view_get_accel_action (GimpActionView  *view,$/;"	f	file:
gimp_action_view_init	widgets/gimpactionview.c	/^gimp_action_view_init (GimpActionView *view)$/;"	f	file:
gimp_action_view_new	widgets/gimpactionview.c	/^gimp_action_view_new (GimpUIManager *manager,$/;"	f
gimp_active_color_get_type	widgets/widgets-enums.c	/^gimp_active_color_get_type (void)$/;"	f
gimp_airbrush_class_init	paint/gimpairbrush.c	/^gimp_airbrush_class_init (GimpAirbrushClass *klass)$/;"	f	file:
gimp_airbrush_finalize	paint/gimpairbrush.c	/^gimp_airbrush_finalize (GObject *object)$/;"	f	file:
gimp_airbrush_init	paint/gimpairbrush.c	/^gimp_airbrush_init (GimpAirbrush *airbrush)$/;"	f	file:
gimp_airbrush_motion	paint/gimpairbrush.c	/^gimp_airbrush_motion (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_airbrush_options_class_init	paint/gimpairbrushoptions.c	/^gimp_airbrush_options_class_init (GimpAirbrushOptionsClass *klass)$/;"	f	file:
gimp_airbrush_options_get_property	paint/gimpairbrushoptions.c	/^gimp_airbrush_options_get_property (GObject    *object,$/;"	f	file:
gimp_airbrush_options_gui	tools/gimpairbrushtool.c	/^gimp_airbrush_options_gui (GimpToolOptions *tool_options)$/;"	f	file:
gimp_airbrush_options_init	paint/gimpairbrushoptions.c	/^gimp_airbrush_options_init (GimpAirbrushOptions *options)$/;"	f	file:
gimp_airbrush_options_set_property	paint/gimpairbrushoptions.c	/^gimp_airbrush_options_set_property (GObject      *object,$/;"	f	file:
gimp_airbrush_paint	paint/gimpairbrush.c	/^gimp_airbrush_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_airbrush_timeout	paint/gimpairbrush.c	/^gimp_airbrush_timeout (gpointer data)$/;"	f	file:
gimp_airbrush_tool_class_init	tools/gimpairbrushtool.c	/^gimp_airbrush_tool_class_init (GimpAirbrushToolClass *klass)$/;"	f	file:
gimp_airbrush_tool_init	tools/gimpairbrushtool.c	/^gimp_airbrush_tool_init (GimpAirbrushTool *airbrush)$/;"	f	file:
gimp_align_options_class_init	tools/gimpalignoptions.c	/^gimp_align_options_class_init (GimpAlignOptionsClass *klass)$/;"	f	file:
gimp_align_options_gui	tools/gimpalignoptions.c	/^gimp_align_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_align_options_init	tools/gimpalignoptions.c	/^gimp_align_options_init (GimpAlignOptions *options)$/;"	f	file:
gimp_align_reference_type_get_type	core/core-enums.c	/^gimp_align_reference_type_get_type (void)$/;"	f
gimp_align_tool_button_press	tools/gimpaligntool.c	/^gimp_align_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_align_tool_button_release	tools/gimpaligntool.c	/^gimp_align_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_align_tool_class_init	tools/gimpaligntool.c	/^gimp_align_tool_class_init (GimpAlignToolClass *klass)$/;"	f	file:
gimp_align_tool_constructor	tools/gimpaligntool.c	/^gimp_align_tool_constructor (GType                  type,$/;"	f	file:
gimp_align_tool_control	tools/gimpaligntool.c	/^gimp_align_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_align_tool_controls	tools/gimpaligntool.c	/^gimp_align_tool_controls (GimpAlignTool *align_tool)$/;"	f	file:
gimp_align_tool_cursor_update	tools/gimpaligntool.c	/^gimp_align_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_align_tool_draw	tools/gimpaligntool.c	/^gimp_align_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_align_tool_finalize	tools/gimpaligntool.c	/^gimp_align_tool_finalize (GObject *object)$/;"	f	file:
gimp_align_tool_init	tools/gimpaligntool.c	/^gimp_align_tool_init (GimpAlignTool *align_tool)$/;"	f	file:
gimp_align_tool_initialize	tools/gimpaligntool.c	/^gimp_align_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_align_tool_motion	tools/gimpaligntool.c	/^gimp_align_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_alignment_type_get_type	core/core-enums.c	/^gimp_alignment_type_get_type (void)$/;"	f
gimp_anchor_copy	vectors/gimpanchor.c	/^gimp_anchor_copy (const GimpAnchor *anchor)$/;"	f
gimp_anchor_free	vectors/gimpanchor.c	/^gimp_anchor_free (GimpAnchor *anchor)$/;"	f
gimp_anchor_get_type	vectors/gimpanchor.c	/^gimp_anchor_get_type (void)$/;"	f
gimp_anchor_new	vectors/gimpanchor.c	/^gimp_anchor_new (GimpAnchorType    type,$/;"	f
gimp_area_free	core/gimparea.c	/^gimp_area_free (GimpArea *area)$/;"	f
gimp_area_list_free	core/gimparea.c	/^gimp_area_list_free (GSList *areas)$/;"	f
gimp_area_list_process	core/gimparea.c	/^gimp_area_list_process (GSList   *list,$/;"	f
gimp_area_new	core/gimparea.c	/^gimp_area_new (gint x1,$/;"	f
gimp_array_copy	core/gimpparamspecs.c	/^gimp_array_copy (const GimpArray *array)$/;"	f
gimp_array_free	core/gimpparamspecs.c	/^gimp_array_free (GimpArray *array)$/;"	f
gimp_array_get_type	core/gimpparamspecs.c	/^gimp_array_get_type (void)$/;"	f
gimp_array_new	core/gimpparamspecs.c	/^gimp_array_new (const guint8 *data,$/;"	f
gimp_avoid_exact_integer	paint/gimpbrushcore.c	/^gimp_avoid_exact_integer (gdouble *x)$/;"	f	file:
gimp_base_config_class_init	config/gimpbaseconfig.c	/^gimp_base_config_class_init (GimpBaseConfigClass *klass)$/;"	f	file:
gimp_base_config_finalize	config/gimpbaseconfig.c	/^gimp_base_config_finalize (GObject *object)$/;"	f	file:
gimp_base_config_get_property	config/gimpbaseconfig.c	/^gimp_base_config_get_property (GObject    *object,$/;"	f	file:
gimp_base_config_init	config/gimpbaseconfig.c	/^gimp_base_config_init (GimpBaseConfig *config)$/;"	f	file:
gimp_base_config_set_property	config/gimpbaseconfig.c	/^gimp_base_config_set_property (GObject      *object,$/;"	f	file:
gimp_bezier_coords_is_straight	vectors/gimpbezierstroke.c	/^gimp_bezier_coords_is_straight (const GimpCoords *beziercoords,$/;"	f	file:
gimp_bezier_coords_subdivide	vectors/gimpbezierstroke.c	/^gimp_bezier_coords_subdivide (const GimpCoords  *beziercoords,$/;"	f	file:
gimp_bezier_coords_subdivide2	vectors/gimpbezierstroke.c	/^gimp_bezier_coords_subdivide2 (const GimpCoords *beziercoords,$/;"	f	file:
gimp_bezier_stroke_anchor_convert	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_anchor_convert (GimpStroke            *stroke,$/;"	f	file:
gimp_bezier_stroke_anchor_delete	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_anchor_delete (GimpStroke        *stroke,$/;"	f	file:
gimp_bezier_stroke_anchor_insert	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_anchor_insert (GimpStroke *stroke,$/;"	f	file:
gimp_bezier_stroke_anchor_is_insertable	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_anchor_is_insertable (GimpStroke *stroke,$/;"	f	file:
gimp_bezier_stroke_anchor_move_absolute	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_anchor_move_absolute (GimpStroke            *stroke,$/;"	f	file:
gimp_bezier_stroke_anchor_move_relative	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_anchor_move_relative (GimpStroke            *stroke,$/;"	f	file:
gimp_bezier_stroke_arcto	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_arcto (GimpStroke       *bez_stroke,$/;"	f
gimp_bezier_stroke_class_init	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_class_init (GimpBezierStrokeClass *klass)$/;"	f	file:
gimp_bezier_stroke_close	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_close (GimpStroke *stroke)$/;"	f	file:
gimp_bezier_stroke_conicto	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_conicto (GimpStroke       *stroke,$/;"	f
gimp_bezier_stroke_connect_stroke	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_connect_stroke (GimpStroke *stroke,$/;"	f	file:
gimp_bezier_stroke_cubicto	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_cubicto (GimpStroke       *stroke,$/;"	f
gimp_bezier_stroke_extend	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_extend (GimpStroke           *stroke,$/;"	f
gimp_bezier_stroke_finalize	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_finalize (GObject *object)$/;"	f	file:
gimp_bezier_stroke_get_anchor_listitem	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_get_anchor_listitem (GList *list)$/;"	f	file:
gimp_bezier_stroke_init	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_init (GimpBezierStroke *stroke)$/;"	f	file:
gimp_bezier_stroke_interpolate	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_interpolate (const GimpStroke  *stroke,$/;"	f	file:
gimp_bezier_stroke_is_extendable	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_is_extendable (GimpStroke *stroke,$/;"	f	file:
gimp_bezier_stroke_lineto	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_lineto (GimpStroke       *stroke,$/;"	f
gimp_bezier_stroke_nearest_point_get	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_nearest_point_get (const GimpStroke     *stroke,$/;"	f	file:
gimp_bezier_stroke_nearest_tangent_get	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_nearest_tangent_get (const GimpStroke  *stroke,$/;"	f	file:
gimp_bezier_stroke_new	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_new (void)$/;"	f
gimp_bezier_stroke_new_ellipse	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_new_ellipse (const GimpCoords *center,$/;"	f
gimp_bezier_stroke_new_from_coords	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_new_from_coords (const GimpCoords *coords,$/;"	f
gimp_bezier_stroke_new_moveto	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_new_moveto (const GimpCoords *start)$/;"	f
gimp_bezier_stroke_open	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_open (GimpStroke *stroke,$/;"	f	file:
gimp_bezier_stroke_point_is_movable	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_point_is_movable (GimpStroke *stroke,$/;"	f	file:
gimp_bezier_stroke_point_move_absolute	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_point_move_absolute (GimpStroke            *stroke,$/;"	f	file:
gimp_bezier_stroke_point_move_relative	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_point_move_relative (GimpStroke            *stroke,$/;"	f	file:
gimp_bezier_stroke_segment_nearest_point_get	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_segment_nearest_point_get (const GimpCoords  *beziercoords,$/;"	f	file:
gimp_bezier_stroke_segment_nearest_tangent_get	vectors/gimpbezierstroke.c	/^gimp_bezier_stroke_segment_nearest_tangent_get (const GimpCoords *beziercoords,$/;"	f	file:
gimp_blend_options_class_init	tools/gimpblendoptions.c	/^gimp_blend_options_class_init (GimpBlendOptionsClass *klass)$/;"	f	file:
gimp_blend_options_get_property	tools/gimpblendoptions.c	/^gimp_blend_options_get_property (GObject    *object,$/;"	f	file:
gimp_blend_options_gui	tools/gimpblendoptions.c	/^gimp_blend_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_blend_options_init	tools/gimpblendoptions.c	/^gimp_blend_options_init (GimpBlendOptions *options)$/;"	f	file:
gimp_blend_options_set_property	tools/gimpblendoptions.c	/^gimp_blend_options_set_property (GObject      *object,$/;"	f	file:
gimp_blend_tool_active_modifier_key	tools/gimpblendtool.c	/^gimp_blend_tool_active_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_blend_tool_button_press	tools/gimpblendtool.c	/^gimp_blend_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_blend_tool_button_release	tools/gimpblendtool.c	/^gimp_blend_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_blend_tool_class_init	tools/gimpblendtool.c	/^gimp_blend_tool_class_init (GimpBlendToolClass *klass)$/;"	f	file:
gimp_blend_tool_cursor_update	tools/gimpblendtool.c	/^gimp_blend_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_blend_tool_draw	tools/gimpblendtool.c	/^gimp_blend_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_blend_tool_init	tools/gimpblendtool.c	/^gimp_blend_tool_init (GimpBlendTool *blend_tool)$/;"	f	file:
gimp_blend_tool_initialize	tools/gimpblendtool.c	/^gimp_blend_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_blend_tool_motion	tools/gimpblendtool.c	/^gimp_blend_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_blend_tool_push_status	tools/gimpblendtool.c	/^gimp_blend_tool_push_status (GimpBlendTool   *blend_tool,$/;"	f	file:
gimp_blob_editor_button_press	widgets/gimpblobeditor.c	/^gimp_blob_editor_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_blob_editor_button_release	widgets/gimpblobeditor.c	/^gimp_blob_editor_button_release (GtkWidget      *widget,$/;"	f	file:
gimp_blob_editor_class_init	widgets/gimpblobeditor.c	/^gimp_blob_editor_class_init (GimpBlobEditorClass *klass)$/;"	f	file:
gimp_blob_editor_draw_blob	widgets/gimpblobeditor.c	/^gimp_blob_editor_draw_blob (GimpBlobEditor *editor,$/;"	f	file:
gimp_blob_editor_expose	widgets/gimpblobeditor.c	/^gimp_blob_editor_expose (GtkWidget      *widget,$/;"	f	file:
gimp_blob_editor_get_handle	widgets/gimpblobeditor.c	/^gimp_blob_editor_get_handle (GimpBlobEditor *editor,$/;"	f	file:
gimp_blob_editor_get_property	widgets/gimpblobeditor.c	/^gimp_blob_editor_get_property (GObject    *object,$/;"	f	file:
gimp_blob_editor_init	widgets/gimpblobeditor.c	/^gimp_blob_editor_init (GimpBlobEditor *editor)$/;"	f	file:
gimp_blob_editor_motion_notify	widgets/gimpblobeditor.c	/^gimp_blob_editor_motion_notify (GtkWidget      *widget,$/;"	f	file:
gimp_blob_editor_new	widgets/gimpblobeditor.c	/^gimp_blob_editor_new (GimpInkBlobType  type,$/;"	f
gimp_blob_editor_set_property	widgets/gimpblobeditor.c	/^gimp_blob_editor_set_property (GObject      *object,$/;"	f	file:
gimp_brightness_contrast_tool_button_press	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_brightness_contrast_tool_button_release	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_brightness_contrast_tool_class_init	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_class_init (GimpBrightnessContrastToolClass *klass)$/;"	f	file:
gimp_brightness_contrast_tool_dialog	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_dialog (GimpImageMapTool *im_tool)$/;"	f	file:
gimp_brightness_contrast_tool_finalize	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_finalize (GObject *object)$/;"	f	file:
gimp_brightness_contrast_tool_init	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_init (GimpBrightnessContrastTool *bc_tool)$/;"	f	file:
gimp_brightness_contrast_tool_initialize	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_brightness_contrast_tool_map	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_map (GimpImageMapTool *im_tool)$/;"	f	file:
gimp_brightness_contrast_tool_motion	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_brightness_contrast_tool_reset	tools/gimpbrightnesscontrasttool.c	/^gimp_brightness_contrast_tool_reset (GimpImageMapTool *im_tool)$/;"	f	file:
gimp_brush_application_mode_get_type	paint/paint-enums.c	/^gimp_brush_application_mode_get_type (void)$/;"	f
gimp_brush_box_new	widgets/gimpviewablebox.c	/^gimp_brush_box_new (GimpContainer *container,$/;"	f
gimp_brush_class_init	core/gimpbrush.c	/^gimp_brush_class_init (GimpBrushClass *klass)$/;"	f	file:
gimp_brush_clipboard_buffer_changed	core/gimpbrushclipboard.c	/^gimp_brush_clipboard_buffer_changed (Gimp      *gimp,$/;"	f	file:
gimp_brush_clipboard_class_init	core/gimpbrushclipboard.c	/^gimp_brush_clipboard_class_init (GimpBrushClipboardClass *klass)$/;"	f	file:
gimp_brush_clipboard_constructor	core/gimpbrushclipboard.c	/^gimp_brush_clipboard_constructor (GType                  type,$/;"	f	file:
gimp_brush_clipboard_get_property	core/gimpbrushclipboard.c	/^gimp_brush_clipboard_get_property (GObject    *object,$/;"	f	file:
gimp_brush_clipboard_init	core/gimpbrushclipboard.c	/^gimp_brush_clipboard_init (GimpBrushClipboard *brush)$/;"	f	file:
gimp_brush_clipboard_new	core/gimpbrushclipboard.c	/^gimp_brush_clipboard_new (Gimp *gimp)$/;"	f
gimp_brush_clipboard_set_property	core/gimpbrushclipboard.c	/^gimp_brush_clipboard_set_property (GObject      *object,$/;"	f	file:
gimp_brush_core_calc_brush_scale	paint/gimpbrushcore.c	/^gimp_brush_core_calc_brush_scale (GimpBrushCore    *core,$/;"	f	file:
gimp_brush_core_class_init	paint/gimpbrushcore.c	/^gimp_brush_core_class_init (GimpBrushCoreClass *klass)$/;"	f	file:
gimp_brush_core_color_area_with_pixmap	paint/gimpbrushcore.c	/^gimp_brush_core_color_area_with_pixmap (GimpBrushCore            *core,$/;"	f
gimp_brush_core_create_bound_segs	paint/gimpbrushcore.c	/^gimp_brush_core_create_bound_segs (GimpBrushCore    *core,$/;"	f
gimp_brush_core_finalize	paint/gimpbrushcore.c	/^gimp_brush_core_finalize (GObject *object)$/;"	f	file:
gimp_brush_core_get_brush_mask	paint/gimpbrushcore.c	/^gimp_brush_core_get_brush_mask (GimpBrushCore            *core,$/;"	f	file:
gimp_brush_core_get_paint_area	paint/gimpbrushcore.c	/^gimp_brush_core_get_paint_area (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_brush_core_init	paint/gimpbrushcore.c	/^gimp_brush_core_init (GimpBrushCore *core)$/;"	f	file:
gimp_brush_core_interpolate	paint/gimpbrushcore.c	/^gimp_brush_core_interpolate (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_brush_core_invalidate_cache	paint/gimpbrushcore.c	/^gimp_brush_core_invalidate_cache (GimpBrush     *brush,$/;"	f	file:
gimp_brush_core_paste_canvas	paint/gimpbrushcore.c	/^gimp_brush_core_paste_canvas (GimpBrushCore            *core,$/;"	f
gimp_brush_core_post_paint	paint/gimpbrushcore.c	/^gimp_brush_core_post_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_brush_core_pre_paint	paint/gimpbrushcore.c	/^gimp_brush_core_pre_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_brush_core_pressurize_mask	paint/gimpbrushcore.c	/^gimp_brush_core_pressurize_mask (GimpBrushCore *core,$/;"	f	file:
gimp_brush_core_real_set_brush	paint/gimpbrushcore.c	/^gimp_brush_core_real_set_brush (GimpBrushCore *core,$/;"	f	file:
gimp_brush_core_replace_canvas	paint/gimpbrushcore.c	/^gimp_brush_core_replace_canvas (GimpBrushCore            *core,$/;"	f
gimp_brush_core_scale_mask	paint/gimpbrushcore.c	/^gimp_brush_core_scale_mask (GimpBrushCore *core,$/;"	f	file:
gimp_brush_core_scale_pixmap	paint/gimpbrushcore.c	/^gimp_brush_core_scale_pixmap (GimpBrushCore *core,$/;"	f	file:
gimp_brush_core_set_brush	paint/gimpbrushcore.c	/^gimp_brush_core_set_brush (GimpBrushCore *core,$/;"	f
gimp_brush_core_solidify_mask	paint/gimpbrushcore.c	/^gimp_brush_core_solidify_mask (GimpBrushCore *core,$/;"	f	file:
gimp_brush_core_start	paint/gimpbrushcore.c	/^gimp_brush_core_start (GimpPaintCore     *paint_core,$/;"	f	file:
gimp_brush_core_subsample_mask	paint/gimpbrushcore.c	/^gimp_brush_core_subsample_mask (GimpBrushCore *core,$/;"	f	file:
gimp_brush_editor_class_init	widgets/gimpbrusheditor.c	/^gimp_brush_editor_class_init (GimpBrushEditorClass *klass)$/;"	f	file:
gimp_brush_editor_constructor	widgets/gimpbrusheditor.c	/^gimp_brush_editor_constructor (GType                  type,$/;"	f	file:
gimp_brush_editor_docked_iface_init	widgets/gimpbrusheditor.c	/^gimp_brush_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_brush_editor_init	widgets/gimpbrusheditor.c	/^gimp_brush_editor_init (GimpBrushEditor *editor)$/;"	f	file:
gimp_brush_editor_new	widgets/gimpbrusheditor.c	/^gimp_brush_editor_new (GimpContext     *context,$/;"	f
gimp_brush_editor_notify_brush	widgets/gimpbrusheditor.c	/^gimp_brush_editor_notify_brush (GimpBrushGenerated   *brush,$/;"	f	file:
gimp_brush_editor_set_context	widgets/gimpbrusheditor.c	/^gimp_brush_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_brush_editor_set_data	widgets/gimpbrusheditor.c	/^gimp_brush_editor_set_data (GimpDataEditor *editor,$/;"	f	file:
gimp_brush_editor_update_brush	widgets/gimpbrusheditor.c	/^gimp_brush_editor_update_brush (GtkAdjustment   *adjustment,$/;"	f	file:
gimp_brush_editor_update_shape	widgets/gimpbrusheditor.c	/^gimp_brush_editor_update_shape (GtkWidget       *widget,$/;"	f	file:
gimp_brush_factory_view_class_init	widgets/gimpbrushfactoryview.c	/^gimp_brush_factory_view_class_init (GimpBrushFactoryViewClass *klass)$/;"	f	file:
gimp_brush_factory_view_destroy	widgets/gimpbrushfactoryview.c	/^gimp_brush_factory_view_destroy (GtkObject *object)$/;"	f	file:
gimp_brush_factory_view_init	widgets/gimpbrushfactoryview.c	/^gimp_brush_factory_view_init (GimpBrushFactoryView *view)$/;"	f	file:
gimp_brush_factory_view_new	widgets/gimpbrushfactoryview.c	/^gimp_brush_factory_view_new (GimpViewType     view_type,$/;"	f
gimp_brush_factory_view_select_item	widgets/gimpbrushfactoryview.c	/^gimp_brush_factory_view_select_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_brush_factory_view_spacing_changed	widgets/gimpbrushfactoryview.c	/^gimp_brush_factory_view_spacing_changed (GimpBrush            *brush,$/;"	f	file:
gimp_brush_factory_view_spacing_update	widgets/gimpbrushfactoryview.c	/^gimp_brush_factory_view_spacing_update (GtkAdjustment        *adjustment,$/;"	f	file:
gimp_brush_finalize	core/gimpbrush.c	/^gimp_brush_finalize (GObject *object)$/;"	f	file:
gimp_brush_generated_calc	core/gimpbrushgenerated.c	/^gimp_brush_generated_calc (GimpBrushGenerated      *brush,$/;"	f	file:
gimp_brush_generated_calc_lut	core/gimpbrushgenerated.c	/^gimp_brush_generated_calc_lut (gdouble radius,$/;"	f	file:
gimp_brush_generated_class_init	core/gimpbrushgenerated.c	/^gimp_brush_generated_class_init (GimpBrushGeneratedClass *klass)$/;"	f	file:
gimp_brush_generated_dirty	core/gimpbrushgenerated.c	/^gimp_brush_generated_dirty (GimpData *data)$/;"	f	file:
gimp_brush_generated_duplicate	core/gimpbrushgenerated.c	/^gimp_brush_generated_duplicate (GimpData *data)$/;"	f	file:
gimp_brush_generated_get_angle	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_angle (const GimpBrushGenerated *brush)$/;"	f
gimp_brush_generated_get_aspect_ratio	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_aspect_ratio (const GimpBrushGenerated *brush)$/;"	f
gimp_brush_generated_get_extension	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_extension (GimpData *data)$/;"	f	file:
gimp_brush_generated_get_half_size	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_half_size (GimpBrushGenerated      *gbrush,$/;"	f	file:
gimp_brush_generated_get_hardness	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_hardness (const GimpBrushGenerated *brush)$/;"	f
gimp_brush_generated_get_property	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_property (GObject    *object,$/;"	f	file:
gimp_brush_generated_get_radius	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_radius (const GimpBrushGenerated *brush)$/;"	f
gimp_brush_generated_get_shape	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_shape (const GimpBrushGenerated *brush)$/;"	f
gimp_brush_generated_get_spikes	core/gimpbrushgenerated.c	/^gimp_brush_generated_get_spikes (const GimpBrushGenerated *brush)$/;"	f
gimp_brush_generated_init	core/gimpbrushgenerated.c	/^gimp_brush_generated_init (GimpBrushGenerated *brush)$/;"	f	file:
gimp_brush_generated_load	core/gimpbrushgenerated-load.c	/^gimp_brush_generated_load (const gchar  *filename,$/;"	f
gimp_brush_generated_new	core/gimpbrushgenerated.c	/^gimp_brush_generated_new (const gchar             *name,$/;"	f
gimp_brush_generated_real_scale_size	core/gimpbrushgenerated.c	/^gimp_brush_generated_real_scale_size (GimpBrush  *gbrush,$/;"	f	file:
gimp_brush_generated_save	core/gimpbrushgenerated-save.c	/^gimp_brush_generated_save (GimpData  *data,$/;"	f
gimp_brush_generated_scale_mask	core/gimpbrushgenerated.c	/^gimp_brush_generated_scale_mask (GimpBrush *gbrush,$/;"	f	file:
gimp_brush_generated_set_angle	core/gimpbrushgenerated.c	/^gimp_brush_generated_set_angle (GimpBrushGenerated *brush,$/;"	f
gimp_brush_generated_set_aspect_ratio	core/gimpbrushgenerated.c	/^gimp_brush_generated_set_aspect_ratio (GimpBrushGenerated *brush,$/;"	f
gimp_brush_generated_set_hardness	core/gimpbrushgenerated.c	/^gimp_brush_generated_set_hardness (GimpBrushGenerated *brush,$/;"	f
gimp_brush_generated_set_property	core/gimpbrushgenerated.c	/^gimp_brush_generated_set_property (GObject      *object,$/;"	f	file:
gimp_brush_generated_set_radius	core/gimpbrushgenerated.c	/^gimp_brush_generated_set_radius (GimpBrushGenerated *brush,$/;"	f
gimp_brush_generated_set_shape	core/gimpbrushgenerated.c	/^gimp_brush_generated_set_shape (GimpBrushGenerated      *brush,$/;"	f
gimp_brush_generated_set_spikes	core/gimpbrushgenerated.c	/^gimp_brush_generated_set_spikes (GimpBrushGenerated *brush,$/;"	f
gimp_brush_generated_shape_get_type	core/core-enums.c	/^gimp_brush_generated_shape_get_type (void)$/;"	f
gimp_brush_get_description	core/gimpbrush.c	/^gimp_brush_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_brush_get_extension	core/gimpbrush.c	/^gimp_brush_get_extension (GimpData *data)$/;"	f	file:
gimp_brush_get_mask	core/gimpbrush.c	/^gimp_brush_get_mask (const GimpBrush *brush)$/;"	f
gimp_brush_get_memsize	core/gimpbrush.c	/^gimp_brush_get_memsize (GimpObject *object,$/;"	f	file:
gimp_brush_get_new_preview	core/gimpbrush.c	/^gimp_brush_get_new_preview (GimpViewable *viewable,$/;"	f	file:
gimp_brush_get_pixmap	core/gimpbrush.c	/^gimp_brush_get_pixmap (const GimpBrush *brush)$/;"	f
gimp_brush_get_property	core/gimpbrush.c	/^gimp_brush_get_property (GObject    *object,$/;"	f	file:
gimp_brush_get_size	core/gimpbrush.c	/^gimp_brush_get_size (GimpViewable *viewable,$/;"	f	file:
gimp_brush_get_spacing	core/gimpbrush.c	/^gimp_brush_get_spacing (const GimpBrush *brush)$/;"	f
gimp_brush_get_standard	core/gimpbrush.c	/^gimp_brush_get_standard (void)$/;"	f
gimp_brush_init	core/gimpbrush.c	/^gimp_brush_init (GimpBrush *brush)$/;"	f	file:
gimp_brush_load	core/gimpbrush-load.c	/^gimp_brush_load (const gchar  *filename,$/;"	f
gimp_brush_load_abr	core/gimpbrush-load.c	/^gimp_brush_load_abr (const gchar  *filename,$/;"	f
gimp_brush_load_abr_brush_v12	core/gimpbrush-load.c	/^gimp_brush_load_abr_brush_v12 (FILE         *file,$/;"	f	file:
gimp_brush_load_abr_brush_v6	core/gimpbrush-load.c	/^gimp_brush_load_abr_brush_v6 (FILE         *file,$/;"	f	file:
gimp_brush_load_abr_v12	core/gimpbrush-load.c	/^gimp_brush_load_abr_v12 (FILE         *file,$/;"	f	file:
gimp_brush_load_abr_v6	core/gimpbrush-load.c	/^gimp_brush_load_abr_v6 (FILE         *file,$/;"	f	file:
gimp_brush_load_brush	core/gimpbrush-load.c	/^gimp_brush_load_brush (gint          fd,$/;"	f
gimp_brush_new	core/gimpbrush.c	/^gimp_brush_new (const gchar *name)$/;"	f
gimp_brush_pipe_class_init	core/gimpbrushpipe.c	/^gimp_brush_pipe_class_init (GimpBrushPipeClass *klass)$/;"	f	file:
gimp_brush_pipe_finalize	core/gimpbrushpipe.c	/^gimp_brush_pipe_finalize (GObject *object)$/;"	f	file:
gimp_brush_pipe_get_memsize	core/gimpbrushpipe.c	/^gimp_brush_pipe_get_memsize (GimpObject *object,$/;"	f	file:
gimp_brush_pipe_get_popup_size	core/gimpbrushpipe.c	/^gimp_brush_pipe_get_popup_size (GimpViewable *viewable,$/;"	f	file:
gimp_brush_pipe_init	core/gimpbrushpipe.c	/^gimp_brush_pipe_init (GimpBrushPipe *pipe)$/;"	f	file:
gimp_brush_pipe_load	core/gimpbrushpipe-load.c	/^gimp_brush_pipe_load (const gchar  *filename,$/;"	f
gimp_brush_pipe_select_brush	core/gimpbrushpipe.c	/^gimp_brush_pipe_select_brush (GimpBrush  *brush,$/;"	f	file:
gimp_brush_pipe_want_null_motion	core/gimpbrushpipe.c	/^gimp_brush_pipe_want_null_motion (GimpBrush  *brush,$/;"	f	file:
gimp_brush_real_scale_mask	core/gimpbrush-scale.c	/^gimp_brush_real_scale_mask (GimpBrush *brush,$/;"	f
gimp_brush_real_scale_pixmap	core/gimpbrush-scale.c	/^gimp_brush_real_scale_pixmap (GimpBrush *brush,$/;"	f
gimp_brush_real_scale_size	core/gimpbrush-scale.c	/^gimp_brush_real_scale_size (GimpBrush *brush,$/;"	f
gimp_brush_real_select_brush	core/gimpbrush.c	/^gimp_brush_real_select_brush (GimpBrush  *brush,$/;"	f	file:
gimp_brush_real_want_null_motion	core/gimpbrush.c	/^gimp_brush_real_want_null_motion (GimpBrush  *brush,$/;"	f	file:
gimp_brush_scale_buf_up	core/gimpbrush-scale.c	/^gimp_brush_scale_buf_up (TempBuf *brush_buf,$/;"	f	file:
gimp_brush_scale_mask	core/gimpbrush.c	/^gimp_brush_scale_mask (GimpBrush *brush,$/;"	f
gimp_brush_scale_mask_down	core/gimpbrush-scale.c	/^gimp_brush_scale_mask_down (TempBuf *brush_mask,$/;"	f	file:
gimp_brush_scale_pixmap	core/gimpbrush.c	/^gimp_brush_scale_pixmap (GimpBrush *brush,$/;"	f
gimp_brush_scale_pixmap_down	core/gimpbrush-scale.c	/^gimp_brush_scale_pixmap_down (TempBuf *pixmap,$/;"	f	file:
gimp_brush_scale_size	core/gimpbrush.c	/^gimp_brush_scale_size (GimpBrush     *brush,$/;"	f
gimp_brush_select_brush	core/gimpbrush.c	/^gimp_brush_select_brush (GimpBrush  *brush,$/;"	f
gimp_brush_select_class_init	widgets/gimpbrushselect.c	/^gimp_brush_select_class_init (GimpBrushSelectClass *klass)$/;"	f	file:
gimp_brush_select_constructor	widgets/gimpbrushselect.c	/^gimp_brush_select_constructor (GType                  type,$/;"	f	file:
gimp_brush_select_init	widgets/gimpbrushselect.c	/^gimp_brush_select_init (GimpBrushSelect *select)$/;"	f	file:
gimp_brush_select_mode_changed	widgets/gimpbrushselect.c	/^gimp_brush_select_mode_changed (GimpContext          *context,$/;"	f	file:
gimp_brush_select_mode_update	widgets/gimpbrushselect.c	/^gimp_brush_select_mode_update (GtkWidget       *widget,$/;"	f	file:
gimp_brush_select_opacity_changed	widgets/gimpbrushselect.c	/^gimp_brush_select_opacity_changed (GimpContext     *context,$/;"	f	file:
gimp_brush_select_opacity_update	widgets/gimpbrushselect.c	/^gimp_brush_select_opacity_update (GtkAdjustment   *adjustment,$/;"	f	file:
gimp_brush_select_run_callback	widgets/gimpbrushselect.c	/^gimp_brush_select_run_callback (GimpPdbDialog *dialog,$/;"	f	file:
gimp_brush_select_set_property	widgets/gimpbrushselect.c	/^gimp_brush_select_set_property (GObject      *object,$/;"	f	file:
gimp_brush_select_spacing_update	widgets/gimpbrushselect.c	/^gimp_brush_select_spacing_update (GtkAdjustment   *adjustment,$/;"	f	file:
gimp_brush_set_property	core/gimpbrush.c	/^gimp_brush_set_property (GObject      *object,$/;"	f	file:
gimp_brush_set_spacing	core/gimpbrush.c	/^gimp_brush_set_spacing (GimpBrush *brush,$/;"	f
gimp_brush_spacing_changed	core/gimpbrush.c	/^gimp_brush_spacing_changed (GimpBrush *brush)$/;"	f
gimp_brush_tool_brush_changed	tools/gimpbrushtool.c	/^gimp_brush_tool_brush_changed (GimpContext   *context,$/;"	f	file:
gimp_brush_tool_brush_scaled	tools/gimpbrushtool.c	/^gimp_brush_tool_brush_scaled (GimpPaintOptions *options,$/;"	f	file:
gimp_brush_tool_class_init	tools/gimpbrushtool.c	/^gimp_brush_tool_class_init (GimpBrushToolClass *klass)$/;"	f	file:
gimp_brush_tool_constructor	tools/gimpbrushtool.c	/^gimp_brush_tool_constructor (GType                  type,$/;"	f	file:
gimp_brush_tool_cursor_update	tools/gimpbrushtool.c	/^gimp_brush_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_brush_tool_draw	tools/gimpbrushtool.c	/^gimp_brush_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_brush_tool_draw_brush	tools/gimpbrushtool.c	/^gimp_brush_tool_draw_brush (GimpBrushTool *brush_tool,$/;"	f
gimp_brush_tool_init	tools/gimpbrushtool.c	/^gimp_brush_tool_init (GimpBrushTool *brush_tool)$/;"	f	file:
gimp_brush_tool_motion	tools/gimpbrushtool.c	/^gimp_brush_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_brush_tool_notify_brush	tools/gimpbrushtool.c	/^gimp_brush_tool_notify_brush (GimpDisplayConfig *config,$/;"	f	file:
gimp_brush_tool_oper_update	tools/gimpbrushtool.c	/^gimp_brush_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_brush_tool_set_brush	tools/gimpbrushtool.c	/^gimp_brush_tool_set_brush (GimpBrushCore *brush_core,$/;"	f	file:
gimp_brush_tool_set_brush_after	tools/gimpbrushtool.c	/^gimp_brush_tool_set_brush_after (GimpBrushCore *brush_core,$/;"	f	file:
gimp_brush_want_null_motion	core/gimpbrush.c	/^gimp_brush_want_null_motion (GimpBrush  *brush,$/;"	f
gimp_bucket_fill_options_class_init	tools/gimpbucketfilloptions.c	/^gimp_bucket_fill_options_class_init (GimpBucketFillOptionsClass *klass)$/;"	f	file:
gimp_bucket_fill_options_get_property	tools/gimpbucketfilloptions.c	/^gimp_bucket_fill_options_get_property (GObject    *object,$/;"	f	file:
gimp_bucket_fill_options_gui	tools/gimpbucketfilloptions.c	/^gimp_bucket_fill_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_bucket_fill_options_init	tools/gimpbucketfilloptions.c	/^gimp_bucket_fill_options_init (GimpBucketFillOptions *options)$/;"	f	file:
gimp_bucket_fill_options_notify	tools/gimpbucketfilloptions.c	/^gimp_bucket_fill_options_notify (GimpBucketFillOptions *options,$/;"	f	file:
gimp_bucket_fill_options_reset	tools/gimpbucketfilloptions.c	/^gimp_bucket_fill_options_reset (GimpToolOptions *tool_options)$/;"	f	file:
gimp_bucket_fill_options_set_property	tools/gimpbucketfilloptions.c	/^gimp_bucket_fill_options_set_property (GObject      *object,$/;"	f	file:
gimp_bucket_fill_tool_button_release	tools/gimpbucketfilltool.c	/^gimp_bucket_fill_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_bucket_fill_tool_class_init	tools/gimpbucketfilltool.c	/^gimp_bucket_fill_tool_class_init (GimpBucketFillToolClass *klass)$/;"	f	file:
gimp_bucket_fill_tool_cursor_update	tools/gimpbucketfilltool.c	/^gimp_bucket_fill_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_bucket_fill_tool_init	tools/gimpbucketfilltool.c	/^gimp_bucket_fill_tool_init (GimpBucketFillTool *bucket_fill_tool)$/;"	f	file:
gimp_bucket_fill_tool_modifier_key	tools/gimpbucketfilltool.c	/^gimp_bucket_fill_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_buffer_class_init	core/gimpbuffer.c	/^gimp_buffer_class_init (GimpBufferClass *klass)$/;"	f	file:
gimp_buffer_finalize	core/gimpbuffer.c	/^gimp_buffer_finalize (GObject *object)$/;"	f	file:
gimp_buffer_get_bytes	core/gimpbuffer.c	/^gimp_buffer_get_bytes (const GimpBuffer *buffer)$/;"	f
gimp_buffer_get_description	core/gimpbuffer.c	/^gimp_buffer_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_buffer_get_height	core/gimpbuffer.c	/^gimp_buffer_get_height (const GimpBuffer *buffer)$/;"	f
gimp_buffer_get_image_type	core/gimpbuffer.c	/^gimp_buffer_get_image_type (const GimpBuffer *buffer)$/;"	f
gimp_buffer_get_memsize	core/gimpbuffer.c	/^gimp_buffer_get_memsize (GimpObject *object,$/;"	f	file:
gimp_buffer_get_new_preview	core/gimpbuffer.c	/^gimp_buffer_get_new_preview (GimpViewable *viewable,$/;"	f	file:
gimp_buffer_get_popup_size	core/gimpbuffer.c	/^gimp_buffer_get_popup_size (GimpViewable *viewable,$/;"	f	file:
gimp_buffer_get_preview_size	core/gimpbuffer.c	/^gimp_buffer_get_preview_size (GimpViewable *viewable,$/;"	f	file:
gimp_buffer_get_size	core/gimpbuffer.c	/^gimp_buffer_get_size (GimpViewable *viewable,$/;"	f	file:
gimp_buffer_get_width	core/gimpbuffer.c	/^gimp_buffer_get_width (const GimpBuffer *buffer)$/;"	f
gimp_buffer_init	core/gimpbuffer.c	/^gimp_buffer_init (GimpBuffer *buffer)$/;"	f	file:
gimp_buffer_new	core/gimpbuffer.c	/^gimp_buffer_new (TileManager *tiles,$/;"	f
gimp_buffer_new_from_pixbuf	core/gimpbuffer.c	/^gimp_buffer_new_from_pixbuf (GdkPixbuf   *pixbuf,$/;"	f
gimp_buffer_view_activate_item	widgets/gimpbufferview.c	/^gimp_buffer_view_activate_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_buffer_view_buffer_changed	widgets/gimpbufferview.c	/^gimp_buffer_view_buffer_changed (Gimp           *gimp,$/;"	f	file:
gimp_buffer_view_class_init	widgets/gimpbufferview.c	/^gimp_buffer_view_class_init (GimpBufferViewClass *klass)$/;"	f	file:
gimp_buffer_view_docked_iface_init	widgets/gimpbufferview.c	/^gimp_buffer_view_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_buffer_view_init	widgets/gimpbufferview.c	/^gimp_buffer_view_init (GimpBufferView *view)$/;"	f	file:
gimp_buffer_view_new	widgets/gimpbufferview.c	/^gimp_buffer_view_new (GimpViewType     view_type,$/;"	f
gimp_buffer_view_set_context	widgets/gimpbufferview.c	/^gimp_buffer_view_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_buffer_view_view_notify	widgets/gimpbufferview.c	/^gimp_buffer_view_view_notify (GimpContainerView *container_view,$/;"	f	file:
gimp_button_menu_position	widgets/gimpwidgets-utils.c	/^gimp_button_menu_position (GtkWidget       *button,$/;"	f
gimp_button_release_type_get_type	tools/tools-enums.c	/^gimp_button_release_type_get_type (void)$/;"	f
gimp_by_color_select_tool_class_init	tools/gimpbycolorselecttool.c	/^gimp_by_color_select_tool_class_init (GimpByColorSelectToolClass *klass)$/;"	f	file:
gimp_by_color_select_tool_get_mask	tools/gimpbycolorselecttool.c	/^gimp_by_color_select_tool_get_mask (GimpRegionSelectTool *region_select,$/;"	f	file:
gimp_by_color_select_tool_init	tools/gimpbycolorselecttool.c	/^gimp_by_color_select_tool_init (GimpByColorSelectTool *by_color_select)$/;"	f	file:
gimp_canvas_class_init	display/gimpcanvas.c	/^gimp_canvas_class_init (GimpCanvasClass *klass)$/;"	f	file:
gimp_canvas_draw_arc	display/gimpcanvas.c	/^gimp_canvas_draw_arc (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_cursor	display/gimpcanvas.c	/^gimp_canvas_draw_cursor (GimpCanvas *canvas,$/;"	f
gimp_canvas_draw_line	display/gimpcanvas.c	/^gimp_canvas_draw_line (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_lines	display/gimpcanvas.c	/^gimp_canvas_draw_lines (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_point	display/gimpcanvas.c	/^gimp_canvas_draw_point (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_points	display/gimpcanvas.c	/^gimp_canvas_draw_points (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_polygon	display/gimpcanvas.c	/^gimp_canvas_draw_polygon (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_rectangle	display/gimpcanvas.c	/^gimp_canvas_draw_rectangle (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_rgb	display/gimpcanvas.c	/^gimp_canvas_draw_rgb (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_segments	display/gimpcanvas.c	/^gimp_canvas_draw_segments (GimpCanvas      *canvas,$/;"	f
gimp_canvas_draw_text	display/gimpcanvas.c	/^gimp_canvas_draw_text (GimpCanvas      *canvas,$/;"	f
gimp_canvas_ensure_style	display/gimpcanvas.c	/^gimp_canvas_ensure_style (GimpCanvas      *canvas,$/;"	f	file:
gimp_canvas_gc_new	display/gimpcanvas.c	/^gimp_canvas_gc_new (GimpCanvas      *canvas,$/;"	f	file:
gimp_canvas_get_property	display/gimpcanvas.c	/^gimp_canvas_get_property (GObject    *object,$/;"	f	file:
gimp_canvas_init	display/gimpcanvas.c	/^gimp_canvas_init (GimpCanvas *canvas)$/;"	f	file:
gimp_canvas_new	display/gimpcanvas.c	/^gimp_canvas_new (Gimp *gimp)$/;"	f
gimp_canvas_padding_mode_get_type	display/display-enums.c	/^gimp_canvas_padding_mode_get_type (void)$/;"	f
gimp_canvas_realize	display/gimpcanvas.c	/^gimp_canvas_realize (GtkWidget *widget)$/;"	f	file:
gimp_canvas_set_bg_color	display/gimpcanvas.c	/^gimp_canvas_set_bg_color (GimpCanvas *canvas,$/;"	f
gimp_canvas_set_clip_rect	display/gimpcanvas.c	/^gimp_canvas_set_clip_rect (GimpCanvas      *canvas,$/;"	f
gimp_canvas_set_clip_region	display/gimpcanvas.c	/^gimp_canvas_set_clip_region (GimpCanvas      *canvas,$/;"	f
gimp_canvas_set_custom_gc	display/gimpcanvas.c	/^gimp_canvas_set_custom_gc (GimpCanvas *canvas,$/;"	f
gimp_canvas_set_property	display/gimpcanvas.c	/^gimp_canvas_set_property (GObject      *object,$/;"	f	file:
gimp_canvas_set_stipple_index	display/gimpcanvas.c	/^gimp_canvas_set_stipple_index (GimpCanvas      *canvas,$/;"	f
gimp_canvas_unrealize	display/gimpcanvas.c	/^gimp_canvas_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_cap_style_get_type	core/core-enums.c	/^gimp_cap_style_get_type (void)$/;"	f
gimp_cell_renderer_dashes_class_init	widgets/gimpcellrendererdashes.c	/^gimp_cell_renderer_dashes_class_init (GimpCellRendererDashesClass *klass)$/;"	f	file:
gimp_cell_renderer_dashes_finalize	widgets/gimpcellrendererdashes.c	/^gimp_cell_renderer_dashes_finalize (GObject *object)$/;"	f	file:
gimp_cell_renderer_dashes_get_property	widgets/gimpcellrendererdashes.c	/^gimp_cell_renderer_dashes_get_property (GObject    *object,$/;"	f	file:
gimp_cell_renderer_dashes_get_size	widgets/gimpcellrendererdashes.c	/^gimp_cell_renderer_dashes_get_size (GtkCellRenderer *cell,$/;"	f	file:
gimp_cell_renderer_dashes_init	widgets/gimpcellrendererdashes.c	/^gimp_cell_renderer_dashes_init (GimpCellRendererDashes *dashes)$/;"	f	file:
gimp_cell_renderer_dashes_new	widgets/gimpcellrendererdashes.c	/^gimp_cell_renderer_dashes_new (void)$/;"	f
gimp_cell_renderer_dashes_render	widgets/gimpcellrendererdashes.c	/^gimp_cell_renderer_dashes_render (GtkCellRenderer      *cell,$/;"	f	file:
gimp_cell_renderer_dashes_set_property	widgets/gimpcellrendererdashes.c	/^gimp_cell_renderer_dashes_set_property (GObject      *object,$/;"	f	file:
gimp_cell_renderer_viewable_activate	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_activate (GtkCellRenderer      *cell,$/;"	f	file:
gimp_cell_renderer_viewable_class_init	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_class_init (GimpCellRendererViewableClass *klass)$/;"	f	file:
gimp_cell_renderer_viewable_clicked	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_clicked (GimpCellRendererViewable *cell,$/;"	f
gimp_cell_renderer_viewable_finalize	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_finalize (GObject *object)$/;"	f	file:
gimp_cell_renderer_viewable_get_property	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_get_property (GObject    *object,$/;"	f	file:
gimp_cell_renderer_viewable_get_size	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_get_size (GtkCellRenderer *cell,$/;"	f	file:
gimp_cell_renderer_viewable_init	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_init (GimpCellRendererViewable *cellviewable)$/;"	f	file:
gimp_cell_renderer_viewable_new	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_new (void)$/;"	f
gimp_cell_renderer_viewable_render	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_render (GtkCellRenderer      *cell,$/;"	f	file:
gimp_cell_renderer_viewable_set_property	widgets/gimpcellrendererviewable.c	/^gimp_cell_renderer_viewable_set_property (GObject      *object,$/;"	f	file:
gimp_channel_add_segment	core/gimpchannel-combine.c	/^gimp_channel_add_segment (GimpChannel *mask,$/;"	f
gimp_channel_all	core/gimpchannel.c	/^gimp_channel_all (GimpChannel *channel,$/;"	f
gimp_channel_apply_region	core/gimpchannel.c	/^gimp_channel_apply_region (GimpDrawable         *drawable,$/;"	f	file:
gimp_channel_border	core/gimpchannel.c	/^gimp_channel_border (GimpChannel *channel,$/;"	f
gimp_channel_boundary	core/gimpchannel.c	/^gimp_channel_boundary (GimpChannel     *channel,$/;"	f
gimp_channel_bounds	core/gimpchannel.c	/^gimp_channel_bounds (GimpChannel *channel,$/;"	f
gimp_channel_class_init	core/gimpchannel.c	/^gimp_channel_class_init (GimpChannelClass *klass)$/;"	f	file:
gimp_channel_clear	core/gimpchannel.c	/^gimp_channel_clear (GimpChannel *channel,$/;"	f
gimp_channel_combine_ellipse	core/gimpchannel-combine.c	/^gimp_channel_combine_ellipse (GimpChannel    *mask,$/;"	f
gimp_channel_combine_ellipse_rect	core/gimpchannel-combine.c	/^gimp_channel_combine_ellipse_rect (GimpChannel    *mask,$/;"	f
gimp_channel_combine_mask	core/gimpchannel-combine.c	/^gimp_channel_combine_mask (GimpChannel    *mask,$/;"	f
gimp_channel_combine_rect	core/gimpchannel-combine.c	/^gimp_channel_combine_rect (GimpChannel    *mask,$/;"	f
gimp_channel_combine_segment	core/gimpchannel-combine.c	/^gimp_channel_combine_segment (GimpChannel    *mask,$/;"	f	file:
gimp_channel_combine_sub_region_add	core/gimpchannel-combine.c	/^gimp_channel_combine_sub_region_add (gpointer     unused,$/;"	f	file:
gimp_channel_combine_sub_region_intersect	core/gimpchannel-combine.c	/^gimp_channel_combine_sub_region_intersect (gpointer     unused,$/;"	f	file:
gimp_channel_combine_sub_region_sub	core/gimpchannel-combine.c	/^gimp_channel_combine_sub_region_sub (gpointer     unused,$/;"	f	file:
gimp_channel_convert	core/gimpchannel.c	/^gimp_channel_convert (GimpItem  *item,$/;"	f	file:
gimp_channel_duplicate	core/gimpchannel.c	/^gimp_channel_duplicate (GimpItem *item,$/;"	f	file:
gimp_channel_feather	core/gimpchannel.c	/^gimp_channel_feather (GimpChannel *channel,$/;"	f
gimp_channel_finalize	core/gimpchannel.c	/^gimp_channel_finalize (GObject *object)$/;"	f	file:
gimp_channel_flip	core/gimpchannel.c	/^gimp_channel_flip (GimpItem            *item,$/;"	f	file:
gimp_channel_get_active_components	core/gimpchannel.c	/^gimp_channel_get_active_components (const GimpDrawable *drawable,$/;"	f	file:
gimp_channel_get_color	core/gimpchannel.c	/^gimp_channel_get_color (const GimpChannel *channel,$/;"	f
gimp_channel_get_description	core/gimpchannel.c	/^gimp_channel_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_channel_get_memsize	core/gimpchannel.c	/^gimp_channel_get_memsize (GimpObject *object,$/;"	f	file:
gimp_channel_get_opacity	core/gimpchannel.c	/^gimp_channel_get_opacity (const GimpChannel *channel)$/;"	f
gimp_channel_get_opacity_at	core/gimpchannel.c	/^gimp_channel_get_opacity_at (GimpPickable *pickable,$/;"	f	file:
gimp_channel_get_show_masked	core/gimpchannel.c	/^gimp_channel_get_show_masked (GimpChannel *channel)$/;"	f
gimp_channel_grow	core/gimpchannel.c	/^gimp_channel_grow (GimpChannel *channel,$/;"	f
gimp_channel_id_get_type	core/gimpparamspecs.c	/^gimp_channel_id_get_type (void)$/;"	f
gimp_channel_init	core/gimpchannel.c	/^gimp_channel_init (GimpChannel *channel)$/;"	f	file:
gimp_channel_invalidate_boundary	core/gimpchannel.c	/^gimp_channel_invalidate_boundary (GimpDrawable *drawable)$/;"	f	file:
gimp_channel_invert	core/gimpchannel.c	/^gimp_channel_invert (GimpChannel *channel,$/;"	f
gimp_channel_is_attached	core/gimpchannel.c	/^gimp_channel_is_attached (GimpItem *item)$/;"	f	file:
gimp_channel_is_empty	core/gimpchannel.c	/^gimp_channel_is_empty (GimpChannel *channel)$/;"	f
gimp_channel_new	core/gimpchannel.c	/^gimp_channel_new (GimpImage     *image,$/;"	f
gimp_channel_new_from_alpha	core/gimpchannel.c	/^gimp_channel_new_from_alpha (GimpImage     *image,$/;"	f
gimp_channel_new_from_component	core/gimpchannel.c	/^gimp_channel_new_from_component (GimpImage       *image,$/;"	f
gimp_channel_new_mask	core/gimpchannel.c	/^gimp_channel_new_mask (GimpImage *image,$/;"	f
gimp_channel_pickable_iface_init	core/gimpchannel.c	/^gimp_channel_pickable_iface_init (GimpPickableInterface *iface)$/;"	f	file:
gimp_channel_prop_undo_class_init	core/gimpchannelpropundo.c	/^gimp_channel_prop_undo_class_init (GimpChannelPropUndoClass *klass)$/;"	f	file:
gimp_channel_prop_undo_constructor	core/gimpchannelpropundo.c	/^gimp_channel_prop_undo_constructor (GType                  type,$/;"	f	file:
gimp_channel_prop_undo_init	core/gimpchannelpropundo.c	/^gimp_channel_prop_undo_init (GimpChannelPropUndo *undo)$/;"	f	file:
gimp_channel_prop_undo_pop	core/gimpchannelpropundo.c	/^gimp_channel_prop_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_channel_push_undo	core/gimpchannel.c	/^gimp_channel_push_undo (GimpChannel *channel,$/;"	f
gimp_channel_real_all	core/gimpchannel.c	/^gimp_channel_real_all (GimpChannel *channel,$/;"	f	file:
gimp_channel_real_border	core/gimpchannel.c	/^gimp_channel_real_border (GimpChannel *channel,$/;"	f	file:
gimp_channel_real_boundary	core/gimpchannel.c	/^gimp_channel_real_boundary (GimpChannel     *channel,$/;"	f	file:
gimp_channel_real_bounds	core/gimpchannel.c	/^gimp_channel_real_bounds (GimpChannel *channel,$/;"	f	file:
gimp_channel_real_clear	core/gimpchannel.c	/^gimp_channel_real_clear (GimpChannel *channel,$/;"	f	file:
gimp_channel_real_feather	core/gimpchannel.c	/^gimp_channel_real_feather (GimpChannel *channel,$/;"	f	file:
gimp_channel_real_grow	core/gimpchannel.c	/^gimp_channel_real_grow (GimpChannel *channel,$/;"	f	file:
gimp_channel_real_invert	core/gimpchannel.c	/^gimp_channel_real_invert (GimpChannel *channel,$/;"	f	file:
gimp_channel_real_is_empty	core/gimpchannel.c	/^gimp_channel_real_is_empty (GimpChannel *channel)$/;"	f	file:
gimp_channel_real_sharpen	core/gimpchannel.c	/^gimp_channel_real_sharpen (GimpChannel *channel,$/;"	f	file:
gimp_channel_real_shrink	core/gimpchannel.c	/^gimp_channel_real_shrink (GimpChannel *channel,$/;"	f	file:
gimp_channel_replace_region	core/gimpchannel.c	/^gimp_channel_replace_region (GimpDrawable *drawable,$/;"	f	file:
gimp_channel_resize	core/gimpchannel.c	/^gimp_channel_resize (GimpItem    *item,$/;"	f	file:
gimp_channel_rotate	core/gimpchannel.c	/^gimp_channel_rotate (GimpItem         *item,$/;"	f	file:
gimp_channel_scale	core/gimpchannel.c	/^gimp_channel_scale (GimpItem              *item,$/;"	f	file:
gimp_channel_select_alpha	core/gimpchannel-select.c	/^gimp_channel_select_alpha (GimpChannel    *channel,$/;"	f
gimp_channel_select_by_color	core/gimpchannel-select.c	/^gimp_channel_select_by_color (GimpChannel         *channel,$/;"	f
gimp_channel_select_channel	core/gimpchannel-select.c	/^gimp_channel_select_channel (GimpChannel    *channel,$/;"	f
gimp_channel_select_component	core/gimpchannel-select.c	/^gimp_channel_select_component (GimpChannel     *channel,$/;"	f
gimp_channel_select_ellipse	core/gimpchannel-select.c	/^gimp_channel_select_ellipse (GimpChannel    *channel,$/;"	f
gimp_channel_select_fuzzy	core/gimpchannel-select.c	/^gimp_channel_select_fuzzy (GimpChannel         *channel,$/;"	f
gimp_channel_select_polygon	core/gimpchannel-select.c	/^gimp_channel_select_polygon (GimpChannel    *channel,$/;"	f
gimp_channel_select_rectangle	core/gimpchannel-select.c	/^gimp_channel_select_rectangle (GimpChannel    *channel,$/;"	f
gimp_channel_select_round_rect	core/gimpchannel-select.c	/^gimp_channel_select_round_rect (GimpChannel         *channel,$/;"	f
gimp_channel_select_scan_convert	core/gimpchannel-select.c	/^gimp_channel_select_scan_convert (GimpChannel     *channel,$/;"	f
gimp_channel_select_vectors	core/gimpchannel-select.c	/^gimp_channel_select_vectors (GimpChannel    *channel,$/;"	f
gimp_channel_set_color	core/gimpchannel.c	/^gimp_channel_set_color (GimpChannel   *channel,$/;"	f
gimp_channel_set_opacity	core/gimpchannel.c	/^gimp_channel_set_opacity (GimpChannel *channel,$/;"	f
gimp_channel_set_show_masked	core/gimpchannel.c	/^gimp_channel_set_show_masked (GimpChannel *channel,$/;"	f
gimp_channel_set_tiles	core/gimpchannel.c	/^gimp_channel_set_tiles (GimpDrawable *drawable,$/;"	f	file:
gimp_channel_sharpen	core/gimpchannel.c	/^gimp_channel_sharpen (GimpChannel *channel,$/;"	f
gimp_channel_shrink	core/gimpchannel.c	/^gimp_channel_shrink (GimpChannel  *channel,$/;"	f
gimp_channel_stroke	core/gimpchannel.c	/^gimp_channel_stroke (GimpItem       *item,$/;"	f	file:
gimp_channel_sub_segment	core/gimpchannel-combine.c	/^gimp_channel_sub_segment (GimpChannel *mask,$/;"	f
gimp_channel_swap_pixels	core/gimpchannel.c	/^gimp_channel_swap_pixels (GimpDrawable *drawable,$/;"	f	file:
gimp_channel_transform	core/gimpchannel.c	/^gimp_channel_transform (GimpItem               *item,$/;"	f	file:
gimp_channel_translate	core/gimpchannel.c	/^gimp_channel_translate (GimpItem *item,$/;"	f	file:
gimp_channel_tree_view_class_init	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_class_init (GimpChannelTreeViewClass *klass)$/;"	f	file:
gimp_channel_tree_view_constructor	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_constructor (GType                  type,$/;"	f	file:
gimp_channel_tree_view_drop_component	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_drop_component (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_channel_tree_view_drop_viewable	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_drop_viewable (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_channel_tree_view_init	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_init (GimpChannelTreeView *view)$/;"	f	file:
gimp_channel_tree_view_item_new	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_item_new (GimpImage *image)$/;"	f	file:
gimp_channel_tree_view_set_context	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_set_context (GimpContainerView *view,$/;"	f	file:
gimp_channel_tree_view_set_image	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_set_image (GimpItemTreeView *item_view,$/;"	f	file:
gimp_channel_tree_view_set_view_size	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_set_view_size (GimpContainerView *view)$/;"	f	file:
gimp_channel_tree_view_view_iface_init	widgets/gimpchanneltreeview.c	/^gimp_channel_tree_view_view_iface_init (GimpContainerViewInterface *view_iface)$/;"	f	file:
gimp_channel_undo_class_init	core/gimpchannelundo.c	/^gimp_channel_undo_class_init (GimpChannelUndoClass *klass)$/;"	f	file:
gimp_channel_undo_constructor	core/gimpchannelundo.c	/^gimp_channel_undo_constructor (GType                  type,$/;"	f	file:
gimp_channel_undo_get_memsize	core/gimpchannelundo.c	/^gimp_channel_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_channel_undo_get_property	core/gimpchannelundo.c	/^gimp_channel_undo_get_property (GObject    *object,$/;"	f	file:
gimp_channel_undo_init	core/gimpchannelundo.c	/^gimp_channel_undo_init (GimpChannelUndo *undo)$/;"	f	file:
gimp_channel_undo_pop	core/gimpchannelundo.c	/^gimp_channel_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_channel_undo_set_property	core/gimpchannelundo.c	/^gimp_channel_undo_set_property (GObject      *object,$/;"	f	file:
gimp_channel_validate_tile	core/gimpchannel.c	/^gimp_channel_validate_tile (TileManager *tm,$/;"	f	file:
gimp_class_init	core/gimp.c	/^gimp_class_init (GimpClass *klass)$/;"	f	file:
gimp_clipboard_clear	widgets/gimpclipboard.c	/^gimp_clipboard_clear (GimpClipboard *gimp_clip)$/;"	f	file:
gimp_clipboard_exit	widgets/gimpclipboard.c	/^gimp_clipboard_exit (Gimp *gimp)$/;"	f
gimp_clipboard_free	widgets/gimpclipboard.c	/^gimp_clipboard_free (GimpClipboard *gimp_clip)$/;"	f	file:
gimp_clipboard_get	widgets/gimpclipboard.c	/^gimp_clipboard_get (Gimp *gimp)$/;"	f	file:
gimp_clipboard_get_buffer	widgets/gimpclipboard.c	/^gimp_clipboard_get_buffer (Gimp *gimp)$/;"	f
gimp_clipboard_get_svg	widgets/gimpclipboard.c	/^gimp_clipboard_get_svg (Gimp  *gimp,$/;"	f
gimp_clipboard_has_buffer	widgets/gimpclipboard.c	/^gimp_clipboard_has_buffer (Gimp *gimp)$/;"	f
gimp_clipboard_has_svg	widgets/gimpclipboard.c	/^gimp_clipboard_has_svg (Gimp *gimp)$/;"	f
gimp_clipboard_init	widgets/gimpclipboard.c	/^gimp_clipboard_init (Gimp *gimp)$/;"	f
gimp_clipboard_send_buffer	widgets/gimpclipboard.c	/^gimp_clipboard_send_buffer (GtkClipboard     *clipboard,$/;"	f	file:
gimp_clipboard_send_svg	widgets/gimpclipboard.c	/^gimp_clipboard_send_svg (GtkClipboard     *clipboard,$/;"	f	file:
gimp_clipboard_set_buffer	widgets/gimpclipboard.c	/^gimp_clipboard_set_buffer (Gimp       *gimp,$/;"	f
gimp_clipboard_set_svg	widgets/gimpclipboard.c	/^gimp_clipboard_set_svg (Gimp        *gimp,$/;"	f
gimp_clipboard_set_text	widgets/gimpclipboard.c	/^gimp_clipboard_set_text (Gimp        *gimp,$/;"	f
gimp_clipboard_wait_for_buffer	widgets/gimpclipboard.c	/^gimp_clipboard_wait_for_buffer (Gimp *gimp)$/;"	f	file:
gimp_clipboard_wait_for_svg	widgets/gimpclipboard.c	/^gimp_clipboard_wait_for_svg (Gimp *gimp)$/;"	f	file:
gimp_clipboard_wait_for_targets	widgets/gimpclipboard.c	/^gimp_clipboard_wait_for_targets (Gimp *gimp,$/;"	f	file:
gimp_clone_class_init	paint/gimpclone.c	/^gimp_clone_class_init (GimpCloneClass *klass)$/;"	f	file:
gimp_clone_init	paint/gimpclone.c	/^gimp_clone_init (GimpClone *clone)$/;"	f	file:
gimp_clone_line_image	paint/gimpclone.c	/^gimp_clone_line_image (GimpImage     *dest_image,$/;"	f	file:
gimp_clone_line_pattern	paint/gimpclone.c	/^gimp_clone_line_pattern (GimpImage     *dest_image,$/;"	f	file:
gimp_clone_motion	paint/gimpclone.c	/^gimp_clone_motion (GimpSourceCore   *source_core,$/;"	f	file:
gimp_clone_options_class_init	paint/gimpcloneoptions.c	/^gimp_clone_options_class_init (GimpCloneOptionsClass *klass)$/;"	f	file:
gimp_clone_options_get_property	paint/gimpcloneoptions.c	/^gimp_clone_options_get_property (GObject    *object,$/;"	f	file:
gimp_clone_options_gui	tools/gimpclonetool.c	/^gimp_clone_options_gui (GimpToolOptions *tool_options)$/;"	f	file:
gimp_clone_options_init	paint/gimpcloneoptions.c	/^gimp_clone_options_init (GimpCloneOptions *options)$/;"	f	file:
gimp_clone_options_notify	paint/gimpcloneoptions.c	/^gimp_clone_options_notify (GObject    *object,$/;"	f	file:
gimp_clone_options_set_property	paint/gimpcloneoptions.c	/^gimp_clone_options_set_property (GObject      *object,$/;"	f	file:
gimp_clone_start	paint/gimpclone.c	/^gimp_clone_start (GimpPaintCore     *paint_core,$/;"	f	file:
gimp_clone_tool_class_init	tools/gimpclonetool.c	/^gimp_clone_tool_class_init (GimpCloneToolClass *klass)$/;"	f	file:
gimp_clone_tool_init	tools/gimpclonetool.c	/^gimp_clone_tool_init (GimpCloneTool *clone)$/;"	f	file:
gimp_color_balance_tool_class_init	tools/gimpcolorbalancetool.c	/^gimp_color_balance_tool_class_init (GimpColorBalanceToolClass *klass)$/;"	f	file:
gimp_color_balance_tool_dialog	tools/gimpcolorbalancetool.c	/^gimp_color_balance_tool_dialog (GimpImageMapTool *im_tool)$/;"	f	file:
gimp_color_balance_tool_finalize	tools/gimpcolorbalancetool.c	/^gimp_color_balance_tool_finalize (GObject *object)$/;"	f	file:
gimp_color_balance_tool_init	tools/gimpcolorbalancetool.c	/^gimp_color_balance_tool_init (GimpColorBalanceTool *cb_tool)$/;"	f	file:
gimp_color_balance_tool_initialize	tools/gimpcolorbalancetool.c	/^gimp_color_balance_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_color_balance_tool_map	tools/gimpcolorbalancetool.c	/^gimp_color_balance_tool_map (GimpImageMapTool *im_tool)$/;"	f	file:
gimp_color_balance_tool_reset	tools/gimpcolorbalancetool.c	/^gimp_color_balance_tool_reset (GimpImageMapTool *im_tool)$/;"	f	file:
gimp_color_bar_class_init	widgets/gimpcolorbar.c	/^gimp_color_bar_class_init (GimpColorBarClass *klass)$/;"	f	file:
gimp_color_bar_expose	widgets/gimpcolorbar.c	/^gimp_color_bar_expose (GtkWidget      *widget,$/;"	f	file:
gimp_color_bar_init	widgets/gimpcolorbar.c	/^gimp_color_bar_init (GimpColorBar *bar)$/;"	f	file:
gimp_color_bar_new	widgets/gimpcolorbar.c	/^gimp_color_bar_new (GtkOrientation  orientation)$/;"	f
gimp_color_bar_set_buffers	widgets/gimpcolorbar.c	/^gimp_color_bar_set_buffers (GimpColorBar *bar,$/;"	f
gimp_color_bar_set_channel	widgets/gimpcolorbar.c	/^gimp_color_bar_set_channel (GimpColorBar         *bar,$/;"	f
gimp_color_bar_set_color	widgets/gimpcolorbar.c	/^gimp_color_bar_set_color (GimpColorBar  *bar,$/;"	f
gimp_color_bar_set_property	widgets/gimpcolorbar.c	/^gimp_color_bar_set_property (GObject      *object,$/;"	f	file:
gimp_color_dialog_class_init	widgets/gimpcolordialog.c	/^gimp_color_dialog_class_init (GimpColorDialogClass *klass)$/;"	f	file:
gimp_color_dialog_color_changed	widgets/gimpcolordialog.c	/^gimp_color_dialog_color_changed (GimpColorSelection *selection,$/;"	f	file:
gimp_color_dialog_dispose	widgets/gimpcolordialog.c	/^gimp_color_dialog_dispose (GObject *object)$/;"	f	file:
gimp_color_dialog_get_color	widgets/gimpcolordialog.c	/^gimp_color_dialog_get_color (GimpColorDialog *dialog,$/;"	f
gimp_color_dialog_help_func	widgets/gimpcolordialog.c	/^gimp_color_dialog_help_func (const gchar *help_id,$/;"	f	file:
gimp_color_dialog_init	widgets/gimpcolordialog.c	/^gimp_color_dialog_init (GimpColorDialog *dialog)$/;"	f	file:
gimp_color_dialog_new	widgets/gimpcolordialog.c	/^gimp_color_dialog_new (GimpViewable      *viewable,$/;"	f
gimp_color_dialog_response	widgets/gimpcolordialog.c	/^gimp_color_dialog_response (GtkDialog *gtk_dialog,$/;"	f	file:
gimp_color_dialog_set_color	widgets/gimpcolordialog.c	/^gimp_color_dialog_set_color (GimpColorDialog *dialog,$/;"	f
gimp_color_dialog_state_get_type	widgets/widgets-enums.c	/^gimp_color_dialog_state_get_type (void)$/;"	f
gimp_color_display_editor_add_clicked	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_add_clicked (GtkWidget              *widget,$/;"	f	file:
gimp_color_display_editor_added	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_added (GimpColorDisplayStack  *stack,$/;"	f	file:
gimp_color_display_editor_class_init	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_class_init (GimpColorDisplayEditorClass *klass)$/;"	f	file:
gimp_color_display_editor_dest_changed	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_dest_changed (GtkTreeSelection       *sel,$/;"	f	file:
gimp_color_display_editor_destroy	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_color_display_editor_down_clicked	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_down_clicked (GtkWidget             *widget,$/;"	f	file:
gimp_color_display_editor_enable_toggled	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_enable_toggled (GtkCellRendererToggle  *toggle,$/;"	f	file:
gimp_color_display_editor_enabled	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_enabled (GimpColorDisplay       *display,$/;"	f	file:
gimp_color_display_editor_init	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_init (GimpColorDisplayEditor *editor)$/;"	f	file:
gimp_color_display_editor_new	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_new (GimpColorDisplayStack *stack)$/;"	f
gimp_color_display_editor_remove_clicked	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_remove_clicked (GtkWidget             *widget,$/;"	f	file:
gimp_color_display_editor_removed	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_removed (GimpColorDisplayStack  *stack,$/;"	f	file:
gimp_color_display_editor_reordered	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_reordered (GimpColorDisplayStack  *stack,$/;"	f	file:
gimp_color_display_editor_reset_clicked	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_reset_clicked (GtkWidget             *widget,$/;"	f	file:
gimp_color_display_editor_src_changed	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_src_changed (GtkTreeSelection       *sel,$/;"	f	file:
gimp_color_display_editor_up_clicked	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_up_clicked (GtkWidget             *widget,$/;"	f	file:
gimp_color_display_editor_update_buttons	widgets/gimpcolordisplayeditor.c	/^gimp_color_display_editor_update_buttons (GimpColorDisplayEditor *editor)$/;"	f	file:
gimp_color_editor_bg_changed	widgets/gimpcoloreditor.c	/^gimp_color_editor_bg_changed (GimpContext     *context,$/;"	f	file:
gimp_color_editor_class_init	widgets/gimpcoloreditor.c	/^gimp_color_editor_class_init (GimpColorEditorClass* klass)$/;"	f	file:
gimp_color_editor_color_changed	widgets/gimpcoloreditor.c	/^gimp_color_editor_color_changed (GimpColorSelector *selector,$/;"	f	file:
gimp_color_editor_color_picked	widgets/gimpcoloreditor.c	/^gimp_color_editor_color_picked (GtkWidget       *widget,$/;"	f	file:
gimp_color_editor_destroy	widgets/gimpcoloreditor.c	/^gimp_color_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_color_editor_docked_iface_init	widgets/gimpcoloreditor.c	/^gimp_color_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_color_editor_entry_changed	widgets/gimpcoloreditor.c	/^gimp_color_editor_entry_changed (GimpColorHexEntry *entry,$/;"	f	file:
gimp_color_editor_fg_bg_notify	widgets/gimpcoloreditor.c	/^gimp_color_editor_fg_bg_notify (GtkWidget       *widget,$/;"	f	file:
gimp_color_editor_fg_changed	widgets/gimpcoloreditor.c	/^gimp_color_editor_fg_changed (GimpContext     *context,$/;"	f	file:
gimp_color_editor_get_aux_info	widgets/gimpcoloreditor.c	/^gimp_color_editor_get_aux_info (GimpDocked *docked)$/;"	f	file:
gimp_color_editor_get_preview	widgets/gimpcoloreditor.c	/^gimp_color_editor_get_preview (GimpDocked  *docked,$/;"	f	file:
gimp_color_editor_get_property	widgets/gimpcoloreditor.c	/^gimp_color_editor_get_property (GObject    *object,$/;"	f	file:
gimp_color_editor_init	widgets/gimpcoloreditor.c	/^gimp_color_editor_init (GimpColorEditor *editor)$/;"	f	file:
gimp_color_editor_new	widgets/gimpcoloreditor.c	/^gimp_color_editor_new (GimpContext *context)$/;"	f
gimp_color_editor_set_aux_info	widgets/gimpcoloreditor.c	/^gimp_color_editor_set_aux_info (GimpDocked *docked,$/;"	f	file:
gimp_color_editor_set_color	widgets/gimpcoloreditor.c	/^gimp_color_editor_set_color (GimpColorEditor *editor,$/;"	f	file:
gimp_color_editor_set_context	widgets/gimpcoloreditor.c	/^gimp_color_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_color_editor_set_property	widgets/gimpcoloreditor.c	/^gimp_color_editor_set_property (GObject      *object,$/;"	f	file:
gimp_color_editor_style_set	widgets/gimpcoloreditor.c	/^gimp_color_editor_style_set (GtkWidget *widget,$/;"	f	file:
gimp_color_editor_tab_toggled	widgets/gimpcoloreditor.c	/^gimp_color_editor_tab_toggled (GtkWidget       *widget,$/;"	f	file:
gimp_color_frame_class_init	widgets/gimpcolorframe.c	/^gimp_color_frame_class_init (GimpColorFrameClass *klass)$/;"	f	file:
gimp_color_frame_get_property	widgets/gimpcolorframe.c	/^gimp_color_frame_get_property (GObject    *object,$/;"	f	file:
gimp_color_frame_init	widgets/gimpcolorframe.c	/^gimp_color_frame_init (GimpColorFrame *frame)$/;"	f	file:
gimp_color_frame_menu_callback	widgets/gimpcolorframe.c	/^gimp_color_frame_menu_callback (GtkWidget      *widget,$/;"	f	file:
gimp_color_frame_mode_get_type	widgets/widgets-enums.c	/^gimp_color_frame_mode_get_type (void)$/;"	f
gimp_color_frame_new	widgets/gimpcolorframe.c	/^gimp_color_frame_new (void)$/;"	f
gimp_color_frame_set_color	widgets/gimpcolorframe.c	/^gimp_color_frame_set_color (GimpColorFrame *frame,$/;"	f
gimp_color_frame_set_has_color_area	widgets/gimpcolorframe.c	/^gimp_color_frame_set_has_color_area (GimpColorFrame *frame,$/;"	f
gimp_color_frame_set_has_number	widgets/gimpcolorframe.c	/^gimp_color_frame_set_has_number (GimpColorFrame *frame,$/;"	f
gimp_color_frame_set_invalid	widgets/gimpcolorframe.c	/^gimp_color_frame_set_invalid (GimpColorFrame *frame)$/;"	f
gimp_color_frame_set_mode	widgets/gimpcolorframe.c	/^gimp_color_frame_set_mode (GimpColorFrame     *frame,$/;"	f
gimp_color_frame_set_number	widgets/gimpcolorframe.c	/^gimp_color_frame_set_number (GimpColorFrame *frame,$/;"	f
gimp_color_frame_set_property	widgets/gimpcolorframe.c	/^gimp_color_frame_set_property (GObject      *object,$/;"	f	file:
gimp_color_frame_update	widgets/gimpcolorframe.c	/^gimp_color_frame_update (GimpColorFrame *frame)$/;"	f	file:
gimp_color_history_add_clicked	widgets/gimpcolordialog.c	/^gimp_color_history_add_clicked (GtkWidget       *widget,$/;"	f	file:
gimp_color_history_color_changed	widgets/gimpcolordialog.c	/^gimp_color_history_color_changed (GtkWidget *widget,$/;"	f	file:
gimp_color_history_color_clicked	widgets/gimpcolordialog.c	/^gimp_color_history_color_clicked (GtkWidget       *widget,$/;"	f	file:
gimp_color_managed_iface_init	core/gimpimage.c	/^gimp_color_managed_iface_init (GimpColorManagedInterface *iface)$/;"	f	file:
gimp_color_managed_iface_init	display/gimpdisplayshell.c	/^gimp_color_managed_iface_init (GimpColorManagedInterface *iface)$/;"	f	file:
gimp_color_options_class_init	tools/gimpcoloroptions.c	/^gimp_color_options_class_init (GimpColorOptionsClass *klass)$/;"	f	file:
gimp_color_options_get_property	tools/gimpcoloroptions.c	/^gimp_color_options_get_property (GObject    *object,$/;"	f	file:
gimp_color_options_gui	tools/gimpcoloroptions.c	/^gimp_color_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_color_options_init	tools/gimpcoloroptions.c	/^gimp_color_options_init (GimpColorOptions *options)$/;"	f	file:
gimp_color_options_set_property	tools/gimpcoloroptions.c	/^gimp_color_options_set_property (GObject      *object,$/;"	f	file:
gimp_color_panel_button_press	widgets/gimpcolorpanel.c	/^gimp_color_panel_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_color_panel_class_init	widgets/gimpcolorpanel.c	/^gimp_color_panel_class_init (GimpColorPanelClass *klass)$/;"	f	file:
gimp_color_panel_clicked	widgets/gimpcolorpanel.c	/^gimp_color_panel_clicked (GtkButton *button)$/;"	f	file:
gimp_color_panel_color_changed	widgets/gimpcolorpanel.c	/^gimp_color_panel_color_changed (GimpColorButton *button)$/;"	f	file:
gimp_color_panel_destroy	widgets/gimpcolorpanel.c	/^gimp_color_panel_destroy (GtkObject *object)$/;"	f	file:
gimp_color_panel_dialog_update	widgets/gimpcolorpanel.c	/^gimp_color_panel_dialog_update (GimpColorDialog      *dialog,$/;"	f	file:
gimp_color_panel_get_action_type	widgets/gimpcolorpanel.c	/^gimp_color_panel_get_action_type (GimpColorButton *button)$/;"	f	file:
gimp_color_panel_init	widgets/gimpcolorpanel.c	/^gimp_color_panel_init (GimpColorPanel *panel)$/;"	f	file:
gimp_color_panel_new	widgets/gimpcolorpanel.c	/^gimp_color_panel_new (const gchar       *title,$/;"	f
gimp_color_panel_set_context	widgets/gimpcolorpanel.c	/^gimp_color_panel_set_context (GimpColorPanel *panel,$/;"	f
gimp_color_pick_mode_get_type	widgets/widgets-enums.c	/^gimp_color_pick_mode_get_type (void)$/;"	f
gimp_color_pick_state_get_type	widgets/widgets-enums.c	/^gimp_color_pick_state_get_type (void)$/;"	f
gimp_color_picker_options_class_init	tools/gimpcolorpickeroptions.c	/^gimp_color_picker_options_class_init (GimpColorPickerOptionsClass *klass)$/;"	f	file:
gimp_color_picker_options_get_property	tools/gimpcolorpickeroptions.c	/^gimp_color_picker_options_get_property (GObject    *object,$/;"	f	file:
gimp_color_picker_options_gui	tools/gimpcolorpickeroptions.c	/^gimp_color_picker_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_color_picker_options_init	tools/gimpcolorpickeroptions.c	/^gimp_color_picker_options_init (GimpColorPickerOptions *options)$/;"	f	file:
gimp_color_picker_options_set_property	tools/gimpcolorpickeroptions.c	/^gimp_color_picker_options_set_property (GObject      *object,$/;"	f	file:
gimp_color_picker_tool_class_init	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_class_init (GimpColorPickerToolClass *klass)$/;"	f	file:
gimp_color_picker_tool_constructor	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_constructor (GType                  type,$/;"	f	file:
gimp_color_picker_tool_control	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_color_picker_tool_finalize	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_finalize (GObject *object)$/;"	f	file:
gimp_color_picker_tool_info_create	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_info_create (GimpColorPickerTool *picker_tool)$/;"	f	file:
gimp_color_picker_tool_info_response	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_info_response (GtkWidget           *widget,$/;"	f	file:
gimp_color_picker_tool_info_update	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_info_update (GimpColorPickerTool *picker_tool,$/;"	f	file:
gimp_color_picker_tool_init	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_init (GimpColorPickerTool *tool)$/;"	f	file:
gimp_color_picker_tool_modifier_key	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_color_picker_tool_oper_update	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_color_picker_tool_picked	tools/gimpcolorpickertool.c	/^gimp_color_picker_tool_picked (GimpColorTool      *color_tool,$/;"	f	file:
gimp_color_profile_policy_get_type	core/core-enums.c	/^gimp_color_profile_policy_get_type (void)$/;"	f
gimp_color_selector_palette_class_init	widgets/gimpcolorselectorpalette.c	/^gimp_color_selector_palette_class_init (GimpColorSelectorPaletteClass *klass)$/;"	f	file:
gimp_color_selector_palette_entry_clicked	widgets/gimpcolorselectorpalette.c	/^gimp_color_selector_palette_entry_clicked (GimpPaletteView   *view,$/;"	f	file:
gimp_color_selector_palette_init	widgets/gimpcolorselectorpalette.c	/^gimp_color_selector_palette_init (GimpColorSelectorPalette *select)$/;"	f	file:
gimp_color_selector_palette_palette_changed	widgets/gimpcolorselectorpalette.c	/^gimp_color_selector_palette_palette_changed (GimpContext              *context,$/;"	f	file:
gimp_color_selector_palette_set_color	widgets/gimpcolorselectorpalette.c	/^gimp_color_selector_palette_set_color (GimpColorSelector *selector,$/;"	f	file:
gimp_color_selector_palette_set_config	widgets/gimpcolorselectorpalette.c	/^gimp_color_selector_palette_set_config (GimpColorSelector *selector,$/;"	f	file:
gimp_color_tool_button_press	tools/gimpcolortool.c	/^gimp_color_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_color_tool_button_release	tools/gimpcolortool.c	/^gimp_color_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_color_tool_class_init	tools/gimpcolortool.c	/^gimp_color_tool_class_init (GimpColorToolClass *klass)$/;"	f	file:
gimp_color_tool_control	tools/gimpcolortool.c	/^gimp_color_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_color_tool_cursor_update	tools/gimpcolortool.c	/^gimp_color_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_color_tool_disable	tools/gimpcolortool.c	/^gimp_color_tool_disable (GimpColorTool *color_tool)$/;"	f
gimp_color_tool_draw	tools/gimpcolortool.c	/^gimp_color_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_color_tool_enable	tools/gimpcolortool.c	/^gimp_color_tool_enable (GimpColorTool    *color_tool,$/;"	f
gimp_color_tool_finalize	tools/gimpcolortool.c	/^gimp_color_tool_finalize (GObject *object)$/;"	f	file:
gimp_color_tool_init	tools/gimpcolortool.c	/^gimp_color_tool_init (GimpColorTool *color_tool)$/;"	f	file:
gimp_color_tool_is_enabled	tools/gimpcolortool.c	/^gimp_color_tool_is_enabled (GimpColorTool *color_tool)$/;"	f
gimp_color_tool_motion	tools/gimpcolortool.c	/^gimp_color_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_color_tool_oper_update	tools/gimpcolortool.c	/^gimp_color_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_color_tool_pick	tools/gimpcolortool.c	/^gimp_color_tool_pick (GimpColorTool      *tool,$/;"	f	file:
gimp_color_tool_real_pick	tools/gimpcolortool.c	/^gimp_color_tool_real_pick (GimpColorTool *color_tool,$/;"	f	file:
gimp_color_tool_real_picked	tools/gimpcolortool.c	/^gimp_color_tool_real_picked (GimpColorTool      *color_tool,$/;"	f	file:
gimp_color_tool_signals	tools/gimpcolortool.c	/^static guint gimp_color_tool_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_color_tool_start_sample_point	tools/gimpcolortool.c	/^gimp_color_tool_start_sample_point (GimpTool    *tool,$/;"	f
gimp_colorize_tool_class_init	tools/gimpcolorizetool.c	/^gimp_colorize_tool_class_init (GimpColorizeToolClass *klass)$/;"	f	file:
gimp_colorize_tool_dialog	tools/gimpcolorizetool.c	/^gimp_colorize_tool_dialog (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_colorize_tool_finalize	tools/gimpcolorizetool.c	/^gimp_colorize_tool_finalize (GObject *object)$/;"	f	file:
gimp_colorize_tool_init	tools/gimpcolorizetool.c	/^gimp_colorize_tool_init (GimpColorizeTool *col_tool)$/;"	f	file:
gimp_colorize_tool_initialize	tools/gimpcolorizetool.c	/^gimp_colorize_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_colorize_tool_map	tools/gimpcolorizetool.c	/^gimp_colorize_tool_map (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_colorize_tool_reset	tools/gimpcolorizetool.c	/^gimp_colorize_tool_reset (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_colormap_adjustment_changed	widgets/gimpcolormapeditor.c	/^gimp_colormap_adjustment_changed (GtkAdjustment      *adjustment,$/;"	f	file:
gimp_colormap_editor_class_init	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_class_init (GimpColormapEditorClass* klass)$/;"	f	file:
gimp_colormap_editor_clear	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_clear (GimpColormapEditor *editor,$/;"	f	file:
gimp_colormap_editor_constructor	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_constructor (GType                  type,$/;"	f	file:
gimp_colormap_editor_destroy	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_colormap_editor_draw	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_draw (GimpColormapEditor *editor)$/;"	f	file:
gimp_colormap_editor_draw_cell	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_draw_cell (GimpColormapEditor *editor,$/;"	f	file:
gimp_colormap_editor_get_index	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_get_index (GimpColormapEditor *editor,$/;"	f
gimp_colormap_editor_init	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_init (GimpColormapEditor *editor)$/;"	f	file:
gimp_colormap_editor_max_index	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_max_index (GimpColormapEditor *editor)$/;"	f
gimp_colormap_editor_new	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_new (GimpMenuFactory *menu_factory)$/;"	f
gimp_colormap_editor_set_image	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_set_image (GimpImageEditor *image_editor,$/;"	f	file:
gimp_colormap_editor_set_index	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_set_index (GimpColormapEditor *editor,$/;"	f
gimp_colormap_editor_unmap	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_unmap (GtkWidget *widget)$/;"	f	file:
gimp_colormap_editor_update_entries	widgets/gimpcolormapeditor.c	/^gimp_colormap_editor_update_entries (GimpColormapEditor *editor)$/;"	f	file:
gimp_colormap_hex_entry_changed	widgets/gimpcolormapeditor.c	/^gimp_colormap_hex_entry_changed (GimpColorHexEntry  *entry,$/;"	f	file:
gimp_colormap_image_colormap_changed	widgets/gimpcolormapeditor.c	/^gimp_colormap_image_colormap_changed (GimpImage          *image,$/;"	f	file:
gimp_colormap_image_mode_changed	widgets/gimpcolormapeditor.c	/^gimp_colormap_image_mode_changed (GimpImage          *image,$/;"	f	file:
gimp_colormap_preview_button_press	widgets/gimpcolormapeditor.c	/^gimp_colormap_preview_button_press (GtkWidget          *widget,$/;"	f	file:
gimp_colormap_preview_drag_color	widgets/gimpcolormapeditor.c	/^gimp_colormap_preview_drag_color (GtkWidget *widget,$/;"	f	file:
gimp_colormap_preview_drop_color	widgets/gimpcolormapeditor.c	/^gimp_colormap_preview_drop_color (GtkWidget     *widget,$/;"	f	file:
gimp_colormap_preview_size_allocate	widgets/gimpcolormapeditor.c	/^gimp_colormap_preview_size_allocate (GtkWidget          *widget,$/;"	f	file:
gimp_component_editor_active_changed	widgets/gimpcomponenteditor.c	/^gimp_component_editor_active_changed (GimpImage           *image,$/;"	f	file:
gimp_component_editor_alpha_changed	widgets/gimpcomponenteditor.c	/^gimp_component_editor_alpha_changed (GimpImage           *image,$/;"	f	file:
gimp_component_editor_button_press	widgets/gimpcomponenteditor.c	/^gimp_component_editor_button_press (GtkWidget           *widget,$/;"	f	file:
gimp_component_editor_class_init	widgets/gimpcomponenteditor.c	/^gimp_component_editor_class_init (GimpComponentEditorClass *klass)$/;"	f	file:
gimp_component_editor_clear_components	widgets/gimpcomponenteditor.c	/^gimp_component_editor_clear_components (GimpComponentEditor *editor)$/;"	f	file:
gimp_component_editor_clicked	widgets/gimpcomponenteditor.c	/^gimp_component_editor_clicked (GtkCellRendererToggle *cellrenderertoggle,$/;"	f	file:
gimp_component_editor_create_components	widgets/gimpcomponenteditor.c	/^gimp_component_editor_create_components (GimpComponentEditor *editor)$/;"	f	file:
gimp_component_editor_drag_component	widgets/gimpcomponenteditor.c	/^gimp_component_editor_drag_component (GtkWidget        *widget,$/;"	f	file:
gimp_component_editor_get_iter	widgets/gimpcomponenteditor.c	/^gimp_component_editor_get_iter (GimpComponentEditor *editor,$/;"	f	file:
gimp_component_editor_init	widgets/gimpcomponenteditor.c	/^gimp_component_editor_init (GimpComponentEditor *editor)$/;"	f	file:
gimp_component_editor_mode_changed	widgets/gimpcomponenteditor.c	/^gimp_component_editor_mode_changed (GimpImage           *image,$/;"	f	file:
gimp_component_editor_new	widgets/gimpcomponenteditor.c	/^gimp_component_editor_new (gint             view_size,$/;"	f
gimp_component_editor_renderer_update	widgets/gimpcomponenteditor.c	/^gimp_component_editor_renderer_update (GimpViewRenderer    *renderer,$/;"	f	file:
gimp_component_editor_select	widgets/gimpcomponenteditor.c	/^gimp_component_editor_select (GtkTreeSelection *selection,$/;"	f	file:
gimp_component_editor_set_image	widgets/gimpcomponenteditor.c	/^gimp_component_editor_set_image (GimpImageEditor *editor,$/;"	f	file:
gimp_component_editor_set_view_size	widgets/gimpcomponenteditor.c	/^gimp_component_editor_set_view_size (GimpComponentEditor *editor,$/;"	f
gimp_component_editor_unrealize	widgets/gimpcomponenteditor.c	/^gimp_component_editor_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_component_editor_visibility_changed	widgets/gimpcomponenteditor.c	/^gimp_component_editor_visibility_changed (GimpImage           *image,$/;"	f	file:
gimp_composite_3dnow_h	composite/gimp-composite-3dnow.h	2;"	d
gimp_composite_3dnow_init	composite/gimp-composite-3dnow-installer.c	/^gimp_composite_3dnow_init (void)$/;"	f
gimp_composite_3dnow_install	composite/gimp-composite-3dnow-installer.c	/^gimp_composite_3dnow_install (void)$/;"	f
gimp_composite_3dnow_test	composite/gimp-composite-3dnow-test.c	/^gimp_composite_3dnow_test (int iterations, int n_pixels)$/;"	f
gimp_composite_addition_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_addition_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_addition_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_addition_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_addition_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_addition_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_addition_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_addition_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_addition_rgba8_rgba8_rgba8_sse2	composite/gimp-composite-sse2.c	/^gimp_composite_addition_rgba8_rgba8_rgba8_sse2 (GimpCompositeContext *_op)$/;"	f
gimp_composite_addition_va8_va8_va8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_addition_va8_va8_va8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_altivec_h	composite/gimp-composite-altivec.h	2;"	d
gimp_composite_altivec_init	composite/gimp-composite-altivec-installer.c	/^gimp_composite_altivec_init (void)$/;"	f
gimp_composite_altivec_install	composite/gimp-composite-altivec-installer.c	/^gimp_composite_altivec_install (void)$/;"	f
gimp_composite_altivec_test	composite/gimp-composite-altivec-test.c	/^gimp_composite_altivec_test (int iterations, int n_pixels)$/;"	f
gimp_composite_anti_erase_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_anti_erase_any_any_any_generic (GimpCompositeContext *ctx)$/;"	f
gimp_composite_behind_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_behind_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_blend_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_blend_any_any_any_generic (GimpCompositeContext *ctx)$/;"	f
gimp_composite_blend_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_blend_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_burn_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_burn_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_cfile	composite/make-installer.py	/^def gimp_composite_cfile(fpout, name, function_table, requirements=[], cpu_feature=[]):$/;"	f
gimp_composite_color_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_color_any_any_any_generic (guchar       *dest,$/;"	f
gimp_composite_color_erase_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_color_erase_any_any_any_generic (GimpCompositeContext *ctx)$/;"	f
gimp_composite_color_only_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_color_only_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_context_init	composite/gimp-composite-regression.c	/^gimp_composite_context_init (GimpCompositeContext *ctx,$/;"	f
gimp_composite_context_print	composite/gimp-composite.c	/^gimp_composite_context_print (GimpCompositeContext *ctx)$/;"	f
gimp_composite_convert_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_convert_any_any_any_generic (GimpCompositeContext *ctx)$/;"	f
gimp_composite_darken_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_darken_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_darken_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_darken_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_darken_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_darken_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_darken_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_darken_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_darken_rgba8_rgba8_rgba8_sse2	composite/gimp-composite-sse2.c	/^gimp_composite_darken_rgba8_rgba8_rgba8_sse2 (GimpCompositeContext *_op)$/;"	f
gimp_composite_difference_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_difference_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_difference_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_difference_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_difference_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_difference_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_difference_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_difference_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_difference_rgba8_rgba8_rgba8_sse2	composite/gimp-composite-sse2.c	/^gimp_composite_difference_rgba8_rgba8_rgba8_sse2 (GimpCompositeContext *_op)$/;"	f
gimp_composite_dispatch	composite/gimp-composite.c	/^gimp_composite_dispatch (GimpCompositeContext *ctx)$/;"	f
gimp_composite_dissolve_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_dissolve_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_divide_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_divide_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_divide_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_divide_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_dodge_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_dodge_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_dodge_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_dodge_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_erase_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_erase_any_any_any_generic (GimpCompositeContext *ctx)$/;"	f
gimp_composite_function	composite/gimp-composite.c	/^void (* gimp_composite_function[GIMP_COMPOSITE_N][GIMP_PIXELFORMAT_N][GIMP_PIXELFORMAT_N][GIMP_PIXELFORMAT_N])(GimpCompositeContext *);$/;"	v
gimp_composite_function_name	composite/gimp-composite.c	/^const gchar * gimp_composite_function_name[GIMP_COMPOSITE_N][GIMP_PIXELFORMAT_N][GIMP_PIXELFORMAT_N][GIMP_PIXELFORMAT_N];$/;"	v
gimp_composite_generic_h	composite/gimp-composite-generic.h	2;"	d
gimp_composite_generic_init	composite/gimp-composite-generic.c	/^gimp_composite_generic_init (void)$/;"	f
gimp_composite_generic_install	composite/gimp-composite-generic-installer.c	/^gimp_composite_generic_install (void)$/;"	f
gimp_composite_grain_extract_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_grain_extract_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_grain_extract_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_grain_extract_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_grain_extract_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_grain_extract_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_grain_extract_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_grain_extract_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_grain_extract_rgba8_rgba8_rgba8_sse2	composite/gimp-composite-sse2.c	/^gimp_composite_grain_extract_rgba8_rgba8_rgba8_sse2 (GimpCompositeContext *_op)$/;"	f
gimp_composite_grain_merge_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_grain_merge_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_grain_merge_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_grain_merge_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_grain_merge_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_grain_merge_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_grain_merge_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_grain_merge_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_hardlight_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_hardlight_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_hfile	composite/make-installer.py	/^def gimp_composite_hfile(fpout, name, function_table):$/;"	f
gimp_composite_hue_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_hue_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_init	composite/gimp-composite.c	/^gimp_composite_init (gboolean  be_verbose,$/;"	f
gimp_composite_installer_install2	composite/make-installer.py	/^def gimp_composite_installer_install2(fpout, name, function_table, requirements=[]):$/;"	f
gimp_composite_installer_install3	composite/make-installer.py	/^def gimp_composite_installer_install3(fpout, name, requirements=[], cpu_feature=[]):$/;"	f
gimp_composite_lighten_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_lighten_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_lighten_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_lighten_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_lighten_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_lighten_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_lighten_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_lighten_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_lighten_rgba8_rgba8_rgba8_sse2	composite/gimp-composite-sse2.c	/^gimp_composite_lighten_rgba8_rgba8_rgba8_sse2 (GimpCompositeContext *_op)$/;"	f
gimp_composite_mmx_h	composite/gimp-composite-mmx.h	2;"	d
gimp_composite_mmx_init	composite/gimp-composite-mmx-installer.c	/^gimp_composite_mmx_init (void)$/;"	f
gimp_composite_mmx_install	composite/gimp-composite-mmx-installer.c	/^gimp_composite_mmx_install (void)$/;"	f
gimp_composite_mmx_test	composite/gimp-composite-mmx-test.c	/^gimp_composite_mmx_test (int iterations, int n_pixels)$/;"	f
gimp_composite_mode_astext	composite/gimp-composite.c	/^gimp_composite_mode_astext (GimpCompositeOperation op)$/;"	f
gimp_composite_multiply_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_multiply_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_multiply_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_multiply_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_multiply_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_multiply_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_multiply_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_multiply_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_normal_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_normal_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_operation_effects	composite/gimp-composite.c	/^struct GimpCompositeOperationEffects gimp_composite_operation_effects[] =$/;"	v	typeref:struct:GimpCompositeOperationEffects
gimp_composite_options	composite/gimp-composite.c	/^struct GimpCompositeOptions gimp_composite_options =$/;"	v	typeref:struct:GimpCompositeOptions
gimp_composite_overlay_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_overlay_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_pixel_alpha	composite/gimp-composite.c	/^const GimpPixelFormat gimp_composite_pixel_alpha[] =$/;"	v
gimp_composite_pixel_alphap	composite/gimp-composite.c	/^const guchar gimp_composite_pixel_alphap[] =$/;"	v
gimp_composite_pixel_bpp	composite/gimp-composite.c	/^const guchar gimp_composite_pixel_bpp[] =$/;"	v
gimp_composite_pixelformat_astext	composite/gimp-composite.c	/^gimp_composite_pixelformat_astext (GimpPixelFormat format)$/;"	f
gimp_composite_regression	composite/gimp-composite-test.c	/^gimp_composite_regression(int iterations, int n_pixels)$/;"	f
gimp_composite_regression	composite/make-installer.py	/^def gimp_composite_regression(fpout, function_tables, options):$/;"	f
gimp_composite_regression_comp_rgba8	composite/gimp-composite-regression.c	/^gimp_composite_regression_comp_rgba8 (char *str, gimp_rgba8_t *rgba8A, gimp_rgba8_t *rgba8B, gimp_rgba8_t *expected, gimp_rgba8_t *actual, gulong length)$/;"	f
gimp_composite_regression_comp_va8	composite/gimp-composite-regression.c	/^gimp_composite_regression_comp_va8 (char *str, gimp_va8_t *va8A, gimp_va8_t *va8B, gimp_va8_t *expected, gimp_va8_t *actual, gulong length)$/;"	f
gimp_composite_regression_compare_contexts	composite/gimp-composite-regression.c	/^gimp_composite_regression_compare_contexts (char *operation, GimpCompositeContext *ctx1, GimpCompositeContext *ctx2)$/;"	f
gimp_composite_regression_dump_rgba8	composite/gimp-composite-regression.c	/^gimp_composite_regression_dump_rgba8 (char *str, gimp_rgba8_t *rgba, gulong n_pixels)$/;"	f
gimp_composite_regression_fixed_rgba8	composite/gimp-composite-regression.c	/^gimp_composite_regression_fixed_rgba8 (gulong n_pixels)$/;"	f
gimp_composite_regression_h	composite/gimp-composite-regression.h	2;"	d
gimp_composite_regression_print_rgba8	composite/gimp-composite-regression.c	/^gimp_composite_regression_print_rgba8 (gimp_rgba8_t *rgba8)$/;"	f
gimp_composite_regression_print_va8	composite/gimp-composite-regression.c	/^gimp_composite_regression_print_va8 (gimp_va8_t *va8)$/;"	f
gimp_composite_regression_print_vector	composite/gimp-composite-regression.c	/^gimp_composite_regression_print_vector (guchar vector[], GimpPixelFormat format, gulong n_pixels)$/;"	f
gimp_composite_regression_print_vector_rgb8	composite/gimp-composite-regression.c	/^gimp_composite_regression_print_vector_rgb8 (gimp_rgb8_t v[], unsigned int n_pixels)$/;"	f
gimp_composite_regression_print_vector_rgba8	composite/gimp-composite-regression.c	/^gimp_composite_regression_print_vector_rgba8 (gimp_rgba8_t v[], unsigned int n_pixels)$/;"	f
gimp_composite_regression_print_vector_v8	composite/gimp-composite-regression.c	/^gimp_composite_regression_print_vector_v8 (gimp_v8_t v[], unsigned int n_pixels)$/;"	f
gimp_composite_regression_print_vector_va8	composite/gimp-composite-regression.c	/^gimp_composite_regression_print_vector_va8 (gimp_va8_t v[], unsigned int n_pixels)$/;"	f
gimp_composite_regression_random_rgba8	composite/gimp-composite-regression.c	/^gimp_composite_regression_random_rgba8 (gulong n_pixels)$/;"	f
gimp_composite_regression_time_function	composite/gimp-composite-regression.c	/^gimp_composite_regression_time_function (gulong iterations, void (*func)(), GimpCompositeContext *ctx)$/;"	f
gimp_composite_regression_timer_report	composite/gimp-composite-regression.c	/^gimp_composite_regression_timer_report (char *name, double t1, double t2)$/;"	f
gimp_composite_replace_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_replace_any_any_any_generic (GimpCompositeContext *ctx)$/;"	f
gimp_composite_saturation_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_saturation_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_scale_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_scale_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_scale_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_scale_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_scale_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_scale_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_screen_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_screen_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_screen_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_screen_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_screen_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_screen_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_screen_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_screen_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_softlight_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_softlight_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_sse2_h	composite/gimp-composite-sse2.h	2;"	d
gimp_composite_sse2_init	composite/gimp-composite-sse2-installer.c	/^gimp_composite_sse2_init (void)$/;"	f
gimp_composite_sse2_install	composite/gimp-composite-sse2-installer.c	/^gimp_composite_sse2_install (void)$/;"	f
gimp_composite_sse2_test	composite/gimp-composite-sse2-test.c	/^gimp_composite_sse2_test (int iterations, int n_pixels)$/;"	f
gimp_composite_sse_h	composite/gimp-composite-sse.h	2;"	d
gimp_composite_sse_init	composite/gimp-composite-sse-installer.c	/^gimp_composite_sse_init (void)$/;"	f
gimp_composite_sse_install	composite/gimp-composite-sse-installer.c	/^gimp_composite_sse_install (void)$/;"	f
gimp_composite_sse_test	composite/gimp-composite-sse-test.c	/^gimp_composite_sse_test (int iterations, int n_pixels)$/;"	f
gimp_composite_subtract_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_subtract_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_subtract_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_subtract_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_subtract_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_subtract_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_subtract_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_subtract_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_subtract_rgba8_rgba8_rgba8_sse2	composite/gimp-composite-sse2.c	/^gimp_composite_subtract_rgba8_rgba8_rgba8_sse2 (GimpCompositeContext *_op)$/;"	f
gimp_composite_subtract_va8_va8_va8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_subtract_va8_va8_va8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_swap_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_swap_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_swap_rgba8_rgba8_rgba8_altivec	composite/gimp-composite-altivec.c	/^gimp_composite_swap_rgba8_rgba8_rgba8_altivec (GimpCompositeContext *ctx)$/;"	f
gimp_composite_swap_rgba8_rgba8_rgba8_mmx	composite/gimp-composite-mmx.c	/^gimp_composite_swap_rgba8_rgba8_rgba8_mmx (GimpCompositeContext *_op)$/;"	f
gimp_composite_swap_rgba8_rgba8_rgba8_sse	composite/gimp-composite-sse.c	/^gimp_composite_swap_rgba8_rgba8_rgba8_sse (GimpCompositeContext *_op)$/;"	f
gimp_composite_swap_rgba8_rgba8_rgba8_sse2	composite/gimp-composite-sse2.c	/^gimp_composite_swap_rgba8_rgba8_rgba8_sse2 (GimpCompositeContext *_op)$/;"	f
gimp_composite_use_cpu_accel	composite/gimp-composite.c	/^gimp_composite_use_cpu_accel (void)$/;"	f
gimp_composite_value_any_any_any_generic	composite/gimp-composite-generic.c	/^gimp_composite_value_any_any_any_generic (GimpCompositeContext * ctx)$/;"	f
gimp_composite_vis_h	composite/gimp-composite-vis.h	2;"	d
gimp_composite_vis_init	composite/gimp-composite-vis-installer.c	/^gimp_composite_vis_init (void)$/;"	f
gimp_composite_vis_install	composite/gimp-composite-vis-installer.c	/^gimp_composite_vis_install (void)$/;"	f
gimp_composite_vis_test	composite/gimp-composite-vis-test.c	/^gimp_composite_vis_test (int iterations, int n_pixels)$/;"	f
gimp_config_connect	config/gimpconfig-utils.c	/^gimp_config_connect (GObject     *a,$/;"	f
gimp_config_connect_full	config/gimpconfig-utils.c	/^gimp_config_connect_full (GObject     *a,$/;"	f
gimp_config_connect_full_notify	config/gimpconfig-utils.c	/^gimp_config_connect_full_notify (GObject    *src,$/;"	f	file:
gimp_config_connect_notify	config/gimpconfig-utils.c	/^gimp_config_connect_notify (GObject    *src,$/;"	f	file:
gimp_config_disconnect	config/gimpconfig-utils.c	/^gimp_config_disconnect (GObject *a,$/;"	f
gimp_config_dump	config/gimpconfig-dump.c	/^gimp_config_dump (GimpConfigDumpFormat  format)$/;"	f
gimp_config_file_backup_on_error	config/gimpconfig-file.c	/^gimp_config_file_backup_on_error (const gchar  *filename,$/;"	f
gimp_config_file_copy	config/gimpconfig-file.c	/^gimp_config_file_copy (const gchar  *source,$/;"	f
gimp_container_add	core/gimpcontainer.c	/^gimp_container_add (GimpContainer *container,$/;"	f
gimp_container_add_handler	core/gimpcontainer.c	/^gimp_container_add_handler (GimpContainer *container,$/;"	f
gimp_container_add_handler_foreach_func	core/gimpcontainer.c	/^gimp_container_add_handler_foreach_func (GimpObject           *object,$/;"	f	file:
gimp_container_box_class_init	widgets/gimpcontainerbox.c	/^gimp_container_box_class_init (GimpContainerBoxClass *klass)$/;"	f	file:
gimp_container_box_docked_iface_init	widgets/gimpcontainerbox.c	/^gimp_container_box_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_container_box_get_preview	widgets/gimpcontainerbox.c	/^gimp_container_box_get_preview (GimpDocked   *docked,$/;"	f	file:
gimp_container_box_init	widgets/gimpcontainerbox.c	/^gimp_container_box_init (GimpContainerBox *box)$/;"	f	file:
gimp_container_box_set_context	widgets/gimpcontainerbox.c	/^gimp_container_box_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_container_box_set_size_request	widgets/gimpcontainerbox.c	/^gimp_container_box_set_size_request (GimpContainerBox *box,$/;"	f
gimp_container_box_view_iface_init	widgets/gimpcontainerbox.c	/^gimp_container_box_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_container_children_type	core/gimpcontainer.c	/^gimp_container_children_type (const GimpContainer *container)$/;"	f
gimp_container_class_init	core/gimpcontainer.c	/^gimp_container_class_init (GimpContainerClass *klass)$/;"	f	file:
gimp_container_clear	core/gimpcontainer.c	/^gimp_container_clear (GimpContainer *container)$/;"	f
gimp_container_combo_box_changed	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_changed (GtkComboBox       *combo_box,$/;"	f	file:
gimp_container_combo_box_class_init	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_class_init (GimpContainerComboBoxClass *klass)$/;"	f	file:
gimp_container_combo_box_clear_items	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_clear_items (GimpContainerView *view)$/;"	f	file:
gimp_container_combo_box_get_property	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_get_property (GObject    *object,$/;"	f	file:
gimp_container_combo_box_init	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_init (GimpContainerComboBox *combo_box)$/;"	f	file:
gimp_container_combo_box_insert_item	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_insert_item (GimpContainerView *view,$/;"	f	file:
gimp_container_combo_box_new	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_new (GimpContainer *container,$/;"	f
gimp_container_combo_box_remove_item	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_remove_item (GimpContainerView *view,$/;"	f	file:
gimp_container_combo_box_rename_item	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_rename_item (GimpContainerView *view,$/;"	f	file:
gimp_container_combo_box_renderer_update	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_renderer_update (GimpViewRenderer  *renderer,$/;"	f	file:
gimp_container_combo_box_reorder_item	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_reorder_item (GimpContainerView *view,$/;"	f	file:
gimp_container_combo_box_select_item	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_select_item (GimpContainerView *view,$/;"	f	file:
gimp_container_combo_box_set	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_set (GimpContainerComboBox *combo_box,$/;"	f	file:
gimp_container_combo_box_set_context	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_set_context (GimpContainerView *view,$/;"	f	file:
gimp_container_combo_box_set_property	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_set_property (GObject      *object,$/;"	f	file:
gimp_container_combo_box_set_view_size	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_set_view_size (GimpContainerView *view)$/;"	f	file:
gimp_container_combo_box_unrealize	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_container_combo_box_view_iface_init	widgets/gimpcontainercombobox.c	/^gimp_container_combo_box_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_container_config_iface_init	core/gimpcontainer.c	/^gimp_container_config_iface_init (GimpConfigInterface *iface)$/;"	f	file:
gimp_container_deserialize	core/gimpcontainer.c	/^gimp_container_deserialize (GimpConfig *config,$/;"	f	file:
gimp_container_disconnect_callback	core/gimpcontainer.c	/^gimp_container_disconnect_callback (GimpObject *object,$/;"	f	file:
gimp_container_dispose	core/gimpcontainer.c	/^gimp_container_dispose (GObject *object)$/;"	f	file:
gimp_container_editor_activate_item	widgets/gimpcontainereditor.c	/^gimp_container_editor_activate_item (GtkWidget           *widget,$/;"	f	file:
gimp_container_editor_class_init	widgets/gimpcontainereditor.c	/^gimp_container_editor_class_init (GimpContainerEditorClass *klass)$/;"	f	file:
gimp_container_editor_construct	widgets/gimpcontainereditor.c	/^gimp_container_editor_construct (GimpContainerEditor *editor,$/;"	f
gimp_container_editor_context_item	widgets/gimpcontainereditor.c	/^gimp_container_editor_context_item (GtkWidget           *widget,$/;"	f	file:
gimp_container_editor_docked_iface_init	widgets/gimpcontainereditor.c	/^gimp_container_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_container_editor_get_menu	widgets/gimpcontainereditor.c	/^gimp_container_editor_get_menu (GimpDocked   *docked,$/;"	f	file:
gimp_container_editor_get_preview	widgets/gimpcontainereditor.c	/^gimp_container_editor_get_preview (GimpDocked   *docked,$/;"	f	file:
gimp_container_editor_get_show_button_bar	widgets/gimpcontainereditor.c	/^gimp_container_editor_get_show_button_bar (GimpDocked *docked)$/;"	f	file:
gimp_container_editor_has_button_bar	widgets/gimpcontainereditor.c	/^gimp_container_editor_has_button_bar (GimpDocked *docked)$/;"	f	file:
gimp_container_editor_init	widgets/gimpcontainereditor.c	/^gimp_container_editor_init (GimpContainerEditor *view)$/;"	f	file:
gimp_container_editor_real_context_item	widgets/gimpcontainereditor.c	/^gimp_container_editor_real_context_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_container_editor_select_item	widgets/gimpcontainereditor.c	/^gimp_container_editor_select_item (GtkWidget           *widget,$/;"	f	file:
gimp_container_editor_set_context	widgets/gimpcontainereditor.c	/^gimp_container_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_container_editor_set_show_button_bar	widgets/gimpcontainereditor.c	/^gimp_container_editor_set_show_button_bar (GimpDocked *docked,$/;"	f	file:
gimp_container_entry_changed	widgets/gimpcontainerentry.c	/^gimp_container_entry_changed (GtkEntry          *entry,$/;"	f	file:
gimp_container_entry_class_init	widgets/gimpcontainerentry.c	/^gimp_container_entry_class_init (GimpContainerEntryClass *klass)$/;"	f	file:
gimp_container_entry_clear_items	widgets/gimpcontainerentry.c	/^gimp_container_entry_clear_items (GimpContainerView *view)$/;"	f	file:
gimp_container_entry_get_model	widgets/gimpcontainerentry.c	40;"	d	file:
gimp_container_entry_init	widgets/gimpcontainerentry.c	/^gimp_container_entry_init (GimpContainerEntry *entry)$/;"	f	file:
gimp_container_entry_insert_item	widgets/gimpcontainerentry.c	/^gimp_container_entry_insert_item (GimpContainerView *view,$/;"	f	file:
gimp_container_entry_match_selected	widgets/gimpcontainerentry.c	/^gimp_container_entry_match_selected (GtkEntryCompletion *widget,$/;"	f	file:
gimp_container_entry_new	widgets/gimpcontainerentry.c	/^gimp_container_entry_new (GimpContainer *container,$/;"	f
gimp_container_entry_remove_item	widgets/gimpcontainerentry.c	/^gimp_container_entry_remove_item (GimpContainerView *view,$/;"	f	file:
gimp_container_entry_rename_item	widgets/gimpcontainerentry.c	/^gimp_container_entry_rename_item (GimpContainerView *view,$/;"	f	file:
gimp_container_entry_renderer_update	widgets/gimpcontainerentry.c	/^gimp_container_entry_renderer_update (GimpViewRenderer  *renderer,$/;"	f	file:
gimp_container_entry_reorder_item	widgets/gimpcontainerentry.c	/^gimp_container_entry_reorder_item (GimpContainerView *view,$/;"	f	file:
gimp_container_entry_select_item	widgets/gimpcontainerentry.c	/^gimp_container_entry_select_item (GimpContainerView *view,$/;"	f	file:
gimp_container_entry_set	widgets/gimpcontainerentry.c	/^gimp_container_entry_set (GimpContainerEntry *entry,$/;"	f	file:
gimp_container_entry_set_context	widgets/gimpcontainerentry.c	/^gimp_container_entry_set_context (GimpContainerView *view,$/;"	f	file:
gimp_container_entry_set_view_size	widgets/gimpcontainerentry.c	/^gimp_container_entry_set_view_size (GimpContainerView *view)$/;"	f	file:
gimp_container_entry_view_iface_init	widgets/gimpcontainerentry.c	/^gimp_container_entry_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_container_filter	core/gimpcontainer-filter.c	/^gimp_container_filter (const GimpContainer  *container,$/;"	f
gimp_container_filter_by_name	core/gimpcontainer-filter.c	/^gimp_container_filter_by_name (const GimpContainer  *container,$/;"	f
gimp_container_filter_foreach_func	core/gimpcontainer-filter.c	/^gimp_container_filter_foreach_func (GimpObject                 *object,$/;"	f	file:
gimp_container_foreach	core/gimpcontainer.c	/^gimp_container_foreach (const GimpContainer *container,$/;"	f
gimp_container_freeze	core/gimpcontainer.c	/^gimp_container_freeze (GimpContainer *container)$/;"	f
gimp_container_frozen	core/gimpcontainer.c	/^gimp_container_frozen (GimpContainer *container)$/;"	f
gimp_container_get_child_by_index	core/gimpcontainer.c	/^gimp_container_get_child_by_index (const GimpContainer *container,$/;"	f
gimp_container_get_child_by_name	core/gimpcontainer.c	/^gimp_container_get_child_by_name (const GimpContainer *container,$/;"	f
gimp_container_get_child_index	core/gimpcontainer.c	/^gimp_container_get_child_index (const GimpContainer *container,$/;"	f
gimp_container_get_filtered_name_array	core/gimpcontainer-filter.c	/^gimp_container_get_filtered_name_array (const GimpContainer  *container,$/;"	f
gimp_container_get_memsize	core/gimpcontainer.c	/^gimp_container_get_memsize (GimpObject *object,$/;"	f	file:
gimp_container_get_name_array	core/gimpcontainer.c	/^gimp_container_get_name_array (const GimpContainer *container,$/;"	f
gimp_container_get_name_array_foreach_func	core/gimpcontainer.c	/^gimp_container_get_name_array_foreach_func (GimpObject   *object,$/;"	f	file:
gimp_container_get_neighbor_of_active	core/gimp-utils.c	/^gimp_container_get_neighbor_of_active (GimpContainer *container,$/;"	f
gimp_container_get_property	core/gimpcontainer.c	/^gimp_container_get_property (GObject    *object,$/;"	f	file:
gimp_container_grid_view_button_press	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_button_press (GtkWidget              *widget,$/;"	f	file:
gimp_container_grid_view_class_init	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_class_init (GimpContainerGridViewClass *klass)$/;"	f	file:
gimp_container_grid_view_clear_items	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_clear_items (GimpContainerView *view)$/;"	f	file:
gimp_container_grid_view_focus	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_focus (GtkWidget        *widget,$/;"	f	file:
gimp_container_grid_view_highlight_item	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_highlight_item (GimpContainerView *container_view,$/;"	f	file:
gimp_container_grid_view_init	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_init (GimpContainerGridView *grid_view)$/;"	f	file:
gimp_container_grid_view_insert_item	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_insert_item (GimpContainerView *container_view,$/;"	f	file:
gimp_container_grid_view_item_activated	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_item_activated (GtkWidget *widget,$/;"	f	file:
gimp_container_grid_view_item_context	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_item_context (GtkWidget *widget,$/;"	f	file:
gimp_container_grid_view_item_selected	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_item_selected (GtkWidget      *widget,$/;"	f	file:
gimp_container_grid_view_menu_position	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_menu_position (GtkMenu  *menu,$/;"	f	file:
gimp_container_grid_view_move_by	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_move_by (GimpContainerGridView *grid_view,$/;"	f	file:
gimp_container_grid_view_move_cursor	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_move_cursor (GimpContainerGridView *grid_view,$/;"	f	file:
gimp_container_grid_view_new	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_new (GimpContainer *container,$/;"	f
gimp_container_grid_view_popup_menu	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_popup_menu (GtkWidget *widget)$/;"	f	file:
gimp_container_grid_view_remove_item	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_remove_item (GimpContainerView *container_view,$/;"	f	file:
gimp_container_grid_view_rename_item	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_rename_item (GimpContainerView *container_view,$/;"	f	file:
gimp_container_grid_view_reorder_item	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_reorder_item (GimpContainerView *container_view,$/;"	f	file:
gimp_container_grid_view_select_item	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_select_item (GimpContainerView *view,$/;"	f	file:
gimp_container_grid_view_set_context	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_set_context (GimpContainerView *view,$/;"	f	file:
gimp_container_grid_view_set_view_size	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_set_view_size (GimpContainerView *view)$/;"	f	file:
gimp_container_grid_view_view_iface_init	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_container_grid_view_viewport_resized	widgets/gimpcontainergridview.c	/^gimp_container_grid_view_viewport_resized (GtkWidget             *widget,$/;"	f	file:
gimp_container_have	core/gimpcontainer.c	/^gimp_container_have (const GimpContainer *container,$/;"	f
gimp_container_init	core/gimpcontainer.c	/^gimp_container_init (GimpContainer *container)$/;"	f	file:
gimp_container_insert	core/gimpcontainer.c	/^gimp_container_insert (GimpContainer *container,$/;"	f
gimp_container_is_empty	core/gimpcontainer.c	/^gimp_container_is_empty (const GimpContainer *container)$/;"	f
gimp_container_num_children	core/gimpcontainer.c	/^gimp_container_num_children (const GimpContainer *container)$/;"	f
gimp_container_policy	core/gimpcontainer.c	/^gimp_container_policy (const GimpContainer *container)$/;"	f
gimp_container_policy_get_type	core/core-enums.c	/^gimp_container_policy_get_type (void)$/;"	f
gimp_container_popup_button_press	widgets/gimpcontainerpopup.c	/^gimp_container_popup_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_container_popup_class_init	widgets/gimpcontainerpopup.c	/^gimp_container_popup_class_init (GimpContainerPopupClass *klass)$/;"	f	file:
gimp_container_popup_context_changed	widgets/gimpcontainerpopup.c	/^gimp_container_popup_context_changed (GimpContext        *context,$/;"	f	file:
gimp_container_popup_create_view	widgets/gimpcontainerpopup.c	/^gimp_container_popup_create_view (GimpContainerPopup *popup)$/;"	f	file:
gimp_container_popup_dialog_clicked	widgets/gimpcontainerpopup.c	/^gimp_container_popup_dialog_clicked (GtkWidget          *button,$/;"	f	file:
gimp_container_popup_finalize	widgets/gimpcontainerpopup.c	/^gimp_container_popup_finalize (GObject *object)$/;"	f	file:
gimp_container_popup_get_view_size	widgets/gimpcontainerpopup.c	/^gimp_container_popup_get_view_size (GimpContainerPopup *popup)$/;"	f
gimp_container_popup_get_view_type	widgets/gimpcontainerpopup.c	/^gimp_container_popup_get_view_type (GimpContainerPopup *popup)$/;"	f
gimp_container_popup_init	widgets/gimpcontainerpopup.c	/^gimp_container_popup_init (GimpContainerPopup *popup)$/;"	f	file:
gimp_container_popup_key_press	widgets/gimpcontainerpopup.c	/^gimp_container_popup_key_press (GtkWidget   *widget,$/;"	f	file:
gimp_container_popup_larger_clicked	widgets/gimpcontainerpopup.c	/^gimp_container_popup_larger_clicked (GtkWidget          *button,$/;"	f	file:
gimp_container_popup_map	widgets/gimpcontainerpopup.c	/^gimp_container_popup_map (GtkWidget *widget)$/;"	f	file:
gimp_container_popup_new	widgets/gimpcontainerpopup.c	/^gimp_container_popup_new (GimpContainer     *container,$/;"	f
gimp_container_popup_real_cancel	widgets/gimpcontainerpopup.c	/^gimp_container_popup_real_cancel (GimpContainerPopup *popup)$/;"	f	file:
gimp_container_popup_real_confirm	widgets/gimpcontainerpopup.c	/^gimp_container_popup_real_confirm (GimpContainerPopup *popup)$/;"	f	file:
gimp_container_popup_set_view_size	widgets/gimpcontainerpopup.c	/^gimp_container_popup_set_view_size (GimpContainerPopup *popup,$/;"	f
gimp_container_popup_set_view_type	widgets/gimpcontainerpopup.c	/^gimp_container_popup_set_view_type (GimpContainerPopup *popup,$/;"	f
gimp_container_popup_show	widgets/gimpcontainerpopup.c	/^gimp_container_popup_show (GimpContainerPopup *popup,$/;"	f
gimp_container_popup_smaller_clicked	widgets/gimpcontainerpopup.c	/^gimp_container_popup_smaller_clicked (GtkWidget          *button,$/;"	f	file:
gimp_container_popup_view_type_toggled	widgets/gimpcontainerpopup.c	/^gimp_container_popup_view_type_toggled (GtkWidget          *button,$/;"	f	file:
gimp_container_remove	core/gimpcontainer.c	/^gimp_container_remove (GimpContainer *container,$/;"	f
gimp_container_remove_handler	core/gimpcontainer.c	/^gimp_container_remove_handler (GimpContainer *container,$/;"	f
gimp_container_remove_handler_foreach_func	core/gimpcontainer.c	/^gimp_container_remove_handler_foreach_func (GimpObject           *object,$/;"	f	file:
gimp_container_reorder	core/gimpcontainer.c	/^gimp_container_reorder (GimpContainer *container,$/;"	f
gimp_container_serialize	core/gimpcontainer.c	/^gimp_container_serialize (GimpConfig       *config,$/;"	f	file:
gimp_container_serialize_foreach	core/gimpcontainer.c	/^gimp_container_serialize_foreach (GObject       *object,$/;"	f	file:
gimp_container_set_property	core/gimpcontainer.c	/^gimp_container_set_property (GObject      *object,$/;"	f	file:
gimp_container_thaw	core/gimpcontainer.c	/^gimp_container_thaw (GimpContainer *container)$/;"	f
gimp_container_tree_view_button_press	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_button_press (GtkWidget             *widget,$/;"	f	file:
gimp_container_tree_view_class_init	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_class_init (GimpContainerTreeViewClass *klass)$/;"	f	file:
gimp_container_tree_view_clear_items	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_clear_items (GimpContainerView *view)$/;"	f	file:
gimp_container_tree_view_constructor	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_constructor (GType                  type,$/;"	f	file:
gimp_container_tree_view_drag_data_received	widgets/gimpcontainertreeview-dnd.c	/^gimp_container_tree_view_drag_data_received (GtkWidget             *widget,$/;"	f
gimp_container_tree_view_drag_drop	widgets/gimpcontainertreeview-dnd.c	/^gimp_container_tree_view_drag_drop (GtkWidget             *widget,$/;"	f
gimp_container_tree_view_drag_leave	widgets/gimpcontainertreeview-dnd.c	/^gimp_container_tree_view_drag_leave (GtkWidget             *widget,$/;"	f
gimp_container_tree_view_drag_motion	widgets/gimpcontainertreeview-dnd.c	/^gimp_container_tree_view_drag_motion (GtkWidget             *widget,$/;"	f
gimp_container_tree_view_drag_pixbuf	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_drag_pixbuf (GtkWidget *widget,$/;"	f	file:
gimp_container_tree_view_drag_viewable	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_drag_viewable (GtkWidget    *widget,$/;"	f	file:
gimp_container_tree_view_drop_status	widgets/gimpcontainertreeview-dnd.c	/^gimp_container_tree_view_drop_status (GimpContainerTreeView    *tree_view,$/;"	f	file:
gimp_container_tree_view_find_click_cell	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_find_click_cell (GtkWidget         *widget,$/;"	f	file:
gimp_container_tree_view_init	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_init (GimpContainerTreeView *tree_view)$/;"	f	file:
gimp_container_tree_view_insert_item	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_insert_item (GimpContainerView *view,$/;"	f	file:
gimp_container_tree_view_menu_position	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_menu_position (GtkMenu  *menu,$/;"	f	file:
gimp_container_tree_view_name_canceled	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_name_canceled (GtkCellRendererText   *cell,$/;"	f	file:
gimp_container_tree_view_new	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_new (GimpContainer *container,$/;"	f
gimp_container_tree_view_popup_menu	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_popup_menu (GtkWidget *widget)$/;"	f	file:
gimp_container_tree_view_real_drop_possible	widgets/gimpcontainertreeview-dnd.c	/^gimp_container_tree_view_real_drop_possible (GimpContainerTreeView   *tree_view,$/;"	f
gimp_container_tree_view_real_drop_viewable	widgets/gimpcontainertreeview-dnd.c	/^gimp_container_tree_view_real_drop_viewable (GimpContainerTreeView   *tree_view,$/;"	f
gimp_container_tree_view_remove_item	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_remove_item (GimpContainerView *view,$/;"	f	file:
gimp_container_tree_view_rename_item	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_rename_item (GimpContainerView *view,$/;"	f	file:
gimp_container_tree_view_renderer_update	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_renderer_update (GimpViewRenderer      *renderer,$/;"	f	file:
gimp_container_tree_view_reorder_item	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_reorder_item (GimpContainerView *view,$/;"	f	file:
gimp_container_tree_view_scroll_timeout	widgets/gimpcontainertreeview-dnd.c	/^gimp_container_tree_view_scroll_timeout (gpointer data)$/;"	f	file:
gimp_container_tree_view_select_item	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_select_item (GimpContainerView *view,$/;"	f	file:
gimp_container_tree_view_selection_changed	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_selection_changed (GtkTreeSelection      *selection,$/;"	f	file:
gimp_container_tree_view_set	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_set (GimpContainerTreeView *tree_view,$/;"	f	file:
gimp_container_tree_view_set_container	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_set_container (GimpContainerView *view,$/;"	f	file:
gimp_container_tree_view_set_context	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_set_context (GimpContainerView *view,$/;"	f	file:
gimp_container_tree_view_set_view_size	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_set_view_size (GimpContainerView *view)$/;"	f	file:
gimp_container_tree_view_unmap	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_unmap (GtkWidget *widget)$/;"	f	file:
gimp_container_tree_view_unrealize	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_container_tree_view_view_iface_init	widgets/gimpcontainertreeview.c	/^gimp_container_tree_view_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_container_view_activate_item	widgets/gimpcontainerview.c	/^gimp_container_view_activate_item (GimpContainerView *view,$/;"	f
gimp_container_view_add	widgets/gimpcontainerview.c	/^gimp_container_view_add (GimpContainerView *view,$/;"	f	file:
gimp_container_view_add_foreach	widgets/gimpcontainerview.c	/^gimp_container_view_add_foreach (GimpViewable      *viewable,$/;"	f	file:
gimp_container_view_button_viewable_dropped	widgets/gimpcontainerview.c	/^gimp_container_view_button_viewable_dropped (GtkWidget    *widget,$/;"	f	file:
gimp_container_view_clear_items	widgets/gimpcontainerview.c	/^gimp_container_view_clear_items (GimpContainerView *view)$/;"	f	file:
gimp_container_view_context_changed	widgets/gimpcontainerview.c	/^gimp_container_view_context_changed (GimpContext       *context,$/;"	f	file:
gimp_container_view_context_item	widgets/gimpcontainerview.c	/^gimp_container_view_context_item (GimpContainerView *view,$/;"	f
gimp_container_view_enable_dnd	widgets/gimpcontainerview.c	/^gimp_container_view_enable_dnd (GimpContainerView *view,$/;"	f
gimp_container_view_freeze	widgets/gimpcontainerview.c	/^gimp_container_view_freeze (GimpContainerView *view,$/;"	f	file:
gimp_container_view_get_by_dockable	widgets/gimpcontainerview-utils.c	/^gimp_container_view_get_by_dockable (GimpDockable *dockable)$/;"	f
gimp_container_view_get_container	widgets/gimpcontainerview.c	/^gimp_container_view_get_container (GimpContainerView *view)$/;"	f
gimp_container_view_get_context	widgets/gimpcontainerview.c	/^gimp_container_view_get_context (GimpContainerView *view)$/;"	f
gimp_container_view_get_dnd_widget	widgets/gimpcontainerview.c	/^gimp_container_view_get_dnd_widget (GimpContainerView *view)$/;"	f
gimp_container_view_get_private	widgets/gimpcontainerview.c	/^gimp_container_view_get_private (GimpContainerView *view)$/;"	f	file:
gimp_container_view_get_property	widgets/gimpcontainerview.c	/^gimp_container_view_get_property (GObject    *object,$/;"	f
gimp_container_view_get_reorderable	widgets/gimpcontainerview.c	/^gimp_container_view_get_reorderable (GimpContainerView *view)$/;"	f
gimp_container_view_get_view_size	widgets/gimpcontainerview.c	/^gimp_container_view_get_view_size (GimpContainerView *view,$/;"	f
gimp_container_view_iface_base_init	widgets/gimpcontainerview.c	/^gimp_container_view_iface_base_init (GimpContainerViewInterface *view_iface)$/;"	f	file:
gimp_container_view_install_properties	widgets/gimpcontainerview.c	/^gimp_container_view_install_properties (GObjectClass *klass)$/;"	f
gimp_container_view_interface_get_type	widgets/gimpcontainerview.c	/^gimp_container_view_interface_get_type (void)$/;"	f
gimp_container_view_item_activated	widgets/gimpcontainerview.c	/^gimp_container_view_item_activated (GimpContainerView *view,$/;"	f
gimp_container_view_item_context	widgets/gimpcontainerview.c	/^gimp_container_view_item_context (GimpContainerView *view,$/;"	f
gimp_container_view_item_selected	widgets/gimpcontainerview.c	/^gimp_container_view_item_selected (GimpContainerView *view,$/;"	f
gimp_container_view_lookup	widgets/gimpcontainerview.c	/^gimp_container_view_lookup (GimpContainerView *view,$/;"	f
gimp_container_view_name_changed	widgets/gimpcontainerview.c	/^gimp_container_view_name_changed (GimpViewable      *viewable,$/;"	f	file:
gimp_container_view_private_dispose	widgets/gimpcontainerview.c	/^gimp_container_view_private_dispose (GimpContainerView        *view,$/;"	f	file:
gimp_container_view_private_finalize	widgets/gimpcontainerview.c	/^gimp_container_view_private_finalize (GimpContainerViewPrivate *private)$/;"	f	file:
gimp_container_view_real_clear_items	widgets/gimpcontainerview.c	/^gimp_container_view_real_clear_items (GimpContainerView *view)$/;"	f	file:
gimp_container_view_real_set_container	widgets/gimpcontainerview.c	/^gimp_container_view_real_set_container (GimpContainerView *view,$/;"	f	file:
gimp_container_view_real_set_context	widgets/gimpcontainerview.c	/^gimp_container_view_real_set_context (GimpContainerView *view,$/;"	f	file:
gimp_container_view_remove	widgets/gimpcontainerview.c	/^gimp_container_view_remove (GimpContainerView *view,$/;"	f	file:
gimp_container_view_remove_active	widgets/gimpcontainerview-utils.c	/^gimp_container_view_remove_active (GimpContainerView *view)$/;"	f
gimp_container_view_reorder	widgets/gimpcontainerview.c	/^gimp_container_view_reorder (GimpContainerView *view,$/;"	f	file:
gimp_container_view_select_item	widgets/gimpcontainerview.c	/^gimp_container_view_select_item (GimpContainerView *view,$/;"	f
gimp_container_view_set_container	widgets/gimpcontainerview.c	/^gimp_container_view_set_container (GimpContainerView *view,$/;"	f
gimp_container_view_set_context	widgets/gimpcontainerview.c	/^gimp_container_view_set_context (GimpContainerView *view,$/;"	f
gimp_container_view_set_dnd_widget	widgets/gimpcontainerview.c	/^gimp_container_view_set_dnd_widget (GimpContainerView *view,$/;"	f
gimp_container_view_set_property	widgets/gimpcontainerview.c	/^gimp_container_view_set_property (GObject      *object,$/;"	f
gimp_container_view_set_reorderable	widgets/gimpcontainerview.c	/^gimp_container_view_set_reorderable (GimpContainerView *view,$/;"	f
gimp_container_view_set_view_size	widgets/gimpcontainerview.c	/^gimp_container_view_set_view_size (GimpContainerView *view,$/;"	f
gimp_container_view_thaw	widgets/gimpcontainerview.c	/^gimp_container_view_thaw (GimpContainerView *view,$/;"	f	file:
gimp_container_view_viewable_dropped	widgets/gimpcontainerview.c	/^gimp_container_view_viewable_dropped (GtkWidget    *widget,$/;"	f	file:
gimp_context_background_changed	core/gimpcontext.c	/^gimp_context_background_changed (GimpContext *context)$/;"	f
gimp_context_brush_changed	core/gimpcontext.c	/^gimp_context_brush_changed (GimpContext *context)$/;"	f
gimp_context_brush_dirty	core/gimpcontext.c	/^gimp_context_brush_dirty (GimpBrush   *brush,$/;"	f	file:
gimp_context_brush_list_thaw	core/gimpcontext.c	/^gimp_context_brush_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_brush_removed	core/gimpcontext.c	/^gimp_context_brush_removed (GimpContainer *container,$/;"	f	file:
gimp_context_buffer_changed	core/gimpcontext.c	/^gimp_context_buffer_changed (GimpContext *context)$/;"	f
gimp_context_buffer_dirty	core/gimpcontext.c	/^gimp_context_buffer_dirty (GimpBuffer  *buffer,$/;"	f	file:
gimp_context_buffer_list_thaw	core/gimpcontext.c	/^gimp_context_buffer_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_buffer_removed	core/gimpcontext.c	/^gimp_context_buffer_removed (GimpContainer *container,$/;"	f	file:
gimp_context_changed_by_type	core/gimpcontext.c	/^gimp_context_changed_by_type (GimpContext *context,$/;"	f
gimp_context_class_init	core/gimpcontext.c	/^gimp_context_class_init (GimpContextClass *klass)$/;"	f	file:
gimp_context_config_iface_init	core/gimpcontext.c	/^gimp_context_config_iface_init (GimpConfigInterface *iface)$/;"	f	file:
gimp_context_constructor	core/gimpcontext.c	/^gimp_context_constructor (GType                  type,$/;"	f	file:
gimp_context_copy_properties	core/gimpcontext.c	/^gimp_context_copy_properties (GimpContext         *src,$/;"	f
gimp_context_copy_property	core/gimpcontext.c	/^gimp_context_copy_property (GimpContext         *src,$/;"	f
gimp_context_define_properties	core/gimpcontext.c	/^gimp_context_define_properties (GimpContext         *context,$/;"	f
gimp_context_define_property	core/gimpcontext.c	/^gimp_context_define_property (GimpContext         *context,$/;"	f
gimp_context_deserialize_property	core/gimpcontext.c	/^gimp_context_deserialize_property (GimpConfig *object,$/;"	f	file:
gimp_context_display_changed	core/gimpcontext.c	/^gimp_context_display_changed (GimpContext *context)$/;"	f
gimp_context_display_removed	core/gimpcontext.c	/^gimp_context_display_removed (GimpContainer *container,$/;"	f	file:
gimp_context_dispose	core/gimpcontext.c	/^gimp_context_dispose (GObject *object)$/;"	f	file:
gimp_context_finalize	core/gimpcontext.c	/^gimp_context_finalize (GObject *object)$/;"	f	file:
gimp_context_find_object	core/gimpcontext.c	/^gimp_context_find_object (GimpContext   *context,$/;"	f	file:
gimp_context_font_changed	core/gimpcontext.c	/^gimp_context_font_changed (GimpContext *context)$/;"	f
gimp_context_font_dirty	core/gimpcontext.c	/^gimp_context_font_dirty (GimpFont    *font,$/;"	f	file:
gimp_context_font_list_thaw	core/gimpcontext.c	/^gimp_context_font_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_font_removed	core/gimpcontext.c	/^gimp_context_font_removed (GimpContainer *container,$/;"	f	file:
gimp_context_foreground_changed	core/gimpcontext.c	/^gimp_context_foreground_changed (GimpContext *context)$/;"	f
gimp_context_get_background	core/gimpcontext.c	/^gimp_context_get_background (GimpContext *context,$/;"	f
gimp_context_get_brush	core/gimpcontext.c	/^gimp_context_get_brush (GimpContext *context)$/;"	f
gimp_context_get_buffer	core/gimpcontext.c	/^gimp_context_get_buffer (GimpContext *context)$/;"	f
gimp_context_get_by_type	core/gimpcontext.c	/^gimp_context_get_by_type (GimpContext *context,$/;"	f
gimp_context_get_display	core/gimpcontext.c	/^gimp_context_get_display (GimpContext *context)$/;"	f
gimp_context_get_font	core/gimpcontext.c	/^gimp_context_get_font (GimpContext *context)$/;"	f
gimp_context_get_font_name	core/gimpcontext.c	/^gimp_context_get_font_name (GimpContext *context)$/;"	f
gimp_context_get_foreground	core/gimpcontext.c	/^gimp_context_get_foreground (GimpContext *context,$/;"	f
gimp_context_get_gradient	core/gimpcontext.c	/^gimp_context_get_gradient (GimpContext *context)$/;"	f
gimp_context_get_image	core/gimpcontext.c	/^gimp_context_get_image (GimpContext *context)$/;"	f
gimp_context_get_imagefile	core/gimpcontext.c	/^gimp_context_get_imagefile (GimpContext *context)$/;"	f
gimp_context_get_memsize	core/gimpcontext.c	/^gimp_context_get_memsize (GimpObject *object,$/;"	f	file:
gimp_context_get_opacity	core/gimpcontext.c	/^gimp_context_get_opacity (GimpContext *context)$/;"	f
gimp_context_get_paint_info	core/gimpcontext.c	/^gimp_context_get_paint_info (GimpContext *context)$/;"	f
gimp_context_get_paint_mode	core/gimpcontext.c	/^gimp_context_get_paint_mode (GimpContext *context)$/;"	f
gimp_context_get_palette	core/gimpcontext.c	/^gimp_context_get_palette (GimpContext *context)$/;"	f
gimp_context_get_parent	core/gimpcontext.c	/^gimp_context_get_parent (const GimpContext *context)$/;"	f
gimp_context_get_pattern	core/gimpcontext.c	/^gimp_context_get_pattern (GimpContext *context)$/;"	f
gimp_context_get_property	core/gimpcontext.c	/^gimp_context_get_property (GObject    *object,$/;"	f	file:
gimp_context_get_serialize_properties	core/gimpcontext.c	/^gimp_context_get_serialize_properties (GimpContext *context)$/;"	f
gimp_context_get_template	core/gimpcontext.c	/^gimp_context_get_template (GimpContext *context)$/;"	f
gimp_context_get_tool	core/gimpcontext.c	/^gimp_context_get_tool (GimpContext *context)$/;"	f
gimp_context_gradient_changed	core/gimpcontext.c	/^gimp_context_gradient_changed (GimpContext *context)$/;"	f
gimp_context_gradient_dirty	core/gimpcontext.c	/^gimp_context_gradient_dirty (GimpGradient *gradient,$/;"	f	file:
gimp_context_gradient_list_thaw	core/gimpcontext.c	/^gimp_context_gradient_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_gradient_removed	core/gimpcontext.c	/^gimp_context_gradient_removed (GimpContainer *container,$/;"	f	file:
gimp_context_image_changed	core/gimpcontext.c	/^gimp_context_image_changed (GimpContext *context)$/;"	f
gimp_context_image_removed	core/gimpcontext.c	/^gimp_context_image_removed (GimpContainer *container,$/;"	f	file:
gimp_context_imagefile_changed	core/gimpcontext.c	/^gimp_context_imagefile_changed (GimpContext *context)$/;"	f
gimp_context_imagefile_dirty	core/gimpcontext.c	/^gimp_context_imagefile_dirty (GimpImagefile *imagefile,$/;"	f	file:
gimp_context_imagefile_list_thaw	core/gimpcontext.c	/^gimp_context_imagefile_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_imagefile_removed	core/gimpcontext.c	/^gimp_context_imagefile_removed (GimpContainer *container,$/;"	f	file:
gimp_context_init	core/gimpcontext.c	/^gimp_context_init (GimpContext *context)$/;"	f	file:
gimp_context_new	core/gimpcontext.c	/^gimp_context_new (Gimp        *gimp,$/;"	f
gimp_context_opacity_changed	core/gimpcontext.c	/^gimp_context_opacity_changed (GimpContext *context)$/;"	f
gimp_context_paint_info_changed	core/gimpcontext.c	/^gimp_context_paint_info_changed (GimpContext *context)$/;"	f
gimp_context_paint_info_dirty	core/gimpcontext.c	/^gimp_context_paint_info_dirty (GimpPaintInfo *paint_info,$/;"	f	file:
gimp_context_paint_info_list_thaw	core/gimpcontext.c	/^gimp_context_paint_info_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_paint_info_removed	core/gimpcontext.c	/^gimp_context_paint_info_removed (GimpContainer *container,$/;"	f	file:
gimp_context_paint_mode_changed	core/gimpcontext.c	/^gimp_context_paint_mode_changed (GimpContext *context)$/;"	f
gimp_context_palette_changed	core/gimpcontext.c	/^gimp_context_palette_changed (GimpContext *context)$/;"	f
gimp_context_palette_dirty	core/gimpcontext.c	/^gimp_context_palette_dirty (GimpPalette *palette,$/;"	f	file:
gimp_context_palette_list_thaw	core/gimpcontext.c	/^gimp_context_palette_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_palette_removed	core/gimpcontext.c	/^gimp_context_palette_removed (GimpContainer *container,$/;"	f	file:
gimp_context_parent_notify	core/gimpcontext.c	/^gimp_context_parent_notify (GimpContext *parent,$/;"	f	file:
gimp_context_pattern_changed	core/gimpcontext.c	/^gimp_context_pattern_changed (GimpContext *context)$/;"	f
gimp_context_pattern_dirty	core/gimpcontext.c	/^gimp_context_pattern_dirty (GimpPattern *pattern,$/;"	f	file:
gimp_context_pattern_list_thaw	core/gimpcontext.c	/^gimp_context_pattern_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_pattern_removed	core/gimpcontext.c	/^gimp_context_pattern_removed (GimpContainer *container,$/;"	f	file:
gimp_context_prop_names	core/gimpcontext.c	/^static const gchar * const gimp_context_prop_names[] =$/;"	v	file:
gimp_context_prop_types	core/gimpcontext.c	/^static GType gimp_context_prop_types[] =$/;"	v	file:
gimp_context_property_defined	core/gimpcontext.c	/^gimp_context_property_defined (GimpContext         *context,$/;"	f
gimp_context_real_set_background	core/gimpcontext.c	/^gimp_context_real_set_background (GimpContext   *context,$/;"	f	file:
gimp_context_real_set_brush	core/gimpcontext.c	/^gimp_context_real_set_brush (GimpContext *context,$/;"	f	file:
gimp_context_real_set_buffer	core/gimpcontext.c	/^gimp_context_real_set_buffer (GimpContext *context,$/;"	f	file:
gimp_context_real_set_display	core/gimpcontext.c	/^gimp_context_real_set_display (GimpContext *context,$/;"	f	file:
gimp_context_real_set_font	core/gimpcontext.c	/^gimp_context_real_set_font (GimpContext *context,$/;"	f	file:
gimp_context_real_set_foreground	core/gimpcontext.c	/^gimp_context_real_set_foreground (GimpContext   *context,$/;"	f	file:
gimp_context_real_set_gradient	core/gimpcontext.c	/^gimp_context_real_set_gradient (GimpContext  *context,$/;"	f	file:
gimp_context_real_set_image	core/gimpcontext.c	/^gimp_context_real_set_image (GimpContext *context,$/;"	f	file:
gimp_context_real_set_imagefile	core/gimpcontext.c	/^gimp_context_real_set_imagefile (GimpContext   *context,$/;"	f	file:
gimp_context_real_set_opacity	core/gimpcontext.c	/^gimp_context_real_set_opacity (GimpContext *context,$/;"	f	file:
gimp_context_real_set_paint_info	core/gimpcontext.c	/^gimp_context_real_set_paint_info (GimpContext   *context,$/;"	f	file:
gimp_context_real_set_paint_mode	core/gimpcontext.c	/^gimp_context_real_set_paint_mode (GimpContext          *context,$/;"	f	file:
gimp_context_real_set_palette	core/gimpcontext.c	/^gimp_context_real_set_palette (GimpContext *context,$/;"	f	file:
gimp_context_real_set_pattern	core/gimpcontext.c	/^gimp_context_real_set_pattern (GimpContext *context,$/;"	f	file:
gimp_context_real_set_template	core/gimpcontext.c	/^gimp_context_real_set_template (GimpContext  *context,$/;"	f	file:
gimp_context_real_set_tool	core/gimpcontext.c	/^gimp_context_real_set_tool (GimpContext  *context,$/;"	f	file:
gimp_context_serialize	core/gimpcontext.c	/^gimp_context_serialize (GimpConfig       *config,$/;"	f	file:
gimp_context_serialize_property	core/gimpcontext.c	/^gimp_context_serialize_property (GimpConfig       *config,$/;"	f	file:
gimp_context_set_background	core/gimpcontext.c	/^gimp_context_set_background (GimpContext   *context,$/;"	f
gimp_context_set_brush	core/gimpcontext.c	/^gimp_context_set_brush (GimpContext *context,$/;"	f
gimp_context_set_buffer	core/gimpcontext.c	/^gimp_context_set_buffer (GimpContext *context,$/;"	f
gimp_context_set_by_type	core/gimpcontext.c	/^gimp_context_set_by_type (GimpContext *context,$/;"	f
gimp_context_set_default_colors	core/gimpcontext.c	/^gimp_context_set_default_colors (GimpContext *context)$/;"	f
gimp_context_set_display	core/gimpcontext.c	/^gimp_context_set_display (GimpContext *context,$/;"	f
gimp_context_set_font	core/gimpcontext.c	/^gimp_context_set_font (GimpContext *context,$/;"	f
gimp_context_set_font_name	core/gimpcontext.c	/^gimp_context_set_font_name (GimpContext *context,$/;"	f
gimp_context_set_foreground	core/gimpcontext.c	/^gimp_context_set_foreground (GimpContext   *context,$/;"	f
gimp_context_set_gradient	core/gimpcontext.c	/^gimp_context_set_gradient (GimpContext  *context,$/;"	f
gimp_context_set_image	core/gimpcontext.c	/^gimp_context_set_image (GimpContext *context,$/;"	f
gimp_context_set_imagefile	core/gimpcontext.c	/^gimp_context_set_imagefile (GimpContext   *context,$/;"	f
gimp_context_set_opacity	core/gimpcontext.c	/^gimp_context_set_opacity (GimpContext *context,$/;"	f
gimp_context_set_paint_info	core/gimpcontext.c	/^gimp_context_set_paint_info (GimpContext   *context,$/;"	f
gimp_context_set_paint_mode	core/gimpcontext.c	/^gimp_context_set_paint_mode (GimpContext          *context,$/;"	f
gimp_context_set_palette	core/gimpcontext.c	/^gimp_context_set_palette (GimpContext *context,$/;"	f
gimp_context_set_parent	core/gimpcontext.c	/^gimp_context_set_parent (GimpContext *context,$/;"	f
gimp_context_set_pattern	core/gimpcontext.c	/^gimp_context_set_pattern (GimpContext *context,$/;"	f
gimp_context_set_property	core/gimpcontext.c	/^gimp_context_set_property (GObject      *object,$/;"	f	file:
gimp_context_set_serialize_properties	core/gimpcontext.c	/^gimp_context_set_serialize_properties (GimpContext         *context,$/;"	f
gimp_context_set_template	core/gimpcontext.c	/^gimp_context_set_template (GimpContext  *context,$/;"	f
gimp_context_set_tool	core/gimpcontext.c	/^gimp_context_set_tool (GimpContext  *context,$/;"	f
gimp_context_signals	core/gimpcontext.c	/^static guint gimp_context_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_context_swap_colors	core/gimpcontext.c	/^gimp_context_swap_colors (GimpContext *context)$/;"	f
gimp_context_template_changed	core/gimpcontext.c	/^gimp_context_template_changed (GimpContext *context)$/;"	f
gimp_context_template_dirty	core/gimpcontext.c	/^gimp_context_template_dirty (GimpTemplate *template,$/;"	f	file:
gimp_context_template_list_thaw	core/gimpcontext.c	/^gimp_context_template_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_template_removed	core/gimpcontext.c	/^gimp_context_template_removed (GimpContainer *container,$/;"	f	file:
gimp_context_tool_changed	core/gimpcontext.c	/^gimp_context_tool_changed (GimpContext *context)$/;"	f
gimp_context_tool_dirty	core/gimpcontext.c	/^gimp_context_tool_dirty (GimpToolInfo *tool_info,$/;"	f	file:
gimp_context_tool_list_thaw	core/gimpcontext.c	/^gimp_context_tool_list_thaw (GimpContainer *container,$/;"	f	file:
gimp_context_tool_removed	core/gimpcontext.c	/^gimp_context_tool_removed (GimpContainer *container,$/;"	f	file:
gimp_context_type_to_prop_name	core/gimpcontext.c	/^gimp_context_type_to_prop_name (GType type)$/;"	f
gimp_context_type_to_property	core/gimpcontext.c	/^gimp_context_type_to_property (GType type)$/;"	f
gimp_context_type_to_signal_name	core/gimpcontext.c	/^gimp_context_type_to_signal_name (GType type)$/;"	f
gimp_contexts_clear	core/gimp-contexts.c	/^gimp_contexts_clear (Gimp    *gimp,$/;"	f
gimp_contexts_exit	core/gimp-contexts.c	/^gimp_contexts_exit (Gimp *gimp)$/;"	f
gimp_contexts_init	core/gimp-contexts.c	/^gimp_contexts_init (Gimp *gimp)$/;"	f
gimp_contexts_load	core/gimp-contexts.c	/^gimp_contexts_load (Gimp *gimp)$/;"	f
gimp_contexts_save	core/gimp-contexts.c	/^gimp_contexts_save (Gimp *gimp)$/;"	f
gimp_controller_editor_class_init	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_class_init (GimpControllerEditorClass *klass)$/;"	f	file:
gimp_controller_editor_constructor	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_constructor (GType                  type,$/;"	f	file:
gimp_controller_editor_delete_clicked	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_delete_clicked (GtkWidget            *button,$/;"	f	file:
gimp_controller_editor_edit_activated	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_edit_activated (GtkTreeView          *tv,$/;"	f	file:
gimp_controller_editor_edit_clicked	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_edit_clicked (GtkWidget            *button,$/;"	f	file:
gimp_controller_editor_edit_response	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_edit_response (GtkWidget            *dialog,$/;"	f	file:
gimp_controller_editor_finalize	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_finalize (GObject *object)$/;"	f	file:
gimp_controller_editor_get_property	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_get_property (GObject    *object,$/;"	f	file:
gimp_controller_editor_grab_toggled	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_grab_toggled (GtkWidget            *button,$/;"	f	file:
gimp_controller_editor_init	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_init (GimpControllerEditor *editor)$/;"	f	file:
gimp_controller_editor_new	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_new (GimpControllerInfo *info,$/;"	f
gimp_controller_editor_row_activated	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_row_activated (GtkTreeView          *tv,$/;"	f	file:
gimp_controller_editor_sel_changed	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_sel_changed (GtkTreeSelection     *sel,$/;"	f	file:
gimp_controller_editor_set_property	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_set_property (GObject      *object,$/;"	f	file:
gimp_controller_editor_snooper	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_snooper (GimpControllerInfo        *info,$/;"	f	file:
gimp_controller_editor_unmap	widgets/gimpcontrollereditor.c	/^gimp_controller_editor_unmap (GtkWidget *widget)$/;"	f	file:
gimp_controller_info_class_init	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_class_init (GimpControllerInfoClass *klass)$/;"	f	file:
gimp_controller_info_config_iface_init	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_config_iface_init (GimpConfigInterface *iface)$/;"	f	file:
gimp_controller_info_deserialize_property	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_deserialize_property (GimpConfig *config,$/;"	f	file:
gimp_controller_info_event	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_event (GimpController            *controller,$/;"	f	file:
gimp_controller_info_finalize	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_finalize (GObject *object)$/;"	f	file:
gimp_controller_info_get_enabled	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_get_enabled (GimpControllerInfo *info)$/;"	f
gimp_controller_info_get_property	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_get_property (GObject    *object,$/;"	f	file:
gimp_controller_info_init	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_init (GimpControllerInfo *info)$/;"	f	file:
gimp_controller_info_new	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_new (GType type)$/;"	f
gimp_controller_info_serialize_mapping	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_serialize_mapping (gpointer key,$/;"	f	file:
gimp_controller_info_serialize_property	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_serialize_property (GimpConfig       *config,$/;"	f	file:
gimp_controller_info_set_enabled	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_set_enabled (GimpControllerInfo *info,$/;"	f
gimp_controller_info_set_event_snooper	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_set_event_snooper (GimpControllerInfo         *info,$/;"	f
gimp_controller_info_set_property	widgets/gimpcontrollerinfo.c	/^gimp_controller_info_set_property (GObject      *object,$/;"	f	file:
gimp_controller_int_view_new	widgets/gimpcontrollereditor.c	/^gimp_controller_int_view_new (GimpController *controller,$/;"	f	file:
gimp_controller_keyboard_class_init	widgets/gimpcontrollerkeyboard.c	/^gimp_controller_keyboard_class_init (GimpControllerKeyboardClass *klass)$/;"	f	file:
gimp_controller_keyboard_constructor	widgets/gimpcontrollerkeyboard.c	/^gimp_controller_keyboard_constructor (GType                  type,$/;"	f	file:
gimp_controller_keyboard_get_event_blurb	widgets/gimpcontrollerkeyboard.c	/^gimp_controller_keyboard_get_event_blurb (GimpController *controller,$/;"	f	file:
gimp_controller_keyboard_get_event_name	widgets/gimpcontrollerkeyboard.c	/^gimp_controller_keyboard_get_event_name (GimpController *controller,$/;"	f	file:
gimp_controller_keyboard_get_n_events	widgets/gimpcontrollerkeyboard.c	/^gimp_controller_keyboard_get_n_events (GimpController *controller)$/;"	f	file:
gimp_controller_keyboard_init	widgets/gimpcontrollerkeyboard.c	/^gimp_controller_keyboard_init (GimpControllerKeyboard *keyboard)$/;"	f	file:
gimp_controller_keyboard_key_press	widgets/gimpcontrollerkeyboard.c	/^gimp_controller_keyboard_key_press (GimpControllerKeyboard *keyboard,$/;"	f
gimp_controller_list_activate_item	widgets/gimpcontrollerlist.c	/^gimp_controller_list_activate_item (GimpContainerView  *view,$/;"	f	file:
gimp_controller_list_add_clicked	widgets/gimpcontrollerlist.c	/^gimp_controller_list_add_clicked (GtkWidget          *button,$/;"	f	file:
gimp_controller_list_class_init	widgets/gimpcontrollerlist.c	/^gimp_controller_list_class_init (GimpControllerListClass *klass)$/;"	f	file:
gimp_controller_list_constructor	widgets/gimpcontrollerlist.c	/^gimp_controller_list_constructor (GType                  type,$/;"	f	file:
gimp_controller_list_down_clicked	widgets/gimpcontrollerlist.c	/^gimp_controller_list_down_clicked (GtkWidget          *button,$/;"	f	file:
gimp_controller_list_edit_clicked	widgets/gimpcontrollerlist.c	/^gimp_controller_list_edit_clicked (GtkWidget          *button,$/;"	f	file:
gimp_controller_list_edit_destroy	widgets/gimpcontrollerlist.c	/^gimp_controller_list_edit_destroy (GtkWidget          *widget,$/;"	f	file:
gimp_controller_list_finalize	widgets/gimpcontrollerlist.c	/^gimp_controller_list_finalize (GObject *object)$/;"	f	file:
gimp_controller_list_get_property	widgets/gimpcontrollerlist.c	/^gimp_controller_list_get_property (GObject    *object,$/;"	f	file:
gimp_controller_list_init	widgets/gimpcontrollerlist.c	/^gimp_controller_list_init (GimpControllerList *list)$/;"	f	file:
gimp_controller_list_new	widgets/gimpcontrollerlist.c	/^gimp_controller_list_new (Gimp *gimp)$/;"	f
gimp_controller_list_remove_clicked	widgets/gimpcontrollerlist.c	/^gimp_controller_list_remove_clicked (GtkWidget          *button,$/;"	f	file:
gimp_controller_list_row_activated	widgets/gimpcontrollerlist.c	/^gimp_controller_list_row_activated (GtkTreeView        *tv,$/;"	f	file:
gimp_controller_list_select_item	widgets/gimpcontrollerlist.c	/^gimp_controller_list_select_item (GimpContainerView  *view,$/;"	f	file:
gimp_controller_list_set_property	widgets/gimpcontrollerlist.c	/^gimp_controller_list_set_property (GObject      *object,$/;"	f	file:
gimp_controller_list_src_sel_changed	widgets/gimpcontrollerlist.c	/^gimp_controller_list_src_sel_changed (GtkTreeSelection   *sel,$/;"	f	file:
gimp_controller_list_up_clicked	widgets/gimpcontrollerlist.c	/^gimp_controller_list_up_clicked (GtkWidget          *button,$/;"	f	file:
gimp_controller_manager_free	widgets/gimpcontrollers.c	/^gimp_controller_manager_free (GimpControllerManager *manager)$/;"	f	file:
gimp_controller_manager_get	widgets/gimpcontrollers.c	/^gimp_controller_manager_get (Gimp *gimp)$/;"	f	file:
gimp_controller_string_view_new	widgets/gimpcontrollereditor.c	/^gimp_controller_string_view_new (GimpController *controller,$/;"	f	file:
gimp_controller_wheel_class_init	widgets/gimpcontrollerwheel.c	/^gimp_controller_wheel_class_init (GimpControllerWheelClass *klass)$/;"	f	file:
gimp_controller_wheel_constructor	widgets/gimpcontrollerwheel.c	/^gimp_controller_wheel_constructor (GType                  type,$/;"	f	file:
gimp_controller_wheel_get_event_blurb	widgets/gimpcontrollerwheel.c	/^gimp_controller_wheel_get_event_blurb (GimpController *controller,$/;"	f	file:
gimp_controller_wheel_get_event_name	widgets/gimpcontrollerwheel.c	/^gimp_controller_wheel_get_event_name (GimpController *controller,$/;"	f	file:
gimp_controller_wheel_get_n_events	widgets/gimpcontrollerwheel.c	/^gimp_controller_wheel_get_n_events (GimpController *controller)$/;"	f	file:
gimp_controller_wheel_init	widgets/gimpcontrollerwheel.c	/^gimp_controller_wheel_init (GimpControllerWheel *wheel)$/;"	f	file:
gimp_controller_wheel_scroll	widgets/gimpcontrollerwheel.c	/^gimp_controller_wheel_scroll (GimpControllerWheel  *wheel,$/;"	f
gimp_controllers_add	widgets/gimpcontrollers.c	/^gimp_controllers_add (GimpContainer         *container,$/;"	f	file:
gimp_controllers_event_mapped	widgets/gimpcontrollers.c	/^gimp_controllers_event_mapped (GimpControllerInfo        *info,$/;"	f	file:
gimp_controllers_exit	widgets/gimpcontrollers.c	/^gimp_controllers_exit (Gimp *gimp)$/;"	f
gimp_controllers_get_keyboard	widgets/gimpcontrollers.c	/^gimp_controllers_get_keyboard (Gimp *gimp)$/;"	f
gimp_controllers_get_list	widgets/gimpcontrollers.c	/^gimp_controllers_get_list (Gimp *gimp)$/;"	f
gimp_controllers_get_ui_manager	widgets/gimpcontrollers.c	/^gimp_controllers_get_ui_manager (Gimp *gimp)$/;"	f
gimp_controllers_get_wheel	widgets/gimpcontrollers.c	/^gimp_controllers_get_wheel (Gimp *gimp)$/;"	f
gimp_controllers_init	widgets/gimpcontrollers.c	/^gimp_controllers_init (Gimp *gimp)$/;"	f
gimp_controllers_remove	widgets/gimpcontrollers.c	/^gimp_controllers_remove (GimpContainer         *container,$/;"	f	file:
gimp_controllers_restore	widgets/gimpcontrollers.c	/^gimp_controllers_restore (Gimp          *gimp,$/;"	f
gimp_controllers_save	widgets/gimpcontrollers.c	/^gimp_controllers_save (Gimp *gimp)$/;"	f
gimp_convert_dither_type_get_type	core/core-enums.c	/^gimp_convert_dither_type_get_type (void)$/;"	f
gimp_convert_palette_type_get_type	core/core-enums.c	/^gimp_convert_palette_type_get_type (void)$/;"	f
gimp_convolve_calculate_matrix	paint/gimpconvolve.c	/^gimp_convolve_calculate_matrix (GimpConvolve    *convolve,$/;"	f	file:
gimp_convolve_class_init	paint/gimpconvolve.c	/^gimp_convolve_class_init (GimpConvolveClass *klass)$/;"	f	file:
gimp_convolve_init	paint/gimpconvolve.c	/^gimp_convolve_init (GimpConvolve *convolve)$/;"	f	file:
gimp_convolve_motion	paint/gimpconvolve.c	/^gimp_convolve_motion (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_convolve_options_class_init	paint/gimpconvolveoptions.c	/^gimp_convolve_options_class_init (GimpConvolveOptionsClass *klass)$/;"	f	file:
gimp_convolve_options_get_property	paint/gimpconvolveoptions.c	/^gimp_convolve_options_get_property (GObject    *object,$/;"	f	file:
gimp_convolve_options_gui	tools/gimpconvolvetool.c	/^gimp_convolve_options_gui (GimpToolOptions *tool_options)$/;"	f	file:
gimp_convolve_options_init	paint/gimpconvolveoptions.c	/^gimp_convolve_options_init (GimpConvolveOptions *options)$/;"	f	file:
gimp_convolve_options_set_property	paint/gimpconvolveoptions.c	/^gimp_convolve_options_set_property (GObject      *object,$/;"	f	file:
gimp_convolve_paint	paint/gimpconvolve.c	/^gimp_convolve_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_convolve_sum_matrix	paint/gimpconvolve.c	/^gimp_convolve_sum_matrix (const gfloat *matrix)$/;"	f	file:
gimp_convolve_tool_class_init	tools/gimpconvolvetool.c	/^gimp_convolve_tool_class_init (GimpConvolveToolClass *klass)$/;"	f	file:
gimp_convolve_tool_cursor_update	tools/gimpconvolvetool.c	/^gimp_convolve_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_convolve_tool_init	tools/gimpconvolvetool.c	/^gimp_convolve_tool_init (GimpConvolveTool *convolve)$/;"	f	file:
gimp_convolve_tool_modifier_key	tools/gimpconvolvetool.c	/^gimp_convolve_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_convolve_tool_oper_update	tools/gimpconvolvetool.c	/^gimp_convolve_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_convolve_tool_status_update	tools/gimpconvolvetool.c	/^gimp_convolve_tool_status_update (GimpTool         *tool,$/;"	f	file:
gimp_convolve_type_get_type	paint/paint-enums.c	/^gimp_convolve_type_get_type (void)$/;"	f
gimp_coords_add	core/gimpcoords.c	/^gimp_coords_add (const GimpCoords *a,$/;"	f
gimp_coords_average	core/gimpcoords.c	/^gimp_coords_average (const GimpCoords *a,$/;"	f
gimp_coords_difference	core/gimpcoords.c	/^gimp_coords_difference (const GimpCoords *a,$/;"	f
gimp_coords_equal	core/gimpcoords.c	/^gimp_coords_equal (const GimpCoords *a,$/;"	f
gimp_coords_length	core/gimpcoords.c	/^gimp_coords_length (const GimpCoords *a)$/;"	f
gimp_coords_length_squared	core/gimpcoords.c	/^gimp_coords_length_squared (const GimpCoords *a)$/;"	f
gimp_coords_manhattan_dist	core/gimpcoords.c	/^gimp_coords_manhattan_dist (const GimpCoords *a,$/;"	f
gimp_coords_mix	core/gimpcoords.c	/^gimp_coords_mix (const gdouble     amul,$/;"	f
gimp_coords_scalarprod	core/gimpcoords.c	/^gimp_coords_scalarprod (const GimpCoords *a,$/;"	f
gimp_coords_scale	core/gimpcoords.c	/^gimp_coords_scale (const gdouble     f,$/;"	f
gimp_core_config_class_init	config/gimpcoreconfig.c	/^gimp_core_config_class_init (GimpCoreConfigClass *klass)$/;"	f	file:
gimp_core_config_color_management_notify	config/gimpcoreconfig.c	/^gimp_core_config_color_management_notify (GObject    *object,$/;"	f	file:
gimp_core_config_default_grid_notify	config/gimpcoreconfig.c	/^gimp_core_config_default_grid_notify (GObject    *object,$/;"	f	file:
gimp_core_config_default_image_notify	config/gimpcoreconfig.c	/^gimp_core_config_default_image_notify (GObject    *object,$/;"	f	file:
gimp_core_config_finalize	config/gimpcoreconfig.c	/^gimp_core_config_finalize (GObject *object)$/;"	f	file:
gimp_core_config_get_property	config/gimpcoreconfig.c	/^gimp_core_config_get_property (GObject    *object,$/;"	f	file:
gimp_core_config_init	config/gimpcoreconfig.c	/^gimp_core_config_init (GimpCoreConfig *config)$/;"	f	file:
gimp_core_config_set_property	config/gimpcoreconfig.c	/^gimp_core_config_set_property (GObject      *object,$/;"	f	file:
gimp_create_display	core/gimp-gui.c	/^gimp_create_display (Gimp      *gimp,$/;"	f
gimp_create_image	core/gimp.c	/^gimp_create_image (Gimp              *gimp,$/;"	f
gimp_crop_options_class_init	tools/gimpcropoptions.c	/^gimp_crop_options_class_init (GimpCropOptionsClass *klass)$/;"	f	file:
gimp_crop_options_get_property	tools/gimpcropoptions.c	/^gimp_crop_options_get_property (GObject    *object,$/;"	f	file:
gimp_crop_options_gui	tools/gimpcropoptions.c	/^gimp_crop_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_crop_options_init	tools/gimpcropoptions.c	/^gimp_crop_options_init (GimpCropOptions *options)$/;"	f	file:
gimp_crop_options_rectangle_options_iface_init	tools/gimpcropoptions.c	/^gimp_crop_options_rectangle_options_iface_init (GimpRectangleOptionsInterface *iface)$/;"	f	file:
gimp_crop_options_set_property	tools/gimpcropoptions.c	/^gimp_crop_options_set_property (GObject      *object,$/;"	f	file:
gimp_crop_tool_active_modifier_key	tools/gimpcroptool.c	/^gimp_crop_tool_active_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_crop_tool_button_press	tools/gimpcroptool.c	/^gimp_crop_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_crop_tool_button_release	tools/gimpcroptool.c	/^gimp_crop_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_crop_tool_class_init	tools/gimpcroptool.c	/^gimp_crop_tool_class_init (GimpCropToolClass *klass)$/;"	f	file:
gimp_crop_tool_constructor	tools/gimpcroptool.c	/^gimp_crop_tool_constructor (GType                  type,$/;"	f	file:
gimp_crop_tool_control	tools/gimpcroptool.c	/^gimp_crop_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_crop_tool_cursor_update	tools/gimpcroptool.c	/^gimp_crop_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_crop_tool_execute	tools/gimpcroptool.c	/^gimp_crop_tool_execute (GimpRectangleTool  *rectangle,$/;"	f	file:
gimp_crop_tool_init	tools/gimpcroptool.c	/^gimp_crop_tool_init (GimpCropTool *crop_tool)$/;"	f	file:
gimp_crop_tool_notify_layer_only	tools/gimpcroptool.c	/^gimp_crop_tool_notify_layer_only (GimpCropOptions *options,$/;"	f	file:
gimp_crop_tool_rectangle_tool_iface_init	tools/gimpcroptool.c	/^gimp_crop_tool_rectangle_tool_iface_init (GimpRectangleToolInterface *iface)$/;"	f	file:
gimp_crop_tool_register	tools/gimpcroptool.c	/^gimp_crop_tool_register (GimpToolRegisterCallback  callback,$/;"	f
gimp_cursor_format_get_type	widgets/widgets-enums.c	/^gimp_cursor_format_get_type (void)$/;"	f
gimp_cursor_mode_get_type	display/display-enums.c	/^gimp_cursor_mode_get_type (void)$/;"	f
gimp_cursor_modifiers	widgets/gimpcursor.c	/^static GimpCursor gimp_cursor_modifiers[] =$/;"	v	file:
gimp_cursor_new	widgets/gimpcursor.c	/^gimp_cursor_new (GdkDisplay         *display,$/;"	f
gimp_cursor_set	widgets/gimpcursor.c	/^gimp_cursor_set (GtkWidget          *widget,$/;"	f
gimp_cursor_view_class_init	widgets/gimpcursorview.c	/^gimp_cursor_view_class_init (GimpCursorViewClass* klass)$/;"	f	file:
gimp_cursor_view_clear_cursor	widgets/gimpcursorview.c	/^gimp_cursor_view_clear_cursor (GimpCursorView *view)$/;"	f
gimp_cursor_view_docked_iface_init	widgets/gimpcursorview.c	/^gimp_cursor_view_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_cursor_view_get_aux_info	widgets/gimpcursorview.c	/^gimp_cursor_view_get_aux_info (GimpDocked *docked)$/;"	f	file:
gimp_cursor_view_get_property	widgets/gimpcursorview.c	/^gimp_cursor_view_get_property (GObject    *object,$/;"	f	file:
gimp_cursor_view_get_sample_merged	widgets/gimpcursorview.c	/^gimp_cursor_view_get_sample_merged (GimpCursorView *view)$/;"	f
gimp_cursor_view_init	widgets/gimpcursorview.c	/^gimp_cursor_view_init (GimpCursorView *view)$/;"	f	file:
gimp_cursor_view_new	widgets/gimpcursorview.c	/^gimp_cursor_view_new (GimpMenuFactory *menu_factory)$/;"	f
gimp_cursor_view_set_aux_info	widgets/gimpcursorview.c	/^gimp_cursor_view_set_aux_info (GimpDocked *docked,$/;"	f	file:
gimp_cursor_view_set_property	widgets/gimpcursorview.c	/^gimp_cursor_view_set_property (GObject      *object,$/;"	f	file:
gimp_cursor_view_set_sample_merged	widgets/gimpcursorview.c	/^gimp_cursor_view_set_sample_merged (GimpCursorView *view,$/;"	f
gimp_cursor_view_style_set	widgets/gimpcursorview.c	/^gimp_cursor_view_style_set (GtkWidget *widget,$/;"	f	file:
gimp_cursor_view_update_cursor	widgets/gimpcursorview.c	/^gimp_cursor_view_update_cursor (GimpCursorView   *view,$/;"	f
gimp_cursors	widgets/gimpcursor.c	/^static GimpCursor gimp_cursors[] =$/;"	v	file:
gimp_curve_type_get_type	base/base-enums.c	/^gimp_curve_type_get_type (void)$/;"	f
gimp_curves_tool_button_release	tools/gimpcurvestool.c	/^gimp_curves_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_curves_tool_class_init	tools/gimpcurvestool.c	/^gimp_curves_tool_class_init (GimpCurvesToolClass *klass)$/;"	f	file:
gimp_curves_tool_color_picked	tools/gimpcurvestool.c	/^gimp_curves_tool_color_picked (GimpColorTool      *color_tool,$/;"	f	file:
gimp_curves_tool_dialog	tools/gimpcurvestool.c	/^gimp_curves_tool_dialog (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_curves_tool_finalize	tools/gimpcurvestool.c	/^gimp_curves_tool_finalize (GObject *object)$/;"	f	file:
gimp_curves_tool_init	tools/gimpcurvestool.c	/^gimp_curves_tool_init (GimpCurvesTool *tool)$/;"	f	file:
gimp_curves_tool_initialize	tools/gimpcurvestool.c	/^gimp_curves_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_curves_tool_key_press	tools/gimpcurvestool.c	/^gimp_curves_tool_key_press (GimpTool    *tool,$/;"	f
gimp_curves_tool_map	tools/gimpcurvestool.c	/^gimp_curves_tool_map (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_curves_tool_oper_update	tools/gimpcurvestool.c	/^gimp_curves_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_curves_tool_reset	tools/gimpcurvestool.c	/^gimp_curves_tool_reset (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_curves_tool_settings_load	tools/gimpcurvestool.c	/^gimp_curves_tool_settings_load (GimpImageMapTool  *image_map_tool,$/;"	f	file:
gimp_curves_tool_settings_save	tools/gimpcurvestool.c	/^gimp_curves_tool_settings_save (GimpImageMapTool *image_map_tool,$/;"	f	file:
gimp_dash_editor_button_press	widgets/gimpdasheditor.c	/^gimp_dash_editor_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_dash_editor_button_release	widgets/gimpdasheditor.c	/^gimp_dash_editor_button_release (GtkWidget      *widget,$/;"	f	file:
gimp_dash_editor_class_init	widgets/gimpdasheditor.c	/^gimp_dash_editor_class_init (GimpDashEditorClass *klass)$/;"	f	file:
gimp_dash_editor_expose	widgets/gimpdasheditor.c	/^gimp_dash_editor_expose (GtkWidget      *widget,$/;"	f	file:
gimp_dash_editor_finalize	widgets/gimpdasheditor.c	/^gimp_dash_editor_finalize (GObject *object)$/;"	f	file:
gimp_dash_editor_get_property	widgets/gimpdasheditor.c	/^gimp_dash_editor_get_property (GObject      *object,$/;"	f	file:
gimp_dash_editor_init	widgets/gimpdasheditor.c	/^gimp_dash_editor_init (GimpDashEditor *editor)$/;"	f	file:
gimp_dash_editor_motion_notify	widgets/gimpdasheditor.c	/^gimp_dash_editor_motion_notify (GtkWidget      *widget,$/;"	f	file:
gimp_dash_editor_new	widgets/gimpdasheditor.c	/^gimp_dash_editor_new (GimpStrokeOptions *stroke_options)$/;"	f
gimp_dash_editor_set_property	widgets/gimpdasheditor.c	/^gimp_dash_editor_set_property (GObject      *object,$/;"	f	file:
gimp_dash_editor_shift_left	widgets/gimpdasheditor.c	/^gimp_dash_editor_shift_left (GimpDashEditor *editor)$/;"	f
gimp_dash_editor_shift_right	widgets/gimpdasheditor.c	/^gimp_dash_editor_shift_right (GimpDashEditor *editor)$/;"	f
gimp_dash_editor_size_request	widgets/gimpdasheditor.c	/^gimp_dash_editor_size_request (GtkWidget      *widget,$/;"	f	file:
gimp_dash_pattern_copy	core/gimpdashpattern.c	/^gimp_dash_pattern_copy (GArray *pattern)$/;"	f
gimp_dash_pattern_fill_segments	core/gimpdashpattern.c	/^gimp_dash_pattern_fill_segments (GArray   *pattern,$/;"	f
gimp_dash_pattern_free	core/gimpdashpattern.c	/^gimp_dash_pattern_free (GArray *pattern)$/;"	f
gimp_dash_pattern_from_value_array	core/gimpdashpattern.c	/^gimp_dash_pattern_from_value_array (GValueArray *value_array)$/;"	f
gimp_dash_pattern_get_type	core/gimpdashpattern.c	/^gimp_dash_pattern_get_type (void)$/;"	f
gimp_dash_pattern_new_from_preset	core/gimpdashpattern.c	/^gimp_dash_pattern_new_from_preset (GimpDashPreset preset)$/;"	f
gimp_dash_pattern_new_from_segments	core/gimpdashpattern.c	/^gimp_dash_pattern_new_from_segments (const gboolean *segments,$/;"	f
gimp_dash_pattern_to_value_array	core/gimpdashpattern.c	/^gimp_dash_pattern_to_value_array (GArray *pattern)$/;"	f
gimp_dash_preset_get_type	core/core-enums.c	/^gimp_dash_preset_get_type (void)$/;"	f
gimp_data_class_init	core/gimpdata.c	/^gimp_data_class_init (GimpDataClass *klass)$/;"	f	file:
gimp_data_constructor	core/gimpdata.c	/^gimp_data_constructor (GType                  type,$/;"	f	file:
gimp_data_create_filename	core/gimpdata.c	/^gimp_data_create_filename (GimpData    *data,$/;"	f
gimp_data_delete_from_disk	core/gimpdata.c	/^gimp_data_delete_from_disk (GimpData  *data,$/;"	f
gimp_data_dirty	core/gimpdata.c	/^gimp_data_dirty (GimpData *data)$/;"	f
gimp_data_duplicate	core/gimpdata.c	/^gimp_data_duplicate (GimpData *data)$/;"	f
gimp_data_editor_class_init	widgets/gimpdataeditor.c	/^gimp_data_editor_class_init (GimpDataEditorClass *klass)$/;"	f	file:
gimp_data_editor_constructor	widgets/gimpdataeditor.c	/^gimp_data_editor_constructor (GType                  type,$/;"	f	file:
gimp_data_editor_data_changed	widgets/gimpdataeditor.c	/^gimp_data_editor_data_changed (GimpContext    *context,$/;"	f	file:
gimp_data_editor_data_name_changed	widgets/gimpdataeditor.c	/^gimp_data_editor_data_name_changed (GimpObject     *object,$/;"	f	file:
gimp_data_editor_dispose	widgets/gimpdataeditor.c	/^gimp_data_editor_dispose (GObject *object)$/;"	f	file:
gimp_data_editor_docked_iface_init	widgets/gimpdataeditor.c	/^gimp_data_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_data_editor_get_aux_info	widgets/gimpdataeditor.c	/^gimp_data_editor_get_aux_info (GimpDocked *docked)$/;"	f	file:
gimp_data_editor_get_data	widgets/gimpdataeditor.c	/^gimp_data_editor_get_data (GimpDataEditor *editor)$/;"	f
gimp_data_editor_get_edit_active	widgets/gimpdataeditor.c	/^gimp_data_editor_get_edit_active (GimpDataEditor *editor)$/;"	f
gimp_data_editor_get_property	widgets/gimpdataeditor.c	/^gimp_data_editor_get_property (GObject    *object,$/;"	f	file:
gimp_data_editor_get_title	widgets/gimpdataeditor.c	/^gimp_data_editor_get_title (GimpDocked *docked)$/;"	f	file:
gimp_data_editor_init	widgets/gimpdataeditor.c	/^gimp_data_editor_init (GimpDataEditor *editor)$/;"	f	file:
gimp_data_editor_name_activate	widgets/gimpdataeditor.c	/^gimp_data_editor_name_activate (GtkWidget      *widget,$/;"	f	file:
gimp_data_editor_name_focus_out	widgets/gimpdataeditor.c	/^gimp_data_editor_name_focus_out (GtkWidget      *widget,$/;"	f	file:
gimp_data_editor_name_key_press	widgets/gimpdataeditor.c	/^gimp_data_editor_name_key_press (GtkWidget      *widget,$/;"	f	file:
gimp_data_editor_real_set_data	widgets/gimpdataeditor.c	/^gimp_data_editor_real_set_data (GimpDataEditor *editor,$/;"	f	file:
gimp_data_editor_revert_clicked	widgets/gimpdataeditor.c	/^gimp_data_editor_revert_clicked (GtkWidget      *widget,$/;"	f	file:
gimp_data_editor_save_clicked	widgets/gimpdataeditor.c	/^gimp_data_editor_save_clicked (GtkWidget      *widget,$/;"	f	file:
gimp_data_editor_save_dirty	widgets/gimpdataeditor.c	/^gimp_data_editor_save_dirty (GimpDataEditor *editor)$/;"	f	file:
gimp_data_editor_set_aux_info	widgets/gimpdataeditor.c	/^gimp_data_editor_set_aux_info (GimpDocked *docked,$/;"	f	file:
gimp_data_editor_set_context	widgets/gimpdataeditor.c	/^gimp_data_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_data_editor_set_data	widgets/gimpdataeditor.c	/^gimp_data_editor_set_data (GimpDataEditor *editor,$/;"	f
gimp_data_editor_set_edit_active	widgets/gimpdataeditor.c	/^gimp_data_editor_set_edit_active (GimpDataEditor *editor,$/;"	f
gimp_data_editor_set_property	widgets/gimpdataeditor.c	/^gimp_data_editor_set_property (GObject      *object,$/;"	f	file:
gimp_data_editor_style_set	widgets/gimpdataeditor.c	/^gimp_data_editor_style_set (GtkWidget *widget,$/;"	f	file:
gimp_data_error_quark	core/gimpdata.c	/^gimp_data_error_quark (void)$/;"	f
gimp_data_factory_class_init	core/gimpdatafactory.c	/^gimp_data_factory_class_init (GimpDataFactoryClass *klass)$/;"	f	file:
gimp_data_factory_data_delete	core/gimpdatafactory.c	/^gimp_data_factory_data_delete (GimpDataFactory  *factory,$/;"	f
gimp_data_factory_data_duplicate	core/gimpdatafactory.c	/^gimp_data_factory_data_duplicate (GimpDataFactory *factory,$/;"	f
gimp_data_factory_data_foreach	core/gimpdatafactory.c	/^gimp_data_factory_data_foreach (GimpDataFactory *factory,$/;"	f	file:
gimp_data_factory_data_free	core/gimpdatafactory.c	/^gimp_data_factory_data_free (GimpDataFactory *factory)$/;"	f
gimp_data_factory_data_get_standard	core/gimpdatafactory.c	/^gimp_data_factory_data_get_standard (GimpDataFactory *factory)$/;"	f
gimp_data_factory_data_init	core/gimpdatafactory.c	/^gimp_data_factory_data_init (GimpDataFactory *factory,$/;"	f
gimp_data_factory_data_load	core/gimpdatafactory.c	/^gimp_data_factory_data_load (GimpDataFactory *factory,$/;"	f	file:
gimp_data_factory_data_move_to_cache	core/gimpdatafactory.c	/^gimp_data_factory_data_move_to_cache (GimpDataFactory *factory,$/;"	f	file:
gimp_data_factory_data_new	core/gimpdatafactory.c	/^gimp_data_factory_data_new (GimpDataFactory *factory,$/;"	f
gimp_data_factory_data_refresh	core/gimpdatafactory.c	/^gimp_data_factory_data_refresh (GimpDataFactory *factory)$/;"	f
gimp_data_factory_data_reload	core/gimpdatafactory.c	/^gimp_data_factory_data_reload (GimpDataFactory *factory)$/;"	f	file:
gimp_data_factory_data_save	core/gimpdatafactory.c	/^gimp_data_factory_data_save (GimpDataFactory *factory)$/;"	f
gimp_data_factory_data_save_single	core/gimpdatafactory.c	/^gimp_data_factory_data_save_single (GimpDataFactory  *factory,$/;"	f
gimp_data_factory_finalize	core/gimpdatafactory.c	/^gimp_data_factory_finalize (GObject *object)$/;"	f	file:
gimp_data_factory_get_memsize	core/gimpdatafactory.c	/^gimp_data_factory_get_memsize (GimpObject *object,$/;"	f	file:
gimp_data_factory_get_save_dir	core/gimpdatafactory.c	/^gimp_data_factory_get_save_dir (GimpDataFactory *factory)$/;"	f	file:
gimp_data_factory_init	core/gimpdatafactory.c	/^gimp_data_factory_init (GimpDataFactory *factory)$/;"	f	file:
gimp_data_factory_load_data	core/gimpdatafactory.c	/^gimp_data_factory_load_data (const GimpDatafileData *file_data,$/;"	f	file:
gimp_data_factory_new	core/gimpdatafactory.c	/^gimp_data_factory_new (Gimp                             *gimp,$/;"	f
gimp_data_factory_refresh_cache_remove	core/gimpdatafactory.c	/^gimp_data_factory_refresh_cache_remove (gpointer key,$/;"	f	file:
gimp_data_factory_remove_cb	core/gimpdatafactory.c	/^gimp_data_factory_remove_cb (GimpDataFactory *factory,$/;"	f	file:
gimp_data_factory_view_activate_item	widgets/gimpdatafactoryview.c	/^gimp_data_factory_view_activate_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_data_factory_view_class_init	widgets/gimpdatafactoryview.c	/^gimp_data_factory_view_class_init (GimpDataFactoryViewClass *klass)$/;"	f	file:
gimp_data_factory_view_construct	widgets/gimpdatafactoryview.c	/^gimp_data_factory_view_construct (GimpDataFactoryView *factory_view,$/;"	f
gimp_data_factory_view_init	widgets/gimpdatafactoryview.c	/^gimp_data_factory_view_init (GimpDataFactoryView *view)$/;"	f	file:
gimp_data_factory_view_new	widgets/gimpdatafactoryview.c	/^gimp_data_factory_view_new (GimpViewType      view_type,$/;"	f
gimp_data_factory_view_tree_name_edited	widgets/gimpdatafactoryview.c	/^gimp_data_factory_view_tree_name_edited (GtkCellRendererText *cell,$/;"	f	file:
gimp_data_finalize	core/gimpdata.c	/^gimp_data_finalize (GObject *object)$/;"	f	file:
gimp_data_freeze	core/gimpdata.c	/^gimp_data_freeze (GimpData *data)$/;"	f
gimp_data_get_extension	core/gimpdata.c	/^gimp_data_get_extension (GimpData *data)$/;"	f
gimp_data_get_memsize	core/gimpdata.c	/^gimp_data_get_memsize (GimpObject *object,$/;"	f	file:
gimp_data_get_mime_type	core/gimpdata.c	/^gimp_data_get_mime_type (GimpData *data)$/;"	f
gimp_data_get_property	core/gimpdata.c	/^gimp_data_get_property (GObject    *object,$/;"	f	file:
gimp_data_get_type	core/gimpdata.c	/^gimp_data_get_type (void)$/;"	f
gimp_data_init	core/gimpdata.c	/^gimp_data_init (GimpData      *data,$/;"	f	file:
gimp_data_make_internal	core/gimpdata.c	/^gimp_data_make_internal (GimpData *data)$/;"	f
gimp_data_name_compare	core/gimpdata.c	/^gimp_data_name_compare (GimpData *data1,$/;"	f
gimp_data_real_dirty	core/gimpdata.c	/^gimp_data_real_dirty (GimpData *data)$/;"	f	file:
gimp_data_save	core/gimpdata.c	/^gimp_data_save (GimpData  *data,$/;"	f
gimp_data_set_filename	core/gimpdata.c	/^gimp_data_set_filename (GimpData    *data,$/;"	f
gimp_data_set_property	core/gimpdata.c	/^gimp_data_set_property (GObject      *object,$/;"	f	file:
gimp_data_thaw	core/gimpdata.c	/^gimp_data_thaw (GimpData *data)$/;"	f
gimp_dbus_open	main.c	/^gimp_dbus_open (const gchar **filenames,$/;"	f	file:
gimp_dbus_service_activate	widgets/gimpdbusservice.c	/^gimp_dbus_service_activate (GimpDBusService  *service,$/;"	f
gimp_dbus_service_class_init	widgets/gimpdbusservice.c	/^gimp_dbus_service_class_init (GimpDBusServiceClass *klass)$/;"	f	file:
gimp_dbus_service_init	widgets/gimpdbusservice.c	/^gimp_dbus_service_init (GimpDBusService *service)$/;"	f	file:
gimp_dbus_service_new	widgets/gimpdbusservice.c	/^gimp_dbus_service_new (Gimp *gimp)$/;"	f
gimp_dbus_service_open	widgets/gimpdbusservice.c	/^gimp_dbus_service_open (GimpDBusService  *service,$/;"	f
gimp_dbus_service_open_as_new	widgets/gimpdbusservice.c	/^gimp_dbus_service_open_as_new (GimpDBusService  *service,$/;"	f
gimp_debug_memsize	core/gimpobject.c	/^gboolean gimp_debug_memsize = FALSE;$/;"	v
gimp_debug_wrap_keys	plug-in/gimpplugindebug.c	/^static const GDebugKey gimp_debug_wrap_keys[] =$/;"	v	file:
gimp_delete_display	core/gimp-gui.c	/^gimp_delete_display (Gimp       *gimp,$/;"	f
gimp_device_info_changed	widgets/gimpdeviceinfo.c	/^gimp_device_info_changed (GimpDeviceInfo *device_info)$/;"	f
gimp_device_info_changed_by_device	widgets/gimpdeviceinfo.c	/^gimp_device_info_changed_by_device (GdkDevice *device)$/;"	f
gimp_device_info_class_init	widgets/gimpdeviceinfo.c	/^gimp_device_info_class_init (GimpDeviceInfoClass *klass)$/;"	f	file:
gimp_device_info_constructor	widgets/gimpdeviceinfo.c	/^gimp_device_info_constructor (GType                  type,$/;"	f	file:
gimp_device_info_finalize	widgets/gimpdeviceinfo.c	/^gimp_device_info_finalize (GObject *object)$/;"	f	file:
gimp_device_info_get_by_device	widgets/gimpdeviceinfo.c	/^gimp_device_info_get_by_device (GdkDevice *device)$/;"	f
gimp_device_info_get_property	widgets/gimpdeviceinfo.c	/^gimp_device_info_get_property (GObject    *object,$/;"	f	file:
gimp_device_info_init	widgets/gimpdeviceinfo.c	/^gimp_device_info_init (GimpDeviceInfo *device_info)$/;"	f	file:
gimp_device_info_new	widgets/gimpdeviceinfo.c	/^gimp_device_info_new (Gimp        *gimp,$/;"	f
gimp_device_info_set_from_device	widgets/gimpdeviceinfo.c	/^gimp_device_info_set_from_device (GimpDeviceInfo *device_info,$/;"	f
gimp_device_info_set_property	widgets/gimpdeviceinfo.c	/^gimp_device_info_set_property (GObject      *object,$/;"	f	file:
gimp_device_manager_free	widgets/gimpdevices.c	/^gimp_device_manager_free (GimpDeviceManager *manager)$/;"	f	file:
gimp_device_manager_get	widgets/gimpdevices.c	/^gimp_device_manager_get (Gimp *gimp)$/;"	f	file:
gimp_device_status_class_init	widgets/gimpdevicestatus.c	/^gimp_device_status_class_init (GimpDeviceStatusClass *klass)$/;"	f	file:
gimp_device_status_constructor	widgets/gimpdevicestatus.c	/^gimp_device_status_constructor (GType                  type,$/;"	f	file:
gimp_device_status_destroy	widgets/gimpdevicestatus.c	/^gimp_device_status_destroy (GtkObject *object)$/;"	f	file:
gimp_device_status_device_add	widgets/gimpdevicestatus.c	/^gimp_device_status_device_add (GimpContainer    *devices,$/;"	f	file:
gimp_device_status_device_remove	widgets/gimpdevicestatus.c	/^gimp_device_status_device_remove (GimpContainer    *devices,$/;"	f	file:
gimp_device_status_init	widgets/gimpdevicestatus.c	/^gimp_device_status_init (GimpDeviceStatus *status)$/;"	f	file:
gimp_device_status_new	widgets/gimpdevicestatus.c	/^gimp_device_status_new (Gimp *gimp)$/;"	f
gimp_device_status_save_clicked	widgets/gimpdevicestatus.c	/^gimp_device_status_save_clicked (GtkWidget        *button,$/;"	f	file:
gimp_device_status_set_property	widgets/gimpdevicestatus.c	/^gimp_device_status_set_property (GObject      *object,$/;"	f	file:
gimp_device_status_update	widgets/gimpdevicestatus.c	/^gimp_device_status_update (GimpDeviceStatus *status)$/;"	f
gimp_device_status_update_entry	widgets/gimpdevicestatus.c	/^gimp_device_status_update_entry (GimpDeviceInfo        *device_info,$/;"	f	file:
gimp_device_status_view_clicked	widgets/gimpdevicestatus.c	/^gimp_device_status_view_clicked (GtkWidget       *widget,$/;"	f	file:
gimp_devices_check_change	widgets/gimpdevices.c	/^gimp_devices_check_change (Gimp     *gimp,$/;"	f
gimp_devices_clear	widgets/gimpdevices.c	/^gimp_devices_clear (Gimp    *gimp,$/;"	f
gimp_devices_display_closed	widgets/gimpdevices.c	/^gimp_devices_display_closed (GdkDisplay        *gdk_display,$/;"	f	file:
gimp_devices_display_opened	widgets/gimpdevices.c	/^gimp_devices_display_opened (GdkDisplayManager *disp_manager,$/;"	f	file:
gimp_devices_exit	widgets/gimpdevices.c	/^gimp_devices_exit (Gimp *gimp)$/;"	f
gimp_devices_get_current	widgets/gimpdevices.c	/^gimp_devices_get_current (Gimp *gimp)$/;"	f
gimp_devices_get_list	widgets/gimpdevices.c	/^gimp_devices_get_list (Gimp *gimp)$/;"	f
gimp_devices_init	widgets/gimpdevices.c	/^gimp_devices_init (Gimp                   *gimp,$/;"	f
gimp_devices_restore	widgets/gimpdevices.c	/^gimp_devices_restore (Gimp *gimp)$/;"	f
gimp_devices_save	widgets/gimpdevices.c	/^gimp_devices_save (Gimp     *gimp,$/;"	f
gimp_devices_select_device	widgets/gimpdevices.c	/^gimp_devices_select_device (Gimp      *gimp,$/;"	f
gimp_dialog_factories_clear_foreach	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_clear_foreach (gconstpointer      key,$/;"	f	file:
gimp_dialog_factories_hide_foreach	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_hide_foreach (gconstpointer      key,$/;"	f	file:
gimp_dialog_factories_restore_foreach	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_restore_foreach (gconstpointer      key,$/;"	f	file:
gimp_dialog_factories_save_foreach	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_save_foreach (gconstpointer      key,$/;"	f	file:
gimp_dialog_factories_session_clear	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_session_clear (void)$/;"	f
gimp_dialog_factories_session_restore	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_session_restore (void)$/;"	f
gimp_dialog_factories_session_save	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_session_save (GimpConfigWriter *writer)$/;"	f
gimp_dialog_factories_set_busy	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_set_busy (void)$/;"	f
gimp_dialog_factories_set_busy_foreach	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_set_busy_foreach (gconstpointer      key,$/;"	f	file:
gimp_dialog_factories_show_foreach	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_show_foreach (gconstpointer      key,$/;"	f	file:
gimp_dialog_factories_toggle	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_toggle (void)$/;"	f
gimp_dialog_factories_unset_busy	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_unset_busy (void)$/;"	f
gimp_dialog_factories_unset_busy_foreach	widgets/gimpdialogfactory.c	/^gimp_dialog_factories_unset_busy_foreach (gconstpointer      key,$/;"	f	file:
gimp_dialog_factory_add_dialog	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_add_dialog (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_add_foreign	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_add_foreign (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_class_init	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_class_init (GimpDialogFactoryClass *klass)$/;"	f	file:
gimp_dialog_factory_default_constructor	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_default_constructor (GimpDialogFactory      *factory,$/;"	f	file:
gimp_dialog_factory_dialog_configure	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_dialog_configure (GtkWidget         *dialog,$/;"	f	file:
gimp_dialog_factory_dialog_new	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_dialog_new (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_dialog_new_internal	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_dialog_new_internal (GimpDialogFactory *factory,$/;"	f	file:
gimp_dialog_factory_dialog_raise	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_dialog_raise (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_dispose	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_dispose (GObject *object)$/;"	f	file:
gimp_dialog_factory_dock_new	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_dock_new (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_dockable_new	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_dockable_new (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_entry_key	widgets/gimpdialogfactory.c	/^static GQuark gimp_dialog_factory_entry_key = 0;$/;"	v	file:
gimp_dialog_factory_finalize	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_finalize (GObject *object)$/;"	f	file:
gimp_dialog_factory_find_entry	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_find_entry (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_find_session_info	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_find_session_info (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_from_name	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_from_name (const gchar *name)$/;"	f
gimp_dialog_factory_from_widget	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_from_widget (GtkWidget               *dialog,$/;"	f
gimp_dialog_factory_get_toolbox	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_get_toolbox (GimpDialogFactory *toolbox_factory)$/;"	f	file:
gimp_dialog_factory_hide_dialog	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_hide_dialog (GtkWidget *dialog)$/;"	f
gimp_dialog_factory_init	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_init (GimpDialogFactory *factory)$/;"	f	file:
gimp_dialog_factory_key	widgets/gimpdialogfactory.c	/^static GQuark gimp_dialog_factory_key       = 0;$/;"	v	file:
gimp_dialog_factory_new	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_new (const gchar       *name,$/;"	f
gimp_dialog_factory_register_entry	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_register_entry (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_remove_dialog	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_remove_dialog (GimpDialogFactory *factory,$/;"	f
gimp_dialog_factory_set_constructor	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_set_constructor (GimpDialogFactory     *factory,$/;"	f
gimp_dialog_factory_set_user_pos	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_set_user_pos (GtkWidget         *dialog,$/;"	f	file:
gimp_dialog_factory_set_widget_data	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_set_widget_data (GtkWidget               *dialog,$/;"	f	file:
gimp_dialog_factory_show_toolbox	widgets/gimpdialogfactory.c	/^gimp_dialog_factory_show_toolbox (GimpDialogFactory *toolbox_factory)$/;"	f
gimp_dirty_mask_get_type	core/core-enums.c	/^gimp_dirty_mask_get_type (void)$/;"	f
gimp_display_class_init	display/gimpdisplay.c	/^gimp_display_class_init (GimpDisplayClass *klass)$/;"	f	file:
gimp_display_config_class_init	config/gimpdisplayconfig.c	/^gimp_display_config_class_init (GimpDisplayConfigClass *klass)$/;"	f	file:
gimp_display_config_finalize	config/gimpdisplayconfig.c	/^gimp_display_config_finalize (GObject *object)$/;"	f	file:
gimp_display_config_fullscreen_notify	config/gimpdisplayconfig.c	/^gimp_display_config_fullscreen_notify (GObject    *object,$/;"	f	file:
gimp_display_config_get_property	config/gimpdisplayconfig.c	/^gimp_display_config_get_property (GObject    *object,$/;"	f	file:
gimp_display_config_init	config/gimpdisplayconfig.c	/^gimp_display_config_init (GimpDisplayConfig *config)$/;"	f	file:
gimp_display_config_set_property	config/gimpdisplayconfig.c	/^gimp_display_config_set_property (GObject      *object,$/;"	f	file:
gimp_display_config_view_notify	config/gimpdisplayconfig.c	/^gimp_display_config_view_notify (GObject    *object,$/;"	f	file:
gimp_display_connect	display/gimpdisplay-handlers.c	/^gimp_display_connect (GimpDisplay *display,$/;"	f
gimp_display_delete	display/gimpdisplay.c	/^gimp_display_delete (GimpDisplay *display)$/;"	f
gimp_display_disconnect	display/gimpdisplay-handlers.c	/^gimp_display_disconnect (GimpDisplay *display)$/;"	f
gimp_display_flush	display/gimpdisplay.c	/^gimp_display_flush (GimpDisplay *display)$/;"	f
gimp_display_flush_handler	display/gimpdisplay-handlers.c	/^gimp_display_flush_handler (GimpImage   *image,$/;"	f	file:
gimp_display_flush_now	display/gimpdisplay.c	/^gimp_display_flush_now (GimpDisplay *display)$/;"	f
gimp_display_flush_whenever	display/gimpdisplay.c	/^gimp_display_flush_whenever (GimpDisplay *display,$/;"	f	file:
gimp_display_get_ID	display/gimpdisplay.c	/^gimp_display_get_ID (GimpDisplay *display)$/;"	f
gimp_display_get_by_ID	display/gimpdisplay.c	/^gimp_display_get_by_ID (Gimp *gimp,$/;"	f
gimp_display_get_property	display/gimpdisplay.c	/^gimp_display_get_property (GObject    *object,$/;"	f	file:
gimp_display_id_get_type	core/gimpparamspecs.c	/^gimp_display_id_get_type (void)$/;"	f
gimp_display_init	display/gimpdisplay.c	/^gimp_display_init (GimpDisplay *display)$/;"	f	file:
gimp_display_new	display/gimpdisplay.c	/^gimp_display_new (GimpImage       *image,$/;"	f
gimp_display_options_class_init	display/gimpdisplayoptions.c	/^gimp_display_options_class_init (GimpDisplayOptionsClass *klass)$/;"	f	file:
gimp_display_options_fullscreen_class_init	display/gimpdisplayoptions.c	/^gimp_display_options_fullscreen_class_init (GimpDisplayOptionsFullscreenClass *klass)$/;"	f	file:
gimp_display_options_fullscreen_init	display/gimpdisplayoptions.c	76;"	d	file:
gimp_display_options_get_property	display/gimpdisplayoptions.c	/^gimp_display_options_get_property (GObject    *object,$/;"	f	file:
gimp_display_options_init	display/gimpdisplayoptions.c	/^gimp_display_options_init (GimpDisplayOptions *options)$/;"	f	file:
gimp_display_options_set_property	display/gimpdisplayoptions.c	/^gimp_display_options_set_property (GObject      *object,$/;"	f	file:
gimp_display_paint_area	display/gimpdisplay.c	/^gimp_display_paint_area (GimpDisplay *display,$/;"	f	file:
gimp_display_progress_canceled	display/gimpdisplay.c	/^gimp_display_progress_canceled (GimpProgress *progress,$/;"	f	file:
gimp_display_progress_end	display/gimpdisplay.c	/^gimp_display_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_display_progress_get_value	display/gimpdisplay.c	/^gimp_display_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_display_progress_get_window	display/gimpdisplay.c	/^gimp_display_progress_get_window (GimpProgress *progress)$/;"	f	file:
gimp_display_progress_iface_init	display/gimpdisplay.c	/^gimp_display_progress_iface_init (GimpProgressInterface *iface)$/;"	f	file:
gimp_display_progress_is_active	display/gimpdisplay.c	/^gimp_display_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_display_progress_message	display/gimpdisplay.c	/^gimp_display_progress_message (GimpProgress        *progress,$/;"	f	file:
gimp_display_progress_pulse	display/gimpdisplay.c	/^gimp_display_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_display_progress_set_text	display/gimpdisplay.c	/^gimp_display_progress_set_text (GimpProgress *progress,$/;"	f	file:
gimp_display_progress_set_value	display/gimpdisplay.c	/^gimp_display_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_display_progress_start	display/gimpdisplay.c	/^gimp_display_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_display_reconnect	display/gimpdisplay.c	/^gimp_display_reconnect (GimpDisplay *display,$/;"	f
gimp_display_saved_handler	display/gimpdisplay-handlers.c	/^gimp_display_saved_handler (GimpImage   *image,$/;"	f	file:
gimp_display_set_property	display/gimpdisplay.c	/^gimp_display_set_property (GObject      *object,$/;"	f	file:
gimp_display_shell_ants_speed_notify_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_ants_speed_notify_handler (GObject          *config,$/;"	f	file:
gimp_display_shell_autoscroll_start	display/gimpdisplayshell-autoscroll.c	/^gimp_display_shell_autoscroll_start (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_autoscroll_stop	display/gimpdisplayshell-autoscroll.c	/^gimp_display_shell_autoscroll_stop (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_autoscroll_timeout	display/gimpdisplayshell-autoscroll.c	/^gimp_display_shell_autoscroll_timeout (gpointer data)$/;"	f	file:
gimp_display_shell_canvas_expose	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_canvas_expose (GtkWidget        *widget,$/;"	f
gimp_display_shell_canvas_realize	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_canvas_realize (GtkWidget        *canvas,$/;"	f
gimp_display_shell_canvas_size_allocate	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_canvas_size_allocate (GtkWidget        *widget,$/;"	f
gimp_display_shell_canvas_tool_events	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_canvas_tool_events (GtkWidget        *canvas,$/;"	f
gimp_display_shell_check_device_cursor	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_check_device_cursor (GimpDisplayShell *shell)$/;"	f	file:
gimp_display_shell_check_notify_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_check_notify_handler (GObject          *config,$/;"	f	file:
gimp_display_shell_class_init	display/gimpdisplayshell.c	/^gimp_display_shell_class_init (GimpDisplayShellClass *klass)$/;"	f	file:
gimp_display_shell_clean_dirty_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_clean_dirty_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_clear_cursor	display/gimpdisplayshell-cursor.c	/^gimp_display_shell_clear_cursor (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_close	display/gimpdisplayshell-close.c	/^gimp_display_shell_close (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_close_dialog	display/gimpdisplayshell-close.c	/^gimp_display_shell_close_dialog (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_close_name_changed	display/gimpdisplayshell-close.c	/^gimp_display_shell_close_name_changed (GimpImage      *image,$/;"	f	file:
gimp_display_shell_close_response	display/gimpdisplayshell-close.c	/^gimp_display_shell_close_response (GtkWidget        *widget,$/;"	f	file:
gimp_display_shell_close_time_changed	display/gimpdisplayshell-close.c	/^gimp_display_shell_close_time_changed (GimpMessageBox *box)$/;"	f	file:
gimp_display_shell_compress_motion	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_compress_motion (GimpDisplayShell *shell)$/;"	f	file:
gimp_display_shell_connect	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_connect (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_delete_event	display/gimpdisplayshell.c	/^gimp_display_shell_delete_event (GtkWidget   *widget,$/;"	f	file:
gimp_display_shell_destroy	display/gimpdisplayshell.c	/^gimp_display_shell_destroy (GtkObject *object)$/;"	f	file:
gimp_display_shell_disconnect	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_disconnect (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_dnd_bucket_fill	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_dnd_bucket_fill (GimpDisplayShell   *shell,$/;"	f	file:
gimp_display_shell_dnd_flush	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_dnd_flush (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_dnd_init	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_dnd_init (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_draw_area	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_area (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_draw_cursor	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_cursor (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_draw_grid	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_grid (GimpDisplayShell   *shell,$/;"	f
gimp_display_shell_draw_guide	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_guide (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_draw_guides	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_guides (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_draw_pen	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_pen (GimpDisplayShell  *shell,$/;"	f
gimp_display_shell_draw_quad	display/gimpdisplayshell-preview.c	/^gimp_display_shell_draw_quad (GimpDrawable *texture,$/;"	f	file:
gimp_display_shell_draw_sample_point	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_sample_point (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_draw_sample_points	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_sample_points (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_draw_tri	display/gimpdisplayshell-preview.c	/^gimp_display_shell_draw_tri (GimpDrawable *texture,$/;"	f	file:
gimp_display_shell_draw_tri_row	display/gimpdisplayshell-preview.c	/^gimp_display_shell_draw_tri_row (GimpDrawable *texture,$/;"	f	file:
gimp_display_shell_draw_tri_row_mask	display/gimpdisplayshell-preview.c	/^gimp_display_shell_draw_tri_row_mask (GimpDrawable *texture,$/;"	f	file:
gimp_display_shell_draw_vector	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_vector (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_draw_vectors	display/gimpdisplayshell-draw.c	/^gimp_display_shell_draw_vectors (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_drop_buffer	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_buffer (GtkWidget    *widget,$/;"	f	file:
gimp_display_shell_drop_color	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_color (GtkWidget     *widget,$/;"	f	file:
gimp_display_shell_drop_component	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_component (GtkWidget       *widget,$/;"	f	file:
gimp_display_shell_drop_drawable	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_drawable (GtkWidget    *widget,$/;"	f	file:
gimp_display_shell_drop_pattern	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_pattern (GtkWidget    *widget,$/;"	f	file:
gimp_display_shell_drop_pixbuf	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_pixbuf (GtkWidget *widget,$/;"	f	file:
gimp_display_shell_drop_svg	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_svg (GtkWidget     *widget,$/;"	f	file:
gimp_display_shell_drop_uri_list	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_uri_list (GtkWidget *widget,$/;"	f	file:
gimp_display_shell_drop_vectors	display/gimpdisplayshell-dnd.c	/^gimp_display_shell_drop_vectors (GtkWidget    *widget,$/;"	f	file:
gimp_display_shell_events	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_events (GtkWidget        *widget,$/;"	f
gimp_display_shell_expose_area	display/gimpdisplayshell.c	/^gimp_display_shell_expose_area (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_expose_full	display/gimpdisplayshell.c	/^gimp_display_shell_expose_full (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_expose_guide	display/gimpdisplayshell.c	/^gimp_display_shell_expose_guide (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_expose_sample_point	display/gimpdisplayshell.c	/^gimp_display_shell_expose_sample_point (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_filter_changed	display/gimpdisplayshell-filter.c	/^gimp_display_shell_filter_changed (GimpColorDisplayStack *stack,$/;"	f	file:
gimp_display_shell_filter_changed_idle	display/gimpdisplayshell-filter.c	/^gimp_display_shell_filter_changed_idle (gpointer data)$/;"	f	file:
gimp_display_shell_filter_dialog_free	display/gimpdisplayshell-filter-dialog.c	/^gimp_display_shell_filter_dialog_free (ColorDisplayDialog *cdd)$/;"	f	file:
gimp_display_shell_filter_dialog_new	display/gimpdisplayshell-filter-dialog.c	/^gimp_display_shell_filter_dialog_new (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_filter_dialog_response	display/gimpdisplayshell-filter-dialog.c	/^gimp_display_shell_filter_dialog_response (GtkWidget          *widget,$/;"	f	file:
gimp_display_shell_filter_new	display/gimpdisplayshell-filter.c	/^gimp_display_shell_filter_new (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_filter_set	display/gimpdisplayshell-filter.c	/^gimp_display_shell_filter_set (GimpDisplayShell      *shell,$/;"	f
gimp_display_shell_finalize	display/gimpdisplayshell.c	/^gimp_display_shell_finalize (GObject *object)$/;"	f	file:
gimp_display_shell_flush	display/gimpdisplayshell.c	/^gimp_display_shell_flush (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_format_title	display/gimpdisplayshell-title.c	/^gimp_display_shell_format_title (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_get_device_coords	display/gimpdisplayshell-coords.c	/^gimp_display_shell_get_device_coords (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_get_device_state	display/gimpdisplayshell-coords.c	/^gimp_display_shell_get_device_state (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_get_event_coords	display/gimpdisplayshell-coords.c	/^gimp_display_shell_get_event_coords (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_get_event_state	display/gimpdisplayshell-coords.c	/^gimp_display_shell_get_event_state (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_get_fullscreen	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_fullscreen (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_grid_gc	display/gimpdisplayshell-draw.c	/^gimp_display_shell_get_grid_gc (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_get_icc_profile	display/gimpdisplayshell.c	/^gimp_display_shell_get_icc_profile (GimpColorManaged *managed,$/;"	f	file:
gimp_display_shell_get_padding	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_padding (GimpDisplayShell      *shell,$/;"	f
gimp_display_shell_get_pen_gc	display/gimpdisplayshell-draw.c	/^gimp_display_shell_get_pen_gc (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_get_property	display/gimpdisplayshell.c	/^gimp_display_shell_get_property (GObject    *object,$/;"	f	file:
gimp_display_shell_get_show_grid	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_grid (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_guides	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_guides (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_layer	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_layer (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_menubar	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_menubar (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_rulers	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_rulers (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_sample_points	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_sample_points (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_scrollbars	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_scrollbars (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_selection	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_selection (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_statusbar	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_statusbar (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_show_transform	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_show_transform (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_snap_to_canvas	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_snap_to_canvas (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_snap_to_grid	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_snap_to_grid (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_snap_to_guides	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_snap_to_guides (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_snap_to_vectors	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_get_snap_to_vectors (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_get_time_coords	display/gimpdisplayshell-coords.c	/^gimp_display_shell_get_time_coords (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_get_unit	display/gimpdisplayshell.c	/^gimp_display_shell_get_unit (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_grid_notify_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_grid_notify_handler (GimpGrid         *grid,$/;"	f	file:
gimp_display_shell_hide_tooltip	display/gimpdisplayshell.c	/^gimp_display_shell_hide_tooltip (GimpUIManager    *manager,$/;"	f	file:
gimp_display_shell_hruler_button_press	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_hruler_button_press (GtkWidget        *widget,$/;"	f
gimp_display_shell_hscrollbar_update	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_hscrollbar_update (GtkAdjustment    *adjustment,$/;"	f	file:
gimp_display_shell_idle_update_icon	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_idle_update_icon (gpointer data)$/;"	f	file:
gimp_display_shell_init	display/gimpdisplayshell.c	/^gimp_display_shell_init (GimpDisplayShell *shell)$/;"	f	file:
gimp_display_shell_invalidate_preview_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_invalidate_preview_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_key_to_state	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_key_to_state (gint key)$/;"	f	file:
gimp_display_shell_layer_select_init	display/gimpdisplayshell-layer-select.c	/^gimp_display_shell_layer_select_init (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_mask_bounds	display/gimpdisplayshell.c	/^gimp_display_shell_mask_bounds (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_menu_position	display/gimpdisplayshell.c	/^gimp_display_shell_menu_position (GtkMenu  *menu,$/;"	f	file:
gimp_display_shell_monitor_res_notify_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_monitor_res_notify_handler (GObject          *config,$/;"	f	file:
gimp_display_shell_name_changed_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_name_changed_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_nav_button_press	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_nav_button_press (GtkWidget        *widget,$/;"	f
gimp_display_shell_nav_size_notify_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_nav_size_notify_handler (GObject          *config,$/;"	f	file:
gimp_display_shell_new	display/gimpdisplayshell.c	/^gimp_display_shell_new (GimpDisplay     *display,$/;"	f
gimp_display_shell_origin_button_press	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_origin_button_press (GtkWidget        *widget,$/;"	f
gimp_display_shell_padding_notify_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_padding_notify_handler (GObject          *config,$/;"	f	file:
gimp_display_shell_pause	display/gimpdisplayshell.c	/^gimp_display_shell_pause (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_popup_menu	display/gimpdisplayshell.c	/^gimp_display_shell_popup_menu (GtkWidget *widget)$/;"	f	file:
gimp_display_shell_preview_transform	display/gimpdisplayshell-preview.c	/^gimp_display_shell_preview_transform (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_profile_changed_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_profile_changed_handler (GimpColorManaged *image,$/;"	f	file:
gimp_display_shell_progress_end	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_display_shell_progress_get_value	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_display_shell_progress_get_window	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_get_window (GimpProgress *progress)$/;"	f	file:
gimp_display_shell_progress_iface_init	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_iface_init (GimpProgressInterface *iface)$/;"	f
gimp_display_shell_progress_is_active	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_display_shell_progress_message	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_message (GimpProgress        *progress,$/;"	f	file:
gimp_display_shell_progress_pulse	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_display_shell_progress_set_text	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_set_text (GimpProgress *progress,$/;"	f	file:
gimp_display_shell_progress_set_value	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_display_shell_progress_start	display/gimpdisplayshell-progress.c	/^gimp_display_shell_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_display_shell_quick_mask_button_press	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_quick_mask_button_press (GtkWidget        *widget,$/;"	f
gimp_display_shell_quick_mask_changed_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_quick_mask_changed_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_quick_mask_toggled	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_quick_mask_toggled (GtkWidget        *widget,$/;"	f
gimp_display_shell_real_scaled	display/gimpdisplayshell.c	/^gimp_display_shell_real_scaled (GimpDisplayShell *shell)$/;"	f	file:
gimp_display_shell_real_set_cursor	display/gimpdisplayshell-cursor.c	/^gimp_display_shell_real_set_cursor (GimpDisplayShell   *shell,$/;"	f	file:
gimp_display_shell_reconnect	display/gimpdisplayshell.c	/^gimp_display_shell_reconnect (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_render	display/gimpdisplayshell-render.c	/^gimp_display_shell_render (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_render_exit	display/gimpdisplayshell-render.c	/^gimp_display_shell_render_exit (Gimp *gimp)$/;"	f
gimp_display_shell_render_highlight	display/gimpdisplayshell-render.c	/^gimp_display_shell_render_highlight (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_render_info_scale	display/gimpdisplayshell-render.c	/^gimp_display_shell_render_info_scale (RenderInfo       *info,$/;"	f	file:
gimp_display_shell_render_init	display/gimpdisplayshell-render.c	/^gimp_display_shell_render_init (Gimp *gimp)$/;"	f
gimp_display_shell_render_mask	display/gimpdisplayshell-render.c	/^gimp_display_shell_render_mask (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_render_setup_notify	display/gimpdisplayshell-render.c	/^gimp_display_shell_render_setup_notify (GObject    *config,$/;"	f	file:
gimp_display_shell_resolution_changed_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_resolution_changed_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_resume	display/gimpdisplayshell.c	/^gimp_display_shell_resume (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_ruler_button_press	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_ruler_button_press (GtkWidget        *widget,$/;"	f	file:
gimp_display_shell_scale	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_scale_by_values	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_by_values (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_scale_can_revert	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_can_revert (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scale_changed	display/gimpdisplayshell.c	/^gimp_display_shell_scale_changed (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scale_dialog	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_dialog (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scale_dialog_free	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_dialog_free (ScaleDialogData *dialog)$/;"	f	file:
gimp_display_shell_scale_dialog_response	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_dialog_response (GtkWidget       *widget,$/;"	f	file:
gimp_display_shell_scale_fit_in	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_fit_in (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scale_fit_to	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_fit_to (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scale_resize	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_resize (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_scale_revert	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_revert (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scale_set_dot_for_dot	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_set_dot_for_dot (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_scale_setup	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_setup (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scale_shrink_wrap	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_shrink_wrap (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scale_to	display/gimpdisplayshell-scale.c	/^gimp_display_shell_scale_to (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_scaled	display/gimpdisplayshell.c	/^gimp_display_shell_scaled (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_screen_changed	display/gimpdisplayshell.c	/^gimp_display_shell_screen_changed (GtkWidget *widget,$/;"	f	file:
gimp_display_shell_scroll	display/gimpdisplayshell-scroll.c	/^gimp_display_shell_scroll (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_scroll_clamp_offsets	display/gimpdisplayshell-scroll.c	/^gimp_display_shell_scroll_clamp_offsets (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_scrolled	display/gimpdisplayshell.c	/^gimp_display_shell_scrolled (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_selection_control	display/gimpdisplayshell-selection.c	/^gimp_display_shell_selection_control (GimpDisplayShell     *shell,$/;"	f
gimp_display_shell_selection_control_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_selection_control_handler (GimpImage            *image,$/;"	f	file:
gimp_display_shell_selection_free	display/gimpdisplayshell-selection.c	/^gimp_display_shell_selection_free (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_selection_init	display/gimpdisplayshell-selection.c	/^gimp_display_shell_selection_init (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_selection_layer_set_hidden	display/gimpdisplayshell-selection.c	/^gimp_display_shell_selection_layer_set_hidden (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_selection_set_hidden	display/gimpdisplayshell-selection.c	/^gimp_display_shell_selection_set_hidden (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_cursor	display/gimpdisplayshell-cursor.c	/^gimp_display_shell_set_cursor (GimpDisplayShell   *shell,$/;"	f
gimp_display_shell_set_fullscreen	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_fullscreen (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_highlight	display/gimpdisplayshell.c	/^gimp_display_shell_set_highlight (GimpDisplayShell   *shell,$/;"	f
gimp_display_shell_set_mask	display/gimpdisplayshell.c	/^gimp_display_shell_set_mask (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_override_cursor	display/gimpdisplayshell-cursor.c	/^gimp_display_shell_set_override_cursor (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_padding	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_padding (GimpDisplayShell      *shell,$/;"	f
gimp_display_shell_set_property	display/gimpdisplayshell.c	/^gimp_display_shell_set_property (GObject      *object,$/;"	f	file:
gimp_display_shell_set_show_grid	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_grid (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_guides	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_guides (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_layer	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_layer (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_menubar	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_menubar (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_rulers	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_rulers (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_sample_points	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_sample_points (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_scrollbars	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_scrollbars (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_selection	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_selection (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_statusbar	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_statusbar (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_show_transform	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_show_transform (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_snap_to_canvas	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_snap_to_canvas (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_snap_to_grid	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_snap_to_grid (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_snap_to_guides	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_snap_to_guides (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_snap_to_vectors	display/gimpdisplayshell-appearance.c	/^gimp_display_shell_set_snap_to_vectors (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_set_unit	display/gimpdisplayshell.c	/^gimp_display_shell_set_unit (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_show_tooltip	display/gimpdisplayshell.c	/^gimp_display_shell_show_tooltip (GimpUIManager    *manager,$/;"	f	file:
gimp_display_shell_shrink_wrap	display/gimpdisplayshell.c	/^gimp_display_shell_shrink_wrap (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_size_changed_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_size_changed_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_snap_coords	display/gimpdisplayshell.c	/^gimp_display_shell_snap_coords (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_space_pressed	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_space_pressed (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_space_released	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_space_released (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_start_scrolling	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_start_scrolling (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_stop_scrolling	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_stop_scrolling (GimpDisplayShell *shell)$/;"	f	file:
gimp_display_shell_title_init	display/gimpdisplayshell-title.c	/^gimp_display_shell_title_init (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_title_notify_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_title_notify_handler (GObject          *config,$/;"	f	file:
gimp_display_shell_title_update	display/gimpdisplayshell-title.c	/^gimp_display_shell_title_update (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_trace_tri_edge	display/gimpdisplayshell-preview.c	/^gimp_display_shell_trace_tri_edge (gint *dest,$/;"	f	file:
gimp_display_shell_transform_coordinate	display/gimpdisplayshell-transform.c	/^gimp_display_shell_transform_coordinate (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_transform_coords	display/gimpdisplayshell-transform.c	/^gimp_display_shell_transform_coords (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_transform_points	display/gimpdisplayshell-transform.c	/^gimp_display_shell_transform_points (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_transform_segments	display/gimpdisplayshell-transform.c	/^gimp_display_shell_transform_segments (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_transform_xy	display/gimpdisplayshell-transform.c	/^gimp_display_shell_transform_xy (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_transform_xy_f	display/gimpdisplayshell-transform.c	/^gimp_display_shell_transform_xy_f  (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_undo_event_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_undo_event_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_unrealize	display/gimpdisplayshell.c	/^gimp_display_shell_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_display_shell_unset_override_cursor	display/gimpdisplayshell-cursor.c	/^gimp_display_shell_unset_override_cursor (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_untransform_coordinate	display/gimpdisplayshell-transform.c	/^gimp_display_shell_untransform_coordinate (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_untransform_viewport	display/gimpdisplayshell-transform.c	/^gimp_display_shell_untransform_viewport (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_untransform_xy	display/gimpdisplayshell-transform.c	/^gimp_display_shell_untransform_xy (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_untransform_xy_f	display/gimpdisplayshell-transform.c	/^gimp_display_shell_untransform_xy_f (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_update_cursor	display/gimpdisplayshell-cursor.c	/^gimp_display_shell_update_cursor (GimpDisplayShell *shell,$/;"	f
gimp_display_shell_update_focus	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_update_focus (GimpDisplayShell *shell,$/;"	f	file:
gimp_display_shell_update_guide_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_update_guide_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_update_icon	display/gimpdisplayshell.c	/^gimp_display_shell_update_icon (GimpDisplayShell *shell)$/;"	f
gimp_display_shell_update_sample_point_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_update_sample_point_handler (GimpImage        *image,$/;"	f	file:
gimp_display_shell_update_title_idle	display/gimpdisplayshell-title.c	/^gimp_display_shell_update_title_idle (gpointer data)$/;"	f	file:
gimp_display_shell_vectors_add_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_vectors_add_handler (GimpContainer    *container,$/;"	f	file:
gimp_display_shell_vectors_freeze_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_vectors_freeze_handler (GimpVectors      *vectors,$/;"	f	file:
gimp_display_shell_vectors_remove_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_vectors_remove_handler (GimpContainer    *container,$/;"	f	file:
gimp_display_shell_vectors_thaw_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_vectors_thaw_handler (GimpVectors      *vectors,$/;"	f	file:
gimp_display_shell_vectors_visible_handler	display/gimpdisplayshell-handlers.c	/^gimp_display_shell_vectors_visible_handler (GimpVectors      *vectors,$/;"	f	file:
gimp_display_shell_vruler_button_press	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_vruler_button_press (GtkWidget        *widget,$/;"	f
gimp_display_shell_vscrollbar_update	display/gimpdisplayshell-callbacks.c	/^gimp_display_shell_vscrollbar_update (GtkAdjustment    *adjustment,$/;"	f	file:
gimp_display_update_area	display/gimpdisplay.c	/^gimp_display_update_area (GimpDisplay *display,$/;"	f
gimp_display_update_handler	display/gimpdisplay-handlers.c	/^gimp_display_update_handler (GimpProjection *projection,$/;"	f	file:
gimp_displays_delete	display/gimpdisplay-foreach.c	/^gimp_displays_delete (Gimp *gimp)$/;"	f
gimp_displays_dirty	display/gimpdisplay-foreach.c	/^gimp_displays_dirty (Gimp *gimp)$/;"	f
gimp_displays_dirty_images_disconnect	display/gimpdisplay-foreach.c	/^gimp_displays_dirty_images_disconnect (GimpContainer *dirty_container,$/;"	f	file:
gimp_displays_get_dirty_images	display/gimpdisplay-foreach.c	/^gimp_displays_get_dirty_images (Gimp *gimp)$/;"	f
gimp_displays_image_clean_callback	display/gimpdisplay-foreach.c	/^gimp_displays_image_clean_callback (GimpImage     *image,$/;"	f	file:
gimp_displays_image_dirty_callback	display/gimpdisplay-foreach.c	/^gimp_displays_image_dirty_callback (GimpImage     *image,$/;"	f	file:
gimp_displays_reconnect	display/gimpdisplay-foreach.c	/^gimp_displays_reconnect (Gimp      *gimp,$/;"	f
gimp_displays_set_busy	display/gimpdisplay-foreach.c	/^gimp_displays_set_busy (Gimp *gimp)$/;"	f
gimp_displays_unset_busy	display/gimpdisplay-foreach.c	/^gimp_displays_unset_busy (Gimp *gimp)$/;"	f
gimp_dispose	core/gimp.c	/^gimp_dispose (GObject *object)$/;"	f	file:
gimp_dnd_color_dest_add	widgets/gimpdnd.c	/^gimp_dnd_color_dest_add (GtkWidget            *widget,$/;"	f
gimp_dnd_color_dest_remove	widgets/gimpdnd.c	/^gimp_dnd_color_dest_remove (GtkWidget *widget)$/;"	f
gimp_dnd_color_source_add	widgets/gimpdnd.c	/^gimp_dnd_color_source_add (GtkWidget            *widget,$/;"	f
gimp_dnd_color_source_remove	widgets/gimpdnd.c	/^gimp_dnd_color_source_remove (GtkWidget *widget)$/;"	f
gimp_dnd_component_dest_add	widgets/gimpdnd.c	/^gimp_dnd_component_dest_add (GtkWidget                 *widget,$/;"	f
gimp_dnd_component_dest_remove	widgets/gimpdnd.c	/^gimp_dnd_component_dest_remove (GtkWidget *widget)$/;"	f
gimp_dnd_component_source_add	widgets/gimpdnd.c	/^gimp_dnd_component_source_add (GtkWidget                *widget,$/;"	f
gimp_dnd_component_source_remove	widgets/gimpdnd.c	/^gimp_dnd_component_source_remove (GtkWidget *widget)$/;"	f
gimp_dnd_data_dest_add	widgets/gimpdnd.c	/^gimp_dnd_data_dest_add (GimpDndType  data_type,$/;"	f	file:
gimp_dnd_data_dest_remove	widgets/gimpdnd.c	/^gimp_dnd_data_dest_remove (GimpDndType  data_type,$/;"	f	file:
gimp_dnd_data_drag_begin	widgets/gimpdnd.c	/^gimp_dnd_data_drag_begin (GtkWidget      *widget,$/;"	f	file:
gimp_dnd_data_drag_end	widgets/gimpdnd.c	/^gimp_dnd_data_drag_end (GtkWidget      *widget,$/;"	f	file:
gimp_dnd_data_drag_handle	widgets/gimpdnd.c	/^gimp_dnd_data_drag_handle (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_data_drop_handle	widgets/gimpdnd.c	/^gimp_dnd_data_drop_handle (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_data_source_add	widgets/gimpdnd.c	/^gimp_dnd_data_source_add (GimpDndType  data_type,$/;"	f	file:
gimp_dnd_data_source_remove	widgets/gimpdnd.c	/^gimp_dnd_data_source_remove (GimpDndType  data_type,$/;"	f	file:
gimp_dnd_data_type_get_by_g_type	widgets/gimpdnd.c	/^gimp_dnd_data_type_get_by_g_type (GType type)$/;"	f	file:
gimp_dnd_drag_dest_set_by_type	widgets/gimpdnd.c	/^gimp_dnd_drag_dest_set_by_type (GtkWidget       *widget,$/;"	f
gimp_dnd_drag_source_set_by_type	widgets/gimpdnd.c	/^gimp_dnd_drag_source_set_by_type (GtkWidget       *widget,$/;"	f
gimp_dnd_get_color_data	widgets/gimpdnd.c	/^gimp_dnd_get_color_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_get_color_icon	widgets/gimpdnd.c	/^gimp_dnd_get_color_icon (GtkWidget *widget,$/;"	f	file:
gimp_dnd_get_component_data	widgets/gimpdnd.c	/^gimp_dnd_get_component_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_get_component_icon	widgets/gimpdnd.c	/^gimp_dnd_get_component_icon (GtkWidget *widget,$/;"	f	file:
gimp_dnd_get_drag_data	widgets/gimpdnd.c	/^gimp_dnd_get_drag_data (GtkWidget *widget)$/;"	f
gimp_dnd_get_image_data	widgets/gimpdnd.c	/^gimp_dnd_get_image_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_get_item_data	widgets/gimpdnd.c	/^gimp_dnd_get_item_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_get_object_data	widgets/gimpdnd.c	/^gimp_dnd_get_object_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_get_pixbuf_data	widgets/gimpdnd.c	/^gimp_dnd_get_pixbuf_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_get_stream_data	widgets/gimpdnd.c	/^gimp_dnd_get_stream_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_get_uri_list_data	widgets/gimpdnd.c	/^gimp_dnd_get_uri_list_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_get_viewable_icon	widgets/gimpdnd.c	/^gimp_dnd_get_viewable_icon (GtkWidget *widget,$/;"	f	file:
gimp_dnd_get_xds_data	widgets/gimpdnd.c	/^gimp_dnd_get_xds_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_init	widgets/gimpdnd.c	/^gimp_dnd_init (Gimp *gimp)$/;"	f
gimp_dnd_pixbuf_dest_add	widgets/gimpdnd.c	/^gimp_dnd_pixbuf_dest_add (GtkWidget              *widget,$/;"	f
gimp_dnd_pixbuf_dest_remove	widgets/gimpdnd.c	/^gimp_dnd_pixbuf_dest_remove (GtkWidget *widget)$/;"	f
gimp_dnd_pixbuf_source_add	widgets/gimpdnd.c	/^gimp_dnd_pixbuf_source_add (GtkWidget             *widget,$/;"	f
gimp_dnd_pixbuf_source_remove	widgets/gimpdnd.c	/^gimp_dnd_pixbuf_source_remove (GtkWidget *widget)$/;"	f
gimp_dnd_set_brush_data	widgets/gimpdnd.c	/^gimp_dnd_set_brush_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_buffer_data	widgets/gimpdnd.c	/^gimp_dnd_set_buffer_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_color_data	widgets/gimpdnd.c	/^gimp_dnd_set_color_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_component_data	widgets/gimpdnd.c	/^gimp_dnd_set_component_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_font_data	widgets/gimpdnd.c	/^gimp_dnd_set_font_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_gradient_data	widgets/gimpdnd.c	/^gimp_dnd_set_gradient_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_image_data	widgets/gimpdnd.c	/^gimp_dnd_set_image_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_imagefile_data	widgets/gimpdnd.c	/^gimp_dnd_set_imagefile_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_item_data	widgets/gimpdnd.c	/^gimp_dnd_set_item_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_palette_data	widgets/gimpdnd.c	/^gimp_dnd_set_palette_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_pattern_data	widgets/gimpdnd.c	/^gimp_dnd_set_pattern_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_pixbuf_data	widgets/gimpdnd.c	/^gimp_dnd_set_pixbuf_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_stream_data	widgets/gimpdnd.c	/^gimp_dnd_set_stream_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_template_data	widgets/gimpdnd.c	/^gimp_dnd_set_template_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_tool_info_data	widgets/gimpdnd.c	/^gimp_dnd_set_tool_info_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_set_uri_list_data	widgets/gimpdnd.c	/^gimp_dnd_set_uri_list_data (GtkWidget        *widget,$/;"	f	file:
gimp_dnd_svg_dest_add	widgets/gimpdnd.c	/^gimp_dnd_svg_dest_add (GtkWidget             *widget,$/;"	f
gimp_dnd_svg_dest_remove	widgets/gimpdnd.c	/^gimp_dnd_svg_dest_remove (GtkWidget *widget)$/;"	f
gimp_dnd_svg_source_add	widgets/gimpdnd.c	/^gimp_dnd_svg_source_add (GtkWidget             *widget,$/;"	f
gimp_dnd_svg_source_remove	widgets/gimpdnd.c	/^gimp_dnd_svg_source_remove (GtkWidget *widget)$/;"	f
gimp_dnd_target_list_add	widgets/gimpdnd.c	/^gimp_dnd_target_list_add (GtkTargetList        *list,$/;"	f	file:
gimp_dnd_uri_list_dest_add	widgets/gimpdnd.c	/^gimp_dnd_uri_list_dest_add (GtkWidget              *widget,$/;"	f
gimp_dnd_uri_list_dest_remove	widgets/gimpdnd.c	/^gimp_dnd_uri_list_dest_remove (GtkWidget *widget)$/;"	f
gimp_dnd_uri_list_source_add	widgets/gimpdnd.c	/^gimp_dnd_uri_list_source_add (GtkWidget              *widget,$/;"	f
gimp_dnd_uri_list_source_remove	widgets/gimpdnd.c	/^gimp_dnd_uri_list_source_remove (GtkWidget *widget)$/;"	f
gimp_dnd_viewable_dest_add	widgets/gimpdnd.c	/^gimp_dnd_viewable_dest_add (GtkWidget               *widget,$/;"	f
gimp_dnd_viewable_dest_remove	widgets/gimpdnd.c	/^gimp_dnd_viewable_dest_remove (GtkWidget *widget,$/;"	f
gimp_dnd_viewable_source_add	widgets/gimpdnd.c	/^gimp_dnd_viewable_source_add (GtkWidget               *widget,$/;"	f
gimp_dnd_viewable_source_remove	widgets/gimpdnd.c	/^gimp_dnd_viewable_source_remove (GtkWidget *widget,$/;"	f
gimp_dnd_xds_drag_begin	widgets/gimpdnd.c	/^gimp_dnd_xds_drag_begin (GtkWidget      *widget,$/;"	f	file:
gimp_dnd_xds_drag_end	widgets/gimpdnd.c	/^gimp_dnd_xds_drag_end (GtkWidget      *widget,$/;"	f	file:
gimp_dnd_xds_save_image	widgets/gimpdnd-xds.c	/^gimp_dnd_xds_save_image (GdkDragContext   *context,$/;"	f
gimp_dnd_xds_source_add	widgets/gimpdnd.c	/^gimp_dnd_xds_source_add (GtkWidget               *widget,$/;"	f
gimp_dnd_xds_source_remove	widgets/gimpdnd.c	/^gimp_dnd_xds_source_remove (GtkWidget *widget)$/;"	f
gimp_dnd_xds_source_set	widgets/gimpdnd-xds.c	/^gimp_dnd_xds_source_set (GdkDragContext *context,$/;"	f
gimp_dock_add	widgets/gimpdock.c	/^gimp_dock_add (GimpDock     *dock,$/;"	f
gimp_dock_add_book	widgets/gimpdock.c	/^gimp_dock_add_book (GimpDock     *dock,$/;"	f
gimp_dock_class_init	widgets/gimpdock.c	/^gimp_dock_class_init (GimpDockClass *klass)$/;"	f	file:
gimp_dock_constructor	widgets/gimpdock.c	/^gimp_dock_constructor (GType                  type,$/;"	f	file:
gimp_dock_delete_event	widgets/gimpdock.c	/^gimp_dock_delete_event (GtkWidget   *widget,$/;"	f	file:
gimp_dock_destroy	widgets/gimpdock.c	/^gimp_dock_destroy (GtkObject *object)$/;"	f	file:
gimp_dock_get_aux_info	widgets/gimpdock.c	/^gimp_dock_get_aux_info (GimpDock *dock)$/;"	f
gimp_dock_get_property	widgets/gimpdock.c	/^gimp_dock_get_property (GObject    *object,$/;"	f	file:
gimp_dock_init	widgets/gimpdock.c	/^gimp_dock_init (GimpDock *dock)$/;"	f	file:
gimp_dock_key_press_event	widgets/gimpdock.c	/^gimp_dock_key_press_event (GtkWidget   *widget,$/;"	f	file:
gimp_dock_real_book_added	widgets/gimpdock.c	/^gimp_dock_real_book_added (GimpDock     *dock,$/;"	f	file:
gimp_dock_real_book_removed	widgets/gimpdock.c	/^gimp_dock_real_book_removed (GimpDock     *dock,$/;"	f	file:
gimp_dock_remove	widgets/gimpdock.c	/^gimp_dock_remove (GimpDock     *dock,$/;"	f
gimp_dock_remove_book	widgets/gimpdock.c	/^gimp_dock_remove_book (GimpDock     *dock,$/;"	f
gimp_dock_separator_class_init	widgets/gimpdockseparator.c	/^gimp_dock_separator_class_init (GimpDockSeparatorClass *klass)$/;"	f	file:
gimp_dock_separator_drag_drop	widgets/gimpdockseparator.c	/^gimp_dock_separator_drag_drop (GtkWidget      *widget,$/;"	f	file:
gimp_dock_separator_drag_leave	widgets/gimpdockseparator.c	/^gimp_dock_separator_drag_leave (GtkWidget      *widget,$/;"	f	file:
gimp_dock_separator_drag_motion	widgets/gimpdockseparator.c	/^gimp_dock_separator_drag_motion (GtkWidget      *widget,$/;"	f	file:
gimp_dock_separator_init	widgets/gimpdockseparator.c	/^gimp_dock_separator_init (GimpDockSeparator *separator)$/;"	f	file:
gimp_dock_separator_new	widgets/gimpdockseparator.c	/^gimp_dock_separator_new (GimpDock *dock)$/;"	f
gimp_dock_separator_set_show_label	widgets/gimpdockseparator.c	/^gimp_dock_separator_set_show_label (GimpDockSeparator *separator,$/;"	f
gimp_dock_separator_size_allocate	widgets/gimpdockseparator.c	/^gimp_dock_separator_size_allocate (GtkWidget     *widget,$/;"	f	file:
gimp_dock_separator_style_set	widgets/gimpdockseparator.c	/^gimp_dock_separator_style_set (GtkWidget *widget,$/;"	f	file:
gimp_dock_set_aux_info	widgets/gimpdock.c	/^gimp_dock_set_aux_info (GimpDock *dock,$/;"	f
gimp_dock_set_property	widgets/gimpdock.c	/^gimp_dock_set_property (GObject      *object,$/;"	f	file:
gimp_dock_setup	widgets/gimpdock.c	/^gimp_dock_setup (GimpDock       *dock,$/;"	f
gimp_dock_style_set	widgets/gimpdock.c	/^gimp_dock_style_set (GtkWidget *widget,$/;"	f	file:
gimp_dockable_add	widgets/gimpdockable.c	/^gimp_dockable_add (GtkContainer *container,$/;"	f	file:
gimp_dockable_blink	widgets/gimpdockable.c	/^gimp_dockable_blink (GimpDockable *dockable)$/;"	f
gimp_dockable_blink_cancel	widgets/gimpdockable.c	/^gimp_dockable_blink_cancel (GimpDockable *dockable)$/;"	f
gimp_dockable_blink_timeout	widgets/gimpdockable.c	/^gimp_dockable_blink_timeout (GimpDockable *dockable)$/;"	f	file:
gimp_dockable_button_press	widgets/gimpdockable.c	/^gimp_dockable_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_dockable_button_release	widgets/gimpdockable.c	/^gimp_dockable_button_release (GtkWidget *widget)$/;"	f	file:
gimp_dockable_child_type	widgets/gimpdockable.c	/^gimp_dockable_child_type (GtkContainer *container)$/;"	f	file:
gimp_dockable_class_init	widgets/gimpdockable.c	/^gimp_dockable_class_init (GimpDockableClass *klass)$/;"	f	file:
gimp_dockable_clear_title_area	widgets/gimpdockable.c	/^gimp_dockable_clear_title_area (GimpDockable *dockable)$/;"	f	file:
gimp_dockable_create_title_layout	widgets/gimpdockable.c	/^gimp_dockable_create_title_layout (GimpDockable *dockable,$/;"	f	file:
gimp_dockable_destroy	widgets/gimpdockable.c	/^gimp_dockable_destroy (GtkObject *object)$/;"	f	file:
gimp_dockable_detach	widgets/gimpdockable.c	/^gimp_dockable_detach (GimpDockable *dockable)$/;"	f
gimp_dockable_drag_drop	widgets/gimpdockable.c	/^gimp_dockable_drag_drop (GtkWidget      *widget,$/;"	f	file:
gimp_dockable_expose_event	widgets/gimpdockable.c	/^gimp_dockable_expose_event (GtkWidget      *widget,$/;"	f	file:
gimp_dockable_forall	widgets/gimpdockable.c	/^gimp_dockable_forall (GtkContainer *container,$/;"	f	file:
gimp_dockable_get_aux_info	widgets/gimpdockable.c	/^gimp_dockable_get_aux_info (GimpDockable *dockable)$/;"	f
gimp_dockable_get_menu	widgets/gimpdockable.c	/^gimp_dockable_get_menu (GimpDockable  *dockable,$/;"	f
gimp_dockable_get_tab_widget	widgets/gimpdockable.c	/^gimp_dockable_get_tab_widget (GimpDockable *dockable,$/;"	f
gimp_dockable_get_title_area	widgets/gimpdockable.c	/^gimp_dockable_get_title_area (GimpDockable *dockable,$/;"	f	file:
gimp_dockable_init	widgets/gimpdockable.c	/^gimp_dockable_init (GimpDockable *dockable)$/;"	f	file:
gimp_dockable_map	widgets/gimpdockable.c	/^gimp_dockable_map (GtkWidget *widget)$/;"	f	file:
gimp_dockable_menu_button_press	widgets/gimpdockable.c	/^gimp_dockable_menu_button_press (GtkWidget      *button,$/;"	f	file:
gimp_dockable_menu_end	widgets/gimpdockable.c	/^gimp_dockable_menu_end (GimpDockable *dockable)$/;"	f	file:
gimp_dockable_menu_position	widgets/gimpdockable.c	/^gimp_dockable_menu_position (GtkMenu  *menu,$/;"	f	file:
gimp_dockable_new	widgets/gimpdockable.c	/^gimp_dockable_new (const gchar *name,$/;"	f
gimp_dockable_popup_menu	widgets/gimpdockable.c	/^gimp_dockable_popup_menu (GtkWidget *widget)$/;"	f	file:
gimp_dockable_realize	widgets/gimpdockable.c	/^gimp_dockable_realize (GtkWidget *widget)$/;"	f	file:
gimp_dockable_remove	widgets/gimpdockable.c	/^gimp_dockable_remove (GtkContainer *container,$/;"	f	file:
gimp_dockable_set_aux_info	widgets/gimpdockable.c	/^gimp_dockable_set_aux_info (GimpDockable *dockable,$/;"	f
gimp_dockable_set_context	widgets/gimpdockable.c	/^gimp_dockable_set_context (GimpDockable *dockable,$/;"	f
gimp_dockable_set_tab_style	widgets/gimpdockable.c	/^gimp_dockable_set_tab_style (GimpDockable *dockable,$/;"	f
gimp_dockable_show_menu	widgets/gimpdockable.c	/^gimp_dockable_show_menu (GimpDockable *dockable)$/;"	f	file:
gimp_dockable_size_allocate	widgets/gimpdockable.c	/^gimp_dockable_size_allocate (GtkWidget     *widget,$/;"	f	file:
gimp_dockable_size_request	widgets/gimpdockable.c	/^gimp_dockable_size_request (GtkWidget      *widget,$/;"	f	file:
gimp_dockable_style_set	widgets/gimpdockable.c	/^gimp_dockable_style_set (GtkWidget *widget,$/;"	f	file:
gimp_dockable_title_changed	widgets/gimpdockable.c	/^gimp_dockable_title_changed (GimpDocked   *docked,$/;"	f	file:
gimp_dockable_unmap	widgets/gimpdockable.c	/^gimp_dockable_unmap (GtkWidget *widget)$/;"	f	file:
gimp_dockable_unrealize	widgets/gimpdockable.c	/^gimp_dockable_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_dockbook_add	widgets/gimpdockbook.c	/^gimp_dockbook_add (GimpDockbook *dockbook,$/;"	f
gimp_dockbook_class_init	widgets/gimpdockbook.c	/^gimp_dockbook_class_init (GimpDockbookClass *klass)$/;"	f	file:
gimp_dockbook_dockable_added	widgets/gimpdockbook.c	/^gimp_dockbook_dockable_added (GimpDockbook *dockbook,$/;"	f	file:
gimp_dockbook_dockable_removed	widgets/gimpdockbook.c	/^gimp_dockbook_dockable_removed (GimpDockbook *dockbook,$/;"	f	file:
gimp_dockbook_drag_drop	widgets/gimpdockbook.c	/^gimp_dockbook_drag_drop (GtkWidget      *widget,$/;"	f	file:
gimp_dockbook_drop_dockable	widgets/gimpdockbook.c	/^gimp_dockbook_drop_dockable (GimpDockbook *dockbook,$/;"	f
gimp_dockbook_finalize	widgets/gimpdockbook.c	/^gimp_dockbook_finalize (GObject *object)$/;"	f	file:
gimp_dockbook_get_tab_widget	widgets/gimpdockbook.c	/^gimp_dockbook_get_tab_widget (GimpDockbook *dockbook,$/;"	f
gimp_dockbook_help_func	widgets/gimpdockbook.c	/^gimp_dockbook_help_func (const gchar *help_id,$/;"	f	file:
gimp_dockbook_init	widgets/gimpdockbook.c	/^gimp_dockbook_init (GimpDockbook *dockbook)$/;"	f	file:
gimp_dockbook_new	widgets/gimpdockbook.c	/^gimp_dockbook_new (GimpMenuFactory *menu_factory)$/;"	f
gimp_dockbook_remove	widgets/gimpdockbook.c	/^gimp_dockbook_remove (GimpDockbook *dockbook,$/;"	f
gimp_dockbook_style_set	widgets/gimpdockbook.c	/^gimp_dockbook_style_set (GtkWidget *widget,$/;"	f	file:
gimp_dockbook_tab_drag_begin	widgets/gimpdockbook.c	/^gimp_dockbook_tab_drag_begin (GtkWidget      *widget,$/;"	f	file:
gimp_dockbook_tab_drag_drop	widgets/gimpdockbook.c	/^gimp_dockbook_tab_drag_drop (GtkWidget      *widget,$/;"	f	file:
gimp_dockbook_tab_drag_end	widgets/gimpdockbook.c	/^gimp_dockbook_tab_drag_end (GtkWidget      *widget,$/;"	f	file:
gimp_dockbook_tab_drag_expose	widgets/gimpdockbook.c	/^gimp_dockbook_tab_drag_expose (GtkWidget      *widget,$/;"	f	file:
gimp_dockbook_update_tabs	widgets/gimpdockbook.c	/^gimp_dockbook_update_tabs (GimpDockbook *dockbook,$/;"	f	file:
gimp_docked_get_aux_info	widgets/gimpdocked.c	/^gimp_docked_get_aux_info (GimpDocked *docked)$/;"	f
gimp_docked_get_menu	widgets/gimpdocked.c	/^gimp_docked_get_menu (GimpDocked     *docked,$/;"	f
gimp_docked_get_preview	widgets/gimpdocked.c	/^gimp_docked_get_preview (GimpDocked  *docked,$/;"	f
gimp_docked_get_show_button_bar	widgets/gimpdocked.c	/^gimp_docked_get_show_button_bar (GimpDocked *docked)$/;"	f
gimp_docked_get_title	widgets/gimpdocked.c	/^gimp_docked_get_title (GimpDocked *docked)$/;"	f
gimp_docked_has_button_bar	widgets/gimpdocked.c	/^gimp_docked_has_button_bar (GimpDocked *docked)$/;"	f
gimp_docked_iface_base_init	widgets/gimpdocked.c	/^gimp_docked_iface_base_init (GimpDockedInterface *docked_iface)$/;"	f	file:
gimp_docked_iface_get_aux_info	widgets/gimpdocked.c	/^gimp_docked_iface_get_aux_info (GimpDocked *docked)$/;"	f	file:
gimp_docked_iface_set_aux_info	widgets/gimpdocked.c	/^gimp_docked_iface_set_aux_info (GimpDocked *docked,$/;"	f	file:
gimp_docked_interface_get_type	widgets/gimpdocked.c	/^gimp_docked_interface_get_type (void)$/;"	f
gimp_docked_set_aux_info	widgets/gimpdocked.c	/^gimp_docked_set_aux_info (GimpDocked *docked,$/;"	f
gimp_docked_set_context	widgets/gimpdocked.c	/^gimp_docked_set_context (GimpDocked  *docked,$/;"	f
gimp_docked_set_show_button_bar	widgets/gimpdocked.c	/^gimp_docked_set_show_button_bar (GimpDocked *docked,$/;"	f
gimp_docked_title_changed	widgets/gimpdocked.c	/^gimp_docked_title_changed (GimpDocked *docked)$/;"	f
gimp_document_list_add_uri	core/gimpdocumentlist.c	/^gimp_document_list_add_uri (GimpDocumentList *document_list,$/;"	f
gimp_document_list_class_init	core/gimpdocumentlist.c	/^gimp_document_list_class_init (GimpDocumentListClass *klass)$/;"	f	file:
gimp_document_list_config_iface_init	core/gimpdocumentlist.c	/^gimp_document_list_config_iface_init (GimpConfigInterface *iface)$/;"	f	file:
gimp_document_list_deserialize	core/gimpdocumentlist.c	/^gimp_document_list_deserialize (GimpConfig *config,$/;"	f	file:
gimp_document_list_init	core/gimpdocumentlist.c	/^gimp_document_list_init (GimpDocumentList *list)$/;"	f	file:
gimp_document_list_new	core/gimpdocumentlist.c	/^gimp_document_list_new (Gimp *gimp)$/;"	f
gimp_document_list_serialize	core/gimpdocumentlist.c	/^gimp_document_list_serialize (GimpConfig       *config,$/;"	f	file:
gimp_document_view_activate_item	widgets/gimpdocumentview.c	/^gimp_document_view_activate_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_document_view_class_init	widgets/gimpdocumentview.c	/^gimp_document_view_class_init (GimpDocumentViewClass *klass)$/;"	f	file:
gimp_document_view_drag_uri_list	widgets/gimpdocumentview.c	/^gimp_document_view_drag_uri_list (GtkWidget *widget,$/;"	f	file:
gimp_document_view_init	widgets/gimpdocumentview.c	/^gimp_document_view_init (GimpDocumentView *view)$/;"	f	file:
gimp_document_view_new	widgets/gimpdocumentview.c	/^gimp_document_view_new (GimpViewType     view_type,$/;"	f
gimp_documents_load	core/gimp-documents.c	/^gimp_documents_load (Gimp *gimp)$/;"	f
gimp_documents_save	core/gimp-documents.c	/^gimp_documents_save (Gimp *gimp)$/;"	f
gimp_dodge_burn_class_init	paint/gimpdodgeburn.c	/^gimp_dodge_burn_class_init (GimpDodgeBurnClass *klass)$/;"	f	file:
gimp_dodge_burn_finalize	paint/gimpdodgeburn.c	/^gimp_dodge_burn_finalize (GObject *object)$/;"	f	file:
gimp_dodge_burn_highlights_lut_func	paint/gimpdodgeburn.c	/^gimp_dodge_burn_highlights_lut_func (gpointer  user_data,$/;"	f	file:
gimp_dodge_burn_init	paint/gimpdodgeburn.c	/^gimp_dodge_burn_init (GimpDodgeBurn *dodgeburn)$/;"	f	file:
gimp_dodge_burn_make_luts	paint/gimpdodgeburn.c	/^gimp_dodge_burn_make_luts (GimpDodgeBurn     *dodgeburn,$/;"	f	file:
gimp_dodge_burn_midtones_lut_func	paint/gimpdodgeburn.c	/^gimp_dodge_burn_midtones_lut_func (gpointer  user_data,$/;"	f	file:
gimp_dodge_burn_motion	paint/gimpdodgeburn.c	/^gimp_dodge_burn_motion (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_dodge_burn_options_class_init	paint/gimpdodgeburnoptions.c	/^gimp_dodge_burn_options_class_init (GimpDodgeBurnOptionsClass *klass)$/;"	f	file:
gimp_dodge_burn_options_get_property	paint/gimpdodgeburnoptions.c	/^gimp_dodge_burn_options_get_property (GObject    *object,$/;"	f	file:
gimp_dodge_burn_options_gui	tools/gimpdodgeburntool.c	/^gimp_dodge_burn_options_gui (GimpToolOptions *tool_options)$/;"	f	file:
gimp_dodge_burn_options_init	paint/gimpdodgeburnoptions.c	/^gimp_dodge_burn_options_init (GimpDodgeBurnOptions *options)$/;"	f	file:
gimp_dodge_burn_options_set_property	paint/gimpdodgeburnoptions.c	/^gimp_dodge_burn_options_set_property (GObject      *object,$/;"	f	file:
gimp_dodge_burn_paint	paint/gimpdodgeburn.c	/^gimp_dodge_burn_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_dodge_burn_shadows_lut_func	paint/gimpdodgeburn.c	/^gimp_dodge_burn_shadows_lut_func (gpointer  user_data,$/;"	f	file:
gimp_dodge_burn_tool_class_init	tools/gimpdodgeburntool.c	/^gimp_dodge_burn_tool_class_init (GimpDodgeBurnToolClass *klass)$/;"	f	file:
gimp_dodge_burn_tool_cursor_update	tools/gimpdodgeburntool.c	/^gimp_dodge_burn_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_dodge_burn_tool_init	tools/gimpdodgeburntool.c	/^gimp_dodge_burn_tool_init (GimpDodgeBurnTool *dodgeburn)$/;"	f	file:
gimp_dodge_burn_tool_modifier_key	tools/gimpdodgeburntool.c	/^gimp_dodge_burn_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_dodge_burn_tool_oper_update	tools/gimpdodgeburntool.c	/^gimp_dodge_burn_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_dodge_burn_tool_status_update	tools/gimpdodgeburntool.c	/^gimp_dodge_burn_tool_status_update (GimpTool          *tool,$/;"	f	file:
gimp_draw_tool_calc_distance	tools/gimpdrawtool.c	/^gimp_draw_tool_calc_distance (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_calc_distance_square	tools/gimpdrawtool.c	/^gimp_draw_tool_calc_distance_square (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_class_init	tools/gimpdrawtool.c	/^gimp_draw_tool_class_init (GimpDrawToolClass *klass)$/;"	f	file:
gimp_draw_tool_control	tools/gimpdrawtool.c	/^gimp_draw_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_draw_tool_draw	tools/gimpdrawtool.c	/^gimp_draw_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_draw_tool_draw_arc	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_arc (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_draw_arc_by_anchor	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_arc_by_anchor (GimpDrawTool  *draw_tool,$/;"	f
gimp_draw_tool_draw_boundary	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_boundary (GimpDrawTool   *draw_tool,$/;"	f
gimp_draw_tool_draw_corner	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_corner (GimpDrawTool   *draw_tool,$/;"	f
gimp_draw_tool_draw_cross_by_anchor	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_cross_by_anchor (GimpDrawTool  *draw_tool,$/;"	f
gimp_draw_tool_draw_dashed_line	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_dashed_line (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_draw_handle	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_handle (GimpDrawTool   *draw_tool,$/;"	f
gimp_draw_tool_draw_line	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_line (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_draw_lines	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_lines (GimpDrawTool  *draw_tool,$/;"	f
gimp_draw_tool_draw_rectangle	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_rectangle (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_draw_rectangle_by_anchor	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_rectangle_by_anchor (GimpDrawTool   *draw_tool,$/;"	f
gimp_draw_tool_draw_strokes	tools/gimpdrawtool.c	/^gimp_draw_tool_draw_strokes (GimpDrawTool     *draw_tool,$/;"	f
gimp_draw_tool_finalize	tools/gimpdrawtool.c	/^gimp_draw_tool_finalize (GObject *object)$/;"	f	file:
gimp_draw_tool_has_display	tools/gimpdrawtool.c	/^gimp_draw_tool_has_display (GimpTool    *tool,$/;"	f	file:
gimp_draw_tool_has_image	tools/gimpdrawtool.c	/^gimp_draw_tool_has_image (GimpTool  *tool,$/;"	f	file:
gimp_draw_tool_in_radius	tools/gimpdrawtool.c	/^gimp_draw_tool_in_radius (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_init	tools/gimpdrawtool.c	/^gimp_draw_tool_init (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_draw_tool_is_active	tools/gimpdrawtool.c	/^gimp_draw_tool_is_active (GimpDrawTool *draw_tool)$/;"	f
gimp_draw_tool_is_drawn	tools/gimpdrawtool.c	/^gimp_draw_tool_is_drawn (GimpDrawTool *draw_tool)$/;"	f
gimp_draw_tool_on_handle	tools/gimpdrawtool.c	/^gimp_draw_tool_on_handle (GimpDrawTool   *draw_tool,$/;"	f
gimp_draw_tool_on_vectors	tools/gimpdrawtool.c	/^gimp_draw_tool_on_vectors (GimpDrawTool      *draw_tool,$/;"	f
gimp_draw_tool_on_vectors_curve	tools/gimpdrawtool.c	/^gimp_draw_tool_on_vectors_curve (GimpDrawTool      *draw_tool,$/;"	f
gimp_draw_tool_on_vectors_handle	tools/gimpdrawtool.c	/^gimp_draw_tool_on_vectors_handle (GimpDrawTool      *draw_tool,$/;"	f
gimp_draw_tool_pause	tools/gimpdrawtool.c	/^gimp_draw_tool_pause (GimpDrawTool *draw_tool)$/;"	f
gimp_draw_tool_real_draw	tools/gimpdrawtool.c	/^gimp_draw_tool_real_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_draw_tool_resume	tools/gimpdrawtool.c	/^gimp_draw_tool_resume (GimpDrawTool *draw_tool)$/;"	f
gimp_draw_tool_set_transform	tools/gimpdrawtool.c	/^gimp_draw_tool_set_transform (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_set_vectors	tools/gimpdrawtool.c	/^gimp_draw_tool_set_vectors (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_shift_to_center	tools/gimpdrawtool.c	/^gimp_draw_tool_shift_to_center (gdouble        x,$/;"	f	file:
gimp_draw_tool_shift_to_north_west	tools/gimpdrawtool.c	/^gimp_draw_tool_shift_to_north_west (gdouble        x,$/;"	f	file:
gimp_draw_tool_start	tools/gimpdrawtool.c	/^gimp_draw_tool_start (GimpDrawTool *draw_tool,$/;"	f
gimp_draw_tool_stop	tools/gimpdrawtool.c	/^gimp_draw_tool_stop (GimpDrawTool *draw_tool)$/;"	f
gimp_drawable_alpha_changed	core/gimpdrawable.c	/^gimp_drawable_alpha_changed (GimpDrawable *drawable)$/;"	f
gimp_drawable_apply_region	core/gimpdrawable.c	/^gimp_drawable_apply_region (GimpDrawable         *drawable,$/;"	f
gimp_drawable_blend	core/gimpdrawable-blend.c	/^gimp_drawable_blend (GimpDrawable         *drawable,$/;"	f
gimp_drawable_bucket_fill	core/gimpdrawable-bucket-fill.c	/^gimp_drawable_bucket_fill (GimpDrawable        *drawable,$/;"	f
gimp_drawable_bucket_fill_full	core/gimpdrawable-bucket-fill.c	/^gimp_drawable_bucket_fill_full (GimpDrawable        *drawable,$/;"	f
gimp_drawable_bytes	core/gimpdrawable.c	/^gimp_drawable_bytes (const GimpDrawable *drawable)$/;"	f
gimp_drawable_bytes_with_alpha	core/gimpdrawable.c	/^gimp_drawable_bytes_with_alpha (const GimpDrawable *drawable)$/;"	f
gimp_drawable_bytes_without_alpha	core/gimpdrawable.c	/^gimp_drawable_bytes_without_alpha (const GimpDrawable *drawable)$/;"	f
gimp_drawable_calculate_histogram	core/gimpdrawable-histogram.c	/^gimp_drawable_calculate_histogram (GimpDrawable  *drawable,$/;"	f
gimp_drawable_class_init	core/gimpdrawable.c	/^gimp_drawable_class_init (GimpDrawableClass *klass)$/;"	f	file:
gimp_drawable_configure	core/gimpdrawable.c	/^gimp_drawable_configure (GimpDrawable  *drawable,$/;"	f
gimp_drawable_convert_grayscale	core/gimpdrawable-convert.c	/^gimp_drawable_convert_grayscale (GimpDrawable      *drawable,$/;"	f
gimp_drawable_convert_rgb	core/gimpdrawable-convert.c	/^gimp_drawable_convert_rgb (GimpDrawable      *drawable,$/;"	f
gimp_drawable_desaturate	core/gimpdrawable-desaturate.c	/^gimp_drawable_desaturate (GimpDrawable       *drawable,$/;"	f
gimp_drawable_duplicate	core/gimpdrawable.c	/^gimp_drawable_duplicate (GimpItem *item,$/;"	f	file:
gimp_drawable_equalize	core/gimpdrawable-equalize.c	/^gimp_drawable_equalize (GimpDrawable *drawable,$/;"	f
gimp_drawable_fill	core/gimpdrawable.c	/^gimp_drawable_fill (GimpDrawable      *drawable,$/;"	f
gimp_drawable_fill_by_type	core/gimpdrawable.c	/^gimp_drawable_fill_by_type (GimpDrawable *drawable,$/;"	f
gimp_drawable_finalize	core/gimpdrawable.c	/^gimp_drawable_finalize (GObject *object)$/;"	f	file:
gimp_drawable_flip	core/gimpdrawable.c	/^gimp_drawable_flip (GimpItem            *item,$/;"	f	file:
gimp_drawable_foreground_extract	core/gimpdrawable-foreground-extract.c	/^gimp_drawable_foreground_extract (GimpDrawable              *drawable,$/;"	f
gimp_drawable_foreground_extract_siox	core/gimpdrawable-foreground-extract.c	/^gimp_drawable_foreground_extract_siox (GimpDrawable       *mask,$/;"	f
gimp_drawable_foreground_extract_siox_done	core/gimpdrawable-foreground-extract.c	/^gimp_drawable_foreground_extract_siox_done (SioxState *state)$/;"	f
gimp_drawable_foreground_extract_siox_init	core/gimpdrawable-foreground-extract.c	/^gimp_drawable_foreground_extract_siox_init (GimpDrawable *drawable,$/;"	f
gimp_drawable_get_active_components	core/gimpdrawable.c	/^gimp_drawable_get_active_components (const GimpDrawable *drawable,$/;"	f
gimp_drawable_get_colormap	core/gimpdrawable.c	/^gimp_drawable_get_colormap (const GimpDrawable *drawable)$/;"	f
gimp_drawable_get_memsize	core/gimpdrawable.c	/^gimp_drawable_get_memsize (GimpObject *object,$/;"	f	file:
gimp_drawable_get_pixel_at	core/gimpdrawable.c	/^gimp_drawable_get_pixel_at (GimpPickable *pickable,$/;"	f	file:
gimp_drawable_get_preview	core/gimpdrawable-preview.c	/^gimp_drawable_get_preview (GimpViewable *viewable,$/;"	f
gimp_drawable_get_shadow_tiles	core/gimpdrawable.c	/^gimp_drawable_get_shadow_tiles (GimpDrawable *drawable)$/;"	f
gimp_drawable_get_size	core/gimpdrawable.c	/^gimp_drawable_get_size (GimpViewable *viewable,$/;"	f	file:
gimp_drawable_get_sub_preview	core/gimpdrawable-preview.c	/^gimp_drawable_get_sub_preview (GimpDrawable *drawable,$/;"	f
gimp_drawable_get_tiles	core/gimpdrawable.c	/^gimp_drawable_get_tiles (const GimpDrawable *drawable)$/;"	f
gimp_drawable_has_alpha	core/gimpdrawable.c	/^gimp_drawable_has_alpha (const GimpDrawable *drawable)$/;"	f
gimp_drawable_has_floating_sel	core/gimpdrawable.c	/^gimp_drawable_has_floating_sel (const GimpDrawable *drawable)$/;"	f
gimp_drawable_id_get_type	core/gimpparamspecs.c	/^gimp_drawable_id_get_type (void)$/;"	f
gimp_drawable_indexed_preview	core/gimpdrawable-preview.c	/^gimp_drawable_indexed_preview (GimpDrawable *drawable,$/;"	f	file:
gimp_drawable_init	core/gimpdrawable.c	/^gimp_drawable_init (GimpDrawable *drawable)$/;"	f	file:
gimp_drawable_invalidate_boundary	core/gimpdrawable.c	/^gimp_drawable_invalidate_boundary (GimpDrawable *drawable)$/;"	f
gimp_drawable_invalidate_preview	core/gimpdrawable.c	/^gimp_drawable_invalidate_preview (GimpViewable *viewable)$/;"	f	file:
gimp_drawable_invert	core/gimpdrawable-invert.c	/^gimp_drawable_invert (GimpDrawable *drawable)$/;"	f
gimp_drawable_is_gray	core/gimpdrawable.c	/^gimp_drawable_is_gray (const GimpDrawable *drawable)$/;"	f
gimp_drawable_is_indexed	core/gimpdrawable.c	/^gimp_drawable_is_indexed (const GimpDrawable *drawable)$/;"	f
gimp_drawable_is_rgb	core/gimpdrawable.c	/^gimp_drawable_is_rgb (const GimpDrawable *drawable)$/;"	f
gimp_drawable_is_text_layer	text/gimptextlayer.c	/^gimp_drawable_is_text_layer (GimpDrawable *drawable)$/;"	f
gimp_drawable_levels	core/gimpdrawable-levels.c	/^gimp_drawable_levels (GimpDrawable   *drawable,$/;"	f
gimp_drawable_levels_stretch	core/gimpdrawable-levels.c	/^gimp_drawable_levels_stretch (GimpDrawable *drawable,$/;"	f
gimp_drawable_mask_bounds	core/gimpdrawable.c	/^gimp_drawable_mask_bounds (GimpDrawable *drawable,$/;"	f
gimp_drawable_mask_intersect	core/gimpdrawable.c	/^gimp_drawable_mask_intersect (GimpDrawable *drawable,$/;"	f
gimp_drawable_merge_shadow	core/gimpdrawable.c	/^gimp_drawable_merge_shadow (GimpDrawable *drawable,$/;"	f
gimp_drawable_mod_undo_class_init	core/gimpdrawablemodundo.c	/^gimp_drawable_mod_undo_class_init (GimpDrawableModUndoClass *klass)$/;"	f	file:
gimp_drawable_mod_undo_constructor	core/gimpdrawablemodundo.c	/^gimp_drawable_mod_undo_constructor (GType                  type,$/;"	f	file:
gimp_drawable_mod_undo_free	core/gimpdrawablemodundo.c	/^gimp_drawable_mod_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_drawable_mod_undo_get_memsize	core/gimpdrawablemodundo.c	/^gimp_drawable_mod_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_drawable_mod_undo_init	core/gimpdrawablemodundo.c	/^gimp_drawable_mod_undo_init (GimpDrawableModUndo *undo)$/;"	f	file:
gimp_drawable_mod_undo_pop	core/gimpdrawablemodundo.c	/^gimp_drawable_mod_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_drawable_offset	core/gimpdrawable-offset.c	/^gimp_drawable_offset (GimpDrawable   *drawable,$/;"	f
gimp_drawable_pickable_iface_init	core/gimpdrawable.c	/^gimp_drawable_pickable_iface_init (GimpPickableInterface *iface)$/;"	f	file:
gimp_drawable_preview_bytes	core/gimpdrawable-preview.c	/^gimp_drawable_preview_bytes (GimpDrawable *drawable)$/;"	f
gimp_drawable_preview_private	core/gimpdrawable-preview.c	/^gimp_drawable_preview_private (GimpDrawable *drawable,$/;"	f	file:
gimp_drawable_push_undo	core/gimpdrawable.c	/^gimp_drawable_push_undo (GimpDrawable *drawable,$/;"	f
gimp_drawable_real_apply_region	core/gimpdrawable-combine.c	/^gimp_drawable_real_apply_region (GimpDrawable         *drawable,$/;"	f
gimp_drawable_real_push_undo	core/gimpdrawable.c	/^gimp_drawable_real_push_undo (GimpDrawable *drawable,$/;"	f	file:
gimp_drawable_real_replace_region	core/gimpdrawable-combine.c	/^gimp_drawable_real_replace_region (GimpDrawable *drawable,$/;"	f
gimp_drawable_real_set_tiles	core/gimpdrawable.c	/^gimp_drawable_real_set_tiles (GimpDrawable *drawable,$/;"	f	file:
gimp_drawable_real_swap_pixels	core/gimpdrawable.c	/^gimp_drawable_real_swap_pixels (GimpDrawable *drawable,$/;"	f	file:
gimp_drawable_real_update	core/gimpdrawable.c	/^gimp_drawable_real_update (GimpDrawable *drawable,$/;"	f	file:
gimp_drawable_replace_region	core/gimpdrawable.c	/^gimp_drawable_replace_region (GimpDrawable *drawable,$/;"	f
gimp_drawable_resize	core/gimpdrawable.c	/^gimp_drawable_resize (GimpItem    *item,$/;"	f	file:
gimp_drawable_rotate	core/gimpdrawable.c	/^gimp_drawable_rotate (GimpItem         *item,$/;"	f	file:
gimp_drawable_scale	core/gimpdrawable.c	/^gimp_drawable_scale (GimpItem              *item,$/;"	f	file:
gimp_drawable_set_tiles	core/gimpdrawable.c	/^gimp_drawable_set_tiles (GimpDrawable *drawable,$/;"	f
gimp_drawable_set_tiles_full	core/gimpdrawable.c	/^gimp_drawable_set_tiles_full (GimpDrawable       *drawable,$/;"	f
gimp_drawable_signals	core/gimpdrawable.c	/^static guint gimp_drawable_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_drawable_stroke_boundary	core/gimpdrawable-stroke.c	/^gimp_drawable_stroke_boundary (GimpDrawable      *drawable,$/;"	f
gimp_drawable_stroke_scan_convert	core/gimpdrawable-stroke.c	/^gimp_drawable_stroke_scan_convert (GimpDrawable      *drawable,$/;"	f	file:
gimp_drawable_stroke_vectors	core/gimpdrawable-stroke.c	/^gimp_drawable_stroke_vectors (GimpDrawable      *drawable,$/;"	f
gimp_drawable_swap_pixels	core/gimpdrawable.c	/^gimp_drawable_swap_pixels (GimpDrawable *drawable,$/;"	f
gimp_drawable_transform	core/gimpdrawable.c	/^gimp_drawable_transform (GimpItem               *item,$/;"	f	file:
gimp_drawable_transform_affine	core/gimpdrawable-transform.c	/^gimp_drawable_transform_affine (GimpDrawable           *drawable,$/;"	f
gimp_drawable_transform_cubic	core/gimp-transform-region.c	/^gimp_drawable_transform_cubic (gdouble dx,$/;"	f	file:
gimp_drawable_transform_cut	core/gimpdrawable-transform.c	/^gimp_drawable_transform_cut (GimpDrawable *drawable,$/;"	f
gimp_drawable_transform_flip	core/gimpdrawable-transform.c	/^gimp_drawable_transform_flip (GimpDrawable        *drawable,$/;"	f
gimp_drawable_transform_paste	core/gimpdrawable-transform.c	/^gimp_drawable_transform_paste (GimpDrawable *drawable,$/;"	f
gimp_drawable_transform_rotate	core/gimpdrawable-transform.c	/^gimp_drawable_transform_rotate (GimpDrawable     *drawable,$/;"	f
gimp_drawable_transform_rotate_point	core/gimpdrawable-transform.c	/^gimp_drawable_transform_rotate_point (gint              x,$/;"	f	file:
gimp_drawable_transform_tiles_affine	core/gimpdrawable-transform.c	/^gimp_drawable_transform_tiles_affine (GimpDrawable           *drawable,$/;"	f
gimp_drawable_transform_tiles_flip	core/gimpdrawable-transform.c	/^gimp_drawable_transform_tiles_flip (GimpDrawable        *drawable,$/;"	f
gimp_drawable_transform_tiles_rotate	core/gimpdrawable-transform.c	/^gimp_drawable_transform_tiles_rotate (GimpDrawable     *drawable,$/;"	f
gimp_drawable_translate	core/gimpdrawable.c	/^gimp_drawable_translate (GimpItem *item,$/;"	f	file:
gimp_drawable_tree_view_class_init	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_class_init (GimpDrawableTreeViewClass *klass)$/;"	f	file:
gimp_drawable_tree_view_constructor	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_constructor (GType                  type,$/;"	f	file:
gimp_drawable_tree_view_drop_color	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_drop_color (GimpContainerTreeView   *view,$/;"	f	file:
gimp_drawable_tree_view_drop_possible	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_drop_possible (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_drawable_tree_view_drop_viewable	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_drop_viewable (GimpContainerTreeView   *view,$/;"	f	file:
gimp_drawable_tree_view_floating_selection_changed	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_floating_selection_changed (GimpImage            *image,$/;"	f	file:
gimp_drawable_tree_view_init	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_init (GimpDrawableTreeView *view)$/;"	f	file:
gimp_drawable_tree_view_new_color_dropped	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_new_color_dropped (GtkWidget     *widget,$/;"	f	file:
gimp_drawable_tree_view_new_dropped	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_new_dropped (GimpItemTreeView   *view,$/;"	f	file:
gimp_drawable_tree_view_new_pattern_dropped	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_new_pattern_dropped (GtkWidget    *widget,$/;"	f	file:
gimp_drawable_tree_view_select_item	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_select_item (GimpContainerView *view,$/;"	f	file:
gimp_drawable_tree_view_set_image	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_set_image (GimpItemTreeView *view,$/;"	f	file:
gimp_drawable_tree_view_view_iface_init	widgets/gimpdrawabletreeview.c	/^gimp_drawable_tree_view_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_drawable_type	core/gimpdrawable.c	/^gimp_drawable_type (const GimpDrawable *drawable)$/;"	f
gimp_drawable_type_with_alpha	core/gimpdrawable.c	/^gimp_drawable_type_with_alpha (const GimpDrawable *drawable)$/;"	f
gimp_drawable_type_without_alpha	core/gimpdrawable.c	/^gimp_drawable_type_without_alpha (const GimpDrawable *drawable)$/;"	f
gimp_drawable_undo_class_init	core/gimpdrawableundo.c	/^gimp_drawable_undo_class_init (GimpDrawableUndoClass *klass)$/;"	f	file:
gimp_drawable_undo_constructor	core/gimpdrawableundo.c	/^gimp_drawable_undo_constructor (GType                  type,$/;"	f	file:
gimp_drawable_undo_free	core/gimpdrawableundo.c	/^gimp_drawable_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_drawable_undo_get_memsize	core/gimpdrawableundo.c	/^gimp_drawable_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_drawable_undo_get_property	core/gimpdrawableundo.c	/^gimp_drawable_undo_get_property (GObject    *object,$/;"	f	file:
gimp_drawable_undo_init	core/gimpdrawableundo.c	/^gimp_drawable_undo_init (GimpDrawableUndo *undo)$/;"	f	file:
gimp_drawable_undo_pop	core/gimpdrawableundo.c	/^gimp_drawable_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_drawable_undo_set_property	core/gimpdrawableundo.c	/^gimp_drawable_undo_set_property (GObject      *object,$/;"	f	file:
gimp_drawable_update	core/gimpdrawable.c	/^gimp_drawable_update (GimpDrawable *drawable,$/;"	f
gimp_edit_clear	core/gimp-edit.c	/^gimp_edit_clear (GimpImage    *image,$/;"	f
gimp_edit_config_notify	core/gimp.c	/^gimp_edit_config_notify (GObject    *edit_config,$/;"	f	file:
gimp_edit_copy	core/gimp-edit.c	/^gimp_edit_copy (GimpImage    *image,$/;"	f
gimp_edit_copy_visible	core/gimp-edit.c	/^gimp_edit_copy_visible (GimpImage   *image,$/;"	f
gimp_edit_cut	core/gimp-edit.c	/^gimp_edit_cut (GimpImage    *image,$/;"	f
gimp_edit_extract	core/gimp-edit.c	/^gimp_edit_extract (GimpImage    *image,$/;"	f	file:
gimp_edit_fade	core/gimp-edit.c	/^gimp_edit_fade (GimpImage   *image,$/;"	f
gimp_edit_fill	core/gimp-edit.c	/^gimp_edit_fill (GimpImage    *image,$/;"	f
gimp_edit_fill_internal	core/gimp-edit.c	/^gimp_edit_fill_internal (GimpImage            *image,$/;"	f	file:
gimp_edit_make_buffer	core/gimp-edit.c	/^gimp_edit_make_buffer (Gimp        *gimp,$/;"	f	file:
gimp_edit_named_copy	core/gimp-edit.c	/^gimp_edit_named_copy (GimpImage    *image,$/;"	f
gimp_edit_named_copy_visible	core/gimp-edit.c	/^gimp_edit_named_copy_visible (GimpImage   *image,$/;"	f
gimp_edit_named_cut	core/gimp-edit.c	/^gimp_edit_named_cut (GimpImage    *image,$/;"	f
gimp_edit_paste	core/gimp-edit.c	/^gimp_edit_paste (GimpImage    *image,$/;"	f
gimp_edit_paste_as_new	core/gimp-edit.c	/^gimp_edit_paste_as_new (Gimp       *gimp,$/;"	f
gimp_edit_selection_tool_button_release	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_edit_selection_tool_calc_coords	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_calc_coords (GimpEditSelectionTool *edit_select,$/;"	f	file:
gimp_edit_selection_tool_class_init	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_class_init (GimpEditSelectionToolClass *klass)$/;"	f	file:
gimp_edit_selection_tool_draw	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_edit_selection_tool_init	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_init (GimpEditSelectionTool *edit_selection_tool)$/;"	f	file:
gimp_edit_selection_tool_key_press	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_key_press (GimpTool    *tool,$/;"	f
gimp_edit_selection_tool_motion	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_edit_selection_tool_start	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_start (GimpTool          *parent_tool,$/;"	f
gimp_edit_selection_tool_translate	tools/gimpeditselectiontool.c	/^gimp_edit_selection_tool_translate (GimpTool          *tool,$/;"	f
gimp_editor_add_action_button	widgets/gimpeditor.c	/^gimp_editor_add_action_button (GimpEditor  *editor,$/;"	f
gimp_editor_add_button	widgets/gimpeditor.c	/^gimp_editor_add_button (GimpEditor  *editor,$/;"	f
gimp_editor_add_stock_box	widgets/gimpeditor.c	/^gimp_editor_add_stock_box (GimpEditor  *editor,$/;"	f
gimp_editor_button_extended_actions_free	widgets/gimpeditor.c	/^gimp_editor_button_extended_actions_free (GList *actions)$/;"	f	file:
gimp_editor_button_extended_clicked	widgets/gimpeditor.c	/^gimp_editor_button_extended_clicked (GtkWidget       *button,$/;"	f	file:
gimp_editor_class_init	widgets/gimpeditor.c	/^gimp_editor_class_init (GimpEditorClass *klass)$/;"	f	file:
gimp_editor_constructor	widgets/gimpeditor.c	/^gimp_editor_constructor (GType                  type,$/;"	f	file:
gimp_editor_create_menu	widgets/gimpeditor.c	/^gimp_editor_create_menu (GimpEditor      *editor,$/;"	f
gimp_editor_destroy	widgets/gimpeditor.c	/^gimp_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_editor_docked_iface_init	widgets/gimpeditor.c	/^gimp_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_editor_ensure_button_box	widgets/gimpeditor.c	/^gimp_editor_ensure_button_box (GimpEditor *editor)$/;"	f	file:
gimp_editor_get_menu	widgets/gimpeditor.c	/^gimp_editor_get_menu (GimpDocked   *docked,$/;"	f	file:
gimp_editor_get_property	widgets/gimpeditor.c	/^gimp_editor_get_property (GObject    *object,$/;"	f	file:
gimp_editor_get_show_button_bar	widgets/gimpeditor.c	/^gimp_editor_get_show_button_bar (GimpDocked *docked)$/;"	f	file:
gimp_editor_has_button_bar	widgets/gimpeditor.c	/^gimp_editor_has_button_bar (GimpDocked *docked)$/;"	f	file:
gimp_editor_init	widgets/gimpeditor.c	/^gimp_editor_init (GimpEditor *editor)$/;"	f	file:
gimp_editor_new	widgets/gimpeditor.c	/^gimp_editor_new (void)$/;"	f
gimp_editor_popup_menu	widgets/gimpeditor.c	/^gimp_editor_popup_menu (GimpEditor           *editor,$/;"	f
gimp_editor_set_box_style	widgets/gimpeditor.c	/^gimp_editor_set_box_style (GimpEditor *editor,$/;"	f
gimp_editor_set_name	widgets/gimpeditor.c	/^gimp_editor_set_name (GimpEditor  *editor,$/;"	f
gimp_editor_set_property	widgets/gimpeditor.c	/^gimp_editor_set_property (GObject      *object,$/;"	f	file:
gimp_editor_set_show_button_bar	widgets/gimpeditor.c	/^gimp_editor_set_show_button_bar (GimpDocked *docked,$/;"	f	file:
gimp_editor_set_show_name	widgets/gimpeditor.c	/^gimp_editor_set_show_name (GimpEditor *editor,$/;"	f
gimp_editor_style_set	widgets/gimpeditor.c	/^gimp_editor_style_set (GtkWidget *widget,$/;"	f	file:
gimp_eek	errors.c	/^gimp_eek (const gchar *reason,$/;"	f	file:
gimp_ellipse_select_tool_class_init	tools/gimpellipseselecttool.c	/^gimp_ellipse_select_tool_class_init (GimpEllipseSelectToolClass *klass)$/;"	f	file:
gimp_ellipse_select_tool_draw	tools/gimpellipseselecttool.c	/^gimp_ellipse_select_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_ellipse_select_tool_init	tools/gimpellipseselecttool.c	/^gimp_ellipse_select_tool_init (GimpEllipseSelectTool *ellipse_select)$/;"	f	file:
gimp_ellipse_select_tool_select	tools/gimpellipseselecttool.c	/^gimp_ellipse_select_tool_select (GimpRectSelectTool *rect_tool,$/;"	f	file:
gimp_enum_action_activate	widgets/gimpenumaction.c	/^gimp_enum_action_activate (GtkAction *action)$/;"	f	file:
gimp_enum_action_class_init	widgets/gimpenumaction.c	/^gimp_enum_action_class_init (GimpEnumActionClass *klass)$/;"	f	file:
gimp_enum_action_get_property	widgets/gimpenumaction.c	/^gimp_enum_action_get_property (GObject    *object,$/;"	f	file:
gimp_enum_action_init	widgets/gimpenumaction.c	/^gimp_enum_action_init (GimpEnumAction *action)$/;"	f	file:
gimp_enum_action_new	widgets/gimpenumaction.c	/^gimp_enum_action_new (const gchar *name,$/;"	f
gimp_enum_action_selected	widgets/gimpenumaction.c	/^gimp_enum_action_selected (GimpEnumAction *action,$/;"	f
gimp_enum_action_set_property	widgets/gimpenumaction.c	/^gimp_enum_action_set_property (GObject      *object,$/;"	f	file:
gimp_enum_radio_frame_add	widgets/gimpwidgets-utils.c	/^gimp_enum_radio_frame_add (GtkFrame  *frame,$/;"	f
gimp_enum_store_insert_value_after	widgets/gimpwidgets-constructors.c	/^gimp_enum_store_insert_value_after (GimpEnumStore *store,$/;"	f	file:
gimp_environ_table_add	plug-in/gimpenvirontable.c	/^gimp_environ_table_add (GimpEnvironTable *environ_table,$/;"	f
gimp_environ_table_class_init	plug-in/gimpenvirontable.c	/^gimp_environ_table_class_init (GimpEnvironTableClass *class)$/;"	f	file:
gimp_environ_table_clear	plug-in/gimpenvirontable.c	/^gimp_environ_table_clear (GimpEnvironTable *environ_table)$/;"	f
gimp_environ_table_clear_all	plug-in/gimpenvirontable.c	/^gimp_environ_table_clear_all (GimpEnvironTable *environ_table)$/;"	f
gimp_environ_table_clear_envp	plug-in/gimpenvirontable.c	/^gimp_environ_table_clear_envp (GimpEnvironTable *environ_table)$/;"	f	file:
gimp_environ_table_clear_internal	plug-in/gimpenvirontable.c	/^gimp_environ_table_clear_internal (GimpEnvironTable *environ_table)$/;"	f	file:
gimp_environ_table_clear_vars	plug-in/gimpenvirontable.c	/^gimp_environ_table_clear_vars (GimpEnvironTable *environ_table)$/;"	f	file:
gimp_environ_table_finalize	plug-in/gimpenvirontable.c	/^gimp_environ_table_finalize (GObject *object)$/;"	f	file:
gimp_environ_table_free_value	plug-in/gimpenvirontable.c	/^gimp_environ_table_free_value (GimpEnvironValue *val)$/;"	f	file:
gimp_environ_table_get_envp	plug-in/gimpenvirontable.c	/^gimp_environ_table_get_envp (GimpEnvironTable *environ_table)$/;"	f
gimp_environ_table_init	plug-in/gimpenvirontable.c	/^gimp_environ_table_init (GimpEnvironTable *environ_table)$/;"	f	file:
gimp_environ_table_legal_name	plug-in/gimpenvirontable.c	/^gimp_environ_table_legal_name (gchar *name)$/;"	f	file:
gimp_environ_table_load	plug-in/gimpenvirontable.c	/^gimp_environ_table_load (GimpEnvironTable *environ_table,$/;"	f
gimp_environ_table_load_env_file	plug-in/gimpenvirontable.c	/^gimp_environ_table_load_env_file (const GimpDatafileData *file_data,$/;"	f	file:
gimp_environ_table_new	plug-in/gimpenvirontable.c	/^gimp_environ_table_new (void)$/;"	f
gimp_environ_table_pass_through	plug-in/gimpenvirontable.c	/^gimp_environ_table_pass_through (GimpEnvironTable *environ_table,$/;"	f	file:
gimp_environ_table_populate	plug-in/gimpenvirontable.c	/^gimp_environ_table_populate (GimpEnvironTable *environ_table)$/;"	f	file:
gimp_environ_table_populate_one	plug-in/gimpenvirontable.c	/^gimp_environ_table_populate_one (const gchar      *name,$/;"	f	file:
gimp_environ_table_remove	plug-in/gimpenvirontable.c	/^gimp_environ_table_remove (GimpEnvironTable *environ_table,$/;"	f
gimp_environ_table_str_equal	plug-in/gimpenvirontable.c	/^gimp_environ_table_str_equal (gconstpointer v1,$/;"	f	file:
gimp_environ_table_str_hash	plug-in/gimpenvirontable.c	/^gimp_environ_table_str_hash (gconstpointer v)$/;"	f	file:
gimp_eraser_class_init	paint/gimperaser.c	/^gimp_eraser_class_init (GimpEraserClass *klass)$/;"	f	file:
gimp_eraser_init	paint/gimperaser.c	/^gimp_eraser_init (GimpEraser *eraser)$/;"	f	file:
gimp_eraser_motion	paint/gimperaser.c	/^gimp_eraser_motion (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_eraser_options_class_init	paint/gimperaseroptions.c	/^gimp_eraser_options_class_init (GimpEraserOptionsClass *klass)$/;"	f	file:
gimp_eraser_options_get_property	paint/gimperaseroptions.c	/^gimp_eraser_options_get_property (GObject    *object,$/;"	f	file:
gimp_eraser_options_gui	tools/gimperasertool.c	/^gimp_eraser_options_gui (GimpToolOptions *tool_options)$/;"	f	file:
gimp_eraser_options_init	paint/gimperaseroptions.c	/^gimp_eraser_options_init (GimpEraserOptions *options)$/;"	f	file:
gimp_eraser_options_set_property	paint/gimperaseroptions.c	/^gimp_eraser_options_set_property (GObject      *object,$/;"	f	file:
gimp_eraser_paint	paint/gimperaser.c	/^gimp_eraser_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_eraser_tool_class_init	tools/gimperasertool.c	/^gimp_eraser_tool_class_init (GimpEraserToolClass *klass)$/;"	f	file:
gimp_eraser_tool_cursor_update	tools/gimperasertool.c	/^gimp_eraser_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_eraser_tool_init	tools/gimperasertool.c	/^gimp_eraser_tool_init (GimpEraserTool *eraser)$/;"	f	file:
gimp_eraser_tool_modifier_key	tools/gimperasertool.c	/^gimp_eraser_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_error_console_add	widgets/gimperrorconsole.c	/^gimp_error_console_add (GimpErrorConsole    *console,$/;"	f
gimp_error_console_button_press	widgets/gimperrorconsole.c	/^gimp_error_console_button_press (GtkWidget        *widget,$/;"	f	file:
gimp_error_console_class_init	widgets/gimperrorconsole.c	/^gimp_error_console_class_init (GimpErrorConsoleClass *klass)$/;"	f	file:
gimp_error_console_constructor	widgets/gimperrorconsole.c	/^gimp_error_console_constructor (GType                  type,$/;"	f	file:
gimp_error_console_destroy	widgets/gimperrorconsole.c	/^gimp_error_console_destroy (GtkObject *object)$/;"	f	file:
gimp_error_console_init	widgets/gimperrorconsole.c	/^gimp_error_console_init (GimpErrorConsole *console)$/;"	f	file:
gimp_error_console_new	widgets/gimperrorconsole.c	/^gimp_error_console_new (Gimp            *gimp,$/;"	f
gimp_error_console_unmap	widgets/gimperrorconsole.c	/^gimp_error_console_unmap (GtkWidget *widget)$/;"	f	file:
gimp_error_dialog_add	widgets/gimperrordialog.c	/^gimp_error_dialog_add (GimpErrorDialog *dialog,$/;"	f
gimp_error_dialog_class_init	widgets/gimperrordialog.c	/^gimp_error_dialog_class_init (GimpErrorDialogClass *klass)$/;"	f	file:
gimp_error_dialog_finalize	widgets/gimperrordialog.c	/^gimp_error_dialog_finalize (GObject *object)$/;"	f	file:
gimp_error_dialog_init	widgets/gimperrordialog.c	/^gimp_error_dialog_init (GimpErrorDialog *dialog)$/;"	f	file:
gimp_error_dialog_new	widgets/gimperrordialog.c	/^gimp_error_dialog_new (const gchar *title)$/;"	f
gimp_error_dialog_response	widgets/gimperrordialog.c	/^gimp_error_dialog_response (GtkDialog *dialog,$/;"	f	file:
gimp_error_log_func	errors.c	/^gimp_error_log_func (const gchar    *domain,$/;"	f	file:
gimp_exit	core/gimp.c	/^gimp_exit (Gimp     *gimp,$/;"	f
gimp_fatal_error	errors.c	/^gimp_fatal_error (const gchar *fmt, ...)$/;"	f
gimp_fg_bg_editor_button_press	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_fg_bg_editor_button_release	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_button_release (GtkWidget      *widget,$/;"	f	file:
gimp_fg_bg_editor_class_init	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_class_init (GimpFgBgEditorClass *klass)$/;"	f	file:
gimp_fg_bg_editor_destroy	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_fg_bg_editor_drag_color	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_drag_color (GtkWidget *widget,$/;"	f	file:
gimp_fg_bg_editor_drag_motion	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_drag_motion (GtkWidget      *widget,$/;"	f	file:
gimp_fg_bg_editor_draw_rect	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_draw_rect (GimpFgBgEditor *editor,$/;"	f	file:
gimp_fg_bg_editor_drop_color	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_drop_color (GtkWidget     *widget,$/;"	f	file:
gimp_fg_bg_editor_expose	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_expose (GtkWidget      *widget,$/;"	f	file:
gimp_fg_bg_editor_get_property	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_get_property (GObject    *object,$/;"	f	file:
gimp_fg_bg_editor_init	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_init (GimpFgBgEditor *editor)$/;"	f	file:
gimp_fg_bg_editor_new	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_new (GimpContext *context)$/;"	f
gimp_fg_bg_editor_set_active	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_set_active (GimpFgBgEditor  *editor,$/;"	f
gimp_fg_bg_editor_set_context	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_set_context (GimpFgBgEditor *editor,$/;"	f
gimp_fg_bg_editor_set_property	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_set_property (GObject      *object,$/;"	f	file:
gimp_fg_bg_editor_target	widgets/gimpfgbgeditor.c	/^gimp_fg_bg_editor_target (GimpFgBgEditor *editor,$/;"	f	file:
gimp_fg_bg_view_class_init	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_class_init (GimpFgBgViewClass *klass)$/;"	f	file:
gimp_fg_bg_view_destroy	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_destroy (GtkObject *object)$/;"	f	file:
gimp_fg_bg_view_draw_rect	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_draw_rect (GimpFgBgView  *view,$/;"	f	file:
gimp_fg_bg_view_expose	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_expose (GtkWidget      *widget,$/;"	f	file:
gimp_fg_bg_view_get_property	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_get_property (GObject    *object,$/;"	f	file:
gimp_fg_bg_view_init	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_init (GimpFgBgView *view)$/;"	f	file:
gimp_fg_bg_view_new	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_new (GimpContext *context)$/;"	f
gimp_fg_bg_view_set_context	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_set_context (GimpFgBgView *view,$/;"	f
gimp_fg_bg_view_set_property	widgets/gimpfgbgview.c	/^gimp_fg_bg_view_set_property (GObject      *object,$/;"	f	file:
gimp_file_dialog_add_filters	widgets/gimpfiledialog.c	/^gimp_file_dialog_add_filters (GimpFileDialog *dialog,$/;"	f	file:
gimp_file_dialog_add_preview	widgets/gimpfiledialog.c	/^gimp_file_dialog_add_preview (GimpFileDialog *dialog,$/;"	f	file:
gimp_file_dialog_add_proc_selection	widgets/gimpfiledialog.c	/^gimp_file_dialog_add_proc_selection (GimpFileDialog *dialog,$/;"	f	file:
gimp_file_dialog_class_init	widgets/gimpfiledialog.c	/^gimp_file_dialog_class_init (GimpFileDialogClass *klass)$/;"	f	file:
gimp_file_dialog_delete_event	widgets/gimpfiledialog.c	/^gimp_file_dialog_delete_event (GtkWidget   *widget,$/;"	f	file:
gimp_file_dialog_help_clicked	widgets/gimpfiledialog.c	/^gimp_file_dialog_help_clicked (GtkWidget *widget,$/;"	f	file:
gimp_file_dialog_help_func	widgets/gimpfiledialog.c	/^gimp_file_dialog_help_func (const gchar *help_id,$/;"	f	file:
gimp_file_dialog_init	widgets/gimpfiledialog.c	/^gimp_file_dialog_init (GimpFileDialog *dialog)$/;"	f	file:
gimp_file_dialog_new	widgets/gimpfiledialog.c	/^gimp_file_dialog_new (Gimp                 *gimp,$/;"	f
gimp_file_dialog_pattern_from_extension	widgets/gimpfiledialog.c	/^gimp_file_dialog_pattern_from_extension (const gchar *extension)$/;"	f	file:
gimp_file_dialog_proc_changed	widgets/gimpfiledialog.c	/^gimp_file_dialog_proc_changed (GimpFileProcView *view,$/;"	f	file:
gimp_file_dialog_progress_end	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_file_dialog_progress_get_value	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_file_dialog_progress_get_window	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_get_window (GimpProgress *progress)$/;"	f	file:
gimp_file_dialog_progress_iface_init	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_iface_init (GimpProgressInterface *iface)$/;"	f	file:
gimp_file_dialog_progress_is_active	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_file_dialog_progress_pulse	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_file_dialog_progress_set_text	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_set_text (GimpProgress *progress,$/;"	f	file:
gimp_file_dialog_progress_set_value	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_file_dialog_progress_start	widgets/gimpfiledialog.c	/^gimp_file_dialog_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_file_dialog_response	widgets/gimpfiledialog.c	/^gimp_file_dialog_response (GtkDialog *dialog,$/;"	f	file:
gimp_file_dialog_selection_changed	widgets/gimpfiledialog.c	/^gimp_file_dialog_selection_changed (GtkFileChooser *chooser,$/;"	f	file:
gimp_file_dialog_set_file_proc	widgets/gimpfiledialog.c	/^gimp_file_dialog_set_file_proc (GimpFileDialog      *dialog,$/;"	f
gimp_file_dialog_set_image	widgets/gimpfiledialog.c	/^gimp_file_dialog_set_image (GimpFileDialog *dialog,$/;"	f
gimp_file_dialog_set_sensitive	widgets/gimpfiledialog.c	/^gimp_file_dialog_set_sensitive (GimpFileDialog *dialog,$/;"	f
gimp_file_dialog_update_preview	widgets/gimpfiledialog.c	/^gimp_file_dialog_update_preview (GtkFileChooser *chooser,$/;"	f	file:
gimp_file_overwrite_dialog	widgets/gimpdnd-xds.c	/^gimp_file_overwrite_dialog (GtkWidget   *parent,$/;"	f	file:
gimp_file_proc_view_class_init	widgets/gimpfileprocview.c	/^gimp_file_proc_view_class_init (GimpFileProcViewClass *klass)$/;"	f	file:
gimp_file_proc_view_finalize	widgets/gimpfileprocview.c	/^gimp_file_proc_view_finalize (GObject *object)$/;"	f	file:
gimp_file_proc_view_get_help_id	widgets/gimpfileprocview.c	/^gimp_file_proc_view_get_help_id (GimpFileProcView *view)$/;"	f
gimp_file_proc_view_get_proc	widgets/gimpfileprocview.c	/^gimp_file_proc_view_get_proc (GimpFileProcView  *view,$/;"	f
gimp_file_proc_view_init	widgets/gimpfileprocview.c	/^gimp_file_proc_view_init (GimpFileProcView *view)$/;"	f	file:
gimp_file_proc_view_new	widgets/gimpfileprocview.c	/^gimp_file_proc_view_new (Gimp        *gimp,$/;"	f
gimp_file_proc_view_selection_changed	widgets/gimpfileprocview.c	/^gimp_file_proc_view_selection_changed (GtkTreeSelection *selection,$/;"	f	file:
gimp_file_proc_view_set_proc	widgets/gimpfileprocview.c	/^gimp_file_proc_view_set_proc (GimpFileProcView    *view,$/;"	f
gimp_fill_type_get_type	core/core-enums.c	/^gimp_fill_type_get_type (void)$/;"	f
gimp_finalize	core/gimp.c	/^gimp_finalize (GObject *object)$/;"	f	file:
gimp_flip_options_class_init	tools/gimpflipoptions.c	/^gimp_flip_options_class_init (GimpFlipOptionsClass *klass)$/;"	f	file:
gimp_flip_options_get_property	tools/gimpflipoptions.c	/^gimp_flip_options_get_property (GObject    *object,$/;"	f	file:
gimp_flip_options_gui	tools/gimpflipoptions.c	/^gimp_flip_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_flip_options_init	tools/gimpflipoptions.c	/^gimp_flip_options_init (GimpFlipOptions *options)$/;"	f	file:
gimp_flip_options_set_property	tools/gimpflipoptions.c	/^gimp_flip_options_set_property (GObject      *object,$/;"	f	file:
gimp_flip_tool_class_init	tools/gimpfliptool.c	/^gimp_flip_tool_class_init (GimpFlipToolClass *klass)$/;"	f	file:
gimp_flip_tool_cursor_update	tools/gimpfliptool.c	/^gimp_flip_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_flip_tool_init	tools/gimpfliptool.c	/^gimp_flip_tool_init (GimpFlipTool *flip_tool)$/;"	f	file:
gimp_flip_tool_modifier_key	tools/gimpfliptool.c	/^gimp_flip_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_flip_tool_transform	tools/gimpfliptool.c	/^gimp_flip_tool_transform (GimpTransformTool *trans_tool,$/;"	f	file:
gimp_float_array_get_type	core/gimpparamspecs.c	/^gimp_float_array_get_type (void)$/;"	f
gimp_floating_sel_undo_class_init	core/gimpfloatingselundo.c	/^gimp_floating_sel_undo_class_init (GimpFloatingSelUndoClass *klass)$/;"	f	file:
gimp_floating_sel_undo_constructor	core/gimpfloatingselundo.c	/^gimp_floating_sel_undo_constructor (GType                  type,$/;"	f	file:
gimp_floating_sel_undo_free	core/gimpfloatingselundo.c	/^gimp_floating_sel_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_floating_sel_undo_init	core/gimpfloatingselundo.c	/^gimp_floating_sel_undo_init (GimpFloatingSelUndo *undo)$/;"	f	file:
gimp_floating_sel_undo_pop	core/gimpfloatingselundo.c	/^gimp_floating_sel_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_font_box_new	widgets/gimpviewablebox.c	/^gimp_font_box_new (GimpContainer *container,$/;"	f
gimp_font_class_init	text/gimpfont.c	/^gimp_font_class_init (GimpFontClass *klass)$/;"	f	file:
gimp_font_finalize	text/gimpfont.c	/^gimp_font_finalize (GObject *object)$/;"	f	file:
gimp_font_get_new_preview	text/gimpfont.c	/^gimp_font_get_new_preview (GimpViewable *viewable,$/;"	f	file:
gimp_font_get_popup_size	text/gimpfont.c	/^gimp_font_get_popup_size (GimpViewable *viewable,$/;"	f	file:
gimp_font_get_preview_size	text/gimpfont.c	/^gimp_font_get_preview_size (GimpViewable *viewable,$/;"	f	file:
gimp_font_get_sample_string	text/gimpfont.c	/^gimp_font_get_sample_string (PangoContext         *context,$/;"	f	file:
gimp_font_get_standard	text/gimpfont.c	/^gimp_font_get_standard (void)$/;"	f
gimp_font_init	text/gimpfont.c	/^gimp_font_init (GimpFont *font)$/;"	f	file:
gimp_font_list_add_font	text/gimpfontlist.c	/^gimp_font_list_add_font (GimpFontList         *list,$/;"	f	file:
gimp_font_list_class_init	text/gimpfontlist.c	/^gimp_font_list_class_init (GimpFontListClass *klass)$/;"	f	file:
gimp_font_list_init	text/gimpfontlist.c	/^gimp_font_list_init (GimpFontList *list)$/;"	f	file:
gimp_font_list_load_aliases	text/gimpfontlist.c	/^gimp_font_list_load_aliases (GimpFontList *list,$/;"	f	file:
gimp_font_list_load_names	text/gimpfontlist.c	/^gimp_font_list_load_names (GimpFontList *list,$/;"	f	file:
gimp_font_list_make_alias	text/gimpfontlist.c	/^gimp_font_list_make_alias (GimpFontList *list,$/;"	f	file:
gimp_font_list_new	text/gimpfontlist.c	/^gimp_font_list_new (gdouble xresolution,$/;"	f
gimp_font_list_restore	text/gimpfontlist.c	/^gimp_font_list_restore (GimpFontList *list)$/;"	f
gimp_font_select_class_init	widgets/gimpfontselect.c	/^gimp_font_select_class_init (GimpFontSelectClass *klass)$/;"	f	file:
gimp_font_select_constructor	widgets/gimpfontselect.c	/^gimp_font_select_constructor (GType                  type,$/;"	f	file:
gimp_font_select_init	widgets/gimpfontselect.c	/^gimp_font_select_init (GimpFontSelect *select)$/;"	f	file:
gimp_font_select_run_callback	widgets/gimpfontselect.c	/^gimp_font_select_run_callback (GimpPdbDialog *dialog,$/;"	f	file:
gimp_font_set_property	text/gimpfont.c	/^gimp_font_set_property (GObject       *object,$/;"	f	file:
gimp_font_util_pango_font_description_to_string	text/gimpfont-utils.c	/^gimp_font_util_pango_font_description_to_string (const PangoFontDescription *desc)$/;"	f
gimp_font_view_activate_item	widgets/gimpfontview.c	/^gimp_font_view_activate_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_font_view_class_init	widgets/gimpfontview.c	/^gimp_font_view_class_init (GimpFontViewClass *klass)$/;"	f	file:
gimp_font_view_init	widgets/gimpfontview.c	/^gimp_font_view_init (GimpFontView *view)$/;"	f	file:
gimp_font_view_new	widgets/gimpfontview.c	/^gimp_font_view_new (GimpViewType     view_type,$/;"	f
gimp_fonts_add_directories	text/gimp-fonts.c	/^gimp_fonts_add_directories (FcConfig    *config,$/;"	f	file:
gimp_fonts_init	text/gimp-fonts.c	/^gimp_fonts_init (Gimp *gimp)$/;"	f
gimp_fonts_load	text/gimp-fonts.c	/^gimp_fonts_load (Gimp *gimp)$/;"	f
gimp_fonts_load_fonts_conf	text/gimp-fonts.c	/^gimp_fonts_load_fonts_conf (FcConfig *config,$/;"	f	file:
gimp_fonts_reset	text/gimp-fonts.c	/^gimp_fonts_reset (Gimp *gimp)$/;"	f
gimp_foreground_select_options_class_init	tools/gimpforegroundselectoptions.c	/^gimp_foreground_select_options_class_init (GimpForegroundSelectOptionsClass *klass)$/;"	f	file:
gimp_foreground_select_options_get_property	tools/gimpforegroundselectoptions.c	/^gimp_foreground_select_options_get_property (GObject    *object,$/;"	f	file:
gimp_foreground_select_options_gui	tools/gimpforegroundselectoptions.c	/^gimp_foreground_select_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_foreground_select_options_init	tools/gimpforegroundselectoptions.c	/^gimp_foreground_select_options_init (GimpForegroundSelectOptions *options)$/;"	f	file:
gimp_foreground_select_options_notify	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_options_notify (GimpForegroundSelectOptions *options,$/;"	f	file:
gimp_foreground_select_options_set_property	tools/gimpforegroundselectoptions.c	/^gimp_foreground_select_options_set_property (GObject      *object,$/;"	f	file:
gimp_foreground_select_tool_apply	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_apply (GimpForegroundSelectTool *fg_select,$/;"	f	file:
gimp_foreground_select_tool_button_press	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_foreground_select_tool_button_release	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_foreground_select_tool_class_init	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_class_init (GimpForegroundSelectToolClass *klass)$/;"	f	file:
gimp_foreground_select_tool_constructor	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_constructor (GType                  type,$/;"	f	file:
gimp_foreground_select_tool_control	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_foreground_select_tool_cursor_update	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_foreground_select_tool_draw	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_foreground_select_tool_finalize	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_finalize (GObject *object)$/;"	f	file:
gimp_foreground_select_tool_get_area	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_get_area (GimpChannel *mask,$/;"	f	file:
gimp_foreground_select_tool_idle_select	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_idle_select (GimpForegroundSelectTool *fg_select)$/;"	f	file:
gimp_foreground_select_tool_init	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_init (GimpForegroundSelectTool *fg_select)$/;"	f	file:
gimp_foreground_select_tool_key_press	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_key_press (GimpTool    *tool,$/;"	f	file:
gimp_foreground_select_tool_modifier_key	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_foreground_select_tool_motion	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_foreground_select_tool_oper_update	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_foreground_select_tool_push_stroke	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_push_stroke (GimpForegroundSelectTool    *fg_select,$/;"	f	file:
gimp_foreground_select_tool_select	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_select (GimpFreeSelectTool *free_sel,$/;"	f	file:
gimp_foreground_select_tool_set_mask	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_set_mask (GimpForegroundSelectTool *fg_select,$/;"	f	file:
gimp_foreground_select_tool_stroke	tools/gimpforegroundselecttool.c	/^gimp_foreground_select_tool_stroke (GimpChannel    *mask,$/;"	f	file:
gimp_foreground_select_tool_undo_class_init	tools/gimpforegroundselecttoolundo.c	/^gimp_foreground_select_tool_undo_class_init (GimpForegroundSelectToolUndoClass *klass)$/;"	f	file:
gimp_foreground_select_tool_undo_constructor	tools/gimpforegroundselecttoolundo.c	/^gimp_foreground_select_tool_undo_constructor (GType                  type,$/;"	f	file:
gimp_foreground_select_tool_undo_free	tools/gimpforegroundselecttoolundo.c	/^gimp_foreground_select_tool_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_foreground_select_tool_undo_get_property	tools/gimpforegroundselecttoolundo.c	/^gimp_foreground_select_tool_undo_get_property (GObject    *object,$/;"	f	file:
gimp_foreground_select_tool_undo_init	tools/gimpforegroundselecttoolundo.c	/^gimp_foreground_select_tool_undo_init (GimpForegroundSelectToolUndo *undo)$/;"	f	file:
gimp_foreground_select_tool_undo_pop	tools/gimpforegroundselecttoolundo.c	/^gimp_foreground_select_tool_undo_pop (GimpUndo              *undo,$/;"	f	file:
gimp_foreground_select_tool_undo_set_property	tools/gimpforegroundselecttoolundo.c	/^gimp_foreground_select_tool_undo_set_property (GObject      *object,$/;"	f	file:
gimp_free_progress	core/gimp-gui.c	/^gimp_free_progress (Gimp         *gimp,$/;"	f
gimp_free_select_tool_add_point	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_add_point (GimpFreeSelectTool *free_sel,$/;"	f	file:
gimp_free_select_tool_button_press	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_free_select_tool_button_release	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_free_select_tool_class_init	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_class_init (GimpFreeSelectToolClass *klass)$/;"	f	file:
gimp_free_select_tool_control	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_free_select_tool_draw	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_free_select_tool_finalize	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_finalize (GObject *object)$/;"	f	file:
gimp_free_select_tool_init	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_init (GimpFreeSelectTool *free_select)$/;"	f	file:
gimp_free_select_tool_motion	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_free_select_tool_move_points	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_move_points (GimpFreeSelectTool *free_sel,$/;"	f	file:
gimp_free_select_tool_real_select	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_real_select (GimpFreeSelectTool *free_sel,$/;"	f	file:
gimp_free_select_tool_register	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_register (GimpToolRegisterCallback  callback,$/;"	f
gimp_free_select_tool_select	tools/gimpfreeselecttool.c	/^gimp_free_select_tool_select (GimpFreeSelectTool *free_sel,$/;"	f
gimp_fuzzy_select_tool_class_init	tools/gimpfuzzyselecttool.c	/^gimp_fuzzy_select_tool_class_init (GimpFuzzySelectToolClass *klass)$/;"	f	file:
gimp_fuzzy_select_tool_get_mask	tools/gimpfuzzyselecttool.c	/^gimp_fuzzy_select_tool_get_mask (GimpRegionSelectTool *region_select,$/;"	f	file:
gimp_fuzzy_select_tool_init	tools/gimpfuzzyselecttool.c	/^gimp_fuzzy_select_tool_init (GimpFuzzySelectTool *fuzzy_select)$/;"	f	file:
gimp_g_hash_table_get_memsize	core/gimp-utils.c	/^gimp_g_hash_table_get_memsize (GHashTable *hash,$/;"	f
gimp_g_hash_table_get_memsize_foreach	core/gimp-utils.c	/^gimp_g_hash_table_get_memsize_foreach (GHashTable      *hash,$/;"	f
gimp_g_list_get_memsize	core/gimp-utils.c	/^gimp_g_list_get_memsize (GList  *list,$/;"	f
gimp_g_list_get_memsize_foreach	core/gimp-utils.c	/^gimp_g_list_get_memsize_foreach (GList           *list,$/;"	f
gimp_g_object_get_memsize	core/gimp-utils.c	/^gimp_g_object_get_memsize (GObject *object)$/;"	f
gimp_g_param_spec_get_memsize	core/gimp-utils.c	/^gimp_g_param_spec_get_memsize (GParamSpec *pspec)$/;"	f
gimp_g_slist_get_memsize	core/gimp-utils.c	/^gimp_g_slist_get_memsize (GSList  *slist,$/;"	f
gimp_g_slist_get_memsize_foreach	core/gimp-utils.c	/^gimp_g_slist_get_memsize_foreach (GSList          *slist,$/;"	f
gimp_g_type_instance_get_memsize	core/gimp-utils.c	/^gimp_g_type_instance_get_memsize (GTypeInstance *instance)$/;"	f
gimp_g_value_get_memsize	core/gimp-utils.c	/^gimp_g_value_get_memsize (GValue *value)$/;"	f
gimp_get_accel_string	widgets/gimpwidgets-utils.c	/^gimp_get_accel_string (guint           key,$/;"	f
gimp_get_default_context	core/gimp.c	/^gimp_get_default_context (Gimp *gimp)$/;"	f
gimp_get_default_language	core/gimp-utils.c	/^gimp_get_default_language (const gchar *category)$/;"	f
gimp_get_default_unit	core/gimp-utils.c	/^gimp_get_default_unit (void)$/;"	f
gimp_get_display_ID	core/gimp-gui.c	/^gimp_get_display_ID (Gimp       *gimp,$/;"	f
gimp_get_display_by_ID	core/gimp-gui.c	/^gimp_get_display_by_ID (Gimp *gimp,$/;"	f
gimp_get_display_name	core/gimp-gui.c	/^gimp_get_display_name (Gimp *gimp,$/;"	f
gimp_get_display_window	core/gimp-gui.c	/^gimp_get_display_window (Gimp       *gimp,$/;"	f
gimp_get_icon_size	widgets/gimpwidgets-utils.c	/^gimp_get_icon_size (GtkWidget   *widget,$/;"	f
gimp_get_memsize	core/gimp.c	/^gimp_get_memsize (GimpObject *object,$/;"	f	file:
gimp_get_message_stock_id	widgets/gimpwidgets-utils.c	/^gimp_get_message_stock_id (GimpMessageSeverity severity)$/;"	f
gimp_get_mod_name_alt	widgets/gimpwidgets-utils.c	/^gimp_get_mod_name_alt (void)$/;"	f
gimp_get_mod_name_control	widgets/gimpwidgets-utils.c	/^gimp_get_mod_name_control (void)$/;"	f
gimp_get_mod_name_shift	widgets/gimpwidgets-utils.c	/^gimp_get_mod_name_shift (void)$/;"	f
gimp_get_mod_separator	widgets/gimpwidgets-utils.c	/^gimp_get_mod_separator (void)$/;"	f
gimp_get_mod_string	widgets/gimpwidgets-utils.c	/^gimp_get_mod_string (GdkModifierType modifiers)$/;"	f
gimp_get_program_class	core/gimp-gui.c	/^gimp_get_program_class (Gimp *gimp)$/;"	f
gimp_get_screen_resolution	widgets/gimpwidgets-utils.c	/^gimp_get_screen_resolution (GdkScreen *screen,$/;"	f
gimp_get_temp_filename	core/gimp-utils.c	/^gimp_get_temp_filename (Gimp        *gimp,$/;"	f
gimp_get_theme_dir	core/gimp-gui.c	/^gimp_get_theme_dir (Gimp *gimp)$/;"	f
gimp_get_tool_info	core/gimp.c	/^gimp_get_tool_info (Gimp        *gimp,$/;"	f
gimp_get_user_context	core/gimp.c	/^gimp_get_user_context (Gimp *gimp)$/;"	f
gimp_global_config_notify	core/gimp.c	/^gimp_global_config_notify (GObject    *global_config,$/;"	f	file:
gimp_gradient_box_new	widgets/gimpviewablebox.c	/^gimp_gradient_box_new (GimpContainer *container,$/;"	f
gimp_gradient_box_reverse_notify	widgets/gimpviewablebox.c	/^gimp_gradient_box_reverse_notify (GObject    *object,$/;"	f	file:
gimp_gradient_calc_curved_factor	core/gimpgradient.c	/^gimp_gradient_calc_curved_factor (gdouble middle,$/;"	f	file:
gimp_gradient_calc_linear_factor	core/gimpgradient.c	/^gimp_gradient_calc_linear_factor (gdouble middle,$/;"	f	file:
gimp_gradient_calc_sine_factor	core/gimpgradient.c	/^gimp_gradient_calc_sine_factor (gdouble middle,$/;"	f	file:
gimp_gradient_calc_sphere_decreasing_factor	core/gimpgradient.c	/^gimp_gradient_calc_sphere_decreasing_factor (gdouble middle,$/;"	f	file:
gimp_gradient_calc_sphere_increasing_factor	core/gimpgradient.c	/^gimp_gradient_calc_sphere_increasing_factor (gdouble middle,$/;"	f	file:
gimp_gradient_class_init	core/gimpgradient.c	/^gimp_gradient_class_init (GimpGradientClass *klass)$/;"	f	file:
gimp_gradient_color_get_type	core/core-enums.c	/^gimp_gradient_color_get_type (void)$/;"	f
gimp_gradient_duplicate	core/gimpgradient.c	/^gimp_gradient_duplicate (GimpData *data)$/;"	f	file:
gimp_gradient_editor_class_init	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_class_init (GimpGradientEditorClass *klass)$/;"	f	file:
gimp_gradient_editor_constructor	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_constructor (GType                  type,$/;"	f	file:
gimp_gradient_editor_destroy	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_gradient_editor_docked_iface_init	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_gradient_editor_gradient_dirty	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_gradient_dirty (GimpGradientEditor *editor,$/;"	f	file:
gimp_gradient_editor_init	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_init (GimpGradientEditor *editor)$/;"	f	file:
gimp_gradient_editor_new	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_new (GimpContext     *context,$/;"	f
gimp_gradient_editor_set_context	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_gradient_editor_set_data	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_set_data (GimpDataEditor *editor,$/;"	f	file:
gimp_gradient_editor_unmap	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_unmap (GtkWidget *widget)$/;"	f	file:
gimp_gradient_editor_unrealize	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_gradient_editor_update	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_update (GimpGradientEditor *editor)$/;"	f
gimp_gradient_editor_zoom	widgets/gimpgradienteditor.c	/^gimp_gradient_editor_zoom (GimpGradientEditor *editor,$/;"	f
gimp_gradient_finalize	core/gimpgradient.c	/^gimp_gradient_finalize (GObject *object)$/;"	f	file:
gimp_gradient_flatten	core/gimpgradient.c	/^gimp_gradient_flatten (GimpGradient *gradient,$/;"	f
gimp_gradient_get_color_at	core/gimpgradient.c	/^gimp_gradient_get_color_at (GimpGradient        *gradient,$/;"	f
gimp_gradient_get_extension	core/gimpgradient.c	/^gimp_gradient_get_extension (GimpData *data)$/;"	f	file:
gimp_gradient_get_memsize	core/gimpgradient.c	/^gimp_gradient_get_memsize (GimpObject *object,$/;"	f	file:
gimp_gradient_get_new_preview	core/gimpgradient.c	/^gimp_gradient_get_new_preview (GimpViewable *viewable,$/;"	f	file:
gimp_gradient_get_popup_size	core/gimpgradient.c	/^gimp_gradient_get_popup_size (GimpViewable *viewable,$/;"	f	file:
gimp_gradient_get_preview_size	core/gimpgradient.c	/^gimp_gradient_get_preview_size (GimpViewable *viewable,$/;"	f	file:
gimp_gradient_get_segment_at	core/gimpgradient.c	/^gimp_gradient_get_segment_at (GimpGradient *gradient,$/;"	f
gimp_gradient_get_segment_at_internal	core/gimpgradient.c	/^gimp_gradient_get_segment_at_internal (GimpGradient        *gradient,$/;"	f	file:
gimp_gradient_get_standard	core/gimpgradient.c	/^gimp_gradient_get_standard (void)$/;"	f
gimp_gradient_has_fg_bg_segments	core/gimpgradient.c	/^gimp_gradient_has_fg_bg_segments (GimpGradient *gradient)$/;"	f
gimp_gradient_init	core/gimpgradient.c	/^gimp_gradient_init (GimpGradient *gradient)$/;"	f	file:
gimp_gradient_load	core/gimpgradient-load.c	/^gimp_gradient_load (const gchar  *filename,$/;"	f
gimp_gradient_load_svg	core/gimpgradient-load.c	/^gimp_gradient_load_svg (const gchar  *filename,$/;"	f
gimp_gradient_new	core/gimpgradient.c	/^gimp_gradient_new (const gchar *name)$/;"	f
gimp_gradient_save	core/gimpgradient-save.c	/^gimp_gradient_save (GimpData  *data,$/;"	f
gimp_gradient_save_pov	core/gimpgradient-save.c	/^gimp_gradient_save_pov (GimpGradient  *gradient,$/;"	f
gimp_gradient_segment_color_get_type	core/core-enums.c	/^gimp_gradient_segment_color_get_type (void)$/;"	f
gimp_gradient_segment_free	core/gimpgradient.c	/^gimp_gradient_segment_free (GimpGradientSegment *seg)$/;"	f
gimp_gradient_segment_get_blending_function	core/gimpgradient.c	/^gimp_gradient_segment_get_blending_function (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_get_coloring_type	core/gimpgradient.c	/^gimp_gradient_segment_get_coloring_type (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_get_first	core/gimpgradient.c	/^gimp_gradient_segment_get_first (GimpGradientSegment *seg)$/;"	f
gimp_gradient_segment_get_last	core/gimpgradient.c	/^gimp_gradient_segment_get_last (GimpGradientSegment *seg)$/;"	f
gimp_gradient_segment_get_left_color	core/gimpgradient.c	/^gimp_gradient_segment_get_left_color (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_get_left_color_type	core/gimpgradient.c	/^gimp_gradient_segment_get_left_color_type (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_get_left_pos	core/gimpgradient.c	/^gimp_gradient_segment_get_left_pos (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_get_middle_pos	core/gimpgradient.c	/^gimp_gradient_segment_get_middle_pos (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_get_nth	core/gimpgradient.c	/^gimp_gradient_segment_get_nth (GimpGradientSegment *seg,$/;"	f
gimp_gradient_segment_get_right_color	core/gimpgradient.c	/^gimp_gradient_segment_get_right_color (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_get_right_color_type	core/gimpgradient.c	/^gimp_gradient_segment_get_right_color_type (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_get_right_pos	core/gimpgradient.c	/^gimp_gradient_segment_get_right_pos (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_new	core/gimpgradient.c	/^gimp_gradient_segment_new (void)$/;"	f
gimp_gradient_segment_range_blend	core/gimpgradient.c	/^gimp_gradient_segment_range_blend (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_range_compress	core/gimpgradient.c	/^gimp_gradient_segment_range_compress (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_range_delete	core/gimpgradient.c	/^gimp_gradient_segment_range_delete (GimpGradient         *gradient,$/;"	f
gimp_gradient_segment_range_flip	core/gimpgradient.c	/^gimp_gradient_segment_range_flip (GimpGradient         *gradient,$/;"	f
gimp_gradient_segment_range_move	core/gimpgradient.c	/^gimp_gradient_segment_range_move (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_range_recenter_handles	core/gimpgradient.c	/^gimp_gradient_segment_range_recenter_handles (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_range_redistribute_handles	core/gimpgradient.c	/^gimp_gradient_segment_range_redistribute_handles (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_range_replicate	core/gimpgradient.c	/^gimp_gradient_segment_range_replicate (GimpGradient         *gradient,$/;"	f
gimp_gradient_segment_range_set_blending_function	core/gimpgradient.c	/^gimp_gradient_segment_range_set_blending_function (GimpGradient            *gradient,$/;"	f
gimp_gradient_segment_range_set_coloring_type	core/gimpgradient.c	/^gimp_gradient_segment_range_set_coloring_type (GimpGradient             *gradient,$/;"	f
gimp_gradient_segment_range_split_midpoint	core/gimpgradient.c	/^gimp_gradient_segment_range_split_midpoint (GimpGradient         *gradient,$/;"	f
gimp_gradient_segment_range_split_uniform	core/gimpgradient.c	/^gimp_gradient_segment_range_split_uniform (GimpGradient         *gradient,$/;"	f
gimp_gradient_segment_set_left_color	core/gimpgradient.c	/^gimp_gradient_segment_set_left_color (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_set_left_color_type	core/gimpgradient.c	/^gimp_gradient_segment_set_left_color_type (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_set_left_pos	core/gimpgradient.c	/^gimp_gradient_segment_set_left_pos (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_set_middle_pos	core/gimpgradient.c	/^gimp_gradient_segment_set_middle_pos (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_set_right_color	core/gimpgradient.c	/^gimp_gradient_segment_set_right_color (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_set_right_color_type	core/gimpgradient.c	/^gimp_gradient_segment_set_right_color_type (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_set_right_pos	core/gimpgradient.c	/^gimp_gradient_segment_set_right_pos (GimpGradient        *gradient,$/;"	f
gimp_gradient_segment_split_midpoint	core/gimpgradient.c	/^gimp_gradient_segment_split_midpoint (GimpGradient         *gradient,$/;"	f
gimp_gradient_segment_split_uniform	core/gimpgradient.c	/^gimp_gradient_segment_split_uniform (GimpGradient         *gradient,$/;"	f
gimp_gradient_segment_type_get_type	core/core-enums.c	/^gimp_gradient_segment_type_get_type (void)$/;"	f
gimp_gradient_segments_free	core/gimpgradient.c	/^gimp_gradient_segments_free (GimpGradientSegment *seg)$/;"	f
gimp_gradient_select_class_init	widgets/gimpgradientselect.c	/^gimp_gradient_select_class_init (GimpGradientSelectClass *klass)$/;"	f	file:
gimp_gradient_select_constructor	widgets/gimpgradientselect.c	/^gimp_gradient_select_constructor (GType                  type,$/;"	f	file:
gimp_gradient_select_init	widgets/gimpgradientselect.c	/^gimp_gradient_select_init (GimpGradientSelect *select)$/;"	f	file:
gimp_gradient_select_run_callback	widgets/gimpgradientselect.c	/^gimp_gradient_select_run_callback (GimpPdbDialog *dialog,$/;"	f	file:
gimp_gradient_select_set_property	widgets/gimpgradientselect.c	/^gimp_gradient_select_set_property (GObject      *object,$/;"	f	file:
gimp_gradients_add_gradient	core/gimp-gradients.c	/^gimp_gradients_add_gradient (Gimp        *gimp,$/;"	f	file:
gimp_gradients_init	core/gimp-gradients.c	/^gimp_gradients_init (Gimp *gimp)$/;"	f
gimp_gravity_type_get_type	core/core-enums.c	/^gimp_gravity_type_get_type (void)$/;"	f
gimp_grid_class_init	core/gimpgrid.c	/^gimp_grid_class_init (GimpGridClass *klass)$/;"	f	file:
gimp_grid_editor_class_init	widgets/gimpgrideditor.c	/^gimp_grid_editor_class_init (GimpGridEditorClass *klass)$/;"	f	file:
gimp_grid_editor_constructor	widgets/gimpgrideditor.c	/^gimp_grid_editor_constructor (GType                  type,$/;"	f	file:
gimp_grid_editor_finalize	widgets/gimpgrideditor.c	/^gimp_grid_editor_finalize (GObject *object)$/;"	f	file:
gimp_grid_editor_get_property	widgets/gimpgrideditor.c	/^gimp_grid_editor_get_property (GObject    *object,$/;"	f	file:
gimp_grid_editor_init	widgets/gimpgrideditor.c	/^gimp_grid_editor_init (GimpGridEditor *editor)$/;"	f	file:
gimp_grid_editor_new	widgets/gimpgrideditor.c	/^gimp_grid_editor_new (GimpGrid    *grid,$/;"	f
gimp_grid_editor_set_property	widgets/gimpgrideditor.c	/^gimp_grid_editor_set_property (GObject      *object,$/;"	f	file:
gimp_grid_from_parasite	core/gimpgrid.c	/^gimp_grid_from_parasite (const GimpParasite *parasite)$/;"	f
gimp_grid_get_property	core/gimpgrid.c	/^gimp_grid_get_property (GObject      *object,$/;"	f	file:
gimp_grid_init	core/gimpgrid.c	/^gimp_grid_init (GimpGrid *grid)$/;"	f	file:
gimp_grid_parasite_name	core/gimpgrid.c	/^gimp_grid_parasite_name (void)$/;"	f
gimp_grid_set_property	core/gimpgrid.c	/^gimp_grid_set_property (GObject      *object,$/;"	f	file:
gimp_grid_to_parasite	core/gimpgrid.c	/^gimp_grid_to_parasite (const GimpGrid *grid)$/;"	f
gimp_gui_config_class_init	config/gimpguiconfig.c	/^gimp_gui_config_class_init (GimpGuiConfigClass *klass)$/;"	f	file:
gimp_gui_config_finalize	config/gimpguiconfig.c	/^gimp_gui_config_finalize (GObject *object)$/;"	f	file:
gimp_gui_config_get_property	config/gimpguiconfig.c	/^gimp_gui_config_get_property (GObject    *object,$/;"	f	file:
gimp_gui_config_init	config/gimpguiconfig.c	/^gimp_gui_config_init (GimpGuiConfig *config)$/;"	f	file:
gimp_gui_config_set_property	config/gimpguiconfig.c	/^gimp_gui_config_set_property (GObject      *object,$/;"	f	file:
gimp_gui_init	core/gimp-gui.c	/^gimp_gui_init (Gimp *gimp)$/;"	f
gimp_gui_ungrab	core/gimp-gui.c	/^gimp_gui_ungrab (Gimp *gimp)$/;"	f
gimp_guide_class_init	core/gimpguide.c	/^gimp_guide_class_init (GimpGuideClass *klass)$/;"	f	file:
gimp_guide_get_ID	core/gimpguide.c	/^gimp_guide_get_ID (GimpGuide *guide)$/;"	f
gimp_guide_get_orientation	core/gimpguide.c	/^gimp_guide_get_orientation (GimpGuide *guide)$/;"	f
gimp_guide_get_position	core/gimpguide.c	/^gimp_guide_get_position (GimpGuide *guide)$/;"	f
gimp_guide_get_property	core/gimpguide.c	/^gimp_guide_get_property (GObject      *object,$/;"	f	file:
gimp_guide_init	core/gimpguide.c	/^gimp_guide_init (GimpGuide *guide)$/;"	f	file:
gimp_guide_new	core/gimpguide.c	/^gimp_guide_new (GimpOrientationType  orientation,$/;"	f
gimp_guide_removed	core/gimpguide.c	/^gimp_guide_removed (GimpGuide *guide)$/;"	f
gimp_guide_set_orientation	core/gimpguide.c	/^gimp_guide_set_orientation (GimpGuide           *guide,$/;"	f
gimp_guide_set_position	core/gimpguide.c	/^gimp_guide_set_position (GimpGuide *guide,$/;"	f
gimp_guide_set_property	core/gimpguide.c	/^gimp_guide_set_property (GObject      *object,$/;"	f	file:
gimp_guide_signals	core/gimpguide.c	/^static guint gimp_guide_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_guide_undo_class_init	core/gimpguideundo.c	/^gimp_guide_undo_class_init (GimpGuideUndoClass *klass)$/;"	f	file:
gimp_guide_undo_constructor	core/gimpguideundo.c	/^gimp_guide_undo_constructor (GType                  type,$/;"	f	file:
gimp_guide_undo_free	core/gimpguideundo.c	/^gimp_guide_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_guide_undo_get_property	core/gimpguideundo.c	/^gimp_guide_undo_get_property (GObject    *object,$/;"	f	file:
gimp_guide_undo_init	core/gimpguideundo.c	/^gimp_guide_undo_init (GimpGuideUndo *undo)$/;"	f	file:
gimp_guide_undo_pop	core/gimpguideundo.c	/^gimp_guide_undo_pop (GimpUndo              *undo,$/;"	f	file:
gimp_guide_undo_set_property	core/gimpguideundo.c	/^gimp_guide_undo_set_property (GObject      *object,$/;"	f	file:
gimp_heal_class_init	paint/gimpheal.c	/^gimp_heal_class_init (GimpHealClass *klass)$/;"	f	file:
gimp_heal_divide	paint/gimpheal.c	/^gimp_heal_divide (PixelRegion *topPR,$/;"	f	file:
gimp_heal_init	paint/gimpheal.c	/^gimp_heal_init (GimpHeal *heal)$/;"	f	file:
gimp_heal_laplace_iteration	paint/gimpheal.c	/^gimp_heal_laplace_iteration (gdouble *matrix,$/;"	f	file:
gimp_heal_laplace_loop	paint/gimpheal.c	/^gimp_heal_laplace_loop (gdouble *matrix,$/;"	f	file:
gimp_heal_motion	paint/gimpheal.c	/^gimp_heal_motion (GimpSourceCore   *source_core,$/;"	f	file:
gimp_heal_multiply	paint/gimpheal.c	/^gimp_heal_multiply (gdouble     *first,$/;"	f	file:
gimp_heal_options_gui	tools/gimphealtool.c	/^gimp_heal_options_gui (GimpToolOptions *tool_options)$/;"	f	file:
gimp_heal_region	paint/gimpheal.c	/^gimp_heal_region (PixelRegion *tempPR,$/;"	f	file:
gimp_heal_start	paint/gimpheal.c	/^gimp_heal_start (GimpPaintCore     *paint_core,$/;"	f	file:
gimp_heal_substitute_0_for_1	paint/gimpheal.c	/^gimp_heal_substitute_0_for_1 (PixelRegion *pr)$/;"	f	file:
gimp_heal_tool_class_init	tools/gimphealtool.c	/^gimp_heal_tool_class_init (GimpHealToolClass *klass)$/;"	f	file:
gimp_heal_tool_init	tools/gimphealtool.c	/^gimp_heal_tool_init (GimpHealTool *heal)$/;"	f	file:
gimp_help	core/gimp-gui.c	/^gimp_help (Gimp        *gimp,$/;"	f
gimp_help_browser	widgets/gimphelp.c	/^gimp_help_browser (Gimp *gimp)$/;"	f	file:
gimp_help_browser_error	widgets/gimphelp.c	/^gimp_help_browser_error (Gimp        *gimp,$/;"	f	file:
gimp_help_browser_type_get_type	widgets/widgets-enums.c	/^gimp_help_browser_type_get_type (void)$/;"	f
gimp_help_call	widgets/gimphelp.c	/^gimp_help_call (Gimp        *gimp,$/;"	f	file:
gimp_help_get_locales	widgets/gimphelp.c	/^gimp_help_get_locales (GimpGuiConfig *config)$/;"	f	file:
gimp_help_show	widgets/gimphelp.c	/^gimp_help_show (Gimp        *gimp,$/;"	f
gimp_histogram_alloc_values	base/gimphistogram.c	/^gimp_histogram_alloc_values (GimpHistogram *histogram,$/;"	f	file:
gimp_histogram_box_border_notify	widgets/gimphistogrambox.c	/^gimp_histogram_box_border_notify (GimpHistogramView *view,$/;"	f	file:
gimp_histogram_box_channel_notify	widgets/gimphistogrambox.c	/^gimp_histogram_box_channel_notify (GimpHistogramView *view,$/;"	f	file:
gimp_histogram_box_class_init	widgets/gimphistogrambox.c	/^gimp_histogram_box_class_init (GimpHistogramBoxClass *klass)$/;"	f	file:
gimp_histogram_box_high_adj_update	widgets/gimphistogrambox.c	/^gimp_histogram_box_high_adj_update (GtkAdjustment    *adjustment,$/;"	f	file:
gimp_histogram_box_histogram_range	widgets/gimphistogrambox.c	/^gimp_histogram_box_histogram_range (GimpHistogramView *view,$/;"	f	file:
gimp_histogram_box_init	widgets/gimphistogrambox.c	/^gimp_histogram_box_init (GimpHistogramBox *box)$/;"	f	file:
gimp_histogram_box_low_adj_update	widgets/gimphistogrambox.c	/^gimp_histogram_box_low_adj_update (GtkAdjustment    *adjustment,$/;"	f	file:
gimp_histogram_box_new	widgets/gimphistogrambox.c	/^gimp_histogram_box_new (void)$/;"	f
gimp_histogram_box_set_channel	widgets/gimphistogrambox.c	/^gimp_histogram_box_set_channel (GimpHistogramBox     *box,$/;"	f
gimp_histogram_calculate	base/gimphistogram.c	/^gimp_histogram_calculate (GimpHistogram *histogram,$/;"	f
gimp_histogram_calculate_sub_region	base/gimphistogram.c	/^gimp_histogram_calculate_sub_region (GimpHistogram *histogram,$/;"	f	file:
gimp_histogram_channel_get_type	base/base-enums.c	/^gimp_histogram_channel_get_type (void)$/;"	f
gimp_histogram_draw_slider	widgets/gimphistogrambox.c	/^gimp_histogram_draw_slider (GtkWidget *widget,$/;"	f	file:
gimp_histogram_editor_channel_valid	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_channel_valid (GimpHistogramEditor  *editor,$/;"	f	file:
gimp_histogram_editor_class_init	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_class_init (GimpHistogramEditorClass* klass)$/;"	f	file:
gimp_histogram_editor_docked_iface_init	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_docked_iface_init (GimpDockedInterface *docked_iface)$/;"	f	file:
gimp_histogram_editor_get_aux_info	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_get_aux_info (GimpDocked *docked)$/;"	f	file:
gimp_histogram_editor_idle_update	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_idle_update (GimpHistogramEditor *editor)$/;"	f	file:
gimp_histogram_editor_info_update	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_info_update (GimpHistogramEditor *editor)$/;"	f	file:
gimp_histogram_editor_init	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_init (GimpHistogramEditor *editor)$/;"	f	file:
gimp_histogram_editor_layer_changed	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_layer_changed (GimpImage           *image,$/;"	f	file:
gimp_histogram_editor_menu_update	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_menu_update (GimpHistogramEditor *editor)$/;"	f	file:
gimp_histogram_editor_name_update	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_name_update (GimpHistogramEditor *editor)$/;"	f	file:
gimp_histogram_editor_new	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_new (void)$/;"	f
gimp_histogram_editor_set_aux_info	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_set_aux_info (GimpDocked *docked,$/;"	f	file:
gimp_histogram_editor_set_image	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_set_image (GimpImageEditor *image_editor,$/;"	f	file:
gimp_histogram_editor_update	widgets/gimphistogrameditor.c	/^gimp_histogram_editor_update (GimpHistogramEditor *editor)$/;"	f	file:
gimp_histogram_free	base/gimphistogram.c	/^gimp_histogram_free (GimpHistogram *histogram)$/;"	f
gimp_histogram_free_values	base/gimphistogram.c	/^gimp_histogram_free_values (GimpHistogram *histogram)$/;"	f	file:
gimp_histogram_get_channel	base/gimphistogram.c	/^gimp_histogram_get_channel (GimpHistogram        *histogram,$/;"	f
gimp_histogram_get_count	base/gimphistogram.c	/^gimp_histogram_get_count (GimpHistogram        *histogram,$/;"	f
gimp_histogram_get_maximum	base/gimphistogram.c	/^gimp_histogram_get_maximum (GimpHistogram        *histogram,$/;"	f
gimp_histogram_get_mean	base/gimphistogram.c	/^gimp_histogram_get_mean (GimpHistogram        *histogram,$/;"	f
gimp_histogram_get_median	base/gimphistogram.c	/^gimp_histogram_get_median (GimpHistogram         *histogram,$/;"	f
gimp_histogram_get_std_dev	base/gimphistogram.c	/^gimp_histogram_get_std_dev (GimpHistogram        *histogram,$/;"	f
gimp_histogram_get_threshold	base/gimphistogram.c	/^gimp_histogram_get_threshold (GimpHistogram        *histogram,$/;"	f
gimp_histogram_get_value	base/gimphistogram.c	/^gimp_histogram_get_value (GimpHistogram        *histogram,$/;"	f
gimp_histogram_menu_sensitivity	widgets/gimphistogrameditor.c	/^gimp_histogram_menu_sensitivity (gint      value,$/;"	f	file:
gimp_histogram_n_channels	base/gimphistogram.c	/^gimp_histogram_n_channels (GimpHistogram *histogram)$/;"	f
gimp_histogram_new	base/gimphistogram.c	/^gimp_histogram_new (void)$/;"	f
gimp_histogram_options_class_init	tools/gimphistogramoptions.c	/^gimp_histogram_options_class_init (GimpHistogramOptionsClass *klass)$/;"	f	file:
gimp_histogram_options_connect_view	tools/gimphistogramoptions.c	/^gimp_histogram_options_connect_view (GimpHistogramOptions *options,$/;"	f
gimp_histogram_options_get_property	tools/gimphistogramoptions.c	/^gimp_histogram_options_get_property (GObject    *object,$/;"	f	file:
gimp_histogram_options_gui	tools/gimphistogramoptions.c	/^gimp_histogram_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_histogram_options_init	tools/gimphistogramoptions.c	/^gimp_histogram_options_init (GimpHistogramOptions *options)$/;"	f	file:
gimp_histogram_options_set_property	tools/gimphistogramoptions.c	/^gimp_histogram_options_set_property (GObject      *object,$/;"	f	file:
gimp_histogram_scale_get_type	widgets/widgets-enums.c	/^gimp_histogram_scale_get_type (void)$/;"	f
gimp_histogram_slider_area_event	widgets/gimphistogrambox.c	/^gimp_histogram_slider_area_event (GtkWidget         *widget,$/;"	f	file:
gimp_histogram_slider_area_expose	widgets/gimphistogrambox.c	/^gimp_histogram_slider_area_expose (GtkWidget        *widget,$/;"	f	file:
gimp_histogram_view_button_press	widgets/gimphistogramview.c	/^gimp_histogram_view_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_histogram_view_button_release	widgets/gimphistogramview.c	/^gimp_histogram_view_button_release (GtkWidget      *widget,$/;"	f	file:
gimp_histogram_view_class_init	widgets/gimphistogramview.c	/^gimp_histogram_view_class_init (GimpHistogramViewClass *klass)$/;"	f	file:
gimp_histogram_view_draw_spike	widgets/gimphistogramview.c	/^gimp_histogram_view_draw_spike (GimpHistogramView    *view,$/;"	f	file:
gimp_histogram_view_expose	widgets/gimphistogrameditor.c	/^gimp_histogram_view_expose (GimpHistogramEditor *editor)$/;"	f	file:
gimp_histogram_view_expose	widgets/gimphistogramview.c	/^gimp_histogram_view_expose (GtkWidget      *widget,$/;"	f	file:
gimp_histogram_view_get_channel	widgets/gimphistogramview.c	/^gimp_histogram_view_get_channel (GimpHistogramView *view)$/;"	f
gimp_histogram_view_get_histogram	widgets/gimphistogramview.c	/^gimp_histogram_view_get_histogram (GimpHistogramView *view)$/;"	f
gimp_histogram_view_get_maximum	widgets/gimphistogramview.c	/^gimp_histogram_view_get_maximum (GimpHistogramView    *view,$/;"	f	file:
gimp_histogram_view_get_property	widgets/gimphistogramview.c	/^gimp_histogram_view_get_property (GObject      *object,$/;"	f	file:
gimp_histogram_view_get_range	widgets/gimphistogramview.c	/^gimp_histogram_view_get_range (GimpHistogramView *view,$/;"	f
gimp_histogram_view_get_scale	widgets/gimphistogramview.c	/^gimp_histogram_view_get_scale (GimpHistogramView *view)$/;"	f
gimp_histogram_view_init	widgets/gimphistogramview.c	/^gimp_histogram_view_init (GimpHistogramView *view)$/;"	f	file:
gimp_histogram_view_motion_notify	widgets/gimphistogramview.c	/^gimp_histogram_view_motion_notify (GtkWidget      *widget,$/;"	f	file:
gimp_histogram_view_new	widgets/gimphistogramview.c	/^gimp_histogram_view_new (gboolean range)$/;"	f
gimp_histogram_view_set_channel	widgets/gimphistogramview.c	/^gimp_histogram_view_set_channel (GimpHistogramView    *view,$/;"	f
gimp_histogram_view_set_histogram	widgets/gimphistogramview.c	/^gimp_histogram_view_set_histogram (GimpHistogramView *view,$/;"	f
gimp_histogram_view_set_property	widgets/gimphistogramview.c	/^gimp_histogram_view_set_property (GObject      *object,$/;"	f	file:
gimp_histogram_view_set_range	widgets/gimphistogramview.c	/^gimp_histogram_view_set_range (GimpHistogramView *view,$/;"	f
gimp_histogram_view_set_scale	widgets/gimphistogramview.c	/^gimp_histogram_view_set_scale (GimpHistogramView  *view,$/;"	f
gimp_histogram_view_size_request	widgets/gimphistogramview.c	/^gimp_histogram_view_size_request (GtkWidget      *widget,$/;"	f	file:
gimp_hue_range_get_type	base/base-enums.c	/^gimp_hue_range_get_type (void)$/;"	f
gimp_hue_saturation_tool_class_init	tools/gimphuesaturationtool.c	/^gimp_hue_saturation_tool_class_init (GimpHueSaturationToolClass *klass)$/;"	f	file:
gimp_hue_saturation_tool_dialog	tools/gimphuesaturationtool.c	/^gimp_hue_saturation_tool_dialog (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_hue_saturation_tool_finalize	tools/gimphuesaturationtool.c	/^gimp_hue_saturation_tool_finalize (GObject *object)$/;"	f	file:
gimp_hue_saturation_tool_init	tools/gimphuesaturationtool.c	/^gimp_hue_saturation_tool_init (GimpHueSaturationTool *hs_tool)$/;"	f	file:
gimp_hue_saturation_tool_initialize	tools/gimphuesaturationtool.c	/^gimp_hue_saturation_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_hue_saturation_tool_map	tools/gimphuesaturationtool.c	/^gimp_hue_saturation_tool_map (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_hue_saturation_tool_register	tools/gimphuesaturationtool.c	/^gimp_hue_saturation_tool_register (GimpToolRegisterCallback  callback,$/;"	f
gimp_hue_saturation_tool_reset	tools/gimphuesaturationtool.c	/^gimp_hue_saturation_tool_reset (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_idle_help	widgets/gimphelp.c	/^gimp_idle_help (GimpIdleHelp *idle_help)$/;"	f	file:
gimp_idle_unset_busy	core/gimp-gui.c	/^gimp_idle_unset_busy (gpointer data)$/;"	f	file:
gimp_image_active_channel_changed	core/gimpimage.c	/^gimp_image_active_channel_changed (GimpImage *image)$/;"	f
gimp_image_active_layer_changed	core/gimpimage.c	/^gimp_image_active_layer_changed (GimpImage *image)$/;"	f
gimp_image_active_vectors_changed	core/gimpimage.c	/^gimp_image_active_vectors_changed (GimpImage *image)$/;"	f
gimp_image_add_channel	core/gimpimage.c	/^gimp_image_add_channel (GimpImage   *image,$/;"	f
gimp_image_add_colormap_entry	core/gimpimage-colormap.c	/^gimp_image_add_colormap_entry (GimpImage     *image,$/;"	f
gimp_image_add_guide	core/gimpimage-guides.c	/^gimp_image_add_guide (GimpImage *image,$/;"	f
gimp_image_add_hguide	core/gimpimage-guides.c	/^gimp_image_add_hguide (GimpImage *image,$/;"	f
gimp_image_add_layer	core/gimpimage.c	/^gimp_image_add_layer (GimpImage *image,$/;"	f
gimp_image_add_layers	core/gimpimage.c	/^gimp_image_add_layers (GimpImage   *image,$/;"	f
gimp_image_add_sample_point	core/gimpimage-sample-points.c	/^gimp_image_add_sample_point (GimpImage       *image,$/;"	f
gimp_image_add_sample_point_at_pos	core/gimpimage-sample-points.c	/^gimp_image_add_sample_point_at_pos (GimpImage *image,$/;"	f
gimp_image_add_vectors	core/gimpimage.c	/^gimp_image_add_vectors (GimpImage   *image,$/;"	f
gimp_image_add_vguide	core/gimpimage-guides.c	/^gimp_image_add_vguide (GimpImage *image,$/;"	f
gimp_image_alpha_changed	core/gimpimage.c	/^gimp_image_alpha_changed (GimpImage *image)$/;"	f
gimp_image_arrange_objects	core/gimpimage-arrange.c	/^gimp_image_arrange_objects (GimpImage         *image,$/;"	f
gimp_image_base_type	core/gimpimage.c	/^gimp_image_base_type (const GimpImage *image)$/;"	f
gimp_image_base_type_with_alpha	core/gimpimage.c	/^gimp_image_base_type_with_alpha (const GimpImage *image)$/;"	f
gimp_image_channel_add	core/gimpimage.c	/^gimp_image_channel_add (GimpContainer *container,$/;"	f	file:
gimp_image_channel_color_changed	core/gimpimage.c	/^gimp_image_channel_color_changed (GimpChannel *channel,$/;"	f	file:
gimp_image_channel_name_changed	core/gimpimage.c	/^gimp_image_channel_name_changed (GimpChannel *channel,$/;"	f	file:
gimp_image_channel_remove	core/gimpimage.c	/^gimp_image_channel_remove (GimpContainer *container,$/;"	f	file:
gimp_image_class_init	core/gimpimage.c	/^gimp_image_class_init (GimpImageClass *klass)$/;"	f	file:
gimp_image_clean	core/gimpimage.c	/^gimp_image_clean (GimpImage     *image,$/;"	f
gimp_image_clean_all	core/gimpimage.c	/^gimp_image_clean_all (GimpImage *image)$/;"	f
gimp_image_color_hash_exit	core/gimpimage-colorhash.c	/^gimp_image_color_hash_exit (void)$/;"	f
gimp_image_color_hash_init	core/gimpimage-colorhash.c	/^gimp_image_color_hash_init (void)$/;"	f
gimp_image_color_hash_invalidate	core/gimpimage-colorhash.c	/^gimp_image_color_hash_invalidate (GimpImage *image,$/;"	f
gimp_image_color_hash_rgb_to_indexed	core/gimpimage-colorhash.c	/^gimp_image_color_hash_rgb_to_indexed (const GimpImage *image,$/;"	f
gimp_image_colormap_changed	core/gimpimage.c	/^gimp_image_colormap_changed (GimpImage *image,$/;"	f
gimp_image_comment_editor_buffer_changed	widgets/gimpimagecommenteditor.c	/^gimp_image_comment_editor_buffer_changed (GtkTextBuffer          *buffer,$/;"	f	file:
gimp_image_comment_editor_class_init	widgets/gimpimagecommenteditor.c	/^gimp_image_comment_editor_class_init (GimpImageCommentEditorClass *klass)$/;"	f	file:
gimp_image_comment_editor_init	widgets/gimpimagecommenteditor.c	/^gimp_image_comment_editor_init (GimpImageCommentEditor *editor)$/;"	f	file:
gimp_image_comment_editor_new	widgets/gimpimagecommenteditor.c	/^gimp_image_comment_editor_new (GimpImage *image)$/;"	f
gimp_image_comment_editor_update	widgets/gimpimagecommenteditor.c	/^gimp_image_comment_editor_update (GimpImageParasiteView *view)$/;"	f	file:
gimp_image_constructor	core/gimpimage.c	/^gimp_image_constructor (GType                  type,$/;"	f	file:
gimp_image_contiguous_region_by_color	core/gimpimage-contiguous-region.c	/^gimp_image_contiguous_region_by_color (GimpImage            *image,$/;"	f
gimp_image_contiguous_region_by_seed	core/gimpimage-contiguous-region.c	/^gimp_image_contiguous_region_by_seed (GimpImage           *image,$/;"	f
gimp_image_convert	core/gimpimage-convert.c	/^gimp_image_convert (GimpImage              *image,$/;"	f
gimp_image_convert_set_dither_matrix	core/gimpimage-convert.c	/^gimp_image_convert_set_dither_matrix (gint          width,$/;"	f
gimp_image_coords_in_active_pickable	core/gimpimage.c	/^gimp_image_coords_in_active_pickable (GimpImage        *image,$/;"	f
gimp_image_crop	core/gimpimage-crop.c	/^gimp_image_crop (GimpImage   *image,$/;"	f
gimp_image_crop_auto_shrink	core/gimpimage-crop.c	/^gimp_image_crop_auto_shrink (GimpImage *image,$/;"	f
gimp_image_crop_colors_alpha	core/gimpimage-crop.c	/^gimp_image_crop_colors_alpha (guchar *dummy,$/;"	f	file:
gimp_image_crop_colors_equal	core/gimpimage-crop.c	/^gimp_image_crop_colors_equal (guchar *col1,$/;"	f	file:
gimp_image_crop_guess_bgcolor	core/gimpimage-crop.c	/^gimp_image_crop_guess_bgcolor (GimpPickable *pickable,$/;"	f	file:
gimp_image_dirty	core/gimpimage.c	/^gimp_image_dirty (GimpImage     *image,$/;"	f
gimp_image_dispose	core/gimpimage.c	/^gimp_image_dispose (GObject *object)$/;"	f	file:
gimp_image_dock_class_init	widgets/gimpimagedock.c	/^gimp_image_dock_class_init (GimpImageDockClass *klass)$/;"	f	file:
gimp_image_dock_constructor	widgets/gimpimagedock.c	/^gimp_image_dock_constructor (GType                  type,$/;"	f	file:
gimp_image_dock_destroy	widgets/gimpimagedock.c	/^gimp_image_dock_destroy (GtkObject *object)$/;"	f	file:
gimp_image_dock_display_changed	widgets/gimpimagedock.c	/^gimp_image_dock_display_changed (GimpContext   *context,$/;"	f	file:
gimp_image_dock_image_flush	widgets/gimpimagedock.c	/^gimp_image_dock_image_flush (GimpImage     *image,$/;"	f	file:
gimp_image_dock_init	widgets/gimpimagedock.c	/^gimp_image_dock_init (GimpImageDock *dock)$/;"	f	file:
gimp_image_dock_notify_transient	widgets/gimpimagedock.c	/^gimp_image_dock_notify_transient (GimpConfig *config,$/;"	f	file:
gimp_image_drawable_update	core/gimpimage.c	/^gimp_image_drawable_update (GimpDrawable *drawable,$/;"	f	file:
gimp_image_drawable_visibility	core/gimpimage.c	/^gimp_image_drawable_visibility (GimpItem  *item,$/;"	f	file:
gimp_image_duplicate	core/gimpimage-duplicate.c	/^gimp_image_duplicate (GimpImage *image)$/;"	f
gimp_image_editor_class_init	widgets/gimpimageeditor.c	/^gimp_image_editor_class_init (GimpImageEditorClass *klass)$/;"	f	file:
gimp_image_editor_destroy	widgets/gimpimageeditor.c	/^gimp_image_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_image_editor_docked_iface_init	widgets/gimpimageeditor.c	/^gimp_image_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_image_editor_get_image	widgets/gimpimageeditor.c	/^gimp_image_editor_get_image (GimpImageEditor *editor)$/;"	f
gimp_image_editor_image_flush	widgets/gimpimageeditor.c	/^gimp_image_editor_image_flush (GimpImage       *image,$/;"	f	file:
gimp_image_editor_init	widgets/gimpimageeditor.c	/^gimp_image_editor_init (GimpImageEditor *editor)$/;"	f	file:
gimp_image_editor_real_set_image	widgets/gimpimageeditor.c	/^gimp_image_editor_real_set_image (GimpImageEditor *editor,$/;"	f	file:
gimp_image_editor_set_context	widgets/gimpimageeditor.c	/^gimp_image_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_image_editor_set_image	widgets/gimpimageeditor.c	/^gimp_image_editor_set_image (GimpImageEditor *editor,$/;"	f
gimp_image_finalize	core/gimpimage.c	/^gimp_image_finalize (GObject *object)$/;"	f	file:
gimp_image_find_guide	core/gimpimage-guides.c	/^gimp_image_find_guide (GimpImage *image,$/;"	f
gimp_image_find_sample_point	core/gimpimage-sample-points.c	/^gimp_image_find_sample_point (GimpImage *image,$/;"	f
gimp_image_flatten	core/gimpimage-merge.c	/^gimp_image_flatten (GimpImage   *image,$/;"	f
gimp_image_flip	core/gimpimage-flip.c	/^gimp_image_flip (GimpImage           *image,$/;"	f
gimp_image_floating_sel	core/gimpimage.c	/^gimp_image_floating_sel (const GimpImage *image)$/;"	f
gimp_image_floating_selection_changed	core/gimpimage.c	/^gimp_image_floating_selection_changed (GimpImage *image)$/;"	f
gimp_image_flush	core/gimpimage.c	/^gimp_image_flush (GimpImage *image)$/;"	f
gimp_image_free_shadow_tiles	core/gimpimage.c	/^gimp_image_free_shadow_tiles (GimpImage *image)$/;"	f
gimp_image_get_ID	core/gimpimage.c	/^gimp_image_get_ID (const GimpImage *image)$/;"	f
gimp_image_get_active_channel	core/gimpimage.c	/^gimp_image_get_active_channel (const GimpImage *image)$/;"	f
gimp_image_get_active_drawable	core/gimpimage.c	/^gimp_image_get_active_drawable (const GimpImage *image)$/;"	f
gimp_image_get_active_layer	core/gimpimage.c	/^gimp_image_get_active_layer (const GimpImage *image)$/;"	f
gimp_image_get_active_vectors	core/gimpimage.c	/^gimp_image_get_active_vectors (const GimpImage *image)$/;"	f
gimp_image_get_background	core/gimpimage.c	/^gimp_image_get_background (const GimpImage *image,$/;"	f
gimp_image_get_by_ID	core/gimpimage.c	/^gimp_image_get_by_ID (Gimp *gimp,$/;"	f
gimp_image_get_channel_by_name	core/gimpimage.c	/^gimp_image_get_channel_by_name (const GimpImage *image,$/;"	f
gimp_image_get_channel_by_tattoo	core/gimpimage.c	/^gimp_image_get_channel_by_tattoo (const GimpImage *image,$/;"	f
gimp_image_get_channel_index	core/gimpimage.c	/^gimp_image_get_channel_index (const GimpImage   *image,$/;"	f
gimp_image_get_channels	core/gimpimage.c	/^gimp_image_get_channels (const GimpImage *image)$/;"	f
gimp_image_get_color	core/gimpimage.c	/^gimp_image_get_color (const GimpImage *src_image,$/;"	f
gimp_image_get_colormap	core/gimpimage-colormap.c	/^gimp_image_get_colormap (const GimpImage *image)$/;"	f
gimp_image_get_colormap_entry	core/gimpimage-colormap.c	/^gimp_image_get_colormap_entry (GimpImage *image,$/;"	f
gimp_image_get_colormap_size	core/gimpimage-colormap.c	/^gimp_image_get_colormap_size (const GimpImage *image)$/;"	f
gimp_image_get_combination_mode	core/gimpimage.c	/^gimp_image_get_combination_mode (GimpImageType dest_type,$/;"	f
gimp_image_get_component_active	core/gimpimage.c	/^gimp_image_get_component_active (const GimpImage *image,$/;"	f
gimp_image_get_component_index	core/gimpimage.c	/^gimp_image_get_component_index (const GimpImage *image,$/;"	f
gimp_image_get_component_visible	core/gimpimage.c	/^gimp_image_get_component_visible (const GimpImage *image,$/;"	f
gimp_image_get_description	core/gimpimage.c	/^gimp_image_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_image_get_filename	core/gimpimage.c	/^gimp_image_get_filename (const GimpImage *image)$/;"	f
gimp_image_get_foreground	core/gimpimage.c	/^gimp_image_get_foreground (const GimpImage *image,$/;"	f
gimp_image_get_grid	core/gimpimage-grid.c	/^gimp_image_get_grid (GimpImage *image)$/;"	f
gimp_image_get_guide	core/gimpimage-guides.c	/^gimp_image_get_guide (GimpImage *image,$/;"	f
gimp_image_get_height	core/gimpimage.c	/^gimp_image_get_height (const GimpImage *image)$/;"	f
gimp_image_get_icc_profile	core/gimpimage.c	/^gimp_image_get_icc_profile (GimpColorManaged *managed,$/;"	f	file:
gimp_image_get_item_by_tattoo	core/gimpimage.c	/^gimp_image_get_item_by_tattoo (GimpContainer *items,$/;"	f	file:
gimp_image_get_layer_by_name	core/gimpimage.c	/^gimp_image_get_layer_by_name (const GimpImage *image,$/;"	f
gimp_image_get_layer_by_tattoo	core/gimpimage.c	/^gimp_image_get_layer_by_tattoo (const GimpImage *image,$/;"	f
gimp_image_get_layer_index	core/gimpimage.c	/^gimp_image_get_layer_index (const GimpImage   *image,$/;"	f
gimp_image_get_layers	core/gimpimage.c	/^gimp_image_get_layers (const GimpImage *image)$/;"	f
gimp_image_get_mask	core/gimpimage.c	/^gimp_image_get_mask (const GimpImage *image)$/;"	f
gimp_image_get_memsize	core/gimpimage.c	/^gimp_image_get_memsize (GimpObject *object,$/;"	f	file:
gimp_image_get_new_preview	core/gimpimage-preview.c	/^gimp_image_get_new_preview (GimpViewable *viewable,$/;"	f
gimp_image_get_new_tattoo	core/gimpimage.c	/^gimp_image_get_new_tattoo (GimpImage *image)$/;"	f
gimp_image_get_next_guide	core/gimpimage-guides.c	/^gimp_image_get_next_guide (GimpImage *image,$/;"	f
gimp_image_get_popup_size	core/gimpimage-preview.c	/^gimp_image_get_popup_size (GimpViewable *viewable,$/;"	f
gimp_image_get_preview	core/gimpimage-preview.c	/^gimp_image_get_preview (GimpViewable *viewable,$/;"	f
gimp_image_get_preview_size	core/gimpimage-preview.c	/^gimp_image_get_preview_size (GimpViewable *viewable,$/;"	f
gimp_image_get_property	core/gimpimage.c	/^gimp_image_get_property (GObject    *object,$/;"	f	file:
gimp_image_get_quick_mask	core/gimpimage-quick-mask.c	/^gimp_image_get_quick_mask (const GimpImage *image)$/;"	f
gimp_image_get_quick_mask_color	core/gimpimage-quick-mask.c	/^gimp_image_get_quick_mask_color (const GimpImage *image,$/;"	f
gimp_image_get_quick_mask_state	core/gimpimage-quick-mask.c	/^gimp_image_get_quick_mask_state (const GimpImage *image)$/;"	f
gimp_image_get_resolution	core/gimpimage.c	/^gimp_image_get_resolution (const GimpImage *image,$/;"	f
gimp_image_get_save_proc	core/gimpimage.c	/^gimp_image_get_save_proc (const GimpImage *image)$/;"	f
gimp_image_get_shadow_tiles	core/gimpimage.c	/^gimp_image_get_shadow_tiles (GimpImage *image,$/;"	f
gimp_image_get_size	core/gimpimage.c	/^gimp_image_get_size (GimpViewable *viewable,$/;"	f	file:
gimp_image_get_tattoo_state	core/gimpimage.c	/^gimp_image_get_tattoo_state (GimpImage *image)$/;"	f
gimp_image_get_unit	core/gimpimage.c	/^gimp_image_get_unit (const GimpImage *image)$/;"	f
gimp_image_get_uri	core/gimpimage.c	/^gimp_image_get_uri (const GimpImage *image)$/;"	f
gimp_image_get_vectors	core/gimpimage.c	/^gimp_image_get_vectors (const GimpImage *image)$/;"	f
gimp_image_get_vectors_by_name	core/gimpimage.c	/^gimp_image_get_vectors_by_name (const GimpImage *image,$/;"	f
gimp_image_get_vectors_by_tattoo	core/gimpimage.c	/^gimp_image_get_vectors_by_tattoo (const GimpImage *image,$/;"	f
gimp_image_get_vectors_index	core/gimpimage.c	/^gimp_image_get_vectors_index (const GimpImage   *image,$/;"	f
gimp_image_get_width	core/gimpimage.c	/^gimp_image_get_width (const GimpImage *image)$/;"	f
gimp_image_has_alpha	core/gimpimage.c	/^gimp_image_has_alpha (const GimpImage *image)$/;"	f
gimp_image_id_get_type	core/gimpparamspecs.c	/^gimp_image_id_get_type (void)$/;"	f
gimp_image_init	core/gimpimage.c	/^gimp_image_init (GimpImage *image)$/;"	f	file:
gimp_image_invalidate_channel_previews	core/gimpimage.c	/^gimp_image_invalidate_channel_previews (GimpImage *image)$/;"	f
gimp_image_invalidate_layer_previews	core/gimpimage.c	/^gimp_image_invalidate_layer_previews (GimpImage *image)$/;"	f
gimp_image_invalidate_preview	core/gimpimage.c	/^gimp_image_invalidate_preview (GimpViewable *viewable)$/;"	f	file:
gimp_image_is_empty	core/gimpimage.c	/^gimp_image_is_empty (const GimpImage *image)$/;"	f
gimp_image_item_list_flip	core/gimpimage-item-list.c	/^gimp_image_item_list_flip (GimpImage           *image,$/;"	f
gimp_image_item_list_get_list	core/gimpimage-item-list.c	/^gimp_image_item_list_get_list (GimpImage        *image,$/;"	f
gimp_image_item_list_rotate	core/gimpimage-item-list.c	/^gimp_image_item_list_rotate (GimpImage        *image,$/;"	f
gimp_image_item_list_transform	core/gimpimage-item-list.c	/^gimp_image_item_list_transform (GimpImage              *image,$/;"	f
gimp_image_item_list_translate	core/gimpimage-item-list.c	/^gimp_image_item_list_translate (GimpImage *image,$/;"	f
gimp_image_layer_add	core/gimpimage.c	/^gimp_image_layer_add (GimpContainer *container,$/;"	f	file:
gimp_image_layer_alpha_changed	core/gimpimage.c	/^gimp_image_layer_alpha_changed (GimpDrawable *drawable,$/;"	f	file:
gimp_image_layer_boundary	core/gimpimage.c	/^gimp_image_layer_boundary (const GimpImage  *image,$/;"	f
gimp_image_layer_remove	core/gimpimage.c	/^gimp_image_layer_remove (GimpContainer *container,$/;"	f	file:
gimp_image_lower_channel	core/gimpimage.c	/^gimp_image_lower_channel (GimpImage   *image,$/;"	f
gimp_image_lower_channel_to_bottom	core/gimpimage.c	/^gimp_image_lower_channel_to_bottom (GimpImage   *image,$/;"	f
gimp_image_lower_layer	core/gimpimage.c	/^gimp_image_lower_layer (GimpImage *image,$/;"	f
gimp_image_lower_layer_to_bottom	core/gimpimage.c	/^gimp_image_lower_layer_to_bottom (GimpImage *image,$/;"	f
gimp_image_lower_vectors	core/gimpimage.c	/^gimp_image_lower_vectors (GimpImage   *image,$/;"	f
gimp_image_lower_vectors_to_bottom	core/gimpimage.c	/^gimp_image_lower_vectors_to_bottom (GimpImage   *image,$/;"	f
gimp_image_map_abort	core/gimpimagemap.c	/^gimp_image_map_abort (GimpImageMap *image_map)$/;"	f
gimp_image_map_apply	core/gimpimagemap.c	/^gimp_image_map_apply (GimpImageMap          *image_map,$/;"	f
gimp_image_map_class_init	core/gimpimagemap.c	/^gimp_image_map_class_init (GimpImageMapClass *klass)$/;"	f	file:
gimp_image_map_clear	core/gimpimagemap.c	/^gimp_image_map_clear (GimpImageMap *image_map)$/;"	f
gimp_image_map_commit	core/gimpimagemap.c	/^gimp_image_map_commit (GimpImageMap *image_map)$/;"	f
gimp_image_map_do	core/gimpimagemap.c	/^gimp_image_map_do (GimpImageMap *image_map)$/;"	f	file:
gimp_image_map_finalize	core/gimpimagemap.c	/^gimp_image_map_finalize (GObject *object)$/;"	f	file:
gimp_image_map_get_bytes	core/gimpimagemap.c	/^gimp_image_map_get_bytes (GimpPickable *pickable)$/;"	f	file:
gimp_image_map_get_image	core/gimpimagemap.c	/^gimp_image_map_get_image (GimpPickable *pickable)$/;"	f	file:
gimp_image_map_get_image_type	core/gimpimagemap.c	/^gimp_image_map_get_image_type (GimpPickable *pickable)$/;"	f	file:
gimp_image_map_get_pixel_at	core/gimpimagemap.c	/^gimp_image_map_get_pixel_at (GimpPickable *pickable,$/;"	f	file:
gimp_image_map_get_tiles	core/gimpimagemap.c	/^gimp_image_map_get_tiles (GimpPickable *pickable)$/;"	f	file:
gimp_image_map_init	core/gimpimagemap.c	/^gimp_image_map_init (GimpImageMap *image_map)$/;"	f	file:
gimp_image_map_new	core/gimpimagemap.c	/^gimp_image_map_new (GimpDrawable *drawable,$/;"	f
gimp_image_map_options_class_init	tools/gimpimagemapoptions.c	/^gimp_image_map_options_class_init (GimpImageMapOptionsClass *klass)$/;"	f	file:
gimp_image_map_options_finalize	tools/gimpimagemapoptions.c	/^gimp_image_map_options_finalize (GObject *object)$/;"	f	file:
gimp_image_map_options_get_property	tools/gimpimagemapoptions.c	/^gimp_image_map_options_get_property (GObject    *object,$/;"	f	file:
gimp_image_map_options_init	tools/gimpimagemapoptions.c	/^gimp_image_map_options_init (GimpImageMapOptions *options)$/;"	f	file:
gimp_image_map_options_set_property	tools/gimpimagemapoptions.c	/^gimp_image_map_options_set_property (GObject      *object,$/;"	f	file:
gimp_image_map_pickable_iface_init	core/gimpimagemap.c	/^gimp_image_map_pickable_iface_init (GimpPickableInterface *iface)$/;"	f	file:
gimp_image_map_tool_class_init	tools/gimpimagemaptool.c	/^gimp_image_map_tool_class_init (GimpImageMapToolClass *klass)$/;"	f	file:
gimp_image_map_tool_control	tools/gimpimagemaptool.c	/^gimp_image_map_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_image_map_tool_dialog	tools/gimpimagemaptool.c	/^gimp_image_map_tool_dialog (GimpImageMapTool *tool)$/;"	f	file:
gimp_image_map_tool_finalize	tools/gimpimagemaptool.c	/^gimp_image_map_tool_finalize (GObject *object)$/;"	f	file:
gimp_image_map_tool_flush	tools/gimpimagemaptool.c	/^gimp_image_map_tool_flush (GimpImageMap     *image_map,$/;"	f	file:
gimp_image_map_tool_init	tools/gimpimagemaptool.c	/^gimp_image_map_tool_init (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_image_map_tool_initialize	tools/gimpimagemaptool.c	/^gimp_image_map_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_image_map_tool_key_press	tools/gimpimagemaptool.c	/^gimp_image_map_tool_key_press (GimpTool    *tool,$/;"	f	file:
gimp_image_map_tool_load_clicked	tools/gimpimagemaptool.c	/^gimp_image_map_tool_load_clicked (GtkWidget        *widget,$/;"	f	file:
gimp_image_map_tool_load_ext_clicked	tools/gimpimagemaptool.c	/^gimp_image_map_tool_load_ext_clicked (GtkWidget        *widget,$/;"	f	file:
gimp_image_map_tool_load_save	tools/gimpimagemaptool.c	/^gimp_image_map_tool_load_save (GimpImageMapTool *tool,$/;"	f	file:
gimp_image_map_tool_map	tools/gimpimagemaptool.c	/^gimp_image_map_tool_map (GimpImageMapTool *tool)$/;"	f	file:
gimp_image_map_tool_notify_preview	tools/gimpimagemaptool.c	/^gimp_image_map_tool_notify_preview (GObject          *config,$/;"	f	file:
gimp_image_map_tool_pick_color	tools/gimpimagemaptool.c	/^gimp_image_map_tool_pick_color (GimpColorTool *color_tool,$/;"	f	file:
gimp_image_map_tool_preview	tools/gimpimagemaptool.c	/^gimp_image_map_tool_preview (GimpImageMapTool *image_map_tool)$/;"	f
gimp_image_map_tool_reset	tools/gimpimagemaptool.c	/^gimp_image_map_tool_reset (GimpImageMapTool *tool)$/;"	f	file:
gimp_image_map_tool_response	tools/gimpimagemaptool.c	/^gimp_image_map_tool_response (GtkWidget        *widget,$/;"	f	file:
gimp_image_map_tool_save_clicked	tools/gimpimagemaptool.c	/^gimp_image_map_tool_save_clicked (GtkWidget        *widget,$/;"	f	file:
gimp_image_map_tool_save_ext_clicked	tools/gimpimagemaptool.c	/^gimp_image_map_tool_save_ext_clicked (GtkWidget        *widget,$/;"	f	file:
gimp_image_map_tool_settings_dialog	tools/gimpimagemaptool.c	/^gimp_image_map_tool_settings_dialog (GimpImageMapTool *tool,$/;"	f	file:
gimp_image_map_tool_settings_load	tools/gimpimagemaptool.c	/^gimp_image_map_tool_settings_load (GimpImageMapTool  *tool,$/;"	f	file:
gimp_image_map_tool_settings_save	tools/gimpimagemaptool.c	/^gimp_image_map_tool_settings_save (GimpImageMapTool *tool,$/;"	f	file:
gimp_image_mask_changed	core/gimpimage.c	/^gimp_image_mask_changed (GimpImage *image)$/;"	f
gimp_image_mask_update	core/gimpimage.c	/^gimp_image_mask_update (GimpDrawable *drawable,$/;"	f	file:
gimp_image_merge_down	core/gimpimage-merge.c	/^gimp_image_merge_down (GimpImage     *image,$/;"	f
gimp_image_merge_layers	core/gimpimage-merge.c	/^gimp_image_merge_layers (GimpImage     *image,$/;"	f	file:
gimp_image_merge_visible_layers	core/gimpimage-merge.c	/^gimp_image_merge_visible_layers (GimpImage     *image,$/;"	f
gimp_image_merge_visible_vectors	core/gimpimage-merge.c	/^gimp_image_merge_visible_vectors (GimpImage *image)$/;"	f
gimp_image_mode_changed	core/gimpimage.c	/^gimp_image_mode_changed (GimpImage *image)$/;"	f
gimp_image_move_guide	core/gimpimage-guides.c	/^gimp_image_move_guide (GimpImage *image,$/;"	f
gimp_image_move_sample_point	core/gimpimage-sample-points.c	/^gimp_image_move_sample_point (GimpImage       *image,$/;"	f
gimp_image_name_changed	core/gimpimage.c	/^gimp_image_name_changed (GimpObject *object)$/;"	f	file:
gimp_image_new	core/gimpimage.c	/^gimp_image_new (Gimp              *gimp,$/;"	f
gimp_image_new_get_last_template	core/gimpimage-new.c	/^gimp_image_new_get_last_template (Gimp      *gimp,$/;"	f
gimp_image_new_set_last_template	core/gimpimage-new.c	/^gimp_image_new_set_last_template (Gimp         *gimp,$/;"	f
gimp_image_parasite_attach	core/gimpimage.c	/^gimp_image_parasite_attach (GimpImage          *image,$/;"	f
gimp_image_parasite_detach	core/gimpimage.c	/^gimp_image_parasite_detach (GimpImage   *image,$/;"	f
gimp_image_parasite_find	core/gimpimage.c	/^gimp_image_parasite_find (const GimpImage *image,$/;"	f
gimp_image_parasite_list	core/gimpimage.c	/^gimp_image_parasite_list (const GimpImage *image,$/;"	f
gimp_image_parasite_view_class_init	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_class_init (GimpImageParasiteViewClass *klass)$/;"	f	file:
gimp_image_parasite_view_constructor	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_constructor (GType                  type,$/;"	f	file:
gimp_image_parasite_view_finalize	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_finalize (GObject *object)$/;"	f	file:
gimp_image_parasite_view_get_image	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_get_image (GimpImageParasiteView *view)$/;"	f
gimp_image_parasite_view_get_parasite	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_get_parasite (GimpImageParasiteView *view)$/;"	f
gimp_image_parasite_view_get_property	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_get_property (GObject    *object,$/;"	f	file:
gimp_image_parasite_view_init	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_init (GimpImageParasiteView *view)$/;"	f	file:
gimp_image_parasite_view_new	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_new (GimpImage   *image,$/;"	f
gimp_image_parasite_view_parasite_changed	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_parasite_changed (GimpImageParasiteView *view,$/;"	f	file:
gimp_image_parasite_view_set_property	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_set_property (GObject      *object,$/;"	f	file:
gimp_image_parasite_view_update	widgets/gimpimageparasiteview.c	/^gimp_image_parasite_view_update (GimpImageParasiteView *view)$/;"	f	file:
gimp_image_pick_color	core/gimpimage-pick-color.c	/^gimp_image_pick_color (GimpImage     *image,$/;"	f
gimp_image_pick_correlate_layer	core/gimpimage.c	/^gimp_image_pick_correlate_layer (const GimpImage *image,$/;"	f
gimp_image_position_channel	core/gimpimage.c	/^gimp_image_position_channel (GimpImage   *image,$/;"	f
gimp_image_position_layer	core/gimpimage.c	/^gimp_image_position_layer (GimpImage   *image,$/;"	f
gimp_image_position_vectors	core/gimpimage.c	/^gimp_image_position_vectors (GimpImage   *image,$/;"	f
gimp_image_profile_view_class_init	widgets/gimpimageprofileview.c	/^gimp_image_profile_view_class_init (GimpImageProfileViewClass *klass)$/;"	f	file:
gimp_image_profile_view_dispose	widgets/gimpimageprofileview.c	/^gimp_image_profile_view_dispose (GObject *object)$/;"	f	file:
gimp_image_profile_view_init	widgets/gimpimageprofileview.c	/^gimp_image_profile_view_init (GimpImageProfileView *view)$/;"	f	file:
gimp_image_profile_view_new	widgets/gimpimageprofileview.c	/^gimp_image_profile_view_new (GimpImage *image)$/;"	f
gimp_image_profile_view_query	widgets/gimpimageprofileview.c	/^gimp_image_profile_view_query (GimpImageProfileView *view)$/;"	f	file:
gimp_image_profile_view_update	widgets/gimpimageprofileview.c	/^gimp_image_profile_view_update (GimpImageParasiteView *view)$/;"	f	file:
gimp_image_prop_view_add_label	widgets/gimpimagepropview.c	/^gimp_image_prop_view_add_label (GtkTable    *table,$/;"	f	file:
gimp_image_prop_view_class_init	widgets/gimpimagepropview.c	/^gimp_image_prop_view_class_init (GimpImagePropViewClass *klass)$/;"	f	file:
gimp_image_prop_view_constructor	widgets/gimpimagepropview.c	/^gimp_image_prop_view_constructor (GType                  type,$/;"	f	file:
gimp_image_prop_view_file_update	widgets/gimpimagepropview.c	/^gimp_image_prop_view_file_update (GimpImagePropView *view)$/;"	f	file:
gimp_image_prop_view_get_property	widgets/gimpimagepropview.c	/^gimp_image_prop_view_get_property (GObject    *object,$/;"	f	file:
gimp_image_prop_view_init	widgets/gimpimagepropview.c	/^gimp_image_prop_view_init (GimpImagePropView *view)$/;"	f	file:
gimp_image_prop_view_label_set_filename	widgets/gimpimagepropview.c	/^gimp_image_prop_view_label_set_filename (GtkWidget *label,$/;"	f	file:
gimp_image_prop_view_label_set_filesize	widgets/gimpimagepropview.c	/^gimp_image_prop_view_label_set_filesize (GtkWidget *label,$/;"	f	file:
gimp_image_prop_view_label_set_filetype	widgets/gimpimagepropview.c	/^gimp_image_prop_view_label_set_filetype (GtkWidget *label,$/;"	f	file:
gimp_image_prop_view_label_set_memsize	widgets/gimpimagepropview.c	/^gimp_image_prop_view_label_set_memsize (GtkWidget  *label,$/;"	f	file:
gimp_image_prop_view_label_set_undo	widgets/gimpimagepropview.c	/^gimp_image_prop_view_label_set_undo (GtkWidget     *label,$/;"	f	file:
gimp_image_prop_view_new	widgets/gimpimagepropview.c	/^gimp_image_prop_view_new (GimpImage *image)$/;"	f
gimp_image_prop_view_set_property	widgets/gimpimagepropview.c	/^gimp_image_prop_view_set_property (GObject      *object,$/;"	f	file:
gimp_image_prop_view_undo_event	widgets/gimpimagepropview.c	/^gimp_image_prop_view_undo_event (GimpImage         *image,$/;"	f	file:
gimp_image_prop_view_update	widgets/gimpimagepropview.c	/^gimp_image_prop_view_update (GimpImagePropView *view)$/;"	f	file:
gimp_image_quick_mask_changed	core/gimpimage.c	/^gimp_image_quick_mask_changed (GimpImage *image)$/;"	f
gimp_image_quick_mask_invert	core/gimpimage-quick-mask.c	/^gimp_image_quick_mask_invert (GimpImage *image)$/;"	f
gimp_image_raise_channel	core/gimpimage.c	/^gimp_image_raise_channel (GimpImage   *image,$/;"	f
gimp_image_raise_channel_to_top	core/gimpimage.c	/^gimp_image_raise_channel_to_top (GimpImage   *image,$/;"	f
gimp_image_raise_layer	core/gimpimage.c	/^gimp_image_raise_layer (GimpImage *image,$/;"	f
gimp_image_raise_layer_to_top	core/gimpimage.c	/^gimp_image_raise_layer_to_top (GimpImage *image,$/;"	f
gimp_image_raise_vectors	core/gimpimage.c	/^gimp_image_raise_vectors (GimpImage   *image,$/;"	f
gimp_image_raise_vectors_to_top	core/gimpimage.c	/^gimp_image_raise_vectors_to_top (GimpImage   *image,$/;"	f
gimp_image_real_colormap_changed	core/gimpimage.c	/^gimp_image_real_colormap_changed (GimpImage *image,$/;"	f	file:
gimp_image_real_flush	core/gimpimage.c	/^gimp_image_real_flush (GimpImage *image,$/;"	f	file:
gimp_image_redo	core/gimpimage-undo.c	/^gimp_image_redo (GimpImage *image)$/;"	f
gimp_image_remove_channel	core/gimpimage.c	/^gimp_image_remove_channel (GimpImage   *image,$/;"	f
gimp_image_remove_guide	core/gimpimage-guides.c	/^gimp_image_remove_guide (GimpImage *image,$/;"	f
gimp_image_remove_layer	core/gimpimage.c	/^gimp_image_remove_layer (GimpImage *image,$/;"	f
gimp_image_remove_sample_point	core/gimpimage-sample-points.c	/^gimp_image_remove_sample_point (GimpImage       *image,$/;"	f
gimp_image_remove_vectors	core/gimpimage.c	/^gimp_image_remove_vectors (GimpImage   *image,$/;"	f
gimp_image_resize	core/gimpimage-resize.c	/^gimp_image_resize (GimpImage    *image,$/;"	f
gimp_image_resize_to_layers	core/gimpimage-resize.c	/^gimp_image_resize_to_layers (GimpImage    *image,$/;"	f
gimp_image_resize_to_selection	core/gimpimage-resize.c	/^gimp_image_resize_to_selection (GimpImage    *image,$/;"	f
gimp_image_resize_with_layers	core/gimpimage-resize.c	/^gimp_image_resize_with_layers (GimpImage    *image,$/;"	f
gimp_image_resolution_changed	core/gimpimage.c	/^gimp_image_resolution_changed (GimpImage *image)$/;"	f
gimp_image_rotate	core/gimpimage-rotate.c	/^gimp_image_rotate (GimpImage        *image,$/;"	f
gimp_image_rotate_guides	core/gimpimage-rotate.c	/^gimp_image_rotate_guides (GimpImage        *image,$/;"	f	file:
gimp_image_rotate_item_offset	core/gimpimage-rotate.c	/^gimp_image_rotate_item_offset (GimpImage        *image,$/;"	f	file:
gimp_image_rotate_sample_points	core/gimpimage-rotate.c	/^gimp_image_rotate_sample_points (GimpImage        *image,$/;"	f	file:
gimp_image_sample_point_added	core/gimpimage.c	/^gimp_image_sample_point_added (GimpImage       *image,$/;"	f
gimp_image_sample_point_removed	core/gimpimage.c	/^gimp_image_sample_point_removed (GimpImage       *image,$/;"	f
gimp_image_saved	core/gimpimage.c	/^gimp_image_saved (GimpImage   *image,$/;"	f
gimp_image_scale	core/gimpimage-scale.c	/^gimp_image_scale (GimpImage             *image,$/;"	f
gimp_image_scale_check	core/gimpimage-scale.c	/^gimp_image_scale_check (const GimpImage *image,$/;"	f
gimp_image_selection_control	core/gimpimage.c	/^gimp_image_selection_control (GimpImage            *image,$/;"	f
gimp_image_set_active_channel	core/gimpimage.c	/^gimp_image_set_active_channel (GimpImage   *image,$/;"	f
gimp_image_set_active_layer	core/gimpimage.c	/^gimp_image_set_active_layer (GimpImage *image,$/;"	f
gimp_image_set_active_vectors	core/gimpimage.c	/^gimp_image_set_active_vectors (GimpImage   *image,$/;"	f
gimp_image_set_colormap	core/gimpimage-colormap.c	/^gimp_image_set_colormap (GimpImage    *image,$/;"	f
gimp_image_set_colormap_entry	core/gimpimage-colormap.c	/^gimp_image_set_colormap_entry (GimpImage     *image,$/;"	f
gimp_image_set_component_active	core/gimpimage.c	/^gimp_image_set_component_active (GimpImage       *image,$/;"	f
gimp_image_set_component_visible	core/gimpimage.c	/^gimp_image_set_component_visible (GimpImage       *image,$/;"	f
gimp_image_set_filename	core/gimpimage.c	/^gimp_image_set_filename (GimpImage   *image,$/;"	f
gimp_image_set_grid	core/gimpimage-grid.c	/^gimp_image_set_grid (GimpImage *image,$/;"	f
gimp_image_set_property	core/gimpimage.c	/^gimp_image_set_property (GObject      *object,$/;"	f	file:
gimp_image_set_quick_mask_color	core/gimpimage-quick-mask.c	/^gimp_image_set_quick_mask_color (GimpImage     *image,$/;"	f
gimp_image_set_quick_mask_state	core/gimpimage-quick-mask.c	/^gimp_image_set_quick_mask_state (GimpImage *image,$/;"	f
gimp_image_set_resolution	core/gimpimage.c	/^gimp_image_set_resolution (GimpImage *image,$/;"	f
gimp_image_set_save_proc	core/gimpimage.c	/^gimp_image_set_save_proc (GimpImage           *image,$/;"	f
gimp_image_set_tattoo_state	core/gimpimage.c	/^gimp_image_set_tattoo_state (GimpImage  *image,$/;"	f
gimp_image_set_unit	core/gimpimage.c	/^gimp_image_set_unit (GimpImage *image,$/;"	f
gimp_image_set_uri	core/gimpimage.c	/^gimp_image_set_uri (GimpImage   *image,$/;"	f
gimp_image_signals	core/gimpimage.c	/^static guint gimp_image_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_image_size_changed	core/gimpimage.c	/^gimp_image_size_changed (GimpViewable *viewable)$/;"	f	file:
gimp_image_snap_point	core/gimpimage-snap.c	/^gimp_image_snap_point (GimpImage *image,$/;"	f
gimp_image_snap_rectangle	core/gimpimage-snap.c	/^gimp_image_snap_rectangle (GimpImage *image,$/;"	f
gimp_image_snap_x	core/gimpimage-snap.c	/^gimp_image_snap_x (GimpImage *image,$/;"	f
gimp_image_snap_y	core/gimpimage-snap.c	/^gimp_image_snap_y (GimpImage *image,$/;"	f
gimp_image_strong_redo	core/gimpimage-undo.c	/^gimp_image_strong_redo (GimpImage *image)$/;"	f
gimp_image_strong_undo	core/gimpimage-undo.c	/^gimp_image_strong_undo (GimpImage *image)$/;"	f
gimp_image_take_uri	core/gimpimage.c	/^gimp_image_take_uri (GimpImage *image,$/;"	f	file:
gimp_image_transform_color	core/gimpimage.c	/^gimp_image_transform_color (const GimpImage    *dest_image,$/;"	f
gimp_image_transform_rgb	core/gimpimage.c	/^gimp_image_transform_rgb (const GimpImage    *dest_image,$/;"	f
gimp_image_transform_temp_buf	core/gimpimage.c	/^gimp_image_transform_temp_buf (const GimpImage *dest_image,$/;"	f
gimp_image_undo	core/gimpimage-undo.c	/^gimp_image_undo (GimpImage *image)$/;"	f
gimp_image_undo_can_compress	core/gimpimage-undo.c	/^gimp_image_undo_can_compress (GimpImage    *image,$/;"	f
gimp_image_undo_class_init	core/gimpimageundo.c	/^gimp_image_undo_class_init (GimpImageUndoClass *klass)$/;"	f	file:
gimp_image_undo_constructor	core/gimpimageundo.c	/^gimp_image_undo_constructor (GType                  type,$/;"	f	file:
gimp_image_undo_dirty_from_type	core/gimpimage-undo.c	/^gimp_image_undo_dirty_from_type (GimpUndoType undo_type)$/;"	f	file:
gimp_image_undo_disable	core/gimpimage.c	/^gimp_image_undo_disable (GimpImage *image)$/;"	f
gimp_image_undo_enable	core/gimpimage.c	/^gimp_image_undo_enable (GimpImage *image)$/;"	f
gimp_image_undo_event	core/gimpimage.c	/^gimp_image_undo_event (GimpImage     *image,$/;"	f
gimp_image_undo_free	core/gimpimage-undo.c	/^gimp_image_undo_free (GimpImage *image)$/;"	f
gimp_image_undo_free	core/gimpimageundo.c	/^gimp_image_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_image_undo_free_redo	core/gimpimage-undo.c	/^gimp_image_undo_free_redo (GimpImage *image)$/;"	f	file:
gimp_image_undo_free_space	core/gimpimage-undo.c	/^gimp_image_undo_free_space (GimpImage *image)$/;"	f	file:
gimp_image_undo_freeze	core/gimpimage.c	/^gimp_image_undo_freeze (GimpImage *image)$/;"	f
gimp_image_undo_get_fadeable	core/gimpimage-undo.c	/^gimp_image_undo_get_fadeable (GimpImage *image)$/;"	f
gimp_image_undo_get_memsize	core/gimpimageundo.c	/^gimp_image_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_image_undo_get_property	core/gimpimageundo.c	/^gimp_image_undo_get_property (GObject    *object,$/;"	f	file:
gimp_image_undo_group_end	core/gimpimage-undo.c	/^gimp_image_undo_group_end (GimpImage *image)$/;"	f
gimp_image_undo_group_start	core/gimpimage-undo.c	/^gimp_image_undo_group_start (GimpImage    *image,$/;"	f
gimp_image_undo_init	core/gimpimageundo.c	/^gimp_image_undo_init (GimpImageUndo *undo)$/;"	f	file:
gimp_image_undo_is_enabled	core/gimpimage.c	/^gimp_image_undo_is_enabled (const GimpImage *image)$/;"	f
gimp_image_undo_pop	core/gimpimageundo.c	/^gimp_image_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_image_undo_pop_stack	core/gimpimage-undo.c	/^gimp_image_undo_pop_stack (GimpImage     *image,$/;"	f	file:
gimp_image_undo_push	core/gimpimage-undo.c	/^gimp_image_undo_push (GimpImage        *image,$/;"	f
gimp_image_undo_push_cantundo	core/gimpimage-undo-push.c	/^gimp_image_undo_push_cantundo (GimpImage   *image,$/;"	f
gimp_image_undo_push_channel_add	core/gimpimage-undo-push.c	/^gimp_image_undo_push_channel_add (GimpImage   *image,$/;"	f
gimp_image_undo_push_channel_color	core/gimpimage-undo-push.c	/^gimp_image_undo_push_channel_color (GimpImage   *image,$/;"	f
gimp_image_undo_push_channel_remove	core/gimpimage-undo-push.c	/^gimp_image_undo_push_channel_remove (GimpImage   *image,$/;"	f
gimp_image_undo_push_channel_reposition	core/gimpimage-undo-push.c	/^gimp_image_undo_push_channel_reposition (GimpImage   *image,$/;"	f
gimp_image_undo_push_drawable	core/gimpimage-undo-push.c	/^gimp_image_undo_push_drawable (GimpImage    *image,$/;"	f
gimp_image_undo_push_drawable_mod	core/gimpimage-undo-push.c	/^gimp_image_undo_push_drawable_mod (GimpImage    *image,$/;"	f
gimp_image_undo_push_fs_relax	core/gimpimage-undo-push.c	/^gimp_image_undo_push_fs_relax (GimpImage   *image,$/;"	f
gimp_image_undo_push_fs_rigor	core/gimpimage-undo-push.c	/^gimp_image_undo_push_fs_rigor (GimpImage    *image,$/;"	f
gimp_image_undo_push_fs_to_layer	core/gimpimage-undo-push.c	/^gimp_image_undo_push_fs_to_layer (GimpImage    *image,$/;"	f
gimp_image_undo_push_guide	core/gimpimage-undo-push.c	/^gimp_image_undo_push_guide (GimpImage   *image,$/;"	f
gimp_image_undo_push_image_colormap	core/gimpimage-undo-push.c	/^gimp_image_undo_push_image_colormap (GimpImage   *image,$/;"	f
gimp_image_undo_push_image_grid	core/gimpimage-undo-push.c	/^gimp_image_undo_push_image_grid (GimpImage   *image,$/;"	f
gimp_image_undo_push_image_parasite	core/gimpimage-undo-push.c	/^gimp_image_undo_push_image_parasite (GimpImage          *image,$/;"	f
gimp_image_undo_push_image_parasite_remove	core/gimpimage-undo-push.c	/^gimp_image_undo_push_image_parasite_remove (GimpImage   *image,$/;"	f
gimp_image_undo_push_image_resolution	core/gimpimage-undo-push.c	/^gimp_image_undo_push_image_resolution (GimpImage   *image,$/;"	f
gimp_image_undo_push_image_size	core/gimpimage-undo-push.c	/^gimp_image_undo_push_image_size (GimpImage   *image,$/;"	f
gimp_image_undo_push_image_type	core/gimpimage-undo-push.c	/^gimp_image_undo_push_image_type (GimpImage   *image,$/;"	f
gimp_image_undo_push_item_displace	core/gimpimage-undo-push.c	/^gimp_image_undo_push_item_displace (GimpImage   *image,$/;"	f
gimp_image_undo_push_item_linked	core/gimpimage-undo-push.c	/^gimp_image_undo_push_item_linked (GimpImage   *image,$/;"	f
gimp_image_undo_push_item_parasite	core/gimpimage-undo-push.c	/^gimp_image_undo_push_item_parasite (GimpImage          *image,$/;"	f
gimp_image_undo_push_item_parasite_remove	core/gimpimage-undo-push.c	/^gimp_image_undo_push_item_parasite_remove (GimpImage   *image,$/;"	f
gimp_image_undo_push_item_rename	core/gimpimage-undo-push.c	/^gimp_image_undo_push_item_rename (GimpImage   *image,$/;"	f
gimp_image_undo_push_item_visibility	core/gimpimage-undo-push.c	/^gimp_image_undo_push_item_visibility (GimpImage   *image,$/;"	f
gimp_image_undo_push_layer_add	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_add (GimpImage   *image,$/;"	f
gimp_image_undo_push_layer_lock_alpha	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_lock_alpha (GimpImage   *image,$/;"	f
gimp_image_undo_push_layer_mask_add	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_mask_add (GimpImage     *image,$/;"	f
gimp_image_undo_push_layer_mask_apply	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_mask_apply (GimpImage     *image,$/;"	f
gimp_image_undo_push_layer_mask_remove	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_mask_remove (GimpImage     *image,$/;"	f
gimp_image_undo_push_layer_mask_show	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_mask_show (GimpImage     *image,$/;"	f
gimp_image_undo_push_layer_mode	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_mode (GimpImage   *image,$/;"	f
gimp_image_undo_push_layer_opacity	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_opacity (GimpImage   *image,$/;"	f
gimp_image_undo_push_layer_remove	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_remove (GimpImage   *image,$/;"	f
gimp_image_undo_push_layer_reposition	core/gimpimage-undo-push.c	/^gimp_image_undo_push_layer_reposition (GimpImage   *image,$/;"	f
gimp_image_undo_push_mask	core/gimpimage-undo-push.c	/^gimp_image_undo_push_mask (GimpImage   *image,$/;"	f
gimp_image_undo_push_sample_point	core/gimpimage-undo-push.c	/^gimp_image_undo_push_sample_point (GimpImage       *image,$/;"	f
gimp_image_undo_push_text_layer	core/gimpimage-undo-push.c	/^gimp_image_undo_push_text_layer (GimpImage        *image,$/;"	f
gimp_image_undo_push_text_layer_modified	core/gimpimage-undo-push.c	/^gimp_image_undo_push_text_layer_modified (GimpImage     *image,$/;"	f
gimp_image_undo_push_vectors_add	core/gimpimage-undo-push.c	/^gimp_image_undo_push_vectors_add (GimpImage   *image,$/;"	f
gimp_image_undo_push_vectors_mod	core/gimpimage-undo-push.c	/^gimp_image_undo_push_vectors_mod (GimpImage   *image,$/;"	f
gimp_image_undo_push_vectors_remove	core/gimpimage-undo-push.c	/^gimp_image_undo_push_vectors_remove (GimpImage   *image,$/;"	f
gimp_image_undo_push_vectors_reposition	core/gimpimage-undo-push.c	/^gimp_image_undo_push_vectors_reposition (GimpImage   *image,$/;"	f
gimp_image_undo_set_property	core/gimpimageundo.c	/^gimp_image_undo_set_property (GObject      *object,$/;"	f	file:
gimp_image_undo_thaw	core/gimpimage.c	/^gimp_image_undo_thaw (GimpImage *image)$/;"	f
gimp_image_unit_changed	core/gimpimage.c	/^gimp_image_unit_changed (GimpImage *image)$/;"	f
gimp_image_unset_active_channel	core/gimpimage.c	/^gimp_image_unset_active_channel (GimpImage *image)$/;"	f
gimp_image_update	core/gimpimage.c	/^gimp_image_update (GimpImage *image,$/;"	f
gimp_image_update_guide	core/gimpimage.c	/^gimp_image_update_guide (GimpImage *image,$/;"	f
gimp_image_update_sample_point	core/gimpimage.c	/^gimp_image_update_sample_point (GimpImage       *image,$/;"	f
gimp_image_view_activate_item	widgets/gimpimageview.c	/^gimp_image_view_activate_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_image_view_class_init	widgets/gimpimageview.c	/^gimp_image_view_class_init (GimpImageViewClass *klass)$/;"	f	file:
gimp_image_view_init	widgets/gimpimageview.c	/^gimp_image_view_init (GimpImageView *view)$/;"	f	file:
gimp_image_view_new	widgets/gimpimageview.c	/^gimp_image_view_new (GimpViewType     view_type,$/;"	f
gimp_imagefile_check_thumbnail	core/gimpimagefile.c	/^gimp_imagefile_check_thumbnail (GimpImagefile *imagefile)$/;"	f
gimp_imagefile_class_init	core/gimpimagefile.c	/^gimp_imagefile_class_init (GimpImagefileClass *klass)$/;"	f	file:
gimp_imagefile_create_thumbnail	core/gimpimagefile.c	/^gimp_imagefile_create_thumbnail (GimpImagefile *imagefile,$/;"	f
gimp_imagefile_create_thumbnail_weak	core/gimpimagefile.c	/^gimp_imagefile_create_thumbnail_weak (GimpImagefile *imagefile,$/;"	f
gimp_imagefile_finalize	core/gimpimagefile.c	/^gimp_imagefile_finalize (GObject *object)$/;"	f	file:
gimp_imagefile_get_desc_string	core/gimpimagefile.c	/^gimp_imagefile_get_desc_string (GimpImagefile *imagefile)$/;"	f
gimp_imagefile_get_description	core/gimpimagefile.c	/^gimp_imagefile_get_description (GimpViewable   *viewable,$/;"	f	file:
gimp_imagefile_get_new_pixbuf	core/gimpimagefile.c	/^gimp_imagefile_get_new_pixbuf (GimpViewable *viewable,$/;"	f	file:
gimp_imagefile_info_changed	core/gimpimagefile.c	/^gimp_imagefile_info_changed (GimpImagefile *imagefile)$/;"	f	file:
gimp_imagefile_init	core/gimpimagefile.c	/^gimp_imagefile_init (GimpImagefile *imagefile)$/;"	f	file:
gimp_imagefile_load_thumb	core/gimpimagefile.c	/^gimp_imagefile_load_thumb (GimpImagefile *imagefile,$/;"	f	file:
gimp_imagefile_name_changed	core/gimpimagefile.c	/^gimp_imagefile_name_changed (GimpObject *object)$/;"	f	file:
gimp_imagefile_new	core/gimpimagefile.c	/^gimp_imagefile_new (Gimp        *gimp,$/;"	f
gimp_imagefile_notify_thumbnail	core/gimpimagefile.c	/^gimp_imagefile_notify_thumbnail (GimpImagefile *imagefile,$/;"	f	file:
gimp_imagefile_save_thumb	core/gimpimagefile.c	/^gimp_imagefile_save_thumb (GimpImagefile  *imagefile,$/;"	f	file:
gimp_imagefile_save_thumbnail	core/gimpimagefile.c	/^gimp_imagefile_save_thumbnail (GimpImagefile *imagefile,$/;"	f
gimp_imagefile_signals	core/gimpimagefile.c	/^static guint gimp_imagefile_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_imagefile_update	core/gimpimagefile.c	/^gimp_imagefile_update (GimpImagefile *imagefile)$/;"	f
gimp_init	core/gimp.c	/^gimp_init (Gimp *gimp)$/;"	f	file:
gimp_init_i18n	main.c	/^gimp_init_i18n (void)$/;"	f	file:
gimp_init_malloc	main.c	/^gimp_init_malloc (void)$/;"	f	file:
gimp_init_signal_handlers	main.c	/^gimp_init_signal_handlers (void)$/;"	f	file:
gimp_initialize	core/gimp.c	/^gimp_initialize (Gimp               *gimp,$/;"	f
gimp_ink_blob_type_get_type	paint/paint-enums.c	/^gimp_ink_blob_type_get_type (void)$/;"	f
gimp_ink_class_init	paint/gimpink.c	/^gimp_ink_class_init (GimpInkClass *klass)$/;"	f	file:
gimp_ink_finalize	paint/gimpink.c	/^gimp_ink_finalize (GObject *object)$/;"	f	file:
gimp_ink_get_paint_area	paint/gimpink.c	/^gimp_ink_get_paint_area (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_ink_init	paint/gimpink.c	/^gimp_ink_init (GimpInk *ink)$/;"	f	file:
gimp_ink_motion	paint/gimpink.c	/^gimp_ink_motion (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_ink_options_class_init	paint/gimpinkoptions.c	/^gimp_ink_options_class_init (GimpInkOptionsClass *klass)$/;"	f	file:
gimp_ink_options_get_property	paint/gimpinkoptions.c	/^gimp_ink_options_get_property (GObject    *object,$/;"	f	file:
gimp_ink_options_gui	tools/gimpinkoptions-gui.c	/^gimp_ink_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_ink_options_init	paint/gimpinkoptions.c	/^gimp_ink_options_init (GimpInkOptions *options)$/;"	f	file:
gimp_ink_options_set_property	paint/gimpinkoptions.c	/^gimp_ink_options_set_property (GObject      *object,$/;"	f	file:
gimp_ink_paint	paint/gimpink.c	/^gimp_ink_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_ink_push_undo	paint/gimpink.c	/^gimp_ink_push_undo (GimpPaintCore *core,$/;"	f	file:
gimp_ink_tool_class_init	tools/gimpinktool.c	/^gimp_ink_tool_class_init (GimpInkToolClass *klass)$/;"	f	file:
gimp_ink_tool_init	tools/gimpinktool.c	/^gimp_ink_tool_init (GimpInkTool *ink_tool)$/;"	f	file:
gimp_ink_undo_class_init	paint/gimpinkundo.c	/^gimp_ink_undo_class_init (GimpInkUndoClass *klass)$/;"	f	file:
gimp_ink_undo_constructor	paint/gimpinkundo.c	/^gimp_ink_undo_constructor (GType                  type,$/;"	f	file:
gimp_ink_undo_free	paint/gimpinkundo.c	/^gimp_ink_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_ink_undo_init	paint/gimpinkundo.c	/^gimp_ink_undo_init (GimpInkUndo *undo)$/;"	f	file:
gimp_ink_undo_pop	paint/gimpinkundo.c	/^gimp_ink_undo_pop (GimpUndo              *undo,$/;"	f	file:
gimp_int16_array_get_type	core/gimpparamspecs.c	/^gimp_int16_array_get_type (void)$/;"	f
gimp_int16_get_type	core/gimpparamspecs.c	/^gimp_int16_get_type (void)$/;"	f
gimp_int32_array_get_type	core/gimpparamspecs.c	/^gimp_int32_array_get_type (void)$/;"	f
gimp_int32_get_type	core/gimpparamspecs.c	/^gimp_int32_get_type (void)$/;"	f
gimp_int8_array_get_type	core/gimpparamspecs.c	/^gimp_int8_array_get_type (void)$/;"	f
gimp_int8_get_type	core/gimpparamspecs.c	/^gimp_int8_get_type (void)$/;"	f
gimp_int_store_insert_separator_after	widgets/gimpwidgets-constructors.c	/^gimp_int_store_insert_separator_after (GimpIntStore *store,$/;"	f	file:
gimp_interpreter_db_add_binfmt_misc	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_add_binfmt_misc (GimpInterpreterDB      *db,$/;"	f	file:
gimp_interpreter_db_add_extension	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_add_extension (GimpInterpreterDB  *db,$/;"	f	file:
gimp_interpreter_db_add_magic	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_add_magic (GimpInterpreterDB  *db,$/;"	f	file:
gimp_interpreter_db_add_program	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_add_program (GimpInterpreterDB      *db,$/;"	f	file:
gimp_interpreter_db_class_init	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_class_init (GimpInterpreterDBClass *class)$/;"	f	file:
gimp_interpreter_db_clear	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_clear (GimpInterpreterDB *db)$/;"	f
gimp_interpreter_db_clear_magics	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_clear_magics (GimpInterpreterDB *db)$/;"	f	file:
gimp_interpreter_db_finalize	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_finalize (GObject *object)$/;"	f	file:
gimp_interpreter_db_get_extensions	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_get_extensions (GimpInterpreterDB *db)$/;"	f
gimp_interpreter_db_init	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_init (GimpInterpreterDB *db)$/;"	f	file:
gimp_interpreter_db_load	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_load (GimpInterpreterDB *db,$/;"	f
gimp_interpreter_db_load_interp_file	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_load_interp_file (const GimpDatafileData *file_data,$/;"	f	file:
gimp_interpreter_db_new	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_new (void)$/;"	f
gimp_interpreter_db_resolve	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_resolve (GimpInterpreterDB  *db,$/;"	f
gimp_interpreter_db_resolve_programs	plug-in/gimpinterpreterdb.c	/^gimp_interpreter_db_resolve_programs (GimpInterpreterDB *db)$/;"	f	file:
gimp_iscissors_tool_apply	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_apply (GimpIscissorsTool *iscissors,$/;"	f	file:
gimp_iscissors_tool_button_press	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_iscissors_tool_button_release	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_iscissors_tool_class_init	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_class_init (GimpIscissorsToolClass *klass)$/;"	f	file:
gimp_iscissors_tool_control	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_iscissors_tool_cursor_update	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_iscissors_tool_draw	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_iscissors_tool_finalize	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_finalize (GObject *object)$/;"	f	file:
gimp_iscissors_tool_init	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_init (GimpIscissorsTool *iscissors)$/;"	f	file:
gimp_iscissors_tool_key_press	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_key_press (GimpTool    *tool,$/;"	f	file:
gimp_iscissors_tool_motion	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_iscissors_tool_oper_update	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_iscissors_tool_register	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_register (GimpToolRegisterCallback  callback,$/;"	f
gimp_iscissors_tool_reset	tools/gimpiscissorstool.c	/^gimp_iscissors_tool_reset (GimpIscissorsTool *iscissors)$/;"	f	file:
gimp_item_check_scaling	core/gimpitem.c	/^gimp_item_check_scaling (const GimpItem *item,$/;"	f
gimp_item_class_init	core/gimpitem.c	/^gimp_item_class_init (GimpItemClass *klass)$/;"	f	file:
gimp_item_configure	core/gimpitem.c	/^gimp_item_configure (GimpItem    *item,$/;"	f
gimp_item_convert	core/gimpitem.c	/^gimp_item_convert (GimpItem  *item,$/;"	f
gimp_item_duplicate	core/gimpitem.c	/^gimp_item_duplicate (GimpItem *item,$/;"	f
gimp_item_finalize	core/gimpitem.c	/^gimp_item_finalize (GObject *object)$/;"	f	file:
gimp_item_flip	core/gimpitem.c	/^gimp_item_flip (GimpItem            *item,$/;"	f
gimp_item_get_ID	core/gimpitem.c	/^gimp_item_get_ID (GimpItem *item)$/;"	f
gimp_item_get_by_ID	core/gimpitem.c	/^gimp_item_get_by_ID (Gimp *gimp,$/;"	f
gimp_item_get_image	core/gimpitem.c	/^gimp_item_get_image (const GimpItem *item)$/;"	f
gimp_item_get_linked	core/gimpitem.c	/^gimp_item_get_linked (const GimpItem *item)$/;"	f
gimp_item_get_memsize	core/gimpitem.c	/^gimp_item_get_memsize (GimpObject *object,$/;"	f	file:
gimp_item_get_popup_size	core/gimpitem-preview.c	/^gimp_item_get_popup_size (GimpViewable *viewable,$/;"	f
gimp_item_get_preview_size	core/gimpitem-preview.c	/^gimp_item_get_preview_size (GimpViewable *viewable,$/;"	f
gimp_item_get_property	core/gimpitem.c	/^gimp_item_get_property (GObject    *object,$/;"	f	file:
gimp_item_get_tattoo	core/gimpitem.c	/^gimp_item_get_tattoo (const GimpItem *item)$/;"	f
gimp_item_get_visible	core/gimpitem.c	/^gimp_item_get_visible (const GimpItem *item)$/;"	f
gimp_item_height	core/gimpitem.c	/^gimp_item_height (const GimpItem *item)$/;"	f
gimp_item_id_get_type	core/gimpparamspecs.c	/^gimp_item_id_get_type (void)$/;"	f
gimp_item_init	core/gimpitem.c	/^gimp_item_init (GimpItem *item)$/;"	f	file:
gimp_item_is_attached	core/gimpitem.c	/^gimp_item_is_attached (GimpItem *item)$/;"	f
gimp_item_is_in_set	core/gimpitem.c	/^gimp_item_is_in_set (GimpItem    *item,$/;"	f
gimp_item_is_removed	core/gimpitem.c	/^gimp_item_is_removed (const GimpItem *item)$/;"	f
gimp_item_linked_flip	core/gimpitem-linked.c	/^gimp_item_linked_flip (GimpItem            *item,$/;"	f
gimp_item_linked_rotate	core/gimpitem-linked.c	/^gimp_item_linked_rotate (GimpItem         *item,$/;"	f
gimp_item_linked_transform	core/gimpitem-linked.c	/^gimp_item_linked_transform (GimpItem               *item,$/;"	f
gimp_item_linked_translate	core/gimpitem-linked.c	/^gimp_item_linked_translate (GimpItem *item,$/;"	f
gimp_item_offsets	core/gimpitem.c	/^gimp_item_offsets (const GimpItem *item,$/;"	f
gimp_item_parasite_attach	core/gimpitem.c	/^gimp_item_parasite_attach (GimpItem           *item,$/;"	f
gimp_item_parasite_detach	core/gimpitem.c	/^gimp_item_parasite_detach (GimpItem    *item,$/;"	f
gimp_item_parasite_find	core/gimpitem.c	/^gimp_item_parasite_find (const GimpItem *item,$/;"	f
gimp_item_parasite_list	core/gimpitem.c	/^gimp_item_parasite_list (const GimpItem *item,$/;"	f
gimp_item_parasite_list_foreach_func	core/gimpitem.c	/^gimp_item_parasite_list_foreach_func (gchar          *name,$/;"	f	file:
gimp_item_prop_undo_class_init	core/gimpitempropundo.c	/^gimp_item_prop_undo_class_init (GimpItemPropUndoClass *klass)$/;"	f	file:
gimp_item_prop_undo_constructor	core/gimpitempropundo.c	/^gimp_item_prop_undo_constructor (GType                  type,$/;"	f	file:
gimp_item_prop_undo_free	core/gimpitempropundo.c	/^gimp_item_prop_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_item_prop_undo_get_memsize	core/gimpitempropundo.c	/^gimp_item_prop_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_item_prop_undo_get_property	core/gimpitempropundo.c	/^gimp_item_prop_undo_get_property (GObject    *object,$/;"	f	file:
gimp_item_prop_undo_init	core/gimpitempropundo.c	/^gimp_item_prop_undo_init (GimpItemPropUndo *undo)$/;"	f	file:
gimp_item_prop_undo_pop	core/gimpitempropundo.c	/^gimp_item_prop_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_item_prop_undo_set_property	core/gimpitempropundo.c	/^gimp_item_prop_undo_set_property (GObject      *object,$/;"	f	file:
gimp_item_real_convert	core/gimpitem.c	/^gimp_item_real_convert (GimpItem  *item,$/;"	f	file:
gimp_item_real_duplicate	core/gimpitem.c	/^gimp_item_real_duplicate (GimpItem *item,$/;"	f	file:
gimp_item_real_rename	core/gimpitem.c	/^gimp_item_real_rename (GimpItem    *item,$/;"	f	file:
gimp_item_real_resize	core/gimpitem.c	/^gimp_item_real_resize (GimpItem    *item,$/;"	f	file:
gimp_item_real_scale	core/gimpitem.c	/^gimp_item_real_scale (GimpItem              *item,$/;"	f	file:
gimp_item_real_translate	core/gimpitem.c	/^gimp_item_real_translate (GimpItem *item,$/;"	f	file:
gimp_item_removed	core/gimpitem.c	/^gimp_item_removed (GimpItem *item)$/;"	f
gimp_item_rename	core/gimpitem.c	/^gimp_item_rename (GimpItem    *item,$/;"	f
gimp_item_resize	core/gimpitem.c	/^gimp_item_resize (GimpItem    *item,$/;"	f
gimp_item_rotate	core/gimpitem.c	/^gimp_item_rotate (GimpItem         *item,$/;"	f
gimp_item_scale	core/gimpitem.c	/^gimp_item_scale (GimpItem              *item,$/;"	f
gimp_item_scale_by_factors	core/gimpitem.c	/^gimp_item_scale_by_factors (GimpItem              *item,$/;"	f
gimp_item_scale_by_origin	core/gimpitem.c	/^gimp_item_scale_by_origin (GimpItem              *item,$/;"	f
gimp_item_set_get_type	core/core-enums.c	/^gimp_item_set_get_type (void)$/;"	f
gimp_item_set_image	core/gimpitem.c	/^gimp_item_set_image (GimpItem  *item,$/;"	f
gimp_item_set_linked	core/gimpitem.c	/^gimp_item_set_linked (GimpItem *item,$/;"	f
gimp_item_set_property	core/gimpitem.c	/^gimp_item_set_property (GObject      *object,$/;"	f	file:
gimp_item_set_tattoo	core/gimpitem.c	/^gimp_item_set_tattoo (GimpItem   *item,$/;"	f
gimp_item_set_visible	core/gimpitem.c	/^gimp_item_set_visible (GimpItem *item,$/;"	f
gimp_item_signals	core/gimpitem.c	/^static guint gimp_item_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_item_stroke	core/gimpitem.c	/^gimp_item_stroke (GimpItem       *item,$/;"	f
gimp_item_transform	core/gimpitem.c	/^gimp_item_transform (GimpItem               *item,$/;"	f
gimp_item_translate	core/gimpitem.c	/^gimp_item_translate (GimpItem *item,$/;"	f
gimp_item_tree_view_activate_item	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_activate_item (GimpContainerView *view,$/;"	f	file:
gimp_item_tree_view_chain_clicked	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_chain_clicked (GtkCellRendererToggle *toggle,$/;"	f	file:
gimp_item_tree_view_class_init	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_class_init (GimpItemTreeViewClass *klass)$/;"	f	file:
gimp_item_tree_view_constructor	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_constructor (GType                  type,$/;"	f	file:
gimp_item_tree_view_context_item	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_context_item (GimpContainerView *view,$/;"	f	file:
gimp_item_tree_view_destroy	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_destroy (GtkObject *object)$/;"	f	file:
gimp_item_tree_view_docked_iface_init	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_item_tree_view_drop_possible	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_drop_possible (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_item_tree_view_drop_viewable	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_drop_viewable (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_item_tree_view_eye_clicked	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_eye_clicked (GtkCellRendererToggle *toggle,$/;"	f	file:
gimp_item_tree_view_get_image	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_get_image (GimpItemTreeView *view)$/;"	f
gimp_item_tree_view_image_flush	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_image_flush (GimpImage        *image,$/;"	f	file:
gimp_item_tree_view_init	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_init (GimpItemTreeView *view)$/;"	f	file:
gimp_item_tree_view_insert_item	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_insert_item (GimpContainerView *view,$/;"	f	file:
gimp_item_tree_view_item_changed	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_item_changed (GimpImage        *image,$/;"	f	file:
gimp_item_tree_view_linked_changed	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_linked_changed (GimpItem         *item,$/;"	f	file:
gimp_item_tree_view_name_edited	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_name_edited (GtkCellRendererText *cell,$/;"	f	file:
gimp_item_tree_view_new	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_new (GType            view_type,$/;"	f
gimp_item_tree_view_new_dropped	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_new_dropped (GtkWidget    *widget,$/;"	f	file:
gimp_item_tree_view_real_set_image	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_real_set_image (GimpItemTreeView *view,$/;"	f	file:
gimp_item_tree_view_select_item	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_select_item (GimpContainerView *view,$/;"	f	file:
gimp_item_tree_view_set_container	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_set_container (GimpContainerView *view,$/;"	f	file:
gimp_item_tree_view_set_context	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_set_context (GimpContainerView *view,$/;"	f	file:
gimp_item_tree_view_set_image	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_set_image (GimpItemTreeView *view,$/;"	f
gimp_item_tree_view_size_changed	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_size_changed (GimpImage        *image,$/;"	f	file:
gimp_item_tree_view_toggle_clicked	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_toggle_clicked (GtkCellRendererToggle *toggle,$/;"	f	file:
gimp_item_tree_view_view_iface_init	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_item_tree_view_visible_changed	widgets/gimpitemtreeview.c	/^gimp_item_tree_view_visible_changed (GimpItem         *item,$/;"	f	file:
gimp_item_undo_class_init	core/gimpitemundo.c	/^gimp_item_undo_class_init (GimpItemUndoClass *klass)$/;"	f	file:
gimp_item_undo_constructor	core/gimpitemundo.c	/^gimp_item_undo_constructor (GType                  type,$/;"	f	file:
gimp_item_undo_free	core/gimpitemundo.c	/^gimp_item_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_item_undo_get_property	core/gimpitemundo.c	/^gimp_item_undo_get_property (GObject    *object,$/;"	f	file:
gimp_item_undo_init	core/gimpitemundo.c	/^gimp_item_undo_init (GimpItemUndo *undo)$/;"	f	file:
gimp_item_undo_set_property	core/gimpitemundo.c	/^gimp_item_undo_set_property (GObject      *object,$/;"	f	file:
gimp_item_width	core/gimpitem.c	/^gimp_item_width (const GimpItem *item)$/;"	f
gimp_join_style_get_type	core/core-enums.c	/^gimp_join_style_get_type (void)$/;"	f
gimp_layer_add_alpha	core/gimplayer.c	/^gimp_layer_add_alpha (GimpLayer *layer)$/;"	f
gimp_layer_add_mask	core/gimplayer.c	/^gimp_layer_add_mask (GimpLayer     *layer,$/;"	f
gimp_layer_apply_mask	core/gimplayer.c	/^gimp_layer_apply_mask (GimpLayer         *layer,$/;"	f
gimp_layer_boundary	core/gimplayer.c	/^gimp_layer_boundary (GimpLayer *layer,$/;"	f
gimp_layer_class_init	core/gimplayer.c	/^gimp_layer_class_init (GimpLayerClass *klass)$/;"	f	file:
gimp_layer_convert	core/gimplayer.c	/^gimp_layer_convert (GimpItem  *item,$/;"	f	file:
gimp_layer_create_mask	core/gimplayer.c	/^gimp_layer_create_mask (const GimpLayer *layer,$/;"	f
gimp_layer_dispose	core/gimplayer.c	/^gimp_layer_dispose (GObject *object)$/;"	f	file:
gimp_layer_duplicate	core/gimplayer.c	/^gimp_layer_duplicate (GimpItem *item,$/;"	f	file:
gimp_layer_finalize	core/gimplayer.c	/^gimp_layer_finalize (GObject *object)$/;"	f	file:
gimp_layer_flatten	core/gimplayer.c	/^gimp_layer_flatten (GimpLayer   *layer,$/;"	f
gimp_layer_flip	core/gimplayer.c	/^gimp_layer_flip (GimpItem            *item,$/;"	f	file:
gimp_layer_get_active_components	core/gimplayer.c	/^gimp_layer_get_active_components (const GimpDrawable *drawable,$/;"	f	file:
gimp_layer_get_description	core/gimplayer.c	/^gimp_layer_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_layer_get_lock_alpha	core/gimplayer.c	/^gimp_layer_get_lock_alpha (const GimpLayer *layer)$/;"	f
gimp_layer_get_mask	core/gimplayer.c	/^gimp_layer_get_mask (const GimpLayer *layer)$/;"	f
gimp_layer_get_memsize	core/gimplayer.c	/^gimp_layer_get_memsize (GimpObject *object,$/;"	f	file:
gimp_layer_get_mode	core/gimplayer.c	/^gimp_layer_get_mode (const GimpLayer *layer)$/;"	f
gimp_layer_get_opacity	core/gimplayer.c	/^gimp_layer_get_opacity (const GimpLayer *layer)$/;"	f
gimp_layer_get_opacity_at	core/gimplayer.c	/^gimp_layer_get_opacity_at (GimpPickable *pickable,$/;"	f	file:
gimp_layer_get_property	core/gimplayer.c	/^gimp_layer_get_property (GObject    *object,$/;"	f	file:
gimp_layer_id_get_type	core/gimpparamspecs.c	/^gimp_layer_id_get_type (void)$/;"	f
gimp_layer_init	core/gimplayer.c	/^gimp_layer_init (GimpLayer *layer)$/;"	f	file:
gimp_layer_invalidate_boundary	core/gimplayer.c	/^gimp_layer_invalidate_boundary (GimpDrawable *drawable)$/;"	f	file:
gimp_layer_invalidate_preview	core/gimplayer.c	/^gimp_layer_invalidate_preview (GimpViewable *viewable)$/;"	f	file:
gimp_layer_is_attached	core/gimplayer.c	/^gimp_layer_is_attached (GimpItem *item)$/;"	f	file:
gimp_layer_is_floating_sel	core/gimplayer.c	/^gimp_layer_is_floating_sel (const GimpLayer *layer)$/;"	f
gimp_layer_layer_mask_update	core/gimplayer.c	/^gimp_layer_layer_mask_update (GimpDrawable *drawable,$/;"	f	file:
gimp_layer_mask_class_init	core/gimplayermask.c	/^gimp_layer_mask_class_init (GimpLayerMaskClass *klass)$/;"	f	file:
gimp_layer_mask_duplicate	core/gimplayermask.c	/^gimp_layer_mask_duplicate (GimpItem *item,$/;"	f	file:
gimp_layer_mask_get_apply	core/gimplayermask.c	/^gimp_layer_mask_get_apply (const GimpLayerMask *layer_mask)$/;"	f
gimp_layer_mask_get_edit	core/gimplayermask.c	/^gimp_layer_mask_get_edit (const GimpLayerMask *layer_mask)$/;"	f
gimp_layer_mask_get_layer	core/gimplayermask.c	/^gimp_layer_mask_get_layer (const GimpLayerMask *layer_mask)$/;"	f
gimp_layer_mask_get_show	core/gimplayermask.c	/^gimp_layer_mask_get_show (const GimpLayerMask *layer_mask)$/;"	f
gimp_layer_mask_id_get_type	core/gimpparamspecs.c	/^gimp_layer_mask_id_get_type (void)$/;"	f
gimp_layer_mask_init	core/gimplayermask.c	/^gimp_layer_mask_init (GimpLayerMask *layer_mask)$/;"	f	file:
gimp_layer_mask_is_attached	core/gimplayermask.c	/^gimp_layer_mask_is_attached (GimpItem *item)$/;"	f	file:
gimp_layer_mask_new	core/gimplayermask.c	/^gimp_layer_mask_new (GimpImage     *image,$/;"	f
gimp_layer_mask_prop_undo_class_init	core/gimplayermaskpropundo.c	/^gimp_layer_mask_prop_undo_class_init (GimpLayerMaskPropUndoClass *klass)$/;"	f	file:
gimp_layer_mask_prop_undo_constructor	core/gimplayermaskpropundo.c	/^gimp_layer_mask_prop_undo_constructor (GType                  type,$/;"	f	file:
gimp_layer_mask_prop_undo_init	core/gimplayermaskpropundo.c	/^gimp_layer_mask_prop_undo_init (GimpLayerMaskPropUndo *undo)$/;"	f	file:
gimp_layer_mask_prop_undo_pop	core/gimplayermaskpropundo.c	/^gimp_layer_mask_prop_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_layer_mask_rename	core/gimplayermask.c	/^gimp_layer_mask_rename (GimpItem    *item,$/;"	f	file:
gimp_layer_mask_set_apply	core/gimplayermask.c	/^gimp_layer_mask_set_apply (GimpLayerMask *layer_mask,$/;"	f
gimp_layer_mask_set_edit	core/gimplayermask.c	/^gimp_layer_mask_set_edit (GimpLayerMask *layer_mask,$/;"	f
gimp_layer_mask_set_layer	core/gimplayermask.c	/^gimp_layer_mask_set_layer (GimpLayerMask *layer_mask,$/;"	f
gimp_layer_mask_set_show	core/gimplayermask.c	/^gimp_layer_mask_set_show (GimpLayerMask *layer_mask,$/;"	f
gimp_layer_mask_undo_class_init	core/gimplayermaskundo.c	/^gimp_layer_mask_undo_class_init (GimpLayerMaskUndoClass *klass)$/;"	f	file:
gimp_layer_mask_undo_constructor	core/gimplayermaskundo.c	/^gimp_layer_mask_undo_constructor (GType                  type,$/;"	f	file:
gimp_layer_mask_undo_free	core/gimplayermaskundo.c	/^gimp_layer_mask_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_layer_mask_undo_get_memsize	core/gimplayermaskundo.c	/^gimp_layer_mask_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_layer_mask_undo_get_property	core/gimplayermaskundo.c	/^gimp_layer_mask_undo_get_property (GObject    *object,$/;"	f	file:
gimp_layer_mask_undo_init	core/gimplayermaskundo.c	/^gimp_layer_mask_undo_init (GimpLayerMaskUndo *undo)$/;"	f	file:
gimp_layer_mask_undo_pop	core/gimplayermaskundo.c	/^gimp_layer_mask_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_layer_mask_undo_set_property	core/gimplayermaskundo.c	/^gimp_layer_mask_undo_set_property (GObject      *object,$/;"	f	file:
gimp_layer_mode_effects_get_type	base/base-enums.c	/^gimp_layer_mode_effects_get_type (void)$/;"	f
gimp_layer_name_changed	core/gimplayer.c	/^gimp_layer_name_changed (GimpObject *object)$/;"	f	file:
gimp_layer_new	core/gimplayer.c	/^gimp_layer_new (GimpImage            *image,$/;"	f
gimp_layer_new_from_pixbuf	core/gimplayer.c	/^gimp_layer_new_from_pixbuf (GdkPixbuf            *pixbuf,$/;"	f
gimp_layer_new_from_region	core/gimplayer.c	/^gimp_layer_new_from_region (PixelRegion          *region,$/;"	f
gimp_layer_new_from_tiles	core/gimplayer.c	/^gimp_layer_new_from_tiles (TileManager          *tiles,$/;"	f
gimp_layer_pickable_iface_init	core/gimplayer.c	/^gimp_layer_pickable_iface_init (GimpPickableInterface *iface)$/;"	f	file:
gimp_layer_prop_undo_class_init	core/gimplayerpropundo.c	/^gimp_layer_prop_undo_class_init (GimpLayerPropUndoClass *klass)$/;"	f	file:
gimp_layer_prop_undo_constructor	core/gimplayerpropundo.c	/^gimp_layer_prop_undo_constructor (GType                  type,$/;"	f	file:
gimp_layer_prop_undo_init	core/gimplayerpropundo.c	/^gimp_layer_prop_undo_init (GimpLayerPropUndo *undo)$/;"	f	file:
gimp_layer_prop_undo_pop	core/gimplayerpropundo.c	/^gimp_layer_prop_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_layer_removed	core/gimplayer.c	/^gimp_layer_removed (GimpItem *item)$/;"	f	file:
gimp_layer_rename	core/gimplayer.c	/^gimp_layer_rename (GimpItem    *item,$/;"	f	file:
gimp_layer_resize	core/gimplayer.c	/^gimp_layer_resize (GimpItem    *item,$/;"	f	file:
gimp_layer_resize_to_image	core/gimplayer.c	/^gimp_layer_resize_to_image (GimpLayer   *layer,$/;"	f
gimp_layer_rotate	core/gimplayer.c	/^gimp_layer_rotate (GimpItem         *item,$/;"	f	file:
gimp_layer_scale	core/gimplayer.c	/^gimp_layer_scale (GimpItem              *item,$/;"	f	file:
gimp_layer_set_lock_alpha	core/gimplayer.c	/^gimp_layer_set_lock_alpha (GimpLayer *layer,$/;"	f
gimp_layer_set_mode	core/gimplayer.c	/^gimp_layer_set_mode (GimpLayer            *layer,$/;"	f
gimp_layer_set_opacity	core/gimplayer.c	/^gimp_layer_set_opacity (GimpLayer *layer,$/;"	f
gimp_layer_set_property	core/gimplayer.c	/^gimp_layer_set_property (GObject      *object,$/;"	f	file:
gimp_layer_set_tiles	core/gimplayer.c	/^gimp_layer_set_tiles (GimpDrawable *drawable,$/;"	f	file:
gimp_layer_transform	core/gimplayer.c	/^gimp_layer_transform (GimpItem               *item,$/;"	f	file:
gimp_layer_transform_color	core/gimplayer.c	/^gimp_layer_transform_color (GimpImage     *image,$/;"	f	file:
gimp_layer_translate	core/gimplayer.c	/^gimp_layer_translate (GimpItem *item,$/;"	f	file:
gimp_layer_tree_view_alpha_changed	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_alpha_changed (GimpLayer         *layer,$/;"	f	file:
gimp_layer_tree_view_alpha_update	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_alpha_update (GimpLayerTreeView *view,$/;"	f	file:
gimp_layer_tree_view_class_init	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_class_init (GimpLayerTreeViewClass *klass)$/;"	f	file:
gimp_layer_tree_view_constructor	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_constructor (GType                  type,$/;"	f	file:
gimp_layer_tree_view_drop_color	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_drop_color (GimpContainerTreeView   *view,$/;"	f	file:
gimp_layer_tree_view_drop_component	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_drop_component (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_layer_tree_view_drop_pixbuf	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_drop_pixbuf (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_layer_tree_view_drop_possible	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_drop_possible (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_layer_tree_view_drop_uri_list	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_drop_uri_list (GimpContainerTreeView   *view,$/;"	f	file:
gimp_layer_tree_view_finalize	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_finalize (GObject *object)$/;"	f	file:
gimp_layer_tree_view_floating_selection_changed	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_floating_selection_changed (GimpImage         *image,$/;"	f	file:
gimp_layer_tree_view_init	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_init (GimpLayerTreeView *view)$/;"	f	file:
gimp_layer_tree_view_insert_item	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_insert_item (GimpContainerView *view,$/;"	f	file:
gimp_layer_tree_view_item_new	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_item_new (GimpImage *image)$/;"	f	file:
gimp_layer_tree_view_layer_clicked	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_layer_clicked (GimpCellRendererViewable *cell,$/;"	f	file:
gimp_layer_tree_view_layer_signal_handler	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_layer_signal_handler (GimpLayer         *layer,$/;"	f	file:
gimp_layer_tree_view_lock_alpha_button_toggled	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_lock_alpha_button_toggled (GtkWidget         *widget,$/;"	f	file:
gimp_layer_tree_view_mask_callback	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_mask_callback (GimpLayerMask     *mask,$/;"	f	file:
gimp_layer_tree_view_mask_changed	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_mask_changed (GimpLayer         *layer,$/;"	f	file:
gimp_layer_tree_view_mask_clicked	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_mask_clicked (GimpCellRendererViewable *cell,$/;"	f	file:
gimp_layer_tree_view_mask_update	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_mask_update (GimpLayerTreeView *layer_view,$/;"	f	file:
gimp_layer_tree_view_opacity_scale_changed	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_opacity_scale_changed (GtkAdjustment     *adjustment,$/;"	f	file:
gimp_layer_tree_view_paint_mode_menu_callback	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_paint_mode_menu_callback (GtkWidget         *widget,$/;"	f	file:
gimp_layer_tree_view_renderer_update	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_renderer_update (GimpViewRenderer  *renderer,$/;"	f	file:
gimp_layer_tree_view_select_item	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_select_item (GimpContainerView *view,$/;"	f	file:
gimp_layer_tree_view_set_container	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_set_container (GimpContainerView *view,$/;"	f	file:
gimp_layer_tree_view_set_context	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_set_context (GimpContainerView *view,$/;"	f	file:
gimp_layer_tree_view_set_image	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_set_image (GimpItemTreeView *view,$/;"	f	file:
gimp_layer_tree_view_set_view_size	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_set_view_size (GimpContainerView *view)$/;"	f	file:
gimp_layer_tree_view_style_set	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_style_set (GtkWidget *widget,$/;"	f	file:
gimp_layer_tree_view_unrealize	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_layer_tree_view_update_borders	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_update_borders (GimpLayerTreeView *layer_view,$/;"	f	file:
gimp_layer_tree_view_update_menu	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_update_menu (GimpLayerTreeView *layer_view,$/;"	f	file:
gimp_layer_tree_view_update_options	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_update_options (GimpLayerTreeView *view,$/;"	f	file:
gimp_layer_tree_view_view_iface_init	widgets/gimplayertreeview.c	/^gimp_layer_tree_view_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_layer_undo_class_init	core/gimplayerundo.c	/^gimp_layer_undo_class_init (GimpLayerUndoClass *klass)$/;"	f	file:
gimp_layer_undo_constructor	core/gimplayerundo.c	/^gimp_layer_undo_constructor (GType                  type,$/;"	f	file:
gimp_layer_undo_get_memsize	core/gimplayerundo.c	/^gimp_layer_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_layer_undo_get_property	core/gimplayerundo.c	/^gimp_layer_undo_get_property (GObject    *object,$/;"	f	file:
gimp_layer_undo_init	core/gimplayerundo.c	/^gimp_layer_undo_init (GimpLayerUndo *undo)$/;"	f	file:
gimp_layer_undo_pop	core/gimplayerundo.c	/^gimp_layer_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_layer_undo_set_property	core/gimplayerundo.c	/^gimp_layer_undo_set_property (GObject      *object,$/;"	f	file:
gimp_levels_tool_class_init	tools/gimplevelstool.c	/^gimp_levels_tool_class_init (GimpLevelsToolClass *klass)$/;"	f	file:
gimp_levels_tool_color_picked	tools/gimplevelstool.c	/^gimp_levels_tool_color_picked (GimpColorTool      *color_tool,$/;"	f	file:
gimp_levels_tool_color_picker_new	tools/gimplevelstool.c	/^gimp_levels_tool_color_picker_new (GimpLevelsTool *tool,$/;"	f	file:
gimp_levels_tool_dialog	tools/gimplevelstool.c	/^gimp_levels_tool_dialog (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_levels_tool_dialog_unmap	tools/gimplevelstool.c	/^gimp_levels_tool_dialog_unmap (GtkWidget      *dialog,$/;"	f	file:
gimp_levels_tool_finalize	tools/gimplevelstool.c	/^gimp_levels_tool_finalize (GObject *object)$/;"	f	file:
gimp_levels_tool_init	tools/gimplevelstool.c	/^gimp_levels_tool_init (GimpLevelsTool *tool)$/;"	f	file:
gimp_levels_tool_initialize	tools/gimplevelstool.c	/^gimp_levels_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_levels_tool_map	tools/gimplevelstool.c	/^gimp_levels_tool_map (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_levels_tool_reset	tools/gimplevelstool.c	/^gimp_levels_tool_reset (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_levels_tool_settings_load	tools/gimplevelstool.c	/^gimp_levels_tool_settings_load (GimpImageMapTool  *image_map_tool,$/;"	f	file:
gimp_levels_tool_settings_save	tools/gimplevelstool.c	/^gimp_levels_tool_settings_save (GimpImageMapTool *image_map_tool,$/;"	f	file:
gimp_list_add	core/gimplist.c	/^gimp_list_add (GimpContainer *container,$/;"	f	file:
gimp_list_class_init	core/gimplist.c	/^gimp_list_class_init (GimpListClass *klass)$/;"	f	file:
gimp_list_clear	core/gimplist.c	/^gimp_list_clear (GimpContainer *container)$/;"	f	file:
gimp_list_foreach	core/gimplist.c	/^gimp_list_foreach (const GimpContainer *container,$/;"	f	file:
gimp_list_get_child_by_index	core/gimplist.c	/^gimp_list_get_child_by_index (const GimpContainer *container,$/;"	f	file:
gimp_list_get_child_by_name	core/gimplist.c	/^gimp_list_get_child_by_name (const GimpContainer *container,$/;"	f	file:
gimp_list_get_child_index	core/gimplist.c	/^gimp_list_get_child_index (const GimpContainer *container,$/;"	f	file:
gimp_list_get_memsize	core/gimplist.c	/^gimp_list_get_memsize (GimpObject *object,$/;"	f	file:
gimp_list_get_property	core/gimplist.c	/^gimp_list_get_property (GObject    *object,$/;"	f	file:
gimp_list_have	core/gimplist.c	/^gimp_list_have (const GimpContainer *container,$/;"	f	file:
gimp_list_init	core/gimplist.c	/^gimp_list_init (GimpList *list)$/;"	f	file:
gimp_list_new	core/gimplist.c	/^gimp_list_new (GType    children_type,$/;"	f
gimp_list_new_weak	core/gimplist.c	/^gimp_list_new_weak (GType    children_type,$/;"	f
gimp_list_object_renamed	core/gimplist.c	/^gimp_list_object_renamed (GimpObject *object,$/;"	f	file:
gimp_list_remove	core/gimplist.c	/^gimp_list_remove (GimpContainer *container,$/;"	f	file:
gimp_list_reorder	core/gimplist.c	/^gimp_list_reorder (GimpContainer *container,$/;"	f	file:
gimp_list_reverse	core/gimplist.c	/^gimp_list_reverse (GimpList *list)$/;"	f
gimp_list_set_property	core/gimplist.c	/^gimp_list_set_property (GObject      *object,$/;"	f	file:
gimp_list_set_sort_func	core/gimplist.c	/^gimp_list_set_sort_func (GimpList     *list,$/;"	f
gimp_list_sort	core/gimplist.c	/^gimp_list_sort (GimpList     *list,$/;"	f
gimp_list_sort_by_name	core/gimplist.c	/^gimp_list_sort_by_name (GimpList *list)$/;"	f
gimp_list_uniquefy_name	core/gimplist.c	/^gimp_list_uniquefy_name (GimpList   *gimp_list,$/;"	f	file:
gimp_load_config	core/gimp.c	/^gimp_load_config (Gimp        *gimp,$/;"	f
gimp_lut_free	base/gimplut.c	/^gimp_lut_free (GimpLut *lut)$/;"	f
gimp_lut_new	base/gimplut.c	/^gimp_lut_new (void)$/;"	f
gimp_lut_process	base/gimplut.c	/^gimp_lut_process (GimpLut     *lut,$/;"	f
gimp_lut_process_inline	base/gimplut.c	/^gimp_lut_process_inline (GimpLut     *lut,$/;"	f
gimp_lut_setup	base/gimplut.c	/^gimp_lut_setup (GimpLut     *lut,$/;"	f
gimp_lut_setup_exact	base/gimplut.c	/^gimp_lut_setup_exact (GimpLut     *lut,$/;"	f
gimp_magnify_options_class_init	tools/gimpmagnifyoptions.c	/^gimp_magnify_options_class_init (GimpMagnifyOptionsClass *klass)$/;"	f	file:
gimp_magnify_options_get_property	tools/gimpmagnifyoptions.c	/^gimp_magnify_options_get_property (GObject    *object,$/;"	f	file:
gimp_magnify_options_gui	tools/gimpmagnifyoptions.c	/^gimp_magnify_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_magnify_options_init	tools/gimpmagnifyoptions.c	/^gimp_magnify_options_init (GimpMagnifyOptions *options)$/;"	f	file:
gimp_magnify_options_reset	tools/gimpmagnifyoptions.c	/^gimp_magnify_options_reset (GimpToolOptions *tool_options)$/;"	f	file:
gimp_magnify_options_set_property	tools/gimpmagnifyoptions.c	/^gimp_magnify_options_set_property (GObject      *object,$/;"	f	file:
gimp_magnify_tool_button_press	tools/gimpmagnifytool.c	/^gimp_magnify_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_magnify_tool_button_release	tools/gimpmagnifytool.c	/^gimp_magnify_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_magnify_tool_class_init	tools/gimpmagnifytool.c	/^gimp_magnify_tool_class_init (GimpMagnifyToolClass *klass)$/;"	f	file:
gimp_magnify_tool_cursor_update	tools/gimpmagnifytool.c	/^gimp_magnify_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_magnify_tool_draw	tools/gimpmagnifytool.c	/^gimp_magnify_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_magnify_tool_init	tools/gimpmagnifytool.c	/^gimp_magnify_tool_init (GimpMagnifyTool *magnify_tool)$/;"	f	file:
gimp_magnify_tool_modifier_key	tools/gimpmagnifytool.c	/^gimp_magnify_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_magnify_tool_motion	tools/gimpmagnifytool.c	/^gimp_magnify_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_marshal_BOOLEAN__BOOLEAN	core/gimpmarshal.c	/^gimp_marshal_BOOLEAN__BOOLEAN (GClosure     *closure,$/;"	f
gimp_marshal_BOOLEAN__ENUM_INT	core/gimpmarshal.c	/^gimp_marshal_BOOLEAN__ENUM_INT (GClosure     *closure,$/;"	f
gimp_marshal_BOOLEAN__OBJECT_POINTER	core/gimpmarshal.c	/^gimp_marshal_BOOLEAN__OBJECT_POINTER (GClosure     *closure,$/;"	f
gimp_marshal_BOOLEAN__OBJECT_POINTER_STRING	core/gimpmarshal.c	/^gimp_marshal_BOOLEAN__OBJECT_POINTER_STRING (GClosure     *closure,$/;"	f
gimp_marshal_VOID__BOOLEAN	core/gimpmarshal.h	42;"	d
gimp_marshal_VOID__BOOLEAN_INT_INT_INT_INT	core/gimpmarshal.c	/^gimp_marshal_VOID__BOOLEAN_INT_INT_INT_INT (GClosure     *closure,$/;"	f
gimp_marshal_VOID__BOXED	core/gimpmarshal.h	53;"	d
gimp_marshal_VOID__BOXED_ENUM	core/gimpmarshal.c	/^gimp_marshal_VOID__BOXED_ENUM (GClosure     *closure,$/;"	f
gimp_marshal_VOID__DOUBLE	core/gimpmarshal.h	64;"	d
gimp_marshal_VOID__DOUBLE_DOUBLE	core/gimpmarshal.c	/^gimp_marshal_VOID__DOUBLE_DOUBLE (GClosure     *closure,$/;"	f
gimp_marshal_VOID__ENUM	core/gimpmarshal.h	75;"	d
gimp_marshal_VOID__ENUM_ENUM_BOXED_INT	core/gimpmarshal.c	/^gimp_marshal_VOID__ENUM_ENUM_BOXED_INT (GClosure     *closure,$/;"	f
gimp_marshal_VOID__ENUM_OBJECT	core/gimpmarshal.c	/^gimp_marshal_VOID__ENUM_OBJECT (GClosure     *closure,$/;"	f
gimp_marshal_VOID__ENUM_POINTER	core/gimpmarshal.c	/^gimp_marshal_VOID__ENUM_POINTER (GClosure     *closure,$/;"	f
gimp_marshal_VOID__FLAGS	core/gimpmarshal.h	102;"	d
gimp_marshal_VOID__INT	core/gimpmarshal.h	105;"	d
gimp_marshal_VOID__INT_INT	core/gimpmarshal.c	/^gimp_marshal_VOID__INT_INT (GClosure     *closure,$/;"	f
gimp_marshal_VOID__INT_INT_INT_INT	core/gimpmarshal.c	/^gimp_marshal_VOID__INT_INT_INT_INT (GClosure     *closure,$/;"	f
gimp_marshal_VOID__OBJECT	core/gimpmarshal.h	124;"	d
gimp_marshal_VOID__OBJECT_INT	core/gimpmarshal.c	/^gimp_marshal_VOID__OBJECT_INT (GClosure     *closure,$/;"	f
gimp_marshal_VOID__OBJECT_OBJECT	core/gimpmarshal.c	/^gimp_marshal_VOID__OBJECT_OBJECT (GClosure     *closure,$/;"	f
gimp_marshal_VOID__OBJECT_POINTER	core/gimpmarshal.c	/^gimp_marshal_VOID__OBJECT_POINTER (GClosure     *closure,$/;"	f
gimp_marshal_VOID__POINTER	core/gimpmarshal.h	151;"	d
gimp_marshal_VOID__POINTER_BOXED	core/gimpmarshal.c	/^gimp_marshal_VOID__POINTER_BOXED (GClosure     *closure,$/;"	f
gimp_marshal_VOID__POINTER_ENUM	core/gimpmarshal.c	/^gimp_marshal_VOID__POINTER_ENUM (GClosure     *closure,$/;"	f
gimp_marshal_VOID__STRING	core/gimpmarshal.h	170;"	d
gimp_marshal_VOID__STRING_BOOLEAN_UINT_FLAGS	core/gimpmarshal.c	/^gimp_marshal_VOID__STRING_BOOLEAN_UINT_FLAGS (GClosure     *closure,$/;"	f
gimp_marshal_VOID__STRING_FLAGS	core/gimpmarshal.c	/^gimp_marshal_VOID__STRING_FLAGS (GClosure     *closure,$/;"	f
gimp_marshal_VOID__STRING_STRING_STRING	core/gimpmarshal.c	/^gimp_marshal_VOID__STRING_STRING_STRING (GClosure     *closure,$/;"	f
gimp_marshal_VOID__VOID	core/gimpmarshal.h	197;"	d
gimp_mask_apply_mode_get_type	core/core-enums.c	/^gimp_mask_apply_mode_get_type (void)$/;"	f
gimp_mask_undo_class_init	core/gimpmaskundo.c	/^gimp_mask_undo_class_init (GimpMaskUndoClass *klass)$/;"	f	file:
gimp_mask_undo_constructor	core/gimpmaskundo.c	/^gimp_mask_undo_constructor (GType                  type,$/;"	f	file:
gimp_mask_undo_free	core/gimpmaskundo.c	/^gimp_mask_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_mask_undo_get_memsize	core/gimpmaskundo.c	/^gimp_mask_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_mask_undo_init	core/gimpmaskundo.c	/^gimp_mask_undo_init (GimpMaskUndo *undo)$/;"	f	file:
gimp_mask_undo_pop	core/gimpmaskundo.c	/^gimp_mask_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_measure_options_class_init	tools/gimpmeasureoptions.c	/^gimp_measure_options_class_init (GimpMeasureOptionsClass *klass)$/;"	f	file:
gimp_measure_options_get_property	tools/gimpmeasureoptions.c	/^gimp_measure_options_get_property (GObject    *object,$/;"	f	file:
gimp_measure_options_gui	tools/gimpmeasureoptions.c	/^gimp_measure_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_measure_options_init	tools/gimpmeasureoptions.c	/^gimp_measure_options_init (GimpMeasureOptions *options)$/;"	f	file:
gimp_measure_options_set_property	tools/gimpmeasureoptions.c	/^gimp_measure_options_set_property (GObject      *object,$/;"	f	file:
gimp_measure_tool_active_modifier_key	tools/gimpmeasuretool.c	/^gimp_measure_tool_active_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_measure_tool_button_press	tools/gimpmeasuretool.c	/^gimp_measure_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_measure_tool_button_release	tools/gimpmeasuretool.c	/^gimp_measure_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_measure_tool_class_init	tools/gimpmeasuretool.c	/^gimp_measure_tool_class_init (GimpMeasureToolClass *klass)$/;"	f	file:
gimp_measure_tool_control	tools/gimpmeasuretool.c	/^gimp_measure_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_measure_tool_cursor_update	tools/gimpmeasuretool.c	/^gimp_measure_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_measure_tool_dialog_new	tools/gimpmeasuretool.c	/^gimp_measure_tool_dialog_new (GimpMeasureTool *measure)$/;"	f	file:
gimp_measure_tool_dialog_update	tools/gimpmeasuretool.c	/^gimp_measure_tool_dialog_update (GimpMeasureTool *measure,$/;"	f	file:
gimp_measure_tool_draw	tools/gimpmeasuretool.c	/^gimp_measure_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_measure_tool_get_angle	tools/gimpmeasuretool.c	/^gimp_measure_tool_get_angle (gint    dx,$/;"	f	file:
gimp_measure_tool_halt	tools/gimpmeasuretool.c	/^gimp_measure_tool_halt (GimpMeasureTool *measure)$/;"	f	file:
gimp_measure_tool_init	tools/gimpmeasuretool.c	/^gimp_measure_tool_init (GimpMeasureTool *measure_tool)$/;"	f	file:
gimp_measure_tool_key_press	tools/gimpmeasuretool.c	/^gimp_measure_tool_key_press (GimpTool    *tool,$/;"	f	file:
gimp_measure_tool_motion	tools/gimpmeasuretool.c	/^gimp_measure_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_menu_dock_auto_clicked	widgets/gimpmenudock.c	/^gimp_menu_dock_auto_clicked (GtkWidget *widget,$/;"	f	file:
gimp_menu_dock_book_added	widgets/gimpmenudock.c	/^gimp_menu_dock_book_added (GimpDock     *dock,$/;"	f	file:
gimp_menu_dock_book_removed	widgets/gimpmenudock.c	/^gimp_menu_dock_book_removed (GimpDock     *dock,$/;"	f	file:
gimp_menu_dock_class_init	widgets/gimpmenudock.c	/^gimp_menu_dock_class_init (GimpMenuDockClass *klass)$/;"	f	file:
gimp_menu_dock_constructor	widgets/gimpmenudock.c	/^gimp_menu_dock_constructor (GType                  type,$/;"	f	file:
gimp_menu_dock_destroy	widgets/gimpmenudock.c	/^gimp_menu_dock_destroy (GtkObject *object)$/;"	f	file:
gimp_menu_dock_dockbook_changed	widgets/gimpmenudock.c	/^gimp_menu_dock_dockbook_changed (GimpDockbook *dockbook,$/;"	f	file:
gimp_menu_dock_factory_display_changed	widgets/gimpmenudock.c	/^gimp_menu_dock_factory_display_changed (GimpContext *context,$/;"	f	file:
gimp_menu_dock_factory_image_changed	widgets/gimpmenudock.c	/^gimp_menu_dock_factory_image_changed (GimpContext *context,$/;"	f	file:
gimp_menu_dock_get_aux_info	widgets/gimpmenudock.c	/^gimp_menu_dock_get_aux_info (GimpDock *dock)$/;"	f	file:
gimp_menu_dock_image_changed	widgets/gimpmenudock.c	/^gimp_menu_dock_image_changed (GimpContext *context,$/;"	f	file:
gimp_menu_dock_init	widgets/gimpmenudock.c	/^gimp_menu_dock_init (GimpMenuDock *dock)$/;"	f	file:
gimp_menu_dock_new	widgets/gimpmenudock.c	/^gimp_menu_dock_new (GimpDialogFactory *dialog_factory,$/;"	f
gimp_menu_dock_set_auto_follow_active	widgets/gimpmenudock.c	/^gimp_menu_dock_set_auto_follow_active (GimpMenuDock *menu_dock,$/;"	f
gimp_menu_dock_set_aux_info	widgets/gimpmenudock.c	/^gimp_menu_dock_set_aux_info (GimpDock *dock,$/;"	f	file:
gimp_menu_dock_set_show_image_menu	widgets/gimpmenudock.c	/^gimp_menu_dock_set_show_image_menu (GimpMenuDock *menu_dock,$/;"	f
gimp_menu_dock_setup	widgets/gimpmenudock.c	/^gimp_menu_dock_setup (GimpDock       *dock,$/;"	f	file:
gimp_menu_dock_style_set	widgets/gimpmenudock.c	/^gimp_menu_dock_style_set (GtkWidget *widget,$/;"	f	file:
gimp_menu_dock_update_title	widgets/gimpmenudock.c	/^gimp_menu_dock_update_title (GimpMenuDock *menu_dock)$/;"	f	file:
gimp_menu_dock_update_title_idle	widgets/gimpmenudock.c	/^gimp_menu_dock_update_title_idle (GimpMenuDock *menu_dock)$/;"	f	file:
gimp_menu_factory_class_init	widgets/gimpmenufactory.c	/^gimp_menu_factory_class_init (GimpMenuFactoryClass *klass)$/;"	f	file:
gimp_menu_factory_finalize	widgets/gimpmenufactory.c	/^gimp_menu_factory_finalize (GObject *object)$/;"	f	file:
gimp_menu_factory_init	widgets/gimpmenufactory.c	/^gimp_menu_factory_init (GimpMenuFactory *factory)$/;"	f	file:
gimp_menu_factory_manager_new	widgets/gimpmenufactory.c	/^gimp_menu_factory_manager_new (GimpMenuFactory *factory,$/;"	f
gimp_menu_factory_manager_register	widgets/gimpmenufactory.c	/^gimp_menu_factory_manager_register (GimpMenuFactory *factory,$/;"	f
gimp_menu_factory_new	widgets/gimpmenufactory.c	/^gimp_menu_factory_new (Gimp              *gimp,$/;"	f
gimp_menu_position	widgets/gimpwidgets-utils.c	/^gimp_menu_position (GtkMenu *menu,$/;"	f
gimp_merge_type_get_type	core/core-enums.c	/^gimp_merge_type_get_type (void)$/;"	f
gimp_message	core/gimp.c	/^gimp_message (Gimp                *gimp,$/;"	f
gimp_message_box_class_init	widgets/gimpmessagebox.c	/^gimp_message_box_class_init (GimpMessageBoxClass *klass)$/;"	f	file:
gimp_message_box_constructor	widgets/gimpmessagebox.c	/^gimp_message_box_constructor (GType                  type,$/;"	f	file:
gimp_message_box_destroy	widgets/gimpmessagebox.c	/^gimp_message_box_destroy (GtkObject *object)$/;"	f	file:
gimp_message_box_finalize	widgets/gimpmessagebox.c	/^gimp_message_box_finalize (GObject *object)$/;"	f	file:
gimp_message_box_forall	widgets/gimpmessagebox.c	/^gimp_message_box_forall (GtkContainer *container,$/;"	f	file:
gimp_message_box_get_property	widgets/gimpmessagebox.c	/^gimp_message_box_get_property (GObject    *object,$/;"	f	file:
gimp_message_box_init	widgets/gimpmessagebox.c	/^gimp_message_box_init (GimpMessageBox *box)$/;"	f	file:
gimp_message_box_new	widgets/gimpmessagebox.c	/^gimp_message_box_new (const gchar *stock_id)$/;"	f
gimp_message_box_repeat	widgets/gimpmessagebox.c	/^gimp_message_box_repeat (GimpMessageBox *box)$/;"	f
gimp_message_box_set_label_markup	widgets/gimpmessagebox.c	/^gimp_message_box_set_label_markup (GimpMessageBox *box,$/;"	f	file:
gimp_message_box_set_label_text	widgets/gimpmessagebox.c	/^gimp_message_box_set_label_text (GimpMessageBox *box,$/;"	f	file:
gimp_message_box_set_markup	widgets/gimpmessagebox.c	/^gimp_message_box_set_markup (GimpMessageBox *box,$/;"	f
gimp_message_box_set_primary_text	widgets/gimpmessagebox.c	/^gimp_message_box_set_primary_text (GimpMessageBox *box,$/;"	f
gimp_message_box_set_property	widgets/gimpmessagebox.c	/^gimp_message_box_set_property (GObject      *object,$/;"	f	file:
gimp_message_box_set_text	widgets/gimpmessagebox.c	/^gimp_message_box_set_text (GimpMessageBox *box,$/;"	f
gimp_message_box_size_allocate	widgets/gimpmessagebox.c	/^gimp_message_box_size_allocate (GtkWidget     *widget,$/;"	f	file:
gimp_message_box_size_request	widgets/gimpmessagebox.c	/^gimp_message_box_size_request (GtkWidget      *widget,$/;"	f	file:
gimp_message_dialog_class_init	widgets/gimpmessagedialog.c	/^gimp_message_dialog_class_init (GimpMessageDialogClass *klass)$/;"	f	file:
gimp_message_dialog_init	widgets/gimpmessagedialog.c	/^gimp_message_dialog_init (GimpMessageDialog *dialog)$/;"	f	file:
gimp_message_dialog_new	widgets/gimpmessagedialog.c	/^gimp_message_dialog_new (const gchar    *title,$/;"	f
gimp_message_log_func	errors.c	/^gimp_message_log_func (const gchar    *log_domain,$/;"	f	file:
gimp_message_severity_get_type	core/core-enums.c	/^gimp_message_severity_get_type (void)$/;"	f
gimp_message_valist	core/gimp.c	/^gimp_message_valist (Gimp                *gimp,$/;"	f
gimp_modules_exit	core/gimp-modules.c	/^gimp_modules_exit (Gimp *gimp)$/;"	f
gimp_modules_init	core/gimp-modules.c	/^gimp_modules_init (Gimp *gimp)$/;"	f
gimp_modules_load	core/gimp-modules.c	/^gimp_modules_load (Gimp *gimp)$/;"	f
gimp_modules_refresh	core/gimp-modules.c	/^gimp_modules_refresh (Gimp *gimp)$/;"	f
gimp_modules_unload	core/gimp-modules.c	/^gimp_modules_unload (Gimp *gimp)$/;"	f
gimp_move_options_class_init	tools/gimpmoveoptions.c	/^gimp_move_options_class_init (GimpMoveOptionsClass *klass)$/;"	f	file:
gimp_move_options_get_property	tools/gimpmoveoptions.c	/^gimp_move_options_get_property (GObject    *object,$/;"	f	file:
gimp_move_options_gui	tools/gimpmoveoptions.c	/^gimp_move_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_move_options_init	tools/gimpmoveoptions.c	/^gimp_move_options_init (GimpMoveOptions *options)$/;"	f	file:
gimp_move_options_notify_type	tools/gimpmoveoptions.c	/^gimp_move_options_notify_type (GimpMoveOptions *move_options,$/;"	f	file:
gimp_move_options_set_property	tools/gimpmoveoptions.c	/^gimp_move_options_set_property (GObject      *object,$/;"	f	file:
gimp_move_tool_button_press	tools/gimpmovetool.c	/^gimp_move_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_move_tool_button_release	tools/gimpmovetool.c	/^gimp_move_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_move_tool_class_init	tools/gimpmovetool.c	/^gimp_move_tool_class_init (GimpMoveToolClass *klass)$/;"	f	file:
gimp_move_tool_control	tools/gimpmovetool.c	/^gimp_move_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_move_tool_cursor_update	tools/gimpmovetool.c	/^gimp_move_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_move_tool_draw	tools/gimpmovetool.c	/^gimp_move_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_move_tool_init	tools/gimpmovetool.c	/^gimp_move_tool_init (GimpMoveTool *move_tool)$/;"	f	file:
gimp_move_tool_key_press	tools/gimpmovetool.c	/^gimp_move_tool_key_press (GimpTool    *tool,$/;"	f	file:
gimp_move_tool_modifier_key	tools/gimpmovetool.c	/^gimp_move_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_move_tool_motion	tools/gimpmovetool.c	/^gimp_move_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_move_tool_oper_update	tools/gimpmovetool.c	/^gimp_move_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_move_tool_start_guide	tools/gimpmovetool.c	/^gimp_move_tool_start_guide (GimpMoveTool        *move,$/;"	f	file:
gimp_move_tool_start_hguide	tools/gimpmovetool.c	/^gimp_move_tool_start_hguide (GimpTool    *tool,$/;"	f
gimp_move_tool_start_vguide	tools/gimpmovetool.c	/^gimp_move_tool_start_vguide (GimpTool    *tool,$/;"	f
gimp_navigation_editor_button_release	display/gimpnavigationeditor.c	/^gimp_navigation_editor_button_release (GtkWidget        *widget,$/;"	f	file:
gimp_navigation_editor_class_init	display/gimpnavigationeditor.c	/^gimp_navigation_editor_class_init (GimpNavigationEditorClass *klass)$/;"	f	file:
gimp_navigation_editor_context_changed	display/gimpnavigationeditor.c	/^gimp_navigation_editor_context_changed (GimpContext          *context,$/;"	f	file:
gimp_navigation_editor_destroy	display/gimpnavigationeditor.c	/^gimp_navigation_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_navigation_editor_docked_iface_init	display/gimpnavigationeditor.c	/^gimp_navigation_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_navigation_editor_init	display/gimpnavigationeditor.c	/^gimp_navigation_editor_init (GimpNavigationEditor *editor)$/;"	f	file:
gimp_navigation_editor_marker_changed	display/gimpnavigationeditor.c	/^gimp_navigation_editor_marker_changed (GimpNavigationView   *view,$/;"	f	file:
gimp_navigation_editor_new	display/gimpnavigationeditor.c	/^gimp_navigation_editor_new (GimpMenuFactory *menu_factory)$/;"	f
gimp_navigation_editor_new_private	display/gimpnavigationeditor.c	/^gimp_navigation_editor_new_private (GimpMenuFactory  *menu_factory,$/;"	f	file:
gimp_navigation_editor_popup	display/gimpnavigationeditor.c	/^gimp_navigation_editor_popup (GimpDisplayShell *shell,$/;"	f
gimp_navigation_editor_scroll	display/gimpnavigationeditor.c	/^gimp_navigation_editor_scroll (GimpNavigationView   *view,$/;"	f	file:
gimp_navigation_editor_set_context	display/gimpnavigationeditor.c	/^gimp_navigation_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_navigation_editor_set_shell	display/gimpnavigationeditor.c	/^gimp_navigation_editor_set_shell (GimpNavigationEditor *editor,$/;"	f	file:
gimp_navigation_editor_shell_reconnect	display/gimpnavigationeditor.c	/^gimp_navigation_editor_shell_reconnect (GimpDisplayShell     *shell,$/;"	f	file:
gimp_navigation_editor_shell_scaled	display/gimpnavigationeditor.c	/^gimp_navigation_editor_shell_scaled (GimpDisplayShell     *shell,$/;"	f	file:
gimp_navigation_editor_shell_scrolled	display/gimpnavigationeditor.c	/^gimp_navigation_editor_shell_scrolled (GimpDisplayShell     *shell,$/;"	f	file:
gimp_navigation_editor_update_marker	display/gimpnavigationeditor.c	/^gimp_navigation_editor_update_marker (GimpNavigationEditor *editor)$/;"	f	file:
gimp_navigation_editor_zoom	display/gimpnavigationeditor.c	/^gimp_navigation_editor_zoom (GimpNavigationView   *view,$/;"	f	file:
gimp_navigation_editor_zoom_adj_changed	display/gimpnavigationeditor.c	/^gimp_navigation_editor_zoom_adj_changed (GtkAdjustment        *adj,$/;"	f	file:
gimp_navigation_view_button_press	widgets/gimpnavigationview.c	/^gimp_navigation_view_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_navigation_view_button_release	widgets/gimpnavigationview.c	/^gimp_navigation_view_button_release (GtkWidget      *widget,$/;"	f	file:
gimp_navigation_view_class_init	widgets/gimpnavigationview.c	/^gimp_navigation_view_class_init (GimpNavigationViewClass *klass)$/;"	f	file:
gimp_navigation_view_draw_marker	widgets/gimpnavigationview.c	/^gimp_navigation_view_draw_marker (GimpNavigationView *nav_view,$/;"	f	file:
gimp_navigation_view_expose	widgets/gimpnavigationview.c	/^gimp_navigation_view_expose (GtkWidget      *widget,$/;"	f	file:
gimp_navigation_view_grab_pointer	widgets/gimpnavigationview.c	/^gimp_navigation_view_grab_pointer (GimpNavigationView *nav_view)$/;"	f
gimp_navigation_view_init	widgets/gimpnavigationview.c	/^gimp_navigation_view_init (GimpNavigationView *view)$/;"	f	file:
gimp_navigation_view_key_press	widgets/gimpnavigationview.c	/^gimp_navigation_view_key_press (GtkWidget   *widget,$/;"	f	file:
gimp_navigation_view_motion_notify	widgets/gimpnavigationview.c	/^gimp_navigation_view_motion_notify (GtkWidget      *widget,$/;"	f	file:
gimp_navigation_view_move_to	widgets/gimpnavigationview.c	/^gimp_navigation_view_move_to (GimpNavigationView *nav_view,$/;"	f	file:
gimp_navigation_view_realize	widgets/gimpnavigationview.c	/^gimp_navigation_view_realize (GtkWidget *widget)$/;"	f	file:
gimp_navigation_view_scroll	widgets/gimpnavigationview.c	/^gimp_navigation_view_scroll (GtkWidget      *widget,$/;"	f	file:
gimp_navigation_view_set_marker	widgets/gimpnavigationview.c	/^gimp_navigation_view_set_marker (GimpNavigationView *nav_view,$/;"	f
gimp_navigation_view_size_allocate	widgets/gimpnavigationview.c	/^gimp_navigation_view_size_allocate (GtkWidget     *widget,$/;"	f	file:
gimp_navigation_view_transform	widgets/gimpnavigationview.c	/^gimp_navigation_view_transform (GimpNavigationView *nav_view)$/;"	f	file:
gimp_navigation_view_unrealize	widgets/gimpnavigationview.c	/^gimp_navigation_view_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_new	core/gimp.c	/^gimp_new (const gchar       *name,$/;"	f
gimp_new_progress	core/gimp-gui.c	/^gimp_new_progress (Gimp       *gimp,$/;"	f
gimp_number_pair_entry_history_add	tools/gimprectangleoptions.c	/^gimp_number_pair_entry_history_add (GtkWidget    *entry,$/;"	f	file:
gimp_number_pair_entry_history_select	tools/gimprectangleoptions.c	/^gimp_number_pair_entry_history_select (GtkEntryCompletion  *completion,$/;"	f	file:
gimp_object_class_init	core/gimpobject.c	/^gimp_object_class_init (GimpObjectClass *klass)$/;"	f	file:
gimp_object_dispose	core/gimpobject.c	/^gimp_object_dispose (GObject *object)$/;"	f	file:
gimp_object_filter_by_name	core/gimpcontainer-filter.c	/^gimp_object_filter_by_name (const GimpObject *object,$/;"	f	file:
gimp_object_finalize	core/gimpobject.c	/^gimp_object_finalize (GObject *object)$/;"	f	file:
gimp_object_get_memsize	core/gimpobject.c	/^gimp_object_get_memsize (GimpObject *object,$/;"	f
gimp_object_get_name	core/gimpobject.c	/^gimp_object_get_name (const GimpObject *object)$/;"	f
gimp_object_get_property	core/gimpobject.c	/^gimp_object_get_property (GObject    *object,$/;"	f	file:
gimp_object_init	core/gimpobject.c	/^gimp_object_init (GimpObject *object)$/;"	f	file:
gimp_object_name_changed	core/gimpobject.c	/^gimp_object_name_changed (GimpObject *object)$/;"	f
gimp_object_name_collate	core/gimpobject.c	/^gimp_object_name_collate (GimpObject *object1,$/;"	f
gimp_object_name_free	core/gimpobject.c	/^gimp_object_name_free (GimpObject *object)$/;"	f
gimp_object_name_normalize	core/gimpobject.c	/^gimp_object_name_normalize (GimpObject *object)$/;"	f	file:
gimp_object_real_get_memsize	core/gimpobject.c	/^gimp_object_real_get_memsize (GimpObject *object,$/;"	f	file:
gimp_object_set_name	core/gimpobject.c	/^gimp_object_set_name (GimpObject  *object,$/;"	f
gimp_object_set_name_safe	core/gimpobject.c	/^gimp_object_set_name_safe (GimpObject  *object,$/;"	f
gimp_object_set_property	core/gimpobject.c	/^gimp_object_set_property (GObject      *object,$/;"	f	file:
gimp_object_set_static_name	core/gimpobject.c	/^gimp_object_set_static_name (GimpObject  *object,$/;"	f
gimp_object_take_name	core/gimpobject.c	/^gimp_object_take_name (GimpObject *object,$/;"	f
gimp_offset_type_get_type	core/core-enums.c	/^gimp_offset_type_get_type (void)$/;"	f
gimp_open_console_window	main.c	/^gimp_open_console_window (void)$/;"	f	file:
gimp_open_console_window	main.c	107;"	d	file:
gimp_option_dump_gimprc	main.c	/^gimp_option_dump_gimprc (const gchar  *option_name,$/;"	f	file:
gimp_option_fatal_warnings	main.c	/^gimp_option_fatal_warnings (const gchar  *option_name,$/;"	f	file:
gimp_option_pdb_compat_mode	main.c	/^gimp_option_pdb_compat_mode (const gchar  *option_name,$/;"	f	file:
gimp_option_stack_trace_mode	main.c	/^gimp_option_stack_trace_mode (const gchar  *option_name,$/;"	f	file:
gimp_orientation_type_get_type	core/core-enums.c	/^gimp_orientation_type_get_type (void)$/;"	f
gimp_paint_core_cancel	paint/gimppaintcore.c	/^gimp_paint_core_cancel (GimpPaintCore *core,$/;"	f
gimp_paint_core_class_init	paint/gimppaintcore.c	/^gimp_paint_core_class_init (GimpPaintCoreClass *klass)$/;"	f	file:
gimp_paint_core_cleanup	paint/gimppaintcore.c	/^gimp_paint_core_cleanup (GimpPaintCore *core)$/;"	f
gimp_paint_core_copy_valid_tiles	paint/gimppaintcore.c	/^gimp_paint_core_copy_valid_tiles (TileManager *src_tiles,$/;"	f	file:
gimp_paint_core_finalize	paint/gimppaintcore.c	/^gimp_paint_core_finalize (GObject *object)$/;"	f	file:
gimp_paint_core_finish	paint/gimppaintcore.c	/^gimp_paint_core_finish (GimpPaintCore *core,$/;"	f
gimp_paint_core_get_orig_image	paint/gimppaintcore.c	/^gimp_paint_core_get_orig_image (GimpPaintCore *core,$/;"	f
gimp_paint_core_get_orig_proj	paint/gimppaintcore.c	/^gimp_paint_core_get_orig_proj (GimpPaintCore *core,$/;"	f
gimp_paint_core_get_paint_area	paint/gimppaintcore.c	/^gimp_paint_core_get_paint_area (GimpPaintCore    *core,$/;"	f
gimp_paint_core_get_property	paint/gimppaintcore.c	/^gimp_paint_core_get_property (GObject    *object,$/;"	f	file:
gimp_paint_core_init	paint/gimppaintcore.c	/^gimp_paint_core_init (GimpPaintCore *core)$/;"	f	file:
gimp_paint_core_interpolate	paint/gimppaintcore.c	/^gimp_paint_core_interpolate (GimpPaintCore    *core,$/;"	f
gimp_paint_core_paint	paint/gimppaintcore.c	/^gimp_paint_core_paint (GimpPaintCore    *core,$/;"	f
gimp_paint_core_paste	paint/gimppaintcore.c	/^gimp_paint_core_paste (GimpPaintCore            *core,$/;"	f
gimp_paint_core_real_get_paint_area	paint/gimppaintcore.c	/^gimp_paint_core_real_get_paint_area (GimpPaintCore    *core,$/;"	f	file:
gimp_paint_core_real_interpolate	paint/gimppaintcore.c	/^gimp_paint_core_real_interpolate (GimpPaintCore    *core,$/;"	f	file:
gimp_paint_core_real_paint	paint/gimppaintcore.c	/^gimp_paint_core_real_paint (GimpPaintCore    *core,$/;"	f	file:
gimp_paint_core_real_post_paint	paint/gimppaintcore.c	/^gimp_paint_core_real_post_paint (GimpPaintCore    *core,$/;"	f	file:
gimp_paint_core_real_pre_paint	paint/gimppaintcore.c	/^gimp_paint_core_real_pre_paint (GimpPaintCore    *core,$/;"	f	file:
gimp_paint_core_real_push_undo	paint/gimppaintcore.c	/^gimp_paint_core_real_push_undo (GimpPaintCore *core,$/;"	f	file:
gimp_paint_core_real_start	paint/gimppaintcore.c	/^gimp_paint_core_real_start (GimpPaintCore    *core,$/;"	f	file:
gimp_paint_core_replace	paint/gimppaintcore.c	/^gimp_paint_core_replace (GimpPaintCore            *core,$/;"	f
gimp_paint_core_set_property	paint/gimppaintcore.c	/^gimp_paint_core_set_property (GObject      *object,$/;"	f	file:
gimp_paint_core_start	paint/gimppaintcore.c	/^gimp_paint_core_start (GimpPaintCore     *core,$/;"	f
gimp_paint_core_stroke	paint/gimppaintcore-stroke.c	/^gimp_paint_core_stroke (GimpPaintCore    *core,$/;"	f
gimp_paint_core_stroke_boundary	paint/gimppaintcore-stroke.c	/^gimp_paint_core_stroke_boundary (GimpPaintCore    *core,$/;"	f
gimp_paint_core_stroke_vectors	paint/gimppaintcore-stroke.c	/^gimp_paint_core_stroke_vectors (GimpPaintCore    *core,$/;"	f
gimp_paint_core_undo_class_init	paint/gimppaintcoreundo.c	/^gimp_paint_core_undo_class_init (GimpPaintCoreUndoClass *klass)$/;"	f	file:
gimp_paint_core_undo_constructor	paint/gimppaintcoreundo.c	/^gimp_paint_core_undo_constructor (GType                  type,$/;"	f	file:
gimp_paint_core_undo_free	paint/gimppaintcoreundo.c	/^gimp_paint_core_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_paint_core_undo_get_property	paint/gimppaintcoreundo.c	/^gimp_paint_core_undo_get_property (GObject    *object,$/;"	f	file:
gimp_paint_core_undo_init	paint/gimppaintcoreundo.c	/^gimp_paint_core_undo_init (GimpPaintCoreUndo *undo)$/;"	f	file:
gimp_paint_core_undo_pop	paint/gimppaintcoreundo.c	/^gimp_paint_core_undo_pop (GimpUndo              *undo,$/;"	f	file:
gimp_paint_core_undo_set_property	paint/gimppaintcoreundo.c	/^gimp_paint_core_undo_set_property (GObject      *object,$/;"	f	file:
gimp_paint_core_validate_canvas_tiles	paint/gimppaintcore.c	/^gimp_paint_core_validate_canvas_tiles (GimpPaintCore *core,$/;"	f
gimp_paint_core_validate_saved_proj_tiles	paint/gimppaintcore.c	/^gimp_paint_core_validate_saved_proj_tiles (GimpPaintCore *core,$/;"	f
gimp_paint_core_validate_undo_tiles	paint/gimppaintcore.c	/^gimp_paint_core_validate_undo_tiles (GimpPaintCore *core,$/;"	f
gimp_paint_exit	paint/gimp-paint.c	/^gimp_paint_exit (Gimp *gimp)$/;"	f
gimp_paint_info_class_init	core/gimppaintinfo.c	/^gimp_paint_info_class_init (GimpPaintInfoClass *klass)$/;"	f	file:
gimp_paint_info_finalize	core/gimppaintinfo.c	/^gimp_paint_info_finalize (GObject *object)$/;"	f	file:
gimp_paint_info_get_description	core/gimppaintinfo.c	/^gimp_paint_info_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_paint_info_get_standard	core/gimppaintinfo.c	/^gimp_paint_info_get_standard (Gimp *gimp)$/;"	f
gimp_paint_info_init	core/gimppaintinfo.c	/^gimp_paint_info_init (GimpPaintInfo *paint_info)$/;"	f	file:
gimp_paint_info_new	core/gimppaintinfo.c	/^gimp_paint_info_new (Gimp        *gimp,$/;"	f
gimp_paint_info_set_standard	core/gimppaintinfo.c	/^gimp_paint_info_set_standard (Gimp          *gimp,$/;"	f
gimp_paint_init	paint/gimp-paint.c	/^gimp_paint_init (Gimp *gimp)$/;"	f
gimp_paint_mode_menu_new	widgets/gimpwidgets-constructors.c	/^gimp_paint_mode_menu_new (gboolean with_behind_mode,$/;"	f
gimp_paint_mode_menu_separator_func	widgets/gimpwidgets-constructors.c	/^gimp_paint_mode_menu_separator_func (GtkTreeModel *model,$/;"	f	file:
gimp_paint_options_class_init	paint/gimppaintoptions.c	/^gimp_paint_options_class_init (GimpPaintOptionsClass *klass)$/;"	f	file:
gimp_paint_options_finalize	paint/gimppaintoptions.c	/^gimp_paint_options_finalize (GObject *object)$/;"	f	file:
gimp_paint_options_get_brush_mode	paint/gimppaintoptions.c	/^gimp_paint_options_get_brush_mode (GimpPaintOptions *paint_options)$/;"	f
gimp_paint_options_get_fade	paint/gimppaintoptions.c	/^gimp_paint_options_get_fade (GimpPaintOptions *paint_options,$/;"	f
gimp_paint_options_get_gradient_color	paint/gimppaintoptions.c	/^gimp_paint_options_get_gradient_color (GimpPaintOptions *paint_options,$/;"	f
gimp_paint_options_get_jitter	paint/gimppaintoptions.c	/^gimp_paint_options_get_jitter (GimpPaintOptions *paint_options,$/;"	f
gimp_paint_options_get_property	paint/gimppaintoptions.c	/^gimp_paint_options_get_property (GObject    *object,$/;"	f	file:
gimp_paint_options_gui	tools/gimppaintoptions-gui.c	/^gimp_paint_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_paint_options_init	paint/gimppaintoptions.c	/^gimp_paint_options_init (GimpPaintOptions *options)$/;"	f	file:
gimp_paint_options_new	paint/gimppaintoptions.c	/^gimp_paint_options_new (GimpPaintInfo *paint_info)$/;"	f
gimp_paint_options_notify	paint/gimppaintoptions.c	/^gimp_paint_options_notify (GObject    *object,$/;"	f	file:
gimp_paint_options_set_property	paint/gimppaintoptions.c	/^gimp_paint_options_set_property (GObject      *object,$/;"	f	file:
gimp_paint_register	paint/gimp-paint.c	/^gimp_paint_register (Gimp        *gimp,$/;"	f	file:
gimp_paint_tool_button_press	tools/gimppainttool.c	/^gimp_paint_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_paint_tool_button_release	tools/gimppainttool.c	/^gimp_paint_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_paint_tool_class_init	tools/gimppainttool.c	/^gimp_paint_tool_class_init (GimpPaintToolClass *klass)$/;"	f	file:
gimp_paint_tool_constructor	tools/gimppainttool.c	/^gimp_paint_tool_constructor (GType                  type,$/;"	f	file:
gimp_paint_tool_control	tools/gimppainttool.c	/^gimp_paint_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_paint_tool_draw	tools/gimppainttool.c	/^gimp_paint_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_paint_tool_enable_color_picker	tools/gimppainttool.c	/^gimp_paint_tool_enable_color_picker (GimpPaintTool     *tool,$/;"	f
gimp_paint_tool_finalize	tools/gimppainttool.c	/^gimp_paint_tool_finalize (GObject *object)$/;"	f	file:
gimp_paint_tool_init	tools/gimppainttool.c	/^gimp_paint_tool_init (GimpPaintTool *paint_tool)$/;"	f	file:
gimp_paint_tool_modifier_key	tools/gimppainttool.c	/^gimp_paint_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_paint_tool_motion	tools/gimppainttool.c	/^gimp_paint_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_paint_tool_oper_update	tools/gimppainttool.c	/^gimp_paint_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_paint_tool_round_line	tools/gimppainttool.c	/^gimp_paint_tool_round_line (GimpPaintCore   *core,$/;"	f	file:
gimp_paintbrush_class_init	paint/gimppaintbrush.c	/^gimp_paintbrush_class_init (GimpPaintbrushClass *klass)$/;"	f	file:
gimp_paintbrush_init	paint/gimppaintbrush.c	/^gimp_paintbrush_init (GimpPaintbrush *paintbrush)$/;"	f	file:
gimp_paintbrush_paint	paint/gimppaintbrush.c	/^gimp_paintbrush_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_paintbrush_tool_class_init	tools/gimppaintbrushtool.c	/^gimp_paintbrush_tool_class_init (GimpPaintbrushToolClass *klass)$/;"	f	file:
gimp_paintbrush_tool_init	tools/gimppaintbrushtool.c	/^gimp_paintbrush_tool_init (GimpPaintbrushTool *paintbrush)$/;"	f	file:
gimp_palette_add_entry	core/gimppalette.c	/^gimp_palette_add_entry (GimpPalette   *palette,$/;"	f
gimp_palette_box_new	widgets/gimpviewablebox.c	/^gimp_palette_box_new (GimpContainer *container,$/;"	f
gimp_palette_class_init	core/gimppalette.c	/^gimp_palette_class_init (GimpPaletteClass *klass)$/;"	f	file:
gimp_palette_delete_entry	core/gimppalette.c	/^gimp_palette_delete_entry (GimpPalette      *palette,$/;"	f
gimp_palette_duplicate	core/gimppalette.c	/^gimp_palette_duplicate (GimpData *data)$/;"	f	file:
gimp_palette_editor_class_init	widgets/gimppaletteeditor.c	/^gimp_palette_editor_class_init (GimpPaletteEditorClass *klass)$/;"	f	file:
gimp_palette_editor_constructor	widgets/gimppaletteeditor.c	/^gimp_palette_editor_constructor (GType                  type,$/;"	f	file:
gimp_palette_editor_destroy	widgets/gimppaletteeditor.c	/^gimp_palette_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_palette_editor_docked_iface_init	widgets/gimppaletteeditor.c	/^gimp_palette_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_palette_editor_get_aux_info	widgets/gimppaletteeditor.c	/^gimp_palette_editor_get_aux_info (GimpDocked *docked)$/;"	f	file:
gimp_palette_editor_get_index	widgets/gimppaletteeditor.c	/^gimp_palette_editor_get_index (GimpPaletteEditor *editor,$/;"	f
gimp_palette_editor_init	widgets/gimppaletteeditor.c	/^gimp_palette_editor_init (GimpPaletteEditor *editor)$/;"	f	file:
gimp_palette_editor_max_index	widgets/gimppaletteeditor.c	/^gimp_palette_editor_max_index (GimpPaletteEditor *editor)$/;"	f
gimp_palette_editor_new	widgets/gimppaletteeditor.c	/^gimp_palette_editor_new (GimpContext     *context,$/;"	f
gimp_palette_editor_pick_color	widgets/gimppaletteeditor.c	/^gimp_palette_editor_pick_color (GimpPaletteEditor  *editor,$/;"	f
gimp_palette_editor_set_aux_info	widgets/gimppaletteeditor.c	/^gimp_palette_editor_set_aux_info (GimpDocked *docked,$/;"	f	file:
gimp_palette_editor_set_context	widgets/gimppaletteeditor.c	/^gimp_palette_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_palette_editor_set_data	widgets/gimppaletteeditor.c	/^gimp_palette_editor_set_data (GimpDataEditor *editor,$/;"	f	file:
gimp_palette_editor_set_index	widgets/gimppaletteeditor.c	/^gimp_palette_editor_set_index (GimpPaletteEditor *editor,$/;"	f
gimp_palette_editor_unmap	widgets/gimppaletteeditor.c	/^gimp_palette_editor_unmap (GtkWidget *widget)$/;"	f	file:
gimp_palette_editor_zoom	widgets/gimppaletteeditor.c	/^gimp_palette_editor_zoom (GimpPaletteEditor  *editor,$/;"	f
gimp_palette_entry_free	core/gimppalette.c	/^gimp_palette_entry_free (GimpPaletteEntry *entry)$/;"	f	file:
gimp_palette_entry_get_memsize	core/gimppalette.c	/^gimp_palette_entry_get_memsize (GimpPaletteEntry *entry,$/;"	f	file:
gimp_palette_finalize	core/gimppalette.c	/^gimp_palette_finalize (GObject *object)$/;"	f	file:
gimp_palette_find_entry	core/gimppalette.c	/^gimp_palette_find_entry (GimpPalette      *palette,$/;"	f
gimp_palette_get_columns	core/gimppalette.c	/^gimp_palette_get_columns  (GimpPalette *palette)$/;"	f
gimp_palette_get_description	core/gimppalette.c	/^gimp_palette_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_palette_get_extension	core/gimppalette.c	/^gimp_palette_get_extension (GimpData *data)$/;"	f	file:
gimp_palette_get_memsize	core/gimppalette.c	/^gimp_palette_get_memsize (GimpObject *object,$/;"	f	file:
gimp_palette_get_new_preview	core/gimppalette.c	/^gimp_palette_get_new_preview (GimpViewable *viewable,$/;"	f	file:
gimp_palette_get_popup_size	core/gimppalette.c	/^gimp_palette_get_popup_size (GimpViewable *viewable,$/;"	f	file:
gimp_palette_get_preview_size	core/gimppalette.c	/^gimp_palette_get_preview_size (GimpViewable *viewable,$/;"	f	file:
gimp_palette_get_standard	core/gimppalette.c	/^gimp_palette_get_standard (void)$/;"	f
gimp_palette_import_create_image_palette	core/gimppalette-import.c	/^gimp_palette_import_create_image_palette (gpointer data,$/;"	f	file:
gimp_palette_import_create_list	core/gimppalette-import.c	/^gimp_palette_import_create_list (gpointer key,$/;"	f	file:
gimp_palette_import_extract	core/gimppalette-import.c	/^gimp_palette_import_extract (GimpImage     *image,$/;"	f	file:
gimp_palette_import_from_drawable	core/gimppalette-import.c	/^gimp_palette_import_from_drawable (GimpDrawable *drawable,$/;"	f
gimp_palette_import_from_file	core/gimppalette-import.c	/^gimp_palette_import_from_file (const gchar  *filename,$/;"	f
gimp_palette_import_from_gradient	core/gimppalette-import.c	/^gimp_palette_import_from_gradient (GimpGradient *gradient,$/;"	f
gimp_palette_import_from_image	core/gimppalette-import.c	/^gimp_palette_import_from_image (GimpImage   *image,$/;"	f
gimp_palette_import_from_indexed_image	core/gimppalette-import.c	/^gimp_palette_import_from_indexed_image (GimpImage   *image,$/;"	f
gimp_palette_import_make_palette	core/gimppalette-import.c	/^gimp_palette_import_make_palette (GHashTable  *table,$/;"	f	file:
gimp_palette_import_sort_colors	core/gimppalette-import.c	/^gimp_palette_import_sort_colors (gconstpointer a,$/;"	f	file:
gimp_palette_import_store_colors	core/gimppalette-import.c	/^gimp_palette_import_store_colors (GHashTable *table,$/;"	f	file:
gimp_palette_init	core/gimppalette.c	/^gimp_palette_init (GimpPalette *palette)$/;"	f	file:
gimp_palette_load	core/gimppalette-load.c	/^gimp_palette_load (const gchar  *filename,$/;"	f
gimp_palette_load_aco	core/gimppalette-load.c	/^gimp_palette_load_aco (const gchar  *filename,$/;"	f
gimp_palette_load_act	core/gimppalette-load.c	/^gimp_palette_load_act (const gchar  *filename,$/;"	f
gimp_palette_load_detect_format	core/gimppalette-load.c	/^gimp_palette_load_detect_format (const gchar *filename)$/;"	f
gimp_palette_load_psp	core/gimppalette-load.c	/^gimp_palette_load_psp (const gchar  *filename,$/;"	f
gimp_palette_load_riff	core/gimppalette-load.c	/^gimp_palette_load_riff (const gchar  *filename,$/;"	f
gimp_palette_new	core/gimppalette.c	/^gimp_palette_new (const gchar *name)$/;"	f
gimp_palette_save	core/gimppalette-save.c	/^gimp_palette_save (GimpData  *data,$/;"	f
gimp_palette_select_class_init	widgets/gimppaletteselect.c	/^gimp_palette_select_class_init (GimpPaletteSelectClass *klass)$/;"	f	file:
gimp_palette_select_constructor	widgets/gimppaletteselect.c	/^gimp_palette_select_constructor (GType                  type,$/;"	f	file:
gimp_palette_select_init	widgets/gimppaletteselect.c	/^gimp_palette_select_init (GimpPaletteSelect *dialog)$/;"	f	file:
gimp_palette_select_run_callback	widgets/gimppaletteselect.c	/^gimp_palette_select_run_callback (GimpPdbDialog *dialog,$/;"	f	file:
gimp_palette_set_columns	core/gimppalette.c	/^gimp_palette_set_columns (GimpPalette *palette,$/;"	f
gimp_palette_view_button_press	widgets/gimppaletteview.c	/^gimp_palette_view_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_palette_view_class_init	widgets/gimppaletteview.c	/^gimp_palette_view_class_init (GimpPaletteViewClass *klass)$/;"	f	file:
gimp_palette_view_drag_color	widgets/gimppaletteview.c	/^gimp_palette_view_drag_color (GtkWidget *widget,$/;"	f	file:
gimp_palette_view_draw_selected	widgets/gimppaletteview.c	/^gimp_palette_view_draw_selected (GimpPaletteView *pal_view,$/;"	f	file:
gimp_palette_view_drop_color	widgets/gimppaletteview.c	/^gimp_palette_view_drop_color (GtkWidget     *widget,$/;"	f	file:
gimp_palette_view_expose	widgets/gimppaletteview.c	/^gimp_palette_view_expose (GtkWidget      *widget,$/;"	f	file:
gimp_palette_view_expose_entry	widgets/gimppaletteview.c	/^gimp_palette_view_expose_entry (GimpPaletteView  *view,$/;"	f	file:
gimp_palette_view_find_entry	widgets/gimppaletteview.c	/^gimp_palette_view_find_entry (GimpPaletteView *view,$/;"	f	file:
gimp_palette_view_focus	widgets/gimppaletteview.c	/^gimp_palette_view_focus (GtkWidget        *widget,$/;"	f	file:
gimp_palette_view_init	widgets/gimppaletteview.c	/^gimp_palette_view_init (GimpPaletteView *view)$/;"	f	file:
gimp_palette_view_invalidate	widgets/gimppaletteview.c	/^gimp_palette_view_invalidate (GimpPalette     *palette,$/;"	f	file:
gimp_palette_view_key_press	widgets/gimppaletteview.c	/^gimp_palette_view_key_press (GtkWidget   *widget,$/;"	f	file:
gimp_palette_view_realize	widgets/gimppaletteview.c	/^gimp_palette_view_realize (GtkWidget *widget)$/;"	f	file:
gimp_palette_view_select_entry	widgets/gimppaletteview.c	/^gimp_palette_view_select_entry (GimpPaletteView  *view,$/;"	f
gimp_palette_view_set_viewable	widgets/gimppaletteview.c	/^gimp_palette_view_set_viewable (GimpView     *view,$/;"	f	file:
gimp_palette_view_unrealize	widgets/gimppaletteview.c	/^gimp_palette_view_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_param_array_class_init	core/gimpparamspecs.c	/^gimp_param_array_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_array_get_type	core/gimpparamspecs.c	/^gimp_param_array_get_type (void)$/;"	f
gimp_param_array_init	core/gimpparamspecs.c	/^gimp_param_array_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_array_validate	core/gimpparamspecs.c	/^gimp_param_array_validate (GParamSpec *pspec,$/;"	f	file:
gimp_param_array_values_cmp	core/gimpparamspecs.c	/^gimp_param_array_values_cmp (GParamSpec   *pspec,$/;"	f	file:
gimp_param_channel_id_class_init	core/gimpparamspecs.c	/^gimp_param_channel_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_channel_id_get_type	core/gimpparamspecs.c	/^gimp_param_channel_id_get_type (void)$/;"	f
gimp_param_channel_id_init	core/gimpparamspecs.c	/^gimp_param_channel_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_display_id_class_init	core/gimpparamspecs.c	/^gimp_param_display_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_display_id_get_type	core/gimpparamspecs.c	/^gimp_param_display_id_get_type (void)$/;"	f
gimp_param_display_id_init	core/gimpparamspecs.c	/^gimp_param_display_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_display_id_set_default	core/gimpparamspecs.c	/^gimp_param_display_id_set_default (GParamSpec *pspec,$/;"	f	file:
gimp_param_display_id_validate	core/gimpparamspecs.c	/^gimp_param_display_id_validate (GParamSpec *pspec,$/;"	f	file:
gimp_param_display_id_values_cmp	core/gimpparamspecs.c	/^gimp_param_display_id_values_cmp (GParamSpec   *pspec,$/;"	f	file:
gimp_param_drawable_id_class_init	core/gimpparamspecs.c	/^gimp_param_drawable_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_drawable_id_get_type	core/gimpparamspecs.c	/^gimp_param_drawable_id_get_type (void)$/;"	f
gimp_param_drawable_id_init	core/gimpparamspecs.c	/^gimp_param_drawable_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_enum_class_init	core/gimpparamspecs.c	/^gimp_param_enum_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_enum_finalize	core/gimpparamspecs.c	/^gimp_param_enum_finalize (GParamSpec *pspec)$/;"	f	file:
gimp_param_enum_get_type	core/gimpparamspecs.c	/^gimp_param_enum_get_type (void)$/;"	f
gimp_param_enum_init	core/gimpparamspecs.c	/^gimp_param_enum_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_enum_validate	core/gimpparamspecs.c	/^gimp_param_enum_validate (GParamSpec *pspec,$/;"	f	file:
gimp_param_float_array_class_init	core/gimpparamspecs.c	/^gimp_param_float_array_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_float_array_get_type	core/gimpparamspecs.c	/^gimp_param_float_array_get_type (void)$/;"	f
gimp_param_float_array_init	core/gimpparamspecs.c	/^gimp_param_float_array_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_image_id_class_init	core/gimpparamspecs.c	/^gimp_param_image_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_image_id_get_type	core/gimpparamspecs.c	/^gimp_param_image_id_get_type (void)$/;"	f
gimp_param_image_id_init	core/gimpparamspecs.c	/^gimp_param_image_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_image_id_set_default	core/gimpparamspecs.c	/^gimp_param_image_id_set_default (GParamSpec *pspec,$/;"	f	file:
gimp_param_image_id_validate	core/gimpparamspecs.c	/^gimp_param_image_id_validate (GParamSpec *pspec,$/;"	f	file:
gimp_param_image_id_values_cmp	core/gimpparamspecs.c	/^gimp_param_image_id_values_cmp (GParamSpec   *pspec,$/;"	f	file:
gimp_param_int16_array_class_init	core/gimpparamspecs.c	/^gimp_param_int16_array_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_int16_array_get_type	core/gimpparamspecs.c	/^gimp_param_int16_array_get_type (void)$/;"	f
gimp_param_int16_array_init	core/gimpparamspecs.c	/^gimp_param_int16_array_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_int16_class_init	core/gimpparamspecs.c	/^gimp_param_int16_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_int16_get_type	core/gimpparamspecs.c	/^gimp_param_int16_get_type (void)$/;"	f
gimp_param_int16_init	core/gimpparamspecs.c	/^gimp_param_int16_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_int32_array_class_init	core/gimpparamspecs.c	/^gimp_param_int32_array_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_int32_array_get_type	core/gimpparamspecs.c	/^gimp_param_int32_array_get_type (void)$/;"	f
gimp_param_int32_array_init	core/gimpparamspecs.c	/^gimp_param_int32_array_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_int32_class_init	core/gimpparamspecs.c	/^gimp_param_int32_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_int32_get_type	core/gimpparamspecs.c	/^gimp_param_int32_get_type (void)$/;"	f
gimp_param_int32_init	core/gimpparamspecs.c	/^gimp_param_int32_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_int8_array_class_init	core/gimpparamspecs.c	/^gimp_param_int8_array_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_int8_array_get_type	core/gimpparamspecs.c	/^gimp_param_int8_array_get_type (void)$/;"	f
gimp_param_int8_array_init	core/gimpparamspecs.c	/^gimp_param_int8_array_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_int8_class_init	core/gimpparamspecs.c	/^gimp_param_int8_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_int8_get_type	core/gimpparamspecs.c	/^gimp_param_int8_get_type (void)$/;"	f
gimp_param_int8_init	core/gimpparamspecs.c	/^gimp_param_int8_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_item_id_class_init	core/gimpparamspecs.c	/^gimp_param_item_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_item_id_get_type	core/gimpparamspecs.c	/^gimp_param_item_id_get_type (void)$/;"	f
gimp_param_item_id_init	core/gimpparamspecs.c	/^gimp_param_item_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_item_id_set_default	core/gimpparamspecs.c	/^gimp_param_item_id_set_default (GParamSpec *pspec,$/;"	f	file:
gimp_param_item_id_validate	core/gimpparamspecs.c	/^gimp_param_item_id_validate (GParamSpec *pspec,$/;"	f	file:
gimp_param_item_id_values_cmp	core/gimpparamspecs.c	/^gimp_param_item_id_values_cmp (GParamSpec   *pspec,$/;"	f	file:
gimp_param_layer_id_class_init	core/gimpparamspecs.c	/^gimp_param_layer_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_layer_id_get_type	core/gimpparamspecs.c	/^gimp_param_layer_id_get_type (void)$/;"	f
gimp_param_layer_id_init	core/gimpparamspecs.c	/^gimp_param_layer_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_layer_mask_id_class_init	core/gimpparamspecs.c	/^gimp_param_layer_mask_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_layer_mask_id_get_type	core/gimpparamspecs.c	/^gimp_param_layer_mask_id_get_type (void)$/;"	f
gimp_param_layer_mask_id_init	core/gimpparamspecs.c	/^gimp_param_layer_mask_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_selection_id_class_init	core/gimpparamspecs.c	/^gimp_param_selection_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_selection_id_get_type	core/gimpparamspecs.c	/^gimp_param_selection_id_get_type (void)$/;"	f
gimp_param_selection_id_init	core/gimpparamspecs.c	/^gimp_param_selection_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_spec_array	core/gimpparamspecs.c	/^gimp_param_spec_array (const gchar *name,$/;"	f
gimp_param_spec_boolean_desc	core/gimpparamspecs-desc.c	/^gimp_param_spec_boolean_desc (GParamSpec *pspec)$/;"	f	file:
gimp_param_spec_channel_id	core/gimpparamspecs.c	/^gimp_param_spec_channel_id (const gchar *name,$/;"	f
gimp_param_spec_display_id	core/gimpparamspecs.c	/^gimp_param_spec_display_id (const gchar *name,$/;"	f
gimp_param_spec_double_desc	core/gimpparamspecs-desc.c	/^gimp_param_spec_double_desc (GParamSpec *pspec)$/;"	f	file:
gimp_param_spec_drawable_id	core/gimpparamspecs.c	/^gimp_param_spec_drawable_id (const gchar *name,$/;"	f
gimp_param_spec_enum	core/gimpparamspecs.c	/^gimp_param_spec_enum (const gchar *name,$/;"	f
gimp_param_spec_enum_desc	core/gimpparamspecs-desc.c	/^gimp_param_spec_enum_desc (GParamSpec *pspec)$/;"	f	file:
gimp_param_spec_enum_exclude_value	core/gimpparamspecs.c	/^gimp_param_spec_enum_exclude_value (GimpParamSpecEnum *espec,$/;"	f
gimp_param_spec_float_array	core/gimpparamspecs.c	/^gimp_param_spec_float_array (const gchar *name,$/;"	f
gimp_param_spec_get_blurb	core/gimpparamspecs-desc.c	/^gimp_param_spec_get_blurb (GParamSpec *pspec)$/;"	f	file:
gimp_param_spec_get_desc	core/gimpparamspecs-desc.c	/^gimp_param_spec_get_desc (GParamSpec *pspec)$/;"	f
gimp_param_spec_image_id	core/gimpparamspecs.c	/^gimp_param_spec_image_id (const gchar *name,$/;"	f
gimp_param_spec_int16	core/gimpparamspecs.c	/^gimp_param_spec_int16 (const gchar *name,$/;"	f
gimp_param_spec_int16_array	core/gimpparamspecs.c	/^gimp_param_spec_int16_array (const gchar *name,$/;"	f
gimp_param_spec_int32	core/gimpparamspecs.c	/^gimp_param_spec_int32 (const gchar *name,$/;"	f
gimp_param_spec_int32_array	core/gimpparamspecs.c	/^gimp_param_spec_int32_array (const gchar *name,$/;"	f
gimp_param_spec_int32_desc	core/gimpparamspecs-desc.c	/^gimp_param_spec_int32_desc (GParamSpec *pspec)$/;"	f	file:
gimp_param_spec_int8	core/gimpparamspecs.c	/^gimp_param_spec_int8 (const gchar *name,$/;"	f
gimp_param_spec_int8_array	core/gimpparamspecs.c	/^gimp_param_spec_int8_array (const gchar *name,$/;"	f
gimp_param_spec_item_id	core/gimpparamspecs.c	/^gimp_param_spec_item_id (const gchar *name,$/;"	f
gimp_param_spec_layer_id	core/gimpparamspecs.c	/^gimp_param_spec_layer_id (const gchar *name,$/;"	f
gimp_param_spec_layer_mask_id	core/gimpparamspecs.c	/^gimp_param_spec_layer_mask_id (const gchar *name,$/;"	f
gimp_param_spec_selection_id	core/gimpparamspecs.c	/^gimp_param_spec_selection_id (const gchar *name,$/;"	f
gimp_param_spec_string	core/gimpparamspecs.c	/^gimp_param_spec_string (const gchar *name,$/;"	f
gimp_param_spec_string_array	core/gimpparamspecs.c	/^gimp_param_spec_string_array (const gchar *name,$/;"	f
gimp_param_spec_vectors_id	core/gimpparamspecs.c	/^gimp_param_spec_vectors_id (const gchar *name,$/;"	f
gimp_param_string_array_class_init	core/gimpparamspecs.c	/^gimp_param_string_array_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_string_array_get_type	core/gimpparamspecs.c	/^gimp_param_string_array_get_type (void)$/;"	f
gimp_param_string_array_init	core/gimpparamspecs.c	/^gimp_param_string_array_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_string_array_validate	core/gimpparamspecs.c	/^gimp_param_string_array_validate (GParamSpec *pspec,$/;"	f	file:
gimp_param_string_array_values_cmp	core/gimpparamspecs.c	/^gimp_param_string_array_values_cmp (GParamSpec   *pspec,$/;"	f	file:
gimp_param_string_class_init	core/gimpparamspecs.c	/^gimp_param_string_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_string_get_type	core/gimpparamspecs.c	/^gimp_param_string_get_type (void)$/;"	f
gimp_param_string_init	core/gimpparamspecs.c	/^gimp_param_string_init (GParamSpec *pspec)$/;"	f	file:
gimp_param_string_validate	core/gimpparamspecs.c	/^gimp_param_string_validate (GParamSpec *pspec,$/;"	f	file:
gimp_param_vectors_id_class_init	core/gimpparamspecs.c	/^gimp_param_vectors_id_class_init (GParamSpecClass *klass)$/;"	f	file:
gimp_param_vectors_id_get_type	core/gimpparamspecs.c	/^gimp_param_vectors_id_get_type (void)$/;"	f
gimp_param_vectors_id_init	core/gimpparamspecs.c	/^gimp_param_vectors_id_init (GParamSpec *pspec)$/;"	f	file:
gimp_parameters_append	core/gimp-utils.c	/^gimp_parameters_append (GType       object_type,$/;"	f
gimp_parameters_append_valist	core/gimp-utils.c	/^gimp_parameters_append_valist (GType       object_type,$/;"	f
gimp_parameters_free	core/gimp-utils.c	/^gimp_parameters_free (GParameter *params,$/;"	f
gimp_parasite_attach	core/gimp-parasites.c	/^gimp_parasite_attach (Gimp               *gimp,$/;"	f
gimp_parasite_detach	core/gimp-parasites.c	/^gimp_parasite_detach (Gimp        *gimp,$/;"	f
gimp_parasite_find	core/gimp-parasites.c	/^gimp_parasite_find (Gimp        *gimp,$/;"	f
gimp_parasite_get_memsize	core/gimp-utils.c	/^gimp_parasite_get_memsize (GimpParasite *parasite,$/;"	f
gimp_parasite_list	core/gimp-parasites.c	/^gimp_parasite_list (Gimp *gimp,$/;"	f
gimp_parasite_list_add	core/gimpparasitelist.c	/^gimp_parasite_list_add (GimpParasiteList   *list,$/;"	f
gimp_parasite_list_class_init	core/gimpparasitelist.c	/^gimp_parasite_list_class_init (GimpParasiteListClass *klass)$/;"	f	file:
gimp_parasite_list_config_iface_init	core/gimpparasitelist.c	/^gimp_parasite_list_config_iface_init (gpointer  iface,$/;"	f	file:
gimp_parasite_list_copy	core/gimpparasitelist.c	/^gimp_parasite_list_copy (const GimpParasiteList *list)$/;"	f
gimp_parasite_list_deserialize	core/gimpparasitelist.c	/^gimp_parasite_list_deserialize (GimpConfig *list,$/;"	f	file:
gimp_parasite_list_finalize	core/gimpparasitelist.c	/^gimp_parasite_list_finalize (GObject *object)$/;"	f	file:
gimp_parasite_list_find	core/gimpparasitelist.c	/^gimp_parasite_list_find (GimpParasiteList *list,$/;"	f
gimp_parasite_list_foreach	core/gimpparasitelist.c	/^gimp_parasite_list_foreach (GimpParasiteList *list,$/;"	f
gimp_parasite_list_get_memsize	core/gimpparasitelist.c	/^gimp_parasite_list_get_memsize (GimpObject *object,$/;"	f	file:
gimp_parasite_list_init	core/gimpparasitelist.c	/^gimp_parasite_list_init (GimpParasiteList *list)$/;"	f	file:
gimp_parasite_list_length	core/gimpparasitelist.c	/^gimp_parasite_list_length (GimpParasiteList *list)$/;"	f
gimp_parasite_list_new	core/gimpparasitelist.c	/^gimp_parasite_list_new (void)$/;"	f
gimp_parasite_list_persistent_length	core/gimpparasitelist.c	/^gimp_parasite_list_persistent_length (GimpParasiteList *list)$/;"	f
gimp_parasite_list_remove	core/gimpparasitelist.c	/^gimp_parasite_list_remove (GimpParasiteList *list,$/;"	f
gimp_parasite_list_serialize	core/gimpparasitelist.c	/^gimp_parasite_list_serialize (GimpConfig       *list,$/;"	f	file:
gimp_parasite_shift_parent	core/gimp-parasites.c	/^gimp_parasite_shift_parent (GimpParasite *parasite)$/;"	f
gimp_parasiterc_load	core/gimp-parasites.c	/^gimp_parasiterc_load (Gimp *gimp)$/;"	f
gimp_parasiterc_save	core/gimp-parasites.c	/^gimp_parasiterc_save (Gimp *gimp)$/;"	f
gimp_pattern_box_new	widgets/gimpviewablebox.c	/^gimp_pattern_box_new (GimpContainer *container,$/;"	f
gimp_pattern_class_init	core/gimppattern.c	/^gimp_pattern_class_init (GimpPatternClass *klass)$/;"	f	file:
gimp_pattern_clipboard_buffer_changed	core/gimppatternclipboard.c	/^gimp_pattern_clipboard_buffer_changed (Gimp        *gimp,$/;"	f	file:
gimp_pattern_clipboard_class_init	core/gimppatternclipboard.c	/^gimp_pattern_clipboard_class_init (GimpPatternClipboardClass *klass)$/;"	f	file:
gimp_pattern_clipboard_constructor	core/gimppatternclipboard.c	/^gimp_pattern_clipboard_constructor (GType                  type,$/;"	f	file:
gimp_pattern_clipboard_get_property	core/gimppatternclipboard.c	/^gimp_pattern_clipboard_get_property (GObject    *object,$/;"	f	file:
gimp_pattern_clipboard_init	core/gimppatternclipboard.c	/^gimp_pattern_clipboard_init (GimpPatternClipboard *pattern)$/;"	f	file:
gimp_pattern_clipboard_new	core/gimppatternclipboard.c	/^gimp_pattern_clipboard_new (Gimp *gimp)$/;"	f
gimp_pattern_clipboard_set_property	core/gimppatternclipboard.c	/^gimp_pattern_clipboard_set_property (GObject      *object,$/;"	f	file:
gimp_pattern_duplicate	core/gimppattern.c	/^gimp_pattern_duplicate (GimpData *data)$/;"	f	file:
gimp_pattern_factory_view_class_init	widgets/gimppatternfactoryview.c	/^gimp_pattern_factory_view_class_init (GimpPatternFactoryViewClass *klass)$/;"	f	file:
gimp_pattern_factory_view_init	widgets/gimppatternfactoryview.c	/^gimp_pattern_factory_view_init (GimpPatternFactoryView *view)$/;"	f	file:
gimp_pattern_factory_view_new	widgets/gimppatternfactoryview.c	/^gimp_pattern_factory_view_new (GimpViewType      view_type,$/;"	f
gimp_pattern_finalize	core/gimppattern.c	/^gimp_pattern_finalize (GObject *object)$/;"	f	file:
gimp_pattern_get_description	core/gimppattern.c	/^gimp_pattern_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_pattern_get_extension	core/gimppattern.c	/^gimp_pattern_get_extension (GimpData *data)$/;"	f	file:
gimp_pattern_get_mask	core/gimppattern.c	/^gimp_pattern_get_mask (const GimpPattern *pattern)$/;"	f
gimp_pattern_get_memsize	core/gimppattern.c	/^gimp_pattern_get_memsize (GimpObject *object,$/;"	f	file:
gimp_pattern_get_new_preview	core/gimppattern.c	/^gimp_pattern_get_new_preview (GimpViewable *viewable,$/;"	f	file:
gimp_pattern_get_size	core/gimppattern.c	/^gimp_pattern_get_size (GimpViewable *viewable,$/;"	f	file:
gimp_pattern_get_standard	core/gimppattern.c	/^gimp_pattern_get_standard (void)$/;"	f
gimp_pattern_init	core/gimppattern.c	/^gimp_pattern_init (GimpPattern *pattern)$/;"	f	file:
gimp_pattern_load	core/gimppattern-load.c	/^gimp_pattern_load (const gchar  *filename,$/;"	f
gimp_pattern_load_pixbuf	core/gimppattern-load.c	/^gimp_pattern_load_pixbuf (const gchar  *filename,$/;"	f
gimp_pattern_new	core/gimppattern.c	/^gimp_pattern_new (const gchar *name)$/;"	f
gimp_pattern_select_class_init	widgets/gimppatternselect.c	/^gimp_pattern_select_class_init (GimpPatternSelectClass *klass)$/;"	f	file:
gimp_pattern_select_constructor	widgets/gimppatternselect.c	/^gimp_pattern_select_constructor (GType                  type,$/;"	f	file:
gimp_pattern_select_init	widgets/gimppatternselect.c	/^gimp_pattern_select_init (GimpPatternSelect *select)$/;"	f	file:
gimp_pattern_select_run_callback	widgets/gimppatternselect.c	/^gimp_pattern_select_run_callback (GimpPdbDialog *dialog,$/;"	f	file:
gimp_pdb_class_init	pdb/gimppdb.c	/^gimp_pdb_class_init (GimpPDBClass *klass)$/;"	f	file:
gimp_pdb_compat_arg_type_from_gtype	pdb/gimp-pdb-compat.c	/^gimp_pdb_compat_arg_type_from_gtype (GType type)$/;"	f
gimp_pdb_compat_arg_type_to_gtype	pdb/gimp-pdb-compat.c	/^gimp_pdb_compat_arg_type_to_gtype (GimpPDBArgType  type)$/;"	f
gimp_pdb_compat_arg_type_to_string	pdb/gimp-pdb-compat.c	/^gimp_pdb_compat_arg_type_to_string (GimpPDBArgType type)$/;"	f
gimp_pdb_compat_param_spec	pdb/gimp-pdb-compat.c	/^gimp_pdb_compat_param_spec (Gimp           *gimp,$/;"	f
gimp_pdb_compat_procs_register	pdb/gimp-pdb-compat.c	/^gimp_pdb_compat_procs_register (GimpPDB           *pdb,$/;"	f
gimp_pdb_dialog_class_init	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_class_init (GimpPdbDialogClass *klass)$/;"	f	file:
gimp_pdb_dialog_close	core/gimp-gui.c	/^gimp_pdb_dialog_close (Gimp          *gimp,$/;"	f
gimp_pdb_dialog_constructor	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_constructor (GType                  type,$/;"	f	file:
gimp_pdb_dialog_context_changed	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_context_changed (GimpContext   *context,$/;"	f	file:
gimp_pdb_dialog_destroy	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_destroy (GtkObject *object)$/;"	f	file:
gimp_pdb_dialog_dispose	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_dispose (GObject *object)$/;"	f	file:
gimp_pdb_dialog_get_by_callback	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_get_by_callback (GimpPdbDialogClass *klass,$/;"	f
gimp_pdb_dialog_get_type	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_get_type (void)$/;"	f
gimp_pdb_dialog_init	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_init (GimpPdbDialog      *dialog,$/;"	f	file:
gimp_pdb_dialog_new	core/gimp-gui.c	/^gimp_pdb_dialog_new (Gimp          *gimp,$/;"	f
gimp_pdb_dialog_plug_in_closed	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_plug_in_closed (GimpPlugInManager *manager,$/;"	f	file:
gimp_pdb_dialog_response	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_response (GtkDialog *gtk_dialog,$/;"	f	file:
gimp_pdb_dialog_run_callback	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_run_callback (GimpPdbDialog *dialog,$/;"	f
gimp_pdb_dialog_set	core/gimp-gui.c	/^gimp_pdb_dialog_set (Gimp          *gimp,$/;"	f
gimp_pdb_dialog_set_property	widgets/gimppdbdialog.c	/^gimp_pdb_dialog_set_property (GObject      *object,$/;"	f	file:
gimp_pdb_dump	pdb/gimppdb-query.c	/^gimp_pdb_dump (GimpPDB     *pdb,$/;"	f
gimp_pdb_entry_free	pdb/gimppdb.c	/^gimp_pdb_entry_free (gpointer key,$/;"	f	file:
gimp_pdb_entry_get_memsize	pdb/gimppdb.c	/^gimp_pdb_entry_get_memsize (GList  *procedures,$/;"	f	file:
gimp_pdb_execute_procedure_by_name	pdb/gimppdb.c	/^gimp_pdb_execute_procedure_by_name (GimpPDB      *pdb,$/;"	f
gimp_pdb_execute_procedure_by_name_args	pdb/gimppdb.c	/^gimp_pdb_execute_procedure_by_name_args (GimpPDB      *pdb,$/;"	f
gimp_pdb_finalize	pdb/gimppdb.c	/^gimp_pdb_finalize (GObject *object)$/;"	f	file:
gimp_pdb_free_strings	pdb/gimppdb-query.c	/^gimp_pdb_free_strings (PDBStrings *strings)$/;"	f	file:
gimp_pdb_get_memsize	pdb/gimppdb.c	/^gimp_pdb_get_memsize (GimpObject *object,$/;"	f	file:
gimp_pdb_get_strings	pdb/gimppdb-query.c	/^gimp_pdb_get_strings (PDBStrings    *strings,$/;"	f	file:
gimp_pdb_init	pdb/gimppdb.c	/^gimp_pdb_init (GimpPDB *pdb)$/;"	f	file:
gimp_pdb_lookup_compat_proc_name	pdb/gimppdb.c	/^gimp_pdb_lookup_compat_proc_name (GimpPDB     *pdb,$/;"	f
gimp_pdb_lookup_procedure	pdb/gimppdb.c	/^gimp_pdb_lookup_procedure (GimpPDB     *pdb,$/;"	f
gimp_pdb_new	pdb/gimppdb.c	/^gimp_pdb_new (Gimp *gimp)$/;"	f
gimp_pdb_print_entry	pdb/gimppdb-query.c	/^gimp_pdb_print_entry (gpointer key,$/;"	f	file:
gimp_pdb_proc_info	pdb/gimppdb-query.c	/^gimp_pdb_proc_info (GimpPDB          *pdb,$/;"	f
gimp_pdb_progress_class_init	core/gimppdbprogress.c	/^gimp_pdb_progress_class_init (GimpPdbProgressClass *klass)$/;"	f	file:
gimp_pdb_progress_constructor	core/gimppdbprogress.c	/^gimp_pdb_progress_constructor (GType                  type,$/;"	f	file:
gimp_pdb_progress_dispose	core/gimppdbprogress.c	/^gimp_pdb_progress_dispose (GObject *object)$/;"	f	file:
gimp_pdb_progress_finalize	core/gimppdbprogress.c	/^gimp_pdb_progress_finalize (GObject *object)$/;"	f	file:
gimp_pdb_progress_get_by_callback	core/gimppdbprogress.c	/^gimp_pdb_progress_get_by_callback (GimpPdbProgressClass *klass,$/;"	f
gimp_pdb_progress_get_type	core/gimppdbprogress.c	/^gimp_pdb_progress_get_type (void)$/;"	f
gimp_pdb_progress_init	core/gimppdbprogress.c	/^gimp_pdb_progress_init (GimpPdbProgress      *progress,$/;"	f	file:
gimp_pdb_progress_progress_end	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_pdb_progress_progress_get_value	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_pdb_progress_progress_get_window	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_get_window (GimpProgress *progress)$/;"	f	file:
gimp_pdb_progress_progress_iface_init	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_iface_init (GimpProgressInterface *iface)$/;"	f	file:
gimp_pdb_progress_progress_is_active	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_pdb_progress_progress_pulse	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_pdb_progress_progress_set_text	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_set_text (GimpProgress *progress,$/;"	f	file:
gimp_pdb_progress_progress_set_value	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_pdb_progress_progress_start	core/gimppdbprogress.c	/^gimp_pdb_progress_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_pdb_progress_run_callback	core/gimppdbprogress.c	/^gimp_pdb_progress_run_callback (GimpPdbProgress     *progress,$/;"	f	file:
gimp_pdb_progress_set_property	core/gimppdbprogress.c	/^gimp_pdb_progress_set_property (GObject      *object,$/;"	f	file:
gimp_pdb_query	pdb/gimppdb-query.c	/^gimp_pdb_query (GimpPDB       *pdb,$/;"	f
gimp_pdb_query_entry	pdb/gimppdb-query.c	/^gimp_pdb_query_entry (gpointer key,$/;"	f	file:
gimp_pdb_real_register_procedure	pdb/gimppdb.c	/^gimp_pdb_real_register_procedure (GimpPDB       *pdb,$/;"	f	file:
gimp_pdb_real_unregister_procedure	pdb/gimppdb.c	/^gimp_pdb_real_unregister_procedure (GimpPDB       *pdb,$/;"	f	file:
gimp_pdb_register_compat_proc_name	pdb/gimppdb.c	/^gimp_pdb_register_compat_proc_name (GimpPDB     *pdb,$/;"	f
gimp_pdb_register_procedure	pdb/gimppdb.c	/^gimp_pdb_register_procedure (GimpPDB       *pdb,$/;"	f
gimp_pdb_signals	pdb/gimppdb.c	/^static guint gimp_pdb_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_pdb_unregister_procedure	pdb/gimppdb.c	/^gimp_pdb_unregister_procedure (GimpPDB       *pdb,$/;"	f
gimp_pencil_class_init	paint/gimppencil.c	/^gimp_pencil_class_init (GimpPencilClass *klass)$/;"	f	file:
gimp_pencil_init	paint/gimppencil.c	/^gimp_pencil_init (GimpPencil *pencil)$/;"	f	file:
gimp_pencil_options_class_init	paint/gimppenciloptions.c	/^gimp_pencil_options_class_init (GimpPencilOptionsClass *klass)$/;"	f	file:
gimp_pencil_options_get_property	paint/gimppenciloptions.c	/^gimp_pencil_options_get_property (GObject    *object,$/;"	f	file:
gimp_pencil_options_init	paint/gimppenciloptions.c	/^gimp_pencil_options_init (GimpPencilOptions *options)$/;"	f	file:
gimp_pencil_options_set_property	paint/gimppenciloptions.c	/^gimp_pencil_options_set_property (GObject      *object,$/;"	f	file:
gimp_pencil_tool_class_init	tools/gimppenciltool.c	/^gimp_pencil_tool_class_init (GimpPencilToolClass *klass)$/;"	f	file:
gimp_pencil_tool_init	tools/gimppenciltool.c	/^gimp_pencil_tool_init (GimpPencilTool *pencil)$/;"	f	file:
gimp_perspective_clone_class_init	paint/gimpperspectiveclone.c	/^gimp_perspective_clone_class_init (GimpPerspectiveCloneClass *klass)$/;"	f	file:
gimp_perspective_clone_finalize	paint/gimpperspectiveclone.c	/^gimp_perspective_clone_finalize (GObject *object)$/;"	f	file:
gimp_perspective_clone_get_matrix	paint/gimpperspectiveclone.c	/^gimp_perspective_clone_get_matrix (GimpPerspectiveClone *clone,$/;"	f
gimp_perspective_clone_get_source	paint/gimpperspectiveclone.c	/^gimp_perspective_clone_get_source (GimpSourceCore   *source_core,$/;"	f	file:
gimp_perspective_clone_get_source_point	paint/gimpperspectiveclone.c	/^gimp_perspective_clone_get_source_point (GimpPerspectiveClone *clone,$/;"	f
gimp_perspective_clone_init	paint/gimpperspectiveclone.c	/^gimp_perspective_clone_init (GimpPerspectiveClone *clone)$/;"	f	file:
gimp_perspective_clone_mode_get_type	paint/paint-enums.c	/^gimp_perspective_clone_mode_get_type (void)$/;"	f
gimp_perspective_clone_options_class_init	paint/gimpperspectivecloneoptions.c	/^gimp_perspective_clone_options_class_init (GimpPerspectiveCloneOptionsClass *klass)$/;"	f	file:
gimp_perspective_clone_options_get_property	paint/gimpperspectivecloneoptions.c	/^gimp_perspective_clone_options_get_property (GObject    *object,$/;"	f	file:
gimp_perspective_clone_options_gui	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_options_gui (GimpToolOptions *tool_options)$/;"	f	file:
gimp_perspective_clone_options_init	paint/gimpperspectivecloneoptions.c	/^gimp_perspective_clone_options_init (GimpPerspectiveCloneOptions *options)$/;"	f	file:
gimp_perspective_clone_options_set_property	paint/gimpperspectivecloneoptions.c	/^gimp_perspective_clone_options_set_property (GObject      *object,$/;"	f	file:
gimp_perspective_clone_paint	paint/gimpperspectiveclone.c	/^gimp_perspective_clone_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_perspective_clone_start	paint/gimpperspectiveclone.c	/^gimp_perspective_clone_start (GimpPaintCore     *paint_core,$/;"	f	file:
gimp_perspective_clone_tool_bounds	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_bounds (GimpPerspectiveCloneTool *tool,$/;"	f	file:
gimp_perspective_clone_tool_button_press	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_perspective_clone_tool_class_init	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_class_init (GimpPerspectiveCloneToolClass *klass)$/;"	f	file:
gimp_perspective_clone_tool_constructor	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_constructor (GType                  type,$/;"	f	file:
gimp_perspective_clone_tool_control	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_perspective_clone_tool_cursor_update	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_perspective_clone_tool_draw	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_perspective_clone_tool_has_display	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_has_display (GimpTool    *tool,$/;"	f	file:
gimp_perspective_clone_tool_has_image	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_has_image (GimpTool  *tool,$/;"	f	file:
gimp_perspective_clone_tool_init	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_init (GimpPerspectiveCloneTool *perspective_clone_tool)$/;"	f	file:
gimp_perspective_clone_tool_initialize	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_perspective_clone_tool_mode_notify	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_mode_notify (GObject                  *config,$/;"	f	file:
gimp_perspective_clone_tool_motion	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_perspective_clone_tool_oper_update	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_perspective_clone_tool_prepare	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_prepare (GimpPerspectiveCloneTool *perspective_clone_tool,$/;"	f	file:
gimp_perspective_clone_tool_recalc	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_recalc (GimpPerspectiveCloneTool *perspective_clone_tool,$/;"	f
gimp_perspective_clone_tool_transform_bounding_box	tools/gimpperspectiveclonetool.c	/^gimp_perspective_clone_tool_transform_bounding_box (GimpPerspectiveCloneTool *perspective_clone_tool)$/;"	f	file:
gimp_perspective_tool_class_init	tools/gimpperspectivetool.c	/^gimp_perspective_tool_class_init (GimpPerspectiveToolClass *klass)$/;"	f	file:
gimp_perspective_tool_dialog	tools/gimpperspectivetool.c	/^gimp_perspective_tool_dialog (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_perspective_tool_dialog_update	tools/gimpperspectivetool.c	/^gimp_perspective_tool_dialog_update (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_perspective_tool_init	tools/gimpperspectivetool.c	/^gimp_perspective_tool_init (GimpPerspectiveTool *perspective_tool)$/;"	f	file:
gimp_perspective_tool_motion	tools/gimpperspectivetool.c	/^gimp_perspective_tool_motion (GimpTransformTool *transform_tool,$/;"	f	file:
gimp_perspective_tool_prepare	tools/gimpperspectivetool.c	/^gimp_perspective_tool_prepare (GimpTransformTool  *tr_tool,$/;"	f	file:
gimp_perspective_tool_recalc	tools/gimpperspectivetool.c	/^gimp_perspective_tool_recalc (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_pickable_flush	core/gimppickable.c	/^gimp_pickable_flush (GimpPickable *pickable)$/;"	f
gimp_pickable_get_bytes	core/gimppickable.c	/^gimp_pickable_get_bytes (GimpPickable *pickable)$/;"	f
gimp_pickable_get_color_at	core/gimppickable.c	/^gimp_pickable_get_color_at (GimpPickable *pickable,$/;"	f
gimp_pickable_get_image	core/gimppickable.c	/^gimp_pickable_get_image (GimpPickable *pickable)$/;"	f
gimp_pickable_get_image_type	core/gimppickable.c	/^gimp_pickable_get_image_type (GimpPickable *pickable)$/;"	f
gimp_pickable_get_opacity_at	core/gimppickable.c	/^gimp_pickable_get_opacity_at (GimpPickable *pickable,$/;"	f
gimp_pickable_get_pixel_at	core/gimppickable.c	/^gimp_pickable_get_pixel_at (GimpPickable *pickable,$/;"	f
gimp_pickable_get_tiles	core/gimppickable.c	/^gimp_pickable_get_tiles (GimpPickable *pickable)$/;"	f
gimp_pickable_interface_get_type	core/gimppickable.c	/^gimp_pickable_interface_get_type (void)$/;"	f
gimp_pickable_pick_color	core/gimppickable.c	/^gimp_pickable_pick_color (GimpPickable *pickable,$/;"	f
gimp_pixbuf_format_compare	widgets/gimppixbuf.c	/^gimp_pixbuf_format_compare (GdkPixbufFormat *a,$/;"	f	file:
gimp_pixbuf_get_formats	widgets/gimppixbuf.c	/^gimp_pixbuf_get_formats (void)$/;"	f
gimp_pixbuf_targets_add	widgets/gimppixbuf.c	/^gimp_pixbuf_targets_add (GtkTargetList *target_list,$/;"	f
gimp_pixbuf_targets_remove	widgets/gimppixbuf.c	/^gimp_pixbuf_targets_remove (GtkTargetList *target_list)$/;"	f
gimp_plug_in_action_activate	widgets/gimppluginaction.c	/^gimp_plug_in_action_activate (GtkAction *action)$/;"	f	file:
gimp_plug_in_action_class_init	widgets/gimppluginaction.c	/^gimp_plug_in_action_class_init (GimpPlugInActionClass *klass)$/;"	f	file:
gimp_plug_in_action_connect_proxy	widgets/gimppluginaction.c	/^gimp_plug_in_action_connect_proxy (GtkAction *action,$/;"	f	file:
gimp_plug_in_action_finalize	widgets/gimppluginaction.c	/^gimp_plug_in_action_finalize (GObject *object)$/;"	f	file:
gimp_plug_in_action_get_property	widgets/gimppluginaction.c	/^gimp_plug_in_action_get_property (GObject    *object,$/;"	f	file:
gimp_plug_in_action_init	widgets/gimppluginaction.c	/^gimp_plug_in_action_init (GimpPlugInAction *action)$/;"	f	file:
gimp_plug_in_action_new	widgets/gimppluginaction.c	/^gimp_plug_in_action_new (const gchar         *name,$/;"	f
gimp_plug_in_action_selected	widgets/gimppluginaction.c	/^gimp_plug_in_action_selected (GimpPlugInAction    *action,$/;"	f
gimp_plug_in_action_set_property	widgets/gimppluginaction.c	/^gimp_plug_in_action_set_property (GObject      *object,$/;"	f	file:
gimp_plug_in_add_temp_proc	plug-in/gimpplugin.c	/^gimp_plug_in_add_temp_proc (GimpPlugIn             *plug_in,$/;"	f
gimp_plug_in_call_mode_get_type	plug-in/plug-in-enums.c	/^gimp_plug_in_call_mode_get_type (void)$/;"	f
gimp_plug_in_class_init	plug-in/gimpplugin.c	/^gimp_plug_in_class_init (GimpPlugInClass *klass)$/;"	f	file:
gimp_plug_in_cleanup	plug-in/gimpplugin-cleanup.c	/^gimp_plug_in_cleanup (GimpPlugIn          *plug_in,$/;"	f
gimp_plug_in_cleanup_get_image	plug-in/gimpplugin-cleanup.c	/^gimp_plug_in_cleanup_get_image (GimpPlugInProcFrame *proc_frame,$/;"	f	file:
gimp_plug_in_cleanup_undo_group_end	plug-in/gimpplugin-cleanup.c	/^gimp_plug_in_cleanup_undo_group_end (GimpPlugIn *plug_in,$/;"	f
gimp_plug_in_cleanup_undo_group_start	plug-in/gimpplugin-cleanup.c	/^gimp_plug_in_cleanup_undo_group_start (GimpPlugIn *plug_in,$/;"	f
gimp_plug_in_close	plug-in/gimpplugin.c	/^gimp_plug_in_close (GimpPlugIn *plug_in,$/;"	f
gimp_plug_in_context_pop	plug-in/gimpplugin-context.c	/^gimp_plug_in_context_pop (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_context_push	plug-in/gimpplugin-context.c	/^gimp_plug_in_context_push (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_debug_argv	plug-in/gimpplugindebug.c	/^gimp_plug_in_debug_argv (GimpPlugInDebug    *debug,$/;"	f
gimp_plug_in_debug_free	plug-in/gimpplugindebug.c	/^gimp_plug_in_debug_free (GimpPlugInDebug *debug)$/;"	f
gimp_plug_in_debug_new	plug-in/gimpplugindebug.c	/^gimp_plug_in_debug_new (void)$/;"	f
gimp_plug_in_def_add_procedure	plug-in/gimpplugindef.c	/^gimp_plug_in_def_add_procedure (GimpPlugInDef       *plug_in_def,$/;"	f
gimp_plug_in_def_class_init	plug-in/gimpplugindef.c	/^gimp_plug_in_def_class_init (GimpPlugInDefClass *klass)$/;"	f	file:
gimp_plug_in_def_finalize	plug-in/gimpplugindef.c	/^gimp_plug_in_def_finalize (GObject *object)$/;"	f	file:
gimp_plug_in_def_get_memsize	plug-in/gimpplugindef.c	/^gimp_plug_in_def_get_memsize (GimpObject *object,$/;"	f	file:
gimp_plug_in_def_init	plug-in/gimpplugindef.c	/^gimp_plug_in_def_init (GimpPlugInDef *def)$/;"	f	file:
gimp_plug_in_def_new	plug-in/gimpplugindef.c	/^gimp_plug_in_def_new (const gchar *prog)$/;"	f
gimp_plug_in_def_remove_procedure	plug-in/gimpplugindef.c	/^gimp_plug_in_def_remove_procedure (GimpPlugInDef       *plug_in_def,$/;"	f
gimp_plug_in_def_set_has_init	plug-in/gimpplugindef.c	/^gimp_plug_in_def_set_has_init (GimpPlugInDef *plug_in_def,$/;"	f
gimp_plug_in_def_set_help_domain	plug-in/gimpplugindef.c	/^gimp_plug_in_def_set_help_domain (GimpPlugInDef *plug_in_def,$/;"	f
gimp_plug_in_def_set_locale_domain	plug-in/gimpplugindef.c	/^gimp_plug_in_def_set_locale_domain (GimpPlugInDef *plug_in_def,$/;"	f
gimp_plug_in_def_set_mtime	plug-in/gimpplugindef.c	/^gimp_plug_in_def_set_mtime (GimpPlugInDef *plug_in_def,$/;"	f
gimp_plug_in_def_set_needs_query	plug-in/gimpplugindef.c	/^gimp_plug_in_def_set_needs_query (GimpPlugInDef *plug_in_def,$/;"	f
gimp_plug_in_error_quark	plug-in/gimppluginerror.c	/^gimp_plug_in_error_quark (void)$/;"	f
gimp_plug_in_finalize	plug-in/gimpplugin.c	/^gimp_plug_in_finalize (GObject *object)$/;"	f	file:
gimp_plug_in_flush	plug-in/gimpplugin.c	/^gimp_plug_in_flush (GIOChannel *channel,$/;"	f	file:
gimp_plug_in_get_proc_frame	plug-in/gimpplugin.c	/^gimp_plug_in_get_proc_frame (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_get_undo_desc	plug-in/gimpplugin.c	/^gimp_plug_in_get_undo_desc (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_handle_extension_ack	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_extension_ack (GimpPlugIn *plug_in)$/;"	f	file:
gimp_plug_in_handle_has_init	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_has_init (GimpPlugIn *plug_in)$/;"	f	file:
gimp_plug_in_handle_message	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_message (GimpPlugIn      *plug_in,$/;"	f
gimp_plug_in_handle_proc_install	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_proc_install (GimpPlugIn    *plug_in,$/;"	f	file:
gimp_plug_in_handle_proc_return	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_proc_return (GimpPlugIn   *plug_in,$/;"	f	file:
gimp_plug_in_handle_proc_run	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_proc_run (GimpPlugIn *plug_in,$/;"	f	file:
gimp_plug_in_handle_proc_uninstall	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_proc_uninstall (GimpPlugIn      *plug_in,$/;"	f	file:
gimp_plug_in_handle_quit	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_quit (GimpPlugIn *plug_in)$/;"	f	file:
gimp_plug_in_handle_temp_proc_return	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_temp_proc_return (GimpPlugIn   *plug_in,$/;"	f	file:
gimp_plug_in_handle_tile_req	plug-in/gimpplugin-message.c	/^gimp_plug_in_handle_tile_req (GimpPlugIn *plug_in,$/;"	f	file:
gimp_plug_in_image_type_get_type	plug-in/plug-in-enums.c	/^gimp_plug_in_image_type_get_type (void)$/;"	f
gimp_plug_in_init	plug-in/gimpplugin.c	/^gimp_plug_in_init (GimpPlugIn *plug_in)$/;"	f	file:
gimp_plug_in_main_loop	plug-in/gimpplugin.c	/^gimp_plug_in_main_loop (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_main_loop_quit	plug-in/gimpplugin.c	/^gimp_plug_in_main_loop_quit (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_manager_add_from_file	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_add_from_file (const GimpDatafileData *file_data,$/;"	f	file:
gimp_plug_in_manager_add_from_rc	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_add_from_rc (GimpPlugInManager *manager,$/;"	f	file:
gimp_plug_in_manager_add_help_domain	plug-in/gimppluginmanager-help-domain.c	/^gimp_plug_in_manager_add_help_domain (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_add_locale_domain	plug-in/gimppluginmanager-locale-domain.c	/^gimp_plug_in_manager_add_locale_domain (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_add_menu_branch	plug-in/gimppluginmanager-menu-branch.c	/^gimp_plug_in_manager_add_menu_branch (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_add_open_plug_in	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_add_open_plug_in (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_add_procedure	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_add_procedure (GimpPlugInManager   *manager,$/;"	f
gimp_plug_in_manager_add_temp_proc	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_add_temp_proc (GimpPlugInManager      *manager,$/;"	f
gimp_plug_in_manager_add_to_db	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_add_to_db (GimpPlugInManager   *manager,$/;"	f	file:
gimp_plug_in_manager_bind_text_domains	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_bind_text_domains (GimpPlugInManager *manager)$/;"	f	file:
gimp_plug_in_manager_call_init	plug-in/gimppluginmanager-call.c	/^gimp_plug_in_manager_call_init (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_call_query	plug-in/gimppluginmanager-call.c	/^gimp_plug_in_manager_call_query (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_call_run	plug-in/gimppluginmanager-call.c	/^gimp_plug_in_manager_call_run (GimpPlugInManager   *manager,$/;"	f
gimp_plug_in_manager_call_run_temp	plug-in/gimppluginmanager-call.c	/^gimp_plug_in_manager_call_run_temp (GimpPlugInManager      *manager,$/;"	f
gimp_plug_in_manager_class_init	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_class_init (GimpPlugInManagerClass *klass)$/;"	f	file:
gimp_plug_in_manager_data_free	plug-in/gimppluginmanager-data.c	/^gimp_plug_in_manager_data_free (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_dispose	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_dispose (GObject *object)$/;"	f	file:
gimp_plug_in_manager_exit	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_exit (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_file_proc_compare	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_file_proc_compare (gconstpointer a,$/;"	f	file:
gimp_plug_in_manager_finalize	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_finalize (GObject *object)$/;"	f	file:
gimp_plug_in_manager_get_data	plug-in/gimppluginmanager-data.c	/^gimp_plug_in_manager_get_data (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_get_help_domain	plug-in/gimppluginmanager-help-domain.c	/^gimp_plug_in_manager_get_help_domain (GimpPlugInManager  *manager,$/;"	f
gimp_plug_in_manager_get_help_domains	plug-in/gimppluginmanager-help-domain.c	/^gimp_plug_in_manager_get_help_domains (GimpPlugInManager   *manager,$/;"	f
gimp_plug_in_manager_get_locale_domain	plug-in/gimppluginmanager-locale-domain.c	/^gimp_plug_in_manager_get_locale_domain (GimpPlugInManager  *manager,$/;"	f
gimp_plug_in_manager_get_locale_domains	plug-in/gimppluginmanager-locale-domain.c	/^gimp_plug_in_manager_get_locale_domains (GimpPlugInManager   *manager,$/;"	f
gimp_plug_in_manager_get_memsize	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_get_memsize (GimpObject *object,$/;"	f	file:
gimp_plug_in_manager_get_pluginrc	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_get_pluginrc (GimpPlugInManager *manager)$/;"	f	file:
gimp_plug_in_manager_help_domain_exit	plug-in/gimppluginmanager-help-domain.c	/^gimp_plug_in_manager_help_domain_exit (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_history_add	plug-in/gimppluginmanager-history.c	/^gimp_plug_in_manager_history_add (GimpPlugInManager   *manager,$/;"	f
gimp_plug_in_manager_history_changed	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_history_changed (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_history_clear	plug-in/gimppluginmanager-history.c	/^gimp_plug_in_manager_history_clear (GimpPlugInManager   *manager)$/;"	f
gimp_plug_in_manager_history_length	plug-in/gimppluginmanager-history.c	/^gimp_plug_in_manager_history_length (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_history_nth	plug-in/gimppluginmanager-history.c	/^gimp_plug_in_manager_history_nth (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_history_remove	plug-in/gimppluginmanager-history.c	/^gimp_plug_in_manager_history_remove (GimpPlugInManager   *manager,$/;"	f
gimp_plug_in_manager_history_size	plug-in/gimppluginmanager-history.c	/^gimp_plug_in_manager_history_size (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_init	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_init (GimpPlugInManager *manager)$/;"	f	file:
gimp_plug_in_manager_init_plug_ins	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_init_plug_ins (GimpPlugInManager  *manager,$/;"	f	file:
gimp_plug_in_manager_initialize	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_initialize (GimpPlugInManager  *manager,$/;"	f
gimp_plug_in_manager_locale_domain_exit	plug-in/gimppluginmanager-locale-domain.c	/^gimp_plug_in_manager_locale_domain_exit (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_menu_branch_exit	plug-in/gimppluginmanager-menu-branch.c	/^gimp_plug_in_manager_menu_branch_exit (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_new	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_new (Gimp *gimp)$/;"	f
gimp_plug_in_manager_plug_in_pop	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_plug_in_pop (GimpPlugInManager *manager)$/;"	f
gimp_plug_in_manager_plug_in_push	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_plug_in_push (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_query	plug-in/gimppluginmanager-query.c	/^gimp_plug_in_manager_query (GimpPlugInManager   *manager,$/;"	f
gimp_plug_in_manager_query_new	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_query_new (GimpPlugInManager  *manager,$/;"	f	file:
gimp_plug_in_manager_read_pluginrc	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_read_pluginrc (GimpPlugInManager  *manager,$/;"	f	file:
gimp_plug_in_manager_register_load_handler	plug-in/gimppluginmanager-file.c	/^gimp_plug_in_manager_register_load_handler (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_register_mime_type	plug-in/gimppluginmanager-file.c	/^gimp_plug_in_manager_register_mime_type (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_register_save_handler	plug-in/gimppluginmanager-file.c	/^gimp_plug_in_manager_register_save_handler (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_register_thumb_loader	plug-in/gimppluginmanager-file.c	/^gimp_plug_in_manager_register_thumb_loader (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_remove_open_plug_in	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_remove_open_plug_in (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_manager_remove_temp_proc	plug-in/gimppluginmanager.c	/^gimp_plug_in_manager_remove_temp_proc (GimpPlugInManager      *manager,$/;"	f
gimp_plug_in_manager_restore	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_restore (GimpPlugInManager  *manager,$/;"	f
gimp_plug_in_manager_run_extensions	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_run_extensions (GimpPlugInManager  *manager,$/;"	f	file:
gimp_plug_in_manager_search	plug-in/gimppluginmanager-restore.c	/^gimp_plug_in_manager_search (GimpPlugInManager  *manager,$/;"	f	file:
gimp_plug_in_manager_set_data	plug-in/gimppluginmanager-data.c	/^gimp_plug_in_manager_set_data (GimpPlugInManager *manager,$/;"	f
gimp_plug_in_menu_register	plug-in/gimpplugin.c	/^gimp_plug_in_menu_register (GimpPlugIn  *plug_in,$/;"	f
gimp_plug_in_new	plug-in/gimpplugin.c	/^gimp_plug_in_new (GimpPlugInManager   *manager,$/;"	f
gimp_plug_in_open	plug-in/gimpplugin.c	/^gimp_plug_in_open (GimpPlugIn         *plug_in,$/;"	f
gimp_plug_in_prep_for_exec	plug-in/gimpplugin.c	/^gimp_plug_in_prep_for_exec (gpointer data)$/;"	f	file:
gimp_plug_in_prep_for_exec	plug-in/gimpplugin.c	116;"	d	file:
gimp_plug_in_proc_frame_dispose	plug-in/gimppluginprocframe.c	/^gimp_plug_in_proc_frame_dispose (GimpPlugInProcFrame *proc_frame,$/;"	f
gimp_plug_in_proc_frame_get_return_vals	plug-in/gimppluginprocframe.c	/^gimp_plug_in_proc_frame_get_return_vals (GimpPlugInProcFrame *proc_frame)$/;"	f
gimp_plug_in_proc_frame_init	plug-in/gimppluginprocframe.c	/^gimp_plug_in_proc_frame_init (GimpPlugInProcFrame *proc_frame,$/;"	f
gimp_plug_in_proc_frame_new	plug-in/gimppluginprocframe.c	/^gimp_plug_in_proc_frame_new (GimpContext         *context,$/;"	f
gimp_plug_in_proc_frame_pop	plug-in/gimpplugin.c	/^gimp_plug_in_proc_frame_pop (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_proc_frame_push	plug-in/gimpplugin.c	/^gimp_plug_in_proc_frame_push (GimpPlugIn             *plug_in,$/;"	f
gimp_plug_in_proc_frame_ref	plug-in/gimppluginprocframe.c	/^gimp_plug_in_proc_frame_ref (GimpPlugInProcFrame *proc_frame)$/;"	f
gimp_plug_in_proc_frame_unref	plug-in/gimppluginprocframe.c	/^gimp_plug_in_proc_frame_unref (GimpPlugInProcFrame *proc_frame,$/;"	f
gimp_plug_in_procedure_add_menu_path	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_add_menu_path (GimpPlugInProcedure  *proc,$/;"	f
gimp_plug_in_procedure_class_init	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_class_init (GimpPlugInProcedureClass *klass)$/;"	f	file:
gimp_plug_in_procedure_execute	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_execute (GimpProcedure *procedure,$/;"	f	file:
gimp_plug_in_procedure_execute_async	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_execute_async (GimpProcedure *procedure,$/;"	f	file:
gimp_plug_in_procedure_finalize	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_finalize (GObject *object)$/;"	f	file:
gimp_plug_in_procedure_find	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_find (GSList      *list,$/;"	f
gimp_plug_in_procedure_get_blurb	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_blurb (const GimpPlugInProcedure *proc)$/;"	f
gimp_plug_in_procedure_get_help_domain	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_help_domain (const GimpPlugInProcedure *proc)$/;"	f
gimp_plug_in_procedure_get_help_id	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_help_id (const GimpPlugInProcedure *proc)$/;"	f
gimp_plug_in_procedure_get_label	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_label (GimpPlugInProcedure *proc)$/;"	f
gimp_plug_in_procedure_get_locale_domain	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_locale_domain (const GimpPlugInProcedure *proc)$/;"	f
gimp_plug_in_procedure_get_memsize	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_memsize (GimpObject *object,$/;"	f	file:
gimp_plug_in_procedure_get_pixbuf	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_pixbuf (const GimpPlugInProcedure *proc)$/;"	f
gimp_plug_in_procedure_get_progname	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_progname (const GimpPlugInProcedure *proc)$/;"	f
gimp_plug_in_procedure_get_sensitive	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_sensitive (const GimpPlugInProcedure *proc,$/;"	f
gimp_plug_in_procedure_get_stock_id	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_get_stock_id (const GimpPlugInProcedure *proc)$/;"	f
gimp_plug_in_procedure_init	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_init (GimpPlugInProcedure *proc)$/;"	f	file:
gimp_plug_in_procedure_new	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_new (GimpPDBProcType  proc_type,$/;"	f
gimp_plug_in_procedure_real_get_progname	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_real_get_progname (const GimpPlugInProcedure *procedure)$/;"	f
gimp_plug_in_procedure_set_file_proc	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_set_file_proc (GimpPlugInProcedure *proc,$/;"	f
gimp_plug_in_procedure_set_help_domain	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_set_help_domain (GimpPlugInProcedure *proc,$/;"	f
gimp_plug_in_procedure_set_icon	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_set_icon (GimpPlugInProcedure *proc,$/;"	f
gimp_plug_in_procedure_set_image_types	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_set_image_types (GimpPlugInProcedure *proc,$/;"	f
gimp_plug_in_procedure_set_locale_domain	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_set_locale_domain (GimpPlugInProcedure *proc,$/;"	f
gimp_plug_in_procedure_set_mime_type	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_set_mime_type (GimpPlugInProcedure *proc,$/;"	f
gimp_plug_in_procedure_set_thumb_loader	plug-in/gimppluginprocedure.c	/^gimp_plug_in_procedure_set_thumb_loader (GimpPlugInProcedure *proc,$/;"	f
gimp_plug_in_procedure_signals	plug-in/gimppluginprocedure.c	/^static guint gimp_plug_in_procedure_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_plug_in_progress_attach	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_attach (GimpProgress *progress)$/;"	f
gimp_plug_in_progress_cancel	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_cancel (GimpPlugIn  *plug_in,$/;"	f
gimp_plug_in_progress_cancel_callback	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_cancel_callback (GimpProgress *progress,$/;"	f	file:
gimp_plug_in_progress_detach	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_detach (GimpProgress *progress)$/;"	f
gimp_plug_in_progress_end	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_end (GimpPlugIn          *plug_in,$/;"	f
gimp_plug_in_progress_get_window	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_get_window (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_progress_install	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_install (GimpPlugIn  *plug_in,$/;"	f
gimp_plug_in_progress_pulse	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_pulse (GimpPlugIn *plug_in)$/;"	f
gimp_plug_in_progress_set_text	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_set_text (GimpPlugIn  *plug_in,$/;"	f
gimp_plug_in_progress_set_value	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_set_value (GimpPlugIn *plug_in,$/;"	f
gimp_plug_in_progress_start	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_start (GimpPlugIn  *plug_in,$/;"	f
gimp_plug_in_progress_uninstall	plug-in/gimpplugin-progress.c	/^gimp_plug_in_progress_uninstall (GimpPlugIn  *plug_in,$/;"	f
gimp_plug_in_recv_message	plug-in/gimpplugin.c	/^gimp_plug_in_recv_message (GIOChannel   *channel,$/;"	f	file:
gimp_plug_in_remove_temp_proc	plug-in/gimpplugin.c	/^gimp_plug_in_remove_temp_proc (GimpPlugIn             *plug_in,$/;"	f
gimp_plug_in_shm_free	plug-in/gimppluginshm.c	/^gimp_plug_in_shm_free (GimpPlugInShm *shm)$/;"	f
gimp_plug_in_shm_get_ID	plug-in/gimppluginshm.c	/^gimp_plug_in_shm_get_ID (GimpPlugInShm *shm)$/;"	f
gimp_plug_in_shm_get_addr	plug-in/gimppluginshm.c	/^gimp_plug_in_shm_get_addr (GimpPlugInShm *shm)$/;"	f
gimp_plug_in_shm_new	plug-in/gimppluginshm.c	/^gimp_plug_in_shm_new (void)$/;"	f
gimp_plug_in_write	plug-in/gimpplugin.c	/^gimp_plug_in_write (GIOChannel   *channel,$/;"	f	file:
gimp_plugin_config_class_init	config/gimppluginconfig.c	/^gimp_plugin_config_class_init (GimpPluginConfigClass *klass)$/;"	f	file:
gimp_plugin_config_finalize	config/gimppluginconfig.c	/^gimp_plugin_config_finalize (GObject *object)$/;"	f	file:
gimp_plugin_config_get_property	config/gimppluginconfig.c	/^gimp_plugin_config_get_property (GObject    *object,$/;"	f	file:
gimp_plugin_config_init	config/gimppluginconfig.c	/^gimp_plugin_config_init (GimpPluginConfig *config)$/;"	f	file:
gimp_plugin_config_set_property	config/gimppluginconfig.c	/^gimp_plugin_config_set_property (GObject      *object,$/;"	f	file:
gimp_posterize_tool_class_init	tools/gimpposterizetool.c	/^gimp_posterize_tool_class_init (GimpPosterizeToolClass *klass)$/;"	f	file:
gimp_posterize_tool_dialog	tools/gimpposterizetool.c	/^gimp_posterize_tool_dialog (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_posterize_tool_finalize	tools/gimpposterizetool.c	/^gimp_posterize_tool_finalize (GObject *object)$/;"	f	file:
gimp_posterize_tool_init	tools/gimpposterizetool.c	/^gimp_posterize_tool_init (GimpPosterizeTool *posterize_tool)$/;"	f	file:
gimp_posterize_tool_initialize	tools/gimpposterizetool.c	/^gimp_posterize_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_posterize_tool_map	tools/gimpposterizetool.c	/^gimp_posterize_tool_map (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_posterize_tool_reset	tools/gimpposterizetool.c	/^gimp_posterize_tool_reset (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_preview_cache_add	core/gimppreviewcache.c	/^gimp_preview_cache_add (GSList  **plist,$/;"	f
gimp_preview_cache_get	core/gimppreviewcache.c	/^gimp_preview_cache_get (GSList **plist,$/;"	f
gimp_preview_cache_get_memsize	core/gimppreviewcache.c	/^gimp_preview_cache_get_memsize (GSList *cache)$/;"	f
gimp_preview_cache_invalidate	core/gimppreviewcache.c	/^gimp_preview_cache_invalidate (GSList **plist)$/;"	f
gimp_procedure_add_argument	pdb/gimpprocedure.c	/^gimp_procedure_add_argument (GimpProcedure *procedure,$/;"	f
gimp_procedure_add_return_value	pdb/gimpprocedure.c	/^gimp_procedure_add_return_value (GimpProcedure *procedure,$/;"	f
gimp_procedure_class_init	pdb/gimpprocedure.c	/^gimp_procedure_class_init (GimpProcedureClass *klass)$/;"	f	file:
gimp_procedure_execute	pdb/gimpprocedure.c	/^gimp_procedure_execute (GimpProcedure *procedure,$/;"	f
gimp_procedure_execute_async	pdb/gimpprocedure.c	/^gimp_procedure_execute_async (GimpProcedure *procedure,$/;"	f
gimp_procedure_finalize	pdb/gimpprocedure.c	/^gimp_procedure_finalize (GObject *object)$/;"	f	file:
gimp_procedure_free_strings	pdb/gimpprocedure.c	/^gimp_procedure_free_strings (GimpProcedure *procedure)$/;"	f	file:
gimp_procedure_get_arguments	pdb/gimpprocedure.c	/^gimp_procedure_get_arguments (GimpProcedure *procedure)$/;"	f
gimp_procedure_get_memsize	pdb/gimpprocedure.c	/^gimp_procedure_get_memsize (GimpObject *object,$/;"	f	file:
gimp_procedure_get_return_values	pdb/gimpprocedure.c	/^gimp_procedure_get_return_values (GimpProcedure *procedure,$/;"	f
gimp_procedure_init	pdb/gimpprocedure.c	/^gimp_procedure_init (GimpProcedure *procedure)$/;"	f	file:
gimp_procedure_new	pdb/gimpprocedure.c	/^gimp_procedure_new (GimpMarshalFunc marshal_func)$/;"	f
gimp_procedure_real_execute	pdb/gimpprocedure.c	/^gimp_procedure_real_execute (GimpProcedure *procedure,$/;"	f	file:
gimp_procedure_real_execute_async	pdb/gimpprocedure.c	/^gimp_procedure_real_execute_async (GimpProcedure *procedure,$/;"	f	file:
gimp_procedure_set_static_strings	pdb/gimpprocedure.c	/^gimp_procedure_set_static_strings (GimpProcedure *procedure,$/;"	f
gimp_procedure_set_strings	pdb/gimpprocedure.c	/^gimp_procedure_set_strings (GimpProcedure *procedure,$/;"	f
gimp_procedure_take_strings	pdb/gimpprocedure.c	/^gimp_procedure_take_strings (GimpProcedure *procedure,$/;"	f
gimp_procedure_validate_args	pdb/gimpprocedure.c	/^gimp_procedure_validate_args (GimpProcedure  *procedure,$/;"	f	file:
gimp_profile_chooser_dialog_class_init	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_class_init (GimpProfileChooserDialogClass *klass)$/;"	f	file:
gimp_profile_chooser_dialog_constructor	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_constructor (GType                  type,$/;"	f	file:
gimp_profile_chooser_dialog_dispose	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_dispose (GObject *object)$/;"	f	file:
gimp_profile_chooser_dialog_finalize	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_finalize (GObject *object)$/;"	f	file:
gimp_profile_chooser_dialog_get_desc	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_get_desc (GimpProfileChooserDialog *dialog,$/;"	f
gimp_profile_chooser_dialog_get_property	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_get_property (GObject    *object,$/;"	f	file:
gimp_profile_chooser_dialog_init	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_init (GimpProfileChooserDialog *dialog)$/;"	f	file:
gimp_profile_chooser_dialog_new	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_new (Gimp        *gimp,$/;"	f
gimp_profile_chooser_dialog_set_property	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_set_property (GObject      *object,$/;"	f	file:
gimp_profile_chooser_dialog_update_preview	widgets/gimpprofilechooserdialog.c	/^gimp_profile_chooser_dialog_update_preview (GimpProfileChooserDialog *dialog)$/;"	f	file:
gimp_profile_view_new	widgets/gimpprofilechooserdialog.c	/^gimp_profile_view_new (GtkTextBuffer *buffer)$/;"	f	file:
gimp_profile_view_query	widgets/gimpprofilechooserdialog.c	/^gimp_profile_view_query (GimpProfileChooserDialog *dialog)$/;"	f	file:
gimp_progress_box_class_init	widgets/gimpprogressbox.c	/^gimp_progress_box_class_init (GimpProgressBoxClass *klass)$/;"	f	file:
gimp_progress_box_init	widgets/gimpprogressbox.c	/^gimp_progress_box_init (GimpProgressBox *box)$/;"	f	file:
gimp_progress_box_new	widgets/gimpprogressbox.c	/^gimp_progress_box_new (void)$/;"	f
gimp_progress_box_progress_end	widgets/gimpprogressbox.c	/^gimp_progress_box_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_progress_box_progress_get_value	widgets/gimpprogressbox.c	/^gimp_progress_box_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_progress_box_progress_iface_init	widgets/gimpprogressbox.c	/^gimp_progress_box_progress_iface_init (GimpProgressInterface *iface)$/;"	f	file:
gimp_progress_box_progress_is_active	widgets/gimpprogressbox.c	/^gimp_progress_box_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_progress_box_progress_pulse	widgets/gimpprogressbox.c	/^gimp_progress_box_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_progress_box_progress_set_text	widgets/gimpprogressbox.c	/^gimp_progress_box_progress_set_text (GimpProgress *progress,$/;"	f	file:
gimp_progress_box_progress_set_value	widgets/gimpprogressbox.c	/^gimp_progress_box_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_progress_box_progress_start	widgets/gimpprogressbox.c	/^gimp_progress_box_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_progress_cancel	core/gimpprogress.c	/^gimp_progress_cancel (GimpProgress *progress)$/;"	f
gimp_progress_dialog_class_init	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_class_init (GimpProgressDialogClass *klass)$/;"	f	file:
gimp_progress_dialog_init	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_init (GimpProgressDialog *dialog)$/;"	f	file:
gimp_progress_dialog_new	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_new (void)$/;"	f
gimp_progress_dialog_progress_end	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_progress_dialog_progress_get_value	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_progress_dialog_progress_iface_init	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_progress_iface_init (GimpProgressInterface *iface)$/;"	f	file:
gimp_progress_dialog_progress_is_active	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_progress_dialog_progress_pulse	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_progress_dialog_progress_set_text	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_progress_set_text (GimpProgress *progress,$/;"	f	file:
gimp_progress_dialog_progress_set_value	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_progress_dialog_progress_start	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_progress_dialog_response	widgets/gimpprogressdialog.c	/^gimp_progress_dialog_response (GtkDialog *dialog,$/;"	f	file:
gimp_progress_end	core/gimpprogress.c	/^gimp_progress_end (GimpProgress *progress)$/;"	f
gimp_progress_get_value	core/gimpprogress.c	/^gimp_progress_get_value (GimpProgress *progress)$/;"	f
gimp_progress_get_window	core/gimpprogress.c	/^gimp_progress_get_window (GimpProgress *progress)$/;"	f
gimp_progress_iface_base_init	core/gimpprogress.c	/^gimp_progress_iface_base_init (GimpProgressInterface *progress_iface)$/;"	f	file:
gimp_progress_interface_get_type	core/gimpprogress.c	/^gimp_progress_interface_get_type (void)$/;"	f
gimp_progress_is_active	core/gimpprogress.c	/^gimp_progress_is_active (GimpProgress *progress)$/;"	f
gimp_progress_message	core/gimpprogress.c	/^gimp_progress_message (GimpProgress        *progress,$/;"	f
gimp_progress_pulse	core/gimpprogress.c	/^gimp_progress_pulse (GimpProgress *progress)$/;"	f
gimp_progress_set_text	core/gimpprogress.c	/^gimp_progress_set_text (GimpProgress *progress,$/;"	f
gimp_progress_set_value	core/gimpprogress.c	/^gimp_progress_set_value (GimpProgress *progress,$/;"	f
gimp_progress_start	core/gimpprogress.c	/^gimp_progress_start (GimpProgress *progress,$/;"	f
gimp_progress_update_and_flush	core/gimpprogress.c	/^gimp_progress_update_and_flush (gint     min,$/;"	f
gimp_projection_add_update_area	core/gimpprojection.c	/^gimp_projection_add_update_area (GimpProjection *proj,$/;"	f	file:
gimp_projection_class_init	core/gimpprojection.c	/^gimp_projection_class_init (GimpProjectionClass *klass)$/;"	f	file:
gimp_projection_construct	core/gimpprojection-construct.c	/^gimp_projection_construct (GimpProjection *proj,$/;"	f
gimp_projection_construct_channels	core/gimpprojection-construct.c	/^gimp_projection_construct_channels (GimpProjection *proj,$/;"	f	file:
gimp_projection_construct_layers	core/gimpprojection-construct.c	/^gimp_projection_construct_layers (GimpProjection *proj,$/;"	f	file:
gimp_projection_estimate_memsize	core/gimpprojection.c	/^gimp_projection_estimate_memsize (GimpImageBaseType type,$/;"	f
gimp_projection_finalize	core/gimpprojection.c	/^gimp_projection_finalize (GObject *object)$/;"	f	file:
gimp_projection_finish_draw	core/gimpprojection.c	/^gimp_projection_finish_draw (GimpProjection *proj)$/;"	f
gimp_projection_flush	core/gimpprojection.c	/^gimp_projection_flush (GimpProjection *proj)$/;"	f
gimp_projection_flush_now	core/gimpprojection.c	/^gimp_projection_flush_now (GimpProjection *proj)$/;"	f
gimp_projection_flush_whenever	core/gimpprojection.c	/^gimp_projection_flush_whenever (GimpProjection *proj,$/;"	f	file:
gimp_projection_get_bytes	core/gimpprojection.c	/^gimp_projection_get_bytes (const GimpProjection *proj)$/;"	f
gimp_projection_get_image	core/gimpprojection.c	/^gimp_projection_get_image (const GimpProjection *proj)$/;"	f
gimp_projection_get_image_type	core/gimpprojection.c	/^gimp_projection_get_image_type (const GimpProjection *proj)$/;"	f
gimp_projection_get_level	core/gimpprojection.c	/^gimp_projection_get_level (GimpProjection *proj,$/;"	f
gimp_projection_get_memsize	core/gimpprojection.c	/^gimp_projection_get_memsize (GimpObject *object,$/;"	f	file:
gimp_projection_get_opacity	core/gimpprojection.c	/^gimp_projection_get_opacity (const GimpProjection *proj)$/;"	f
gimp_projection_get_opacity_at	core/gimpprojection.c	/^gimp_projection_get_opacity_at (GimpPickable *pickable,$/;"	f	file:
gimp_projection_get_pixel_at	core/gimpprojection.c	/^gimp_projection_get_pixel_at (GimpPickable *pickable,$/;"	f	file:
gimp_projection_get_tiles	core/gimpprojection.c	/^gimp_projection_get_tiles (GimpProjection *proj)$/;"	f
gimp_projection_get_tiles_at_level	core/gimpprojection.c	/^gimp_projection_get_tiles_at_level (GimpProjection *proj,$/;"	f
gimp_projection_idle_render_callback	core/gimpprojection.c	/^gimp_projection_idle_render_callback (gpointer data)$/;"	f	file:
gimp_projection_idle_render_init	core/gimpprojection.c	/^gimp_projection_idle_render_init (GimpProjection *proj)$/;"	f	file:
gimp_projection_idle_render_next_area	core/gimpprojection.c	/^gimp_projection_idle_render_next_area (GimpProjection *proj)$/;"	f	file:
gimp_projection_image_flush	core/gimpprojection.c	/^gimp_projection_image_flush (GimpImage      *image,$/;"	f	file:
gimp_projection_image_mode_changed	core/gimpprojection.c	/^gimp_projection_image_mode_changed (GimpImage      *image,$/;"	f	file:
gimp_projection_image_size_changed	core/gimpprojection.c	/^gimp_projection_image_size_changed (GimpImage      *image,$/;"	f	file:
gimp_projection_image_update	core/gimpprojection.c	/^gimp_projection_image_update (GimpImage      *image,$/;"	f	file:
gimp_projection_init	core/gimpprojection.c	/^gimp_projection_init (GimpProjection *proj)$/;"	f	file:
gimp_projection_initialize	core/gimpprojection-construct.c	/^gimp_projection_initialize (GimpProjection *proj,$/;"	f	file:
gimp_projection_invalidate	core/gimpprojection.c	/^gimp_projection_invalidate (GimpProjection *proj,$/;"	f	file:
gimp_projection_new	core/gimpprojection.c	/^gimp_projection_new (GimpImage *image)$/;"	f
gimp_projection_paint_area	core/gimpprojection.c	/^gimp_projection_paint_area (GimpProjection *proj,$/;"	f	file:
gimp_projection_pickable_flush	core/gimpprojection.c	/^gimp_projection_pickable_flush (GimpPickable *pickable)$/;"	f	file:
gimp_projection_pickable_iface_init	core/gimpprojection.c	/^gimp_projection_pickable_iface_init (GimpPickableInterface *iface)$/;"	f	file:
gimp_projection_validate_tile	core/gimpprojection.c	/^gimp_projection_validate_tile (TileManager    *tm,$/;"	f	file:
gimp_prop_brush_box_new	widgets/gimpviewablebox.c	/^gimp_prop_brush_box_new (GimpContainer *container,$/;"	f
gimp_prop_color_button_callback	widgets/gimppropwidgets.c	/^gimp_prop_color_button_callback (GtkWidget *button,$/;"	f	file:
gimp_prop_color_button_new	widgets/gimppropwidgets.c	/^gimp_prop_color_button_new (GObject           *config,$/;"	f
gimp_prop_color_button_notify	widgets/gimppropwidgets.c	/^gimp_prop_color_button_notify (GObject    *config,$/;"	f	file:
gimp_prop_expanding_frame_new	widgets/gimppropwidgets.c	/^gimp_prop_expanding_frame_new (GObject      *config,$/;"	f
gimp_prop_font_box_new	widgets/gimpviewablebox.c	/^gimp_prop_font_box_new (GimpContainer *container,$/;"	f
gimp_prop_gradient_box_new	widgets/gimpviewablebox.c	/^gimp_prop_gradient_box_new (GimpContainer *container,$/;"	f
gimp_prop_number_pair_entry_config_notify	widgets/gimppropwidgets.c	/^gimp_prop_number_pair_entry_config_notify (GObject    *config,$/;"	f	file:
gimp_prop_number_pair_entry_data_free	widgets/gimppropwidgets.c	/^gimp_prop_number_pair_entry_data_free (GimpPropNumberPairEntryData *data)$/;"	f	file:
gimp_prop_number_pair_entry_new	widgets/gimppropwidgets.c	/^GtkWidget * gimp_prop_number_pair_entry_new (GObject     *config,$/;"	f
gimp_prop_number_pair_entry_number_pair_numbers_changed	widgets/gimppropwidgets.c	/^gimp_prop_number_pair_entry_number_pair_numbers_changed (GtkWidget                   *widget,$/;"	f	file:
gimp_prop_number_pair_entry_number_pair_user_override_notify	widgets/gimppropwidgets.c	/^gimp_prop_number_pair_entry_number_pair_user_override_notify (GtkWidget                   *entry,$/;"	f	file:
gimp_prop_paint_menu_callback	widgets/gimppropwidgets.c	/^gimp_prop_paint_menu_callback (GtkWidget *widget,$/;"	f	file:
gimp_prop_paint_menu_notify	widgets/gimppropwidgets.c	/^gimp_prop_paint_menu_notify (GObject    *config,$/;"	f	file:
gimp_prop_paint_mode_menu_new	widgets/gimppropwidgets.c	/^gimp_prop_paint_mode_menu_new (GObject     *config,$/;"	f
gimp_prop_palette_box_new	widgets/gimpviewablebox.c	/^gimp_prop_palette_box_new (GimpContainer *container,$/;"	f
gimp_prop_pattern_box_new	widgets/gimpviewablebox.c	/^gimp_prop_pattern_box_new (GimpContainer *container,$/;"	f
gimp_prop_view_drop	widgets/gimppropwidgets.c	/^gimp_prop_view_drop (GtkWidget    *view,$/;"	f	file:
gimp_prop_view_new	widgets/gimppropwidgets.c	/^gimp_prop_view_new (GObject     *config,$/;"	f
gimp_prop_view_notify	widgets/gimppropwidgets.c	/^gimp_prop_view_notify (GObject      *config,$/;"	f	file:
gimp_prop_widgets_param_spec_quark	widgets/gimppropwidgets.c	/^gimp_prop_widgets_param_spec_quark (void)$/;"	f	file:
gimp_rc_add_unknown_token	config/gimprc-unknown.c	/^gimp_rc_add_unknown_token (GimpConfig  *config,$/;"	f
gimp_rc_class_init	config/gimprc.c	/^gimp_rc_class_init (GimpRcClass *klass)$/;"	f	file:
gimp_rc_config_iface_init	config/gimprc.c	/^gimp_rc_config_iface_init (GimpConfigInterface *iface)$/;"	f	file:
gimp_rc_deserialize	config/gimprc-deserialize.c	/^gimp_rc_deserialize (GimpConfig *config,$/;"	f
gimp_rc_deserialize_unknown	config/gimprc-deserialize.c	/^gimp_rc_deserialize_unknown (GimpConfig *config,$/;"	f	file:
gimp_rc_destroy_unknown_tokens	config/gimprc-unknown.c	/^gimp_rc_destroy_unknown_tokens (GSList *unknown_tokens)$/;"	f	file:
gimp_rc_dispose	config/gimprc.c	/^gimp_rc_dispose (GObject *object)$/;"	f	file:
gimp_rc_duplicate	config/gimprc.c	/^gimp_rc_duplicate (GimpConfig *config)$/;"	f	file:
gimp_rc_duplicate_unknown_token	config/gimprc.c	/^gimp_rc_duplicate_unknown_token (const gchar *key,$/;"	f	file:
gimp_rc_finalize	config/gimprc.c	/^gimp_rc_finalize (GObject *object)$/;"	f	file:
gimp_rc_foreach_unknown_token	config/gimprc-unknown.c	/^gimp_rc_foreach_unknown_token (GimpConfig            *config,$/;"	f
gimp_rc_get_property	config/gimprc.c	/^gimp_rc_get_property (GObject    *object,$/;"	f	file:
gimp_rc_idle_save	config/gimprc.c	/^gimp_rc_idle_save (GimpRc *rc)$/;"	f	file:
gimp_rc_init	config/gimprc.c	/^gimp_rc_init (GimpRc *rc)$/;"	f	file:
gimp_rc_load	config/gimprc.c	/^gimp_rc_load (GimpRc *rc)$/;"	f	file:
gimp_rc_lookup_unknown_token	config/gimprc-unknown.c	/^gimp_rc_lookup_unknown_token (GimpConfig  *config,$/;"	f
gimp_rc_migrate	config/gimprc.c	/^gimp_rc_migrate (GimpRc *rc)$/;"	f
gimp_rc_new	config/gimprc.c	/^gimp_rc_new (const gchar *system_gimprc,$/;"	f
gimp_rc_notify	config/gimprc.c	/^gimp_rc_notify (GimpRc     *rc,$/;"	f	file:
gimp_rc_query	config/gimprc.c	/^gimp_rc_query (GimpRc      *rc,$/;"	f
gimp_rc_save	config/gimprc.c	/^gimp_rc_save (GimpRc *rc)$/;"	f
gimp_rc_serialize	config/gimprc-serialize.c	/^gimp_rc_serialize (GimpConfig       *config,$/;"	f
gimp_rc_serialize_properties_diff	config/gimprc-serialize.c	/^gimp_rc_serialize_properties_diff (GimpConfig       *config,$/;"	f	file:
gimp_rc_serialize_unknown_tokens	config/gimprc-serialize.c	/^gimp_rc_serialize_unknown_tokens (GimpConfig       *config,$/;"	f	file:
gimp_rc_set_autosave	config/gimprc.c	/^gimp_rc_set_autosave (GimpRc   *rc,$/;"	f
gimp_rc_set_property	config/gimprc.c	/^gimp_rc_set_property (GObject      *object,$/;"	f	file:
gimp_rc_set_unknown_token	config/gimprc.c	/^gimp_rc_set_unknown_token (GimpRc      *rc,$/;"	f
gimp_real_exit	core/gimp.c	/^gimp_real_exit (Gimp     *gimp,$/;"	f	file:
gimp_real_initialize	core/gimp.c	/^gimp_real_initialize (Gimp               *gimp,$/;"	f	file:
gimp_real_restore	core/gimp.c	/^gimp_real_restore (Gimp               *gimp,$/;"	f	file:
gimp_recent_item_add_group	file/gimprecentitem.c	/^gimp_recent_item_add_group (GimpRecentItem *item,$/;"	f
gimp_recent_item_free	file/gimprecentitem.c	/^gimp_recent_item_free (GimpRecentItem *item)$/;"	f	file:
gimp_recent_item_get_groups	file/gimprecentitem.c	/^gimp_recent_item_get_groups (const GimpRecentItem *item)$/;"	f
gimp_recent_item_get_mime_type	file/gimprecentitem.c	/^gimp_recent_item_get_mime_type (const GimpRecentItem *item)$/;"	f
gimp_recent_item_get_private	file/gimprecentitem.c	/^gimp_recent_item_get_private (const GimpRecentItem *item)$/;"	f
gimp_recent_item_get_timestamp	file/gimprecentitem.c	/^gimp_recent_item_get_timestamp (const GimpRecentItem *item)$/;"	f
gimp_recent_item_get_uri	file/gimprecentitem.c	/^gimp_recent_item_get_uri (const GimpRecentItem *item)$/;"	f
gimp_recent_item_get_uri_utf8	file/gimprecentitem.c	/^gimp_recent_item_get_uri_utf8 (const GimpRecentItem *item)$/;"	f
gimp_recent_item_in_group	file/gimprecentitem.c	/^gimp_recent_item_in_group (const GimpRecentItem *item,$/;"	f
gimp_recent_item_new	file/gimprecentitem.c	/^gimp_recent_item_new (void)$/;"	f
gimp_recent_item_new_from_uri	file/gimprecentitem.c	/^gimp_recent_item_new_from_uri (const gchar *uri)$/;"	f
gimp_recent_item_ref	file/gimprecentitem.c	/^gimp_recent_item_ref (GimpRecentItem *item)$/;"	f
gimp_recent_item_remove_group	file/gimprecentitem.c	/^gimp_recent_item_remove_group (GimpRecentItem *item,$/;"	f
gimp_recent_item_set_mime_type	file/gimprecentitem.c	/^gimp_recent_item_set_mime_type (GimpRecentItem *item,$/;"	f
gimp_recent_item_set_private	file/gimprecentitem.c	/^gimp_recent_item_set_private (GimpRecentItem *item,$/;"	f
gimp_recent_item_set_timestamp	file/gimprecentitem.c	/^gimp_recent_item_set_timestamp (GimpRecentItem *item,$/;"	f
gimp_recent_item_set_uri	file/gimprecentitem.c	/^gimp_recent_item_set_uri (GimpRecentItem *item,$/;"	f
gimp_recent_item_unref	file/gimprecentitem.c	/^gimp_recent_item_unref (GimpRecentItem *item)$/;"	f
gimp_recent_list_add_item	file/gimprecentlist.c	/^gimp_recent_list_add_item (GimpRecentItem *item)$/;"	f	file:
gimp_recent_list_add_new_groups	file/gimprecentlist.c	/^gimp_recent_list_add_new_groups (GimpRecentItem *item,$/;"	f	file:
gimp_recent_list_add_uri	file/gimprecentlist.c	/^gimp_recent_list_add_uri (const gchar *uri,$/;"	f
gimp_recent_list_enforce_limit	file/gimprecentlist.c	/^gimp_recent_list_enforce_limit (GList *list,$/;"	f	file:
gimp_recent_list_lock_file	file/gimprecentlist.c	/^gimp_recent_list_lock_file (gint fd)$/;"	f	file:
gimp_recent_list_read	file/gimprecentlist.c	/^gimp_recent_list_read (gint fd)$/;"	f	file:
gimp_recent_list_unlock_file	file/gimprecentlist.c	/^gimp_recent_list_unlock_file (gint fd)$/;"	f	file:
gimp_recent_list_update_item	file/gimprecentlist.c	/^gimp_recent_list_update_item (GList          *items,$/;"	f	file:
gimp_recent_list_write	file/gimprecentlist.c	/^gimp_recent_list_write (gint   fd,$/;"	f	file:
gimp_recent_list_write_raw	file/gimprecentlist.c	/^gimp_recent_list_write_raw (gint         fd,$/;"	f	file:
gimp_reconnect_displays	core/gimp-gui.c	/^gimp_reconnect_displays (Gimp      *gimp,$/;"	f
gimp_rect_select_mode_get_type	tools/tools-enums.c	/^gimp_rect_select_mode_get_type (void)$/;"	f
gimp_rect_select_options_class_init	tools/gimprectangleselectoptions.c	/^gimp_rect_select_options_class_init (GimpRectSelectOptionsClass *klass)$/;"	f	file:
gimp_rect_select_options_get_property	tools/gimprectangleselectoptions.c	/^gimp_rect_select_options_get_property (GObject      *object,$/;"	f	file:
gimp_rect_select_options_gui	tools/gimprectangleselectoptions.c	/^gimp_rect_select_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_rect_select_options_init	tools/gimprectangleselectoptions.c	/^gimp_rect_select_options_init (GimpRectSelectOptions *options)$/;"	f	file:
gimp_rect_select_options_set_property	tools/gimprectangleselectoptions.c	/^gimp_rect_select_options_set_property (GObject      *object,$/;"	f	file:
gimp_rect_select_tool_active_modifier_key	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_active_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_rect_select_tool_button_press	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_rect_select_tool_button_release	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_rect_select_tool_cancel	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_cancel (GimpRectangleTool *rectangle)$/;"	f	file:
gimp_rect_select_tool_class_init	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_class_init (GimpRectSelectToolClass *klass)$/;"	f	file:
gimp_rect_select_tool_constructor	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_constructor (GType                  type,$/;"	f	file:
gimp_rect_select_tool_control	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_rect_select_tool_cursor_update	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_rect_select_tool_draw	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_rect_select_tool_execute	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_execute (GimpRectangleTool *rectangle,$/;"	f	file:
gimp_rect_select_tool_init	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_init (GimpRectSelectTool *rect_select)$/;"	f	file:
gimp_rect_select_tool_key_press	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_key_press (GimpTool    *tool,$/;"	f	file:
gimp_rect_select_tool_oper_update	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_rect_select_tool_real_select	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_real_select (GimpRectSelectTool *rect_select,$/;"	f	file:
gimp_rect_select_tool_rectangle_changed	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_rectangle_changed (GimpRectangleTool *rectangle)$/;"	f	file:
gimp_rect_select_tool_rectangle_tool_iface_init	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_rectangle_tool_iface_init (GimpRectangleToolInterface *iface)$/;"	f	file:
gimp_rect_select_tool_register	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_register (GimpToolRegisterCallback  callback,$/;"	f
gimp_rect_select_tool_round_corners_notify	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_round_corners_notify (GimpRectSelectOptions *options,$/;"	f	file:
gimp_rect_select_tool_select	tools/gimprectangleselecttool.c	/^gimp_rect_select_tool_select (GimpRectangleTool *rectangle,$/;"	f	file:
gimp_rectangle_constraint_get_type	tools/tools-enums.c	/^gimp_rectangle_constraint_get_type (void)$/;"	f
gimp_rectangle_guide_get_type	tools/tools-enums.c	/^gimp_rectangle_guide_get_type (void)$/;"	f
gimp_rectangle_options_fixed_rule_active	tools/gimprectangleoptions.c	/^gimp_rectangle_options_fixed_rule_active (GimpRectangleOptions       *rectangle_options,$/;"	f
gimp_rectangle_options_fixed_rule_changed	tools/gimprectangleoptions.c	/^gimp_rectangle_options_fixed_rule_changed (GtkWidget                   *combo_box,$/;"	f	file:
gimp_rectangle_options_get_private	tools/gimprectangleoptions.c	/^gimp_rectangle_options_get_private (GimpRectangleOptions *options)$/;"	f
gimp_rectangle_options_get_property	tools/gimprectangleoptions.c	/^gimp_rectangle_options_get_property (GObject      *object,$/;"	f
gimp_rectangle_options_gui	tools/gimprectangleoptions.c	/^gimp_rectangle_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_rectangle_options_iface_base_init	tools/gimprectangleoptions.c	/^gimp_rectangle_options_iface_base_init (GimpRectangleOptionsInterface *iface)$/;"	f	file:
gimp_rectangle_options_install_properties	tools/gimprectangleoptions.c	/^gimp_rectangle_options_install_properties (GObjectClass *klass)$/;"	f
gimp_rectangle_options_interface_get_type	tools/gimprectangleoptions.c	/^gimp_rectangle_options_interface_get_type (void)$/;"	f
gimp_rectangle_options_private_finalize	tools/gimprectangleoptions.c	/^gimp_rectangle_options_private_finalize (GimpRectangleOptionsPrivate *private)$/;"	f	file:
gimp_rectangle_options_set_property	tools/gimprectangleoptions.c	/^gimp_rectangle_options_set_property (GObject      *object,$/;"	f
gimp_rectangle_options_setup_ratio_completion	tools/gimprectangleoptions.c	/^gimp_rectangle_options_setup_ratio_completion (GimpRectangleOptions *rectangle_options,$/;"	f	file:
gimp_rectangle_options_unparent_fixed_rule_widgets	tools/gimprectangleoptions.c	/^gimp_rectangle_options_unparent_fixed_rule_widgets (GimpRectangleOptionsPrivate *private)$/;"	f	file:
gimp_rectangle_tool_active_modifier_key	tools/gimprectangletool.c	/^gimp_rectangle_tool_active_modifier_key (GimpTool        *tool,$/;"	f
gimp_rectangle_tool_apply_aspect	tools/gimprectangletool.c	/^gimp_rectangle_tool_apply_aspect (GimpRectangleTool *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_apply_coord	tools/gimprectangletool.c	/^gimp_rectangle_tool_apply_coord (GimpRectangleTool *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_apply_fixed_height	tools/gimprectangletool.c	/^gimp_rectangle_tool_apply_fixed_height (GimpRectangleTool      *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_apply_fixed_width	tools/gimprectangletool.c	/^gimp_rectangle_tool_apply_fixed_width (GimpRectangleTool      *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_auto_shrink	tools/gimprectangletool.c	/^gimp_rectangle_tool_auto_shrink (GimpRectangleTool *rectangle)$/;"	f	file:
gimp_rectangle_tool_button_press	tools/gimprectangletool.c	/^gimp_rectangle_tool_button_press (GimpTool        *tool,$/;"	f
gimp_rectangle_tool_button_release	tools/gimprectangletool.c	/^gimp_rectangle_tool_button_release (GimpTool              *tool,$/;"	f
gimp_rectangle_tool_cancel	tools/gimprectangletool.c	/^gimp_rectangle_tool_cancel (GimpRectangleTool *rectangle)$/;"	f
gimp_rectangle_tool_check_function	tools/gimprectangletool.c	/^gimp_rectangle_tool_check_function (GimpRectangleTool *rectangle)$/;"	f	file:
gimp_rectangle_tool_clamp	tools/gimprectangletool.c	/^gimp_rectangle_tool_clamp (GimpRectangleTool       *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_clamp_height	tools/gimprectangletool.c	/^gimp_rectangle_tool_clamp_height (GimpRectangleTool       *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_clamp_width	tools/gimprectangletool.c	/^gimp_rectangle_tool_clamp_width (GimpRectangleTool       *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_constructor	tools/gimprectangletool.c	/^gimp_rectangle_tool_constructor (GObject *object)$/;"	f
gimp_rectangle_tool_control	tools/gimprectangletool.c	/^gimp_rectangle_tool_control (GimpTool       *tool,$/;"	f
gimp_rectangle_tool_cursor_update	tools/gimprectangletool.c	/^gimp_rectangle_tool_cursor_update (GimpTool        *tool,$/;"	f
gimp_rectangle_tool_draw	tools/gimprectangletool.c	/^gimp_rectangle_tool_draw (GimpDrawTool *draw_tool)$/;"	f
gimp_rectangle_tool_draw_guides	tools/gimprectangletool.c	/^gimp_rectangle_tool_draw_guides (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_rectangle_tool_execute	tools/gimprectangletool.c	/^gimp_rectangle_tool_execute (GimpRectangleTool *rectangle)$/;"	f
gimp_rectangle_tool_fixed_rule_get_type	tools/tools-enums.c	/^gimp_rectangle_tool_fixed_rule_get_type (void)$/;"	f
gimp_rectangle_tool_get_anchor	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_anchor (GimpRectangleToolPrivate *private)$/;"	f	file:
gimp_rectangle_tool_get_constraint	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_constraint (GimpRectangleTool *tool)$/;"	f
gimp_rectangle_tool_get_constraints	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_constraints (GimpRectangleTool       *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_get_function	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_function (GimpRectangleTool *rectangle)$/;"	f
gimp_rectangle_tool_get_other_side	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_other_side (GimpRectangleTool *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_get_other_side_coord	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_other_side_coord (GimpRectangleTool *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_get_press_coords	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_press_coords (GimpRectangleTool *rectangle,$/;"	f
gimp_rectangle_tool_get_private	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_private (GimpRectangleTool *tool)$/;"	f	file:
gimp_rectangle_tool_get_property	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_property (GObject      *object,$/;"	f
gimp_rectangle_tool_get_rectangle_size	tools/gimprectangletool.c	/^gimp_rectangle_tool_get_rectangle_size (GimpRectangleTool *rectangle,$/;"	f
gimp_rectangle_tool_halt	tools/gimprectangletool.c	/^gimp_rectangle_tool_halt (GimpRectangleTool *rectangle)$/;"	f	file:
gimp_rectangle_tool_handle_general_clamping	tools/gimprectangletool.c	/^gimp_rectangle_tool_handle_general_clamping (GimpRectangleTool *rectangle_tool)$/;"	f	file:
gimp_rectangle_tool_iface_base_init	tools/gimprectangletool.c	/^gimp_rectangle_tool_iface_base_init (GimpRectangleToolInterface *iface)$/;"	f	file:
gimp_rectangle_tool_install_properties	tools/gimprectangletool.c	/^gimp_rectangle_tool_install_properties (GObjectClass *klass)$/;"	f
gimp_rectangle_tool_interface_get_type	tools/gimprectangletool.c	/^gimp_rectangle_tool_interface_get_type (void)$/;"	f
gimp_rectangle_tool_keep_inside	tools/gimprectangletool.c	/^gimp_rectangle_tool_keep_inside (GimpRectangleTool      *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_keep_inside_horizontally	tools/gimprectangletool.c	/^gimp_rectangle_tool_keep_inside_horizontally (GimpRectangleTool      *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_keep_inside_vertically	tools/gimprectangletool.c	/^gimp_rectangle_tool_keep_inside_vertically (GimpRectangleTool      *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_key_press	tools/gimprectangletool.c	/^gimp_rectangle_tool_key_press (GimpTool    *tool,$/;"	f
gimp_rectangle_tool_motion	tools/gimprectangletool.c	/^gimp_rectangle_tool_motion (GimpTool        *tool,$/;"	f
gimp_rectangle_tool_oper_update	tools/gimprectangletool.c	/^gimp_rectangle_tool_oper_update (GimpTool        *tool,$/;"	f
gimp_rectangle_tool_options_notify	tools/gimprectangletool.c	/^gimp_rectangle_tool_options_notify (GimpRectangleOptions *options,$/;"	f	file:
gimp_rectangle_tool_private_finalize	tools/gimprectangletool.c	/^gimp_rectangle_tool_private_finalize (GimpRectangleToolPrivate *private)$/;"	f	file:
gimp_rectangle_tool_rectangle_changed	tools/gimprectangletool.c	/^gimp_rectangle_tool_rectangle_changed (GimpRectangleTool *rectangle)$/;"	f	file:
gimp_rectangle_tool_scale_has_changed	tools/gimprectangletool.c	/^gimp_rectangle_tool_scale_has_changed (GimpRectangleTool *rectangle_tool)$/;"	f	file:
gimp_rectangle_tool_set_constraint	tools/gimprectangletool.c	/^gimp_rectangle_tool_set_constraint (GimpRectangleTool       *tool,$/;"	f
gimp_rectangle_tool_set_function	tools/gimprectangletool.c	/^gimp_rectangle_tool_set_function (GimpRectangleTool     *rectangle,$/;"	f
gimp_rectangle_tool_set_other_side_coord	tools/gimprectangletool.c	/^gimp_rectangle_tool_set_other_side_coord (GimpRectangleTool *rectangle_tool,$/;"	f	file:
gimp_rectangle_tool_set_property	tools/gimprectangletool.c	/^gimp_rectangle_tool_set_property (GObject      *object,$/;"	f
gimp_rectangle_tool_shell_scrolled	tools/gimprectangletool.c	/^gimp_rectangle_tool_shell_scrolled (GimpDisplayShell  *shell,$/;"	f	file:
gimp_rectangle_tool_signals	tools/gimprectangletool.c	/^static guint gimp_rectangle_tool_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_rectangle_tool_start	tools/gimprectangletool.c	/^gimp_rectangle_tool_start (GimpRectangleTool *rectangle,$/;"	f	file:
gimp_rectangle_tool_synthesize_motion	tools/gimprectangletool.c	/^gimp_rectangle_tool_synthesize_motion (GimpRectangleTool *rectangle,$/;"	f	file:
gimp_rectangle_tool_update_handle_sizes	tools/gimprectangletool.c	/^gimp_rectangle_tool_update_handle_sizes (GimpRectangleTool *rectangle)$/;"	f	file:
gimp_rectangle_tool_update_highlight	tools/gimprectangletool.c	/^gimp_rectangle_tool_update_highlight (GimpRectangleTool *rectangle)$/;"	f	file:
gimp_rectangle_tool_update_options	tools/gimprectangletool.c	/^gimp_rectangle_tool_update_options (GimpRectangleTool *rectangle,$/;"	f	file:
gimp_rectangle_tool_update_with_coord	tools/gimprectangletool.c	/^gimp_rectangle_tool_update_with_coord (GimpRectangleTool *rectangle_tool,$/;"	f	file:
gimp_region_select_tool_button_press	tools/gimpregionselecttool.c	/^gimp_region_select_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_region_select_tool_button_release	tools/gimpregionselecttool.c	/^gimp_region_select_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_region_select_tool_calculate	tools/gimpregionselecttool.c	/^gimp_region_select_tool_calculate (GimpRegionSelectTool *region_sel,$/;"	f	file:
gimp_region_select_tool_class_init	tools/gimpregionselecttool.c	/^gimp_region_select_tool_class_init (GimpRegionSelectToolClass *klass)$/;"	f	file:
gimp_region_select_tool_cursor_update	tools/gimpregionselecttool.c	/^gimp_region_select_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_region_select_tool_draw	tools/gimpregionselecttool.c	/^gimp_region_select_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_region_select_tool_finalize	tools/gimpregionselecttool.c	/^gimp_region_select_tool_finalize (GObject *object)$/;"	f	file:
gimp_region_select_tool_init	tools/gimpregionselecttool.c	/^gimp_region_select_tool_init (GimpRegionSelectTool *region_select)$/;"	f	file:
gimp_region_select_tool_motion	tools/gimpregionselecttool.c	/^gimp_region_select_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_render_blend_dark_check	widgets/gimprender.c	/^guchar *gimp_render_blend_dark_check  = NULL;$/;"	v
gimp_render_blend_light_check	widgets/gimprender.c	/^guchar *gimp_render_blend_light_check = NULL;$/;"	v
gimp_render_blend_white	widgets/gimprender.c	/^guchar *gimp_render_blend_white       = NULL;$/;"	v
gimp_render_check_buf	widgets/gimprender.c	/^guchar *gimp_render_check_buf         = NULL;$/;"	v
gimp_render_empty_buf	widgets/gimprender.c	/^guchar *gimp_render_empty_buf         = NULL;$/;"	v
gimp_render_exit	widgets/gimprender.c	/^gimp_render_exit (Gimp *gimp)$/;"	f
gimp_render_init	widgets/gimprender.c	/^gimp_render_init (Gimp *gimp)$/;"	f
gimp_render_setup_notify	widgets/gimprender.c	/^gimp_render_setup_notify (gpointer    config,$/;"	f	file:
gimp_render_temp_buf	widgets/gimprender.c	/^guchar *gimp_render_temp_buf          = NULL;$/;"	v
gimp_render_white_buf	widgets/gimprender.c	/^guchar *gimp_render_white_buf         = NULL;$/;"	v
gimp_restore	core/gimp.c	/^gimp_restore (Gimp               *gimp,$/;"	f
gimp_rgb16_t	composite/gimp-composite-regression.h	/^} gimp_rgb16_t;$/;"	t	typeref:struct:__anon25
gimp_rgb32_t	composite/gimp-composite-regression.h	/^} gimp_rgb32_t;$/;"	t	typeref:struct:__anon29
gimp_rgb8_t	composite/gimp-composite-regression.h	/^} gimp_rgb8_t;$/;"	t	typeref:struct:__anon21
gimp_rgb_get_gdk_color	widgets/gimpwidgets-utils.c	/^gimp_rgb_get_gdk_color (const GimpRGB *rgb,$/;"	f
gimp_rgb_set_gdk_color	widgets/gimpwidgets-utils.c	/^gimp_rgb_set_gdk_color (GimpRGB        *rgb,$/;"	f
gimp_rgba16_t	composite/gimp-composite-regression.h	/^} gimp_rgba16_t;$/;"	t	typeref:struct:__anon26
gimp_rgba32_t	composite/gimp-composite-regression.h	/^} gimp_rgba32_t;$/;"	t	typeref:struct:__anon30
gimp_rgba8_t	composite/gimp-composite-regression.h	/^} gimp_rgba8_t;$/;"	t	typeref:struct:__anon22
gimp_rotate_tool_class_init	tools/gimprotatetool.c	/^gimp_rotate_tool_class_init (GimpRotateToolClass *klass)$/;"	f	file:
gimp_rotate_tool_dialog	tools/gimprotatetool.c	/^gimp_rotate_tool_dialog (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_rotate_tool_dialog_update	tools/gimprotatetool.c	/^gimp_rotate_tool_dialog_update (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_rotate_tool_init	tools/gimprotatetool.c	/^gimp_rotate_tool_init (GimpRotateTool *rotate_tool)$/;"	f	file:
gimp_rotate_tool_motion	tools/gimprotatetool.c	/^gimp_rotate_tool_motion (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_rotate_tool_prepare	tools/gimprotatetool.c	/^gimp_rotate_tool_prepare (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_rotate_tool_recalc	tools/gimprotatetool.c	/^gimp_rotate_tool_recalc (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_rotation_type_get_type	core/core-enums.c	/^gimp_rotation_type_get_type (void)$/;"	f
gimp_sample_point_editor_class_init	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_class_init (GimpSamplePointEditorClass *klass)$/;"	f	file:
gimp_sample_point_editor_constructor	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_constructor (GType                  type,$/;"	f	file:
gimp_sample_point_editor_dirty	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_dirty (GimpSamplePointEditor *editor,$/;"	f	file:
gimp_sample_point_editor_dispose	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_dispose (GObject *object)$/;"	f	file:
gimp_sample_point_editor_get_property	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_get_property (GObject    *object,$/;"	f	file:
gimp_sample_point_editor_get_sample_merged	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_get_sample_merged (GimpSamplePointEditor *editor)$/;"	f
gimp_sample_point_editor_init	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_init (GimpSamplePointEditor *editor)$/;"	f	file:
gimp_sample_point_editor_new	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_new (GimpMenuFactory *menu_factory)$/;"	f
gimp_sample_point_editor_point_added	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_point_added (GimpImage             *image,$/;"	f	file:
gimp_sample_point_editor_point_removed	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_point_removed (GimpImage             *image,$/;"	f	file:
gimp_sample_point_editor_point_update	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_point_update (GimpImage             *image,$/;"	f	file:
gimp_sample_point_editor_points_changed	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_points_changed (GimpSamplePointEditor *editor)$/;"	f	file:
gimp_sample_point_editor_proj_update	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_proj_update (GimpImage             *image,$/;"	f	file:
gimp_sample_point_editor_set_image	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_set_image (GimpImageEditor *image_editor,$/;"	f	file:
gimp_sample_point_editor_set_property	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_set_property (GObject      *object,$/;"	f	file:
gimp_sample_point_editor_set_sample_merged	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_set_sample_merged (GimpSamplePointEditor *editor,$/;"	f
gimp_sample_point_editor_style_set	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_style_set (GtkWidget *widget,$/;"	f	file:
gimp_sample_point_editor_update	widgets/gimpsamplepointeditor.c	/^gimp_sample_point_editor_update (GimpSamplePointEditor *editor)$/;"	f	file:
gimp_sample_point_get_type	core/gimpsamplepoint.c	/^gimp_sample_point_get_type (void)$/;"	f
gimp_sample_point_new	core/gimpsamplepoint.c	/^gimp_sample_point_new (guint32 sample_point_ID)$/;"	f
gimp_sample_point_ref	core/gimpsamplepoint.c	/^gimp_sample_point_ref (GimpSamplePoint *sample_point)$/;"	f
gimp_sample_point_undo_class_init	core/gimpsamplepointundo.c	/^gimp_sample_point_undo_class_init (GimpSamplePointUndoClass *klass)$/;"	f	file:
gimp_sample_point_undo_constructor	core/gimpsamplepointundo.c	/^gimp_sample_point_undo_constructor (GType                  type,$/;"	f	file:
gimp_sample_point_undo_free	core/gimpsamplepointundo.c	/^gimp_sample_point_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_sample_point_undo_get_property	core/gimpsamplepointundo.c	/^gimp_sample_point_undo_get_property (GObject    *object,$/;"	f	file:
gimp_sample_point_undo_init	core/gimpsamplepointundo.c	/^gimp_sample_point_undo_init (GimpSamplePointUndo *undo)$/;"	f	file:
gimp_sample_point_undo_pop	core/gimpsamplepointundo.c	/^gimp_sample_point_undo_pop (GimpUndo              *undo,$/;"	f	file:
gimp_sample_point_undo_set_property	core/gimpsamplepointundo.c	/^gimp_sample_point_undo_set_property (GObject      *object,$/;"	f	file:
gimp_sample_point_unref	core/gimpsamplepoint.c	/^gimp_sample_point_unref (GimpSamplePoint *sample_point)$/;"	f
gimp_scale_combo_box_add_action	display/gimpscalecombobox.c	/^gimp_scale_combo_box_add_action (GimpScaleComboBox *combo_box,$/;"	f
gimp_scale_combo_box_changed	display/gimpscalecombobox.c	/^gimp_scale_combo_box_changed (GimpScaleComboBox *combo_box)$/;"	f	file:
gimp_scale_combo_box_class_init	display/gimpscalecombobox.c	/^gimp_scale_combo_box_class_init (GimpScaleComboBoxClass *klass)$/;"	f	file:
gimp_scale_combo_box_finalize	display/gimpscalecombobox.c	/^gimp_scale_combo_box_finalize (GObject *object)$/;"	f	file:
gimp_scale_combo_box_get_scale	display/gimpscalecombobox.c	/^gimp_scale_combo_box_get_scale (GimpScaleComboBox *combo_box)$/;"	f
gimp_scale_combo_box_init	display/gimpscalecombobox.c	/^gimp_scale_combo_box_init (GimpScaleComboBox *combo_box)$/;"	f	file:
gimp_scale_combo_box_mru_add	display/gimpscalecombobox.c	/^gimp_scale_combo_box_mru_add (GimpScaleComboBox *combo_box,$/;"	f	file:
gimp_scale_combo_box_mru_remove_last	display/gimpscalecombobox.c	/^gimp_scale_combo_box_mru_remove_last (GimpScaleComboBox *combo_box)$/;"	f	file:
gimp_scale_combo_box_new	display/gimpscalecombobox.c	/^gimp_scale_combo_box_new (void)$/;"	f
gimp_scale_combo_box_row_separator	display/gimpscalecombobox.c	/^gimp_scale_combo_box_row_separator (GtkTreeModel *model,$/;"	f	file:
gimp_scale_combo_box_scale_iter_set	display/gimpscalecombobox.c	/^gimp_scale_combo_box_scale_iter_set (GtkListStore *store,$/;"	f	file:
gimp_scale_combo_box_set_scale	display/gimpscalecombobox.c	/^gimp_scale_combo_box_set_scale (GimpScaleComboBox *combo_box,$/;"	f
gimp_scale_tool_class_init	tools/gimpscaletool.c	/^gimp_scale_tool_class_init (GimpScaleToolClass *klass)$/;"	f	file:
gimp_scale_tool_dialog	tools/gimpscaletool.c	/^gimp_scale_tool_dialog (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_scale_tool_dialog_update	tools/gimpscaletool.c	/^gimp_scale_tool_dialog_update (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_scale_tool_init	tools/gimpscaletool.c	/^gimp_scale_tool_init (GimpScaleTool *scale_tool)$/;"	f	file:
gimp_scale_tool_motion	tools/gimpscaletool.c	/^gimp_scale_tool_motion (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_scale_tool_prepare	tools/gimpscaletool.c	/^gimp_scale_tool_prepare (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_scale_tool_recalc	tools/gimpscaletool.c	/^gimp_scale_tool_recalc (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_scale_tool_size_notify	tools/gimpscaletool.c	/^gimp_scale_tool_size_notify (GtkWidget         *box,$/;"	f	file:
gimp_scan_convert_add_points	core/gimpscanconvert.c	/^gimp_scan_convert_add_points (GimpScanConvert *sc,$/;"	f
gimp_scan_convert_add_polyline	core/gimpscanconvert.c	/^gimp_scan_convert_add_polyline (GimpScanConvert *sc,$/;"	f
gimp_scan_convert_close_add_points	core/gimpscanconvert.c	/^gimp_scan_convert_close_add_points (GimpScanConvert *sc)$/;"	f	file:
gimp_scan_convert_compose	core/gimpscanconvert.c	/^gimp_scan_convert_compose (GimpScanConvert *sc,$/;"	f
gimp_scan_convert_compose_callback	core/gimpscanconvert.c	/^gimp_scan_convert_compose_callback (gpointer            user_data,$/;"	f	file:
gimp_scan_convert_finish	core/gimpscanconvert.c	/^gimp_scan_convert_finish (GimpScanConvert *sc)$/;"	f	file:
gimp_scan_convert_free	core/gimpscanconvert.c	/^gimp_scan_convert_free (GimpScanConvert *sc)$/;"	f
gimp_scan_convert_new	core/gimpscanconvert.c	/^gimp_scan_convert_new (void)$/;"	f
gimp_scan_convert_render	core/gimpscanconvert.c	/^gimp_scan_convert_render (GimpScanConvert *sc,$/;"	f
gimp_scan_convert_render_callback	core/gimpscanconvert.c	/^gimp_scan_convert_render_callback (gpointer            user_data,$/;"	f	file:
gimp_scan_convert_render_internal	core/gimpscanconvert.c	/^gimp_scan_convert_render_internal (GimpScanConvert *sc,$/;"	f	file:
gimp_scan_convert_render_value	core/gimpscanconvert.c	/^gimp_scan_convert_render_value (GimpScanConvert *sc,$/;"	f
gimp_scan_convert_set_clip_rectangle	core/gimpscanconvert.c	/^gimp_scan_convert_set_clip_rectangle (GimpScanConvert *sc,$/;"	f
gimp_scan_convert_set_pixel_ratio	core/gimpscanconvert.c	/^gimp_scan_convert_set_pixel_ratio (GimpScanConvert *sc,$/;"	f
gimp_scan_convert_stroke	core/gimpscanconvert.c	/^gimp_scan_convert_stroke (GimpScanConvert *sc,$/;"	f
gimp_select_criterion_get_type	core/core-enums.c	/^gimp_select_criterion_get_type (void)$/;"	f
gimp_selection_all	core/gimpselection.c	/^gimp_selection_all (GimpChannel *channel,$/;"	f	file:
gimp_selection_border	core/gimpselection.c	/^gimp_selection_border (GimpChannel *channel,$/;"	f	file:
gimp_selection_boundary	core/gimpselection.c	/^gimp_selection_boundary (GimpChannel     *channel,$/;"	f	file:
gimp_selection_bounds	core/gimpselection.c	/^gimp_selection_bounds (GimpChannel *channel,$/;"	f	file:
gimp_selection_class_init	core/gimpselection.c	/^gimp_selection_class_init (GimpSelectionClass *klass)$/;"	f	file:
gimp_selection_clear	core/gimpselection.c	/^gimp_selection_clear (GimpChannel *channel,$/;"	f	file:
gimp_selection_control_get_type	core/core-enums.c	/^gimp_selection_control_get_type (void)$/;"	f
gimp_selection_data_get_brush	widgets/gimpselectiondata.c	/^gimp_selection_data_get_brush (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_buffer	widgets/gimpselectiondata.c	/^gimp_selection_data_get_buffer (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_color	widgets/gimpselectiondata.c	/^gimp_selection_data_get_color (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_component	widgets/gimpselectiondata.c	/^gimp_selection_data_get_component (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_font	widgets/gimpselectiondata.c	/^gimp_selection_data_get_font (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_gradient	widgets/gimpselectiondata.c	/^gimp_selection_data_get_gradient (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_image	widgets/gimpselectiondata.c	/^gimp_selection_data_get_image (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_imagefile	widgets/gimpselectiondata.c	/^gimp_selection_data_get_imagefile (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_item	widgets/gimpselectiondata.c	/^gimp_selection_data_get_item (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_name	widgets/gimpselectiondata.c	/^gimp_selection_data_get_name (GtkSelectionData *selection)$/;"	f	file:
gimp_selection_data_get_object	widgets/gimpselectiondata.c	/^gimp_selection_data_get_object (GtkSelectionData *selection,$/;"	f	file:
gimp_selection_data_get_palette	widgets/gimpselectiondata.c	/^gimp_selection_data_get_palette (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_pattern	widgets/gimpselectiondata.c	/^gimp_selection_data_get_pattern (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_stream	widgets/gimpselectiondata.c	/^gimp_selection_data_get_stream (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_template	widgets/gimpselectiondata.c	/^gimp_selection_data_get_template (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_tool_info	widgets/gimpselectiondata.c	/^gimp_selection_data_get_tool_info (GtkSelectionData *selection,$/;"	f
gimp_selection_data_get_uri_list	widgets/gimpselectiondata.c	/^gimp_selection_data_get_uri_list (GtkSelectionData *selection)$/;"	f
gimp_selection_data_set_color	widgets/gimpselectiondata.c	/^gimp_selection_data_set_color (GtkSelectionData *selection,$/;"	f
gimp_selection_data_set_component	widgets/gimpselectiondata.c	/^gimp_selection_data_set_component (GtkSelectionData *selection,$/;"	f
gimp_selection_data_set_image	widgets/gimpselectiondata.c	/^gimp_selection_data_set_image (GtkSelectionData *selection,$/;"	f
gimp_selection_data_set_item	widgets/gimpselectiondata.c	/^gimp_selection_data_set_item (GtkSelectionData *selection,$/;"	f
gimp_selection_data_set_object	widgets/gimpselectiondata.c	/^gimp_selection_data_set_object (GtkSelectionData *selection,$/;"	f
gimp_selection_data_set_stream	widgets/gimpselectiondata.c	/^gimp_selection_data_set_stream (GtkSelectionData *selection,$/;"	f
gimp_selection_data_set_uri_list	widgets/gimpselectiondata.c	/^gimp_selection_data_set_uri_list (GtkSelectionData *selection,$/;"	f
gimp_selection_editor_class_init	widgets/gimpselectioneditor.c	/^gimp_selection_editor_class_init (GimpSelectionEditorClass *klass)$/;"	f	file:
gimp_selection_editor_constructor	widgets/gimpselectioneditor.c	/^gimp_selection_editor_constructor (GType                  type,$/;"	f	file:
gimp_selection_editor_docked_iface_init	widgets/gimpselectioneditor.c	/^gimp_selection_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_selection_editor_drop_color	widgets/gimpselectioneditor.c	/^gimp_selection_editor_drop_color (GtkWidget     *widget,$/;"	f	file:
gimp_selection_editor_init	widgets/gimpselectioneditor.c	/^gimp_selection_editor_init (GimpSelectionEditor *editor)$/;"	f	file:
gimp_selection_editor_mask_changed	widgets/gimpselectioneditor.c	/^gimp_selection_editor_mask_changed (GimpImage           *image,$/;"	f	file:
gimp_selection_editor_new	widgets/gimpselectioneditor.c	/^gimp_selection_editor_new (GimpMenuFactory *menu_factory)$/;"	f
gimp_selection_editor_set_context	widgets/gimpselectioneditor.c	/^gimp_selection_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_selection_editor_set_image	widgets/gimpselectioneditor.c	/^gimp_selection_editor_set_image (GimpImageEditor *image_editor,$/;"	f	file:
gimp_selection_extract	core/gimpselection.c	/^gimp_selection_extract (GimpChannel  *selection,$/;"	f
gimp_selection_feather	core/gimpselection.c	/^gimp_selection_feather (GimpChannel *channel,$/;"	f	file:
gimp_selection_flip	core/gimpselection.c	/^gimp_selection_flip (GimpItem            *item,$/;"	f	file:
gimp_selection_float	core/gimpselection.c	/^gimp_selection_float (GimpChannel  *selection,$/;"	f
gimp_selection_grow	core/gimpselection.c	/^gimp_selection_grow (GimpChannel *channel,$/;"	f	file:
gimp_selection_id_get_type	core/gimpparamspecs.c	/^gimp_selection_id_get_type (void)$/;"	f
gimp_selection_init	core/gimpselection.c	/^gimp_selection_init (GimpSelection *selection)$/;"	f	file:
gimp_selection_invalidate_boundary	core/gimpselection.c	/^gimp_selection_invalidate_boundary (GimpDrawable *drawable)$/;"	f	file:
gimp_selection_invert	core/gimpselection.c	/^gimp_selection_invert (GimpChannel *channel,$/;"	f	file:
gimp_selection_is_attached	core/gimpselection.c	/^gimp_selection_is_attached (GimpItem *item)$/;"	f	file:
gimp_selection_is_empty	core/gimpselection.c	/^gimp_selection_is_empty (GimpChannel *channel)$/;"	f	file:
gimp_selection_load	core/gimpselection.c	/^gimp_selection_load (GimpChannel *selection,$/;"	f
gimp_selection_new	core/gimpselection.c	/^gimp_selection_new (GimpImage *image,$/;"	f
gimp_selection_options_class_init	tools/gimpselectionoptions.c	/^gimp_selection_options_class_init (GimpSelectionOptionsClass *klass)$/;"	f	file:
gimp_selection_options_get_modifier	tools/gimpselectionoptions.c	/^gimp_selection_options_get_modifier (GimpChannelOps operation)$/;"	f	file:
gimp_selection_options_get_property	tools/gimpselectionoptions.c	/^gimp_selection_options_get_property (GObject    *object,$/;"	f	file:
gimp_selection_options_gui	tools/gimpselectionoptions.c	/^gimp_selection_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_selection_options_init	tools/gimpselectionoptions.c	/^gimp_selection_options_init (GimpSelectionOptions *options)$/;"	f	file:
gimp_selection_options_reset	tools/gimpselectionoptions.c	/^gimp_selection_options_reset (GimpToolOptions *tool_options)$/;"	f	file:
gimp_selection_options_set_property	tools/gimpselectionoptions.c	/^gimp_selection_options_set_property (GObject      *object,$/;"	f	file:
gimp_selection_resize	core/gimpselection.c	/^gimp_selection_resize (GimpItem    *item,$/;"	f	file:
gimp_selection_rotate	core/gimpselection.c	/^gimp_selection_rotate (GimpItem         *item,$/;"	f	file:
gimp_selection_save	core/gimpselection.c	/^gimp_selection_save (GimpChannel *selection)$/;"	f
gimp_selection_scale	core/gimpselection.c	/^gimp_selection_scale (GimpItem              *item,$/;"	f	file:
gimp_selection_sharpen	core/gimpselection.c	/^gimp_selection_sharpen (GimpChannel *channel,$/;"	f	file:
gimp_selection_shrink	core/gimpselection.c	/^gimp_selection_shrink (GimpChannel *channel,$/;"	f	file:
gimp_selection_stroke	core/gimpselection.c	/^gimp_selection_stroke (GimpItem       *item,$/;"	f	file:
gimp_selection_tool_class_init	tools/gimpselectiontool.c	/^gimp_selection_tool_class_init (GimpSelectionToolClass *klass)$/;"	f	file:
gimp_selection_tool_cursor_update	tools/gimpselectiontool.c	/^gimp_selection_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_selection_tool_init	tools/gimpselectiontool.c	/^gimp_selection_tool_init (GimpSelectionTool *selection_tool)$/;"	f	file:
gimp_selection_tool_modifier_key	tools/gimpselectiontool.c	/^gimp_selection_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_selection_tool_oper_update	tools/gimpselectiontool.c	/^gimp_selection_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_selection_tool_start_edit	tools/gimpselectiontool.c	/^gimp_selection_tool_start_edit (GimpSelectionTool *sel_tool,$/;"	f
gimp_selection_translate	core/gimpselection.c	/^gimp_selection_translate (GimpItem *item,$/;"	f	file:
gimp_selection_validate_tile	core/gimpselection.c	/^gimp_selection_validate_tile (TileManager *tm,$/;"	f	file:
gimp_selection_view_button_press	widgets/gimpselectioneditor.c	/^gimp_selection_view_button_press (GtkWidget           *widget,$/;"	f	file:
gimp_session_info_aux_deserialize	widgets/gimpsessioninfo-aux.c	/^gimp_session_info_aux_deserialize (GScanner  *scanner,$/;"	f
gimp_session_info_aux_free	widgets/gimpsessioninfo-aux.c	/^gimp_session_info_aux_free (GimpSessionInfoAux *aux)$/;"	f
gimp_session_info_aux_get_list	widgets/gimpsessioninfo-aux.c	/^gimp_session_info_aux_get_list (GtkWidget *dialog)$/;"	f
gimp_session_info_aux_new	widgets/gimpsessioninfo-aux.c	/^gimp_session_info_aux_new (const gchar *name,$/;"	f
gimp_session_info_aux_new_from_props	widgets/gimpsessioninfo-aux.c	/^gimp_session_info_aux_new_from_props (GObject *object,$/;"	f
gimp_session_info_aux_serialize	widgets/gimpsessioninfo-aux.c	/^gimp_session_info_aux_serialize (GimpConfigWriter *writer,$/;"	f
gimp_session_info_aux_set_list	widgets/gimpsessioninfo-aux.c	/^gimp_session_info_aux_set_list (GtkWidget *dialog,$/;"	f
gimp_session_info_aux_set_props	widgets/gimpsessioninfo-aux.c	/^gimp_session_info_aux_set_props (GObject *object,$/;"	f
gimp_session_info_book_deserialize	widgets/gimpsessioninfo-book.c	/^gimp_session_info_book_deserialize (GScanner        *scanner,$/;"	f
gimp_session_info_book_free	widgets/gimpsessioninfo-book.c	/^gimp_session_info_book_free (GimpSessionInfoBook *info)$/;"	f
gimp_session_info_book_new	widgets/gimpsessioninfo-book.c	/^gimp_session_info_book_new (void)$/;"	f
gimp_session_info_book_restore	widgets/gimpsessioninfo-book.c	/^gimp_session_info_book_restore (GimpSessionInfoBook *info,$/;"	f
gimp_session_info_book_serialize	widgets/gimpsessioninfo-book.c	/^gimp_session_info_book_serialize (GimpConfigWriter *writer,$/;"	f
gimp_session_info_deserialize	widgets/gimpsessioninfo.c	/^gimp_session_info_deserialize (GScanner *scanner,$/;"	f
gimp_session_info_dock_deserialize	widgets/gimpsessioninfo-dock.c	/^gimp_session_info_dock_deserialize (GScanner        *scanner,$/;"	f
gimp_session_info_dock_paned_map	widgets/gimpsessioninfo-dock.c	/^gimp_session_info_dock_paned_map (GtkWidget *paned,$/;"	f	file:
gimp_session_info_dock_paned_size_allocate	widgets/gimpsessioninfo-dock.c	/^gimp_session_info_dock_paned_size_allocate (GtkWidget     *paned,$/;"	f	file:
gimp_session_info_dock_restore	widgets/gimpsessioninfo-dock.c	/^gimp_session_info_dock_restore (GimpSessionInfo   *info,$/;"	f
gimp_session_info_dock_serialize	widgets/gimpsessioninfo-dock.c	/^gimp_session_info_dock_serialize (GimpConfigWriter *writer,$/;"	f
gimp_session_info_dockable_deserialize	widgets/gimpsessioninfo-dockable.c	/^gimp_session_info_dockable_deserialize (GScanner            *scanner,$/;"	f
gimp_session_info_dockable_free	widgets/gimpsessioninfo-dockable.c	/^gimp_session_info_dockable_free (GimpSessionInfoDockable *info)$/;"	f
gimp_session_info_dockable_new	widgets/gimpsessioninfo-dockable.c	/^gimp_session_info_dockable_new (void)$/;"	f
gimp_session_info_dockable_restore	widgets/gimpsessioninfo-dockable.c	/^gimp_session_info_dockable_restore (GimpSessionInfoDockable *info,$/;"	f
gimp_session_info_dockable_serialize	widgets/gimpsessioninfo-dockable.c	/^gimp_session_info_dockable_serialize (GimpConfigWriter *writer,$/;"	f
gimp_session_info_free	widgets/gimpsessioninfo.c	/^gimp_session_info_free (GimpSessionInfo *info)$/;"	f
gimp_session_info_get_geometry	widgets/gimpsessioninfo.c	/^gimp_session_info_get_geometry (GimpSessionInfo *info)$/;"	f
gimp_session_info_new	widgets/gimpsessioninfo.c	/^gimp_session_info_new (void)$/;"	f
gimp_session_info_restore	widgets/gimpsessioninfo.c	/^gimp_session_info_restore (GimpSessionInfo   *info,$/;"	f
gimp_session_info_serialize	widgets/gimpsessioninfo.c	/^gimp_session_info_serialize (GimpConfigWriter *writer,$/;"	f
gimp_session_info_set_geometry	widgets/gimpsessioninfo.c	/^gimp_session_info_set_geometry (GimpSessionInfo *info)$/;"	f
gimp_set_busy	core/gimp-gui.c	/^gimp_set_busy (Gimp *gimp)$/;"	f
gimp_set_busy_until_idle	core/gimp-gui.c	/^gimp_set_busy_until_idle (Gimp *gimp)$/;"	f
gimp_set_default_context	core/gimp.c	/^gimp_set_default_context (Gimp        *gimp,$/;"	f
gimp_set_global_buffer	core/gimp.c	/^gimp_set_global_buffer (Gimp       *gimp,$/;"	f
gimp_set_user_context	core/gimp.c	/^gimp_set_user_context (Gimp        *gimp,$/;"	f
gimp_shear_tool_class_init	tools/gimpsheartool.c	/^gimp_shear_tool_class_init (GimpShearToolClass *klass)$/;"	f	file:
gimp_shear_tool_dialog	tools/gimpsheartool.c	/^gimp_shear_tool_dialog (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_shear_tool_dialog_update	tools/gimpsheartool.c	/^gimp_shear_tool_dialog_update (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_shear_tool_init	tools/gimpsheartool.c	/^gimp_shear_tool_init (GimpShearTool *shear_tool)$/;"	f	file:
gimp_shear_tool_motion	tools/gimpsheartool.c	/^gimp_shear_tool_motion (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_shear_tool_prepare	tools/gimpsheartool.c	/^gimp_shear_tool_prepare (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_shear_tool_recalc	tools/gimpsheartool.c	/^gimp_shear_tool_recalc (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_show_license_and_exit	main.c	/^gimp_show_license_and_exit (void)$/;"	f	file:
gimp_show_message	core/gimp-gui.c	/^gimp_show_message (Gimp                *gimp,$/;"	f
gimp_show_version	main.c	/^gimp_show_version (void)$/;"	f	file:
gimp_show_version_and_exit	main.c	/^gimp_show_version_and_exit (void)$/;"	f	file:
gimp_sigfatal_handler	main.c	/^gimp_sigfatal_handler (gint sig_num)$/;"	f	file:
gimp_signals	core/gimp.c	/^static guint gimp_signals[LAST_SIGNAL] = { 0, };$/;"	v	file:
gimp_size_box_chain_toggled	widgets/gimpsizebox.c	/^gimp_size_box_chain_toggled (GimpChainButton *button,$/;"	f	file:
gimp_size_box_class_init	widgets/gimpsizebox.c	/^gimp_size_box_class_init (GimpSizeBoxClass *klass)$/;"	f	file:
gimp_size_box_constructor	widgets/gimpsizebox.c	/^gimp_size_box_constructor (GType                  type,$/;"	f	file:
gimp_size_box_destroy	widgets/gimpsizebox.c	/^gimp_size_box_destroy (GtkObject *object)$/;"	f	file:
gimp_size_box_get_property	widgets/gimpsizebox.c	/^gimp_size_box_get_property (GObject    *object,$/;"	f	file:
gimp_size_box_init	widgets/gimpsizebox.c	/^gimp_size_box_init (GimpSizeBox *box)$/;"	f	file:
gimp_size_box_set_property	widgets/gimpsizebox.c	/^gimp_size_box_set_property (GObject      *object,$/;"	f	file:
gimp_size_box_update_resolution	widgets/gimpsizebox.c	/^gimp_size_box_update_resolution (GimpSizeBox *box)$/;"	f	file:
gimp_size_box_update_size	widgets/gimpsizebox.c	/^gimp_size_box_update_size (GimpSizeBox *box)$/;"	f	file:
gimp_smudge_brush_coords	paint/gimpsmudge.c	/^gimp_smudge_brush_coords (GimpPaintCore *paint_core,$/;"	f	file:
gimp_smudge_class_init	paint/gimpsmudge.c	/^gimp_smudge_class_init (GimpSmudgeClass *klass)$/;"	f	file:
gimp_smudge_finalize	paint/gimpsmudge.c	/^gimp_smudge_finalize (GObject *object)$/;"	f	file:
gimp_smudge_init	paint/gimpsmudge.c	/^gimp_smudge_init (GimpSmudge *smudge)$/;"	f	file:
gimp_smudge_motion	paint/gimpsmudge.c	/^gimp_smudge_motion (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_smudge_options_class_init	paint/gimpsmudgeoptions.c	/^gimp_smudge_options_class_init (GimpSmudgeOptionsClass *klass)$/;"	f	file:
gimp_smudge_options_get_property	paint/gimpsmudgeoptions.c	/^gimp_smudge_options_get_property (GObject    *object,$/;"	f	file:
gimp_smudge_options_gui	tools/gimpsmudgetool.c	/^gimp_smudge_options_gui (GimpToolOptions *tool_options)$/;"	f	file:
gimp_smudge_options_init	paint/gimpsmudgeoptions.c	/^gimp_smudge_options_init (GimpSmudgeOptions *options)$/;"	f	file:
gimp_smudge_options_set_property	paint/gimpsmudgeoptions.c	/^gimp_smudge_options_set_property (GObject      *object,$/;"	f	file:
gimp_smudge_paint	paint/gimpsmudge.c	/^gimp_smudge_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_smudge_start	paint/gimpsmudge.c	/^gimp_smudge_start (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_smudge_tool_class_init	tools/gimpsmudgetool.c	/^gimp_smudge_tool_class_init (GimpSmudgeToolClass *klass)$/;"	f	file:
gimp_smudge_tool_init	tools/gimpsmudgetool.c	/^gimp_smudge_tool_init (GimpSmudgeTool *smudge)$/;"	f	file:
gimp_source_align_mode_get_type	paint/paint-enums.c	/^gimp_source_align_mode_get_type (void)$/;"	f
gimp_source_core_class_init	paint/gimpsourcecore.c	/^gimp_source_core_class_init (GimpSourceCoreClass *klass)$/;"	f	file:
gimp_source_core_get_property	paint/gimpsourcecore.c	/^gimp_source_core_get_property (GObject    *object,$/;"	f	file:
gimp_source_core_init	paint/gimpsourcecore.c	/^gimp_source_core_init (GimpSourceCore *source_core)$/;"	f	file:
gimp_source_core_motion	paint/gimpsourcecore.c	/^gimp_source_core_motion (GimpSourceCore   *source_core,$/;"	f
gimp_source_core_paint	paint/gimpsourcecore.c	/^gimp_source_core_paint (GimpPaintCore    *paint_core,$/;"	f	file:
gimp_source_core_real_get_source	paint/gimpsourcecore.c	/^gimp_source_core_real_get_source (GimpSourceCore   *source_core,$/;"	f	file:
gimp_source_core_set_property	paint/gimpsourcecore.c	/^gimp_source_core_set_property (GObject      *object,$/;"	f	file:
gimp_source_core_set_src_drawable	paint/gimpsourcecore.c	/^gimp_source_core_set_src_drawable (GimpSourceCore *source_core,$/;"	f	file:
gimp_source_core_src_drawable_removed	paint/gimpsourcecore.c	/^gimp_source_core_src_drawable_removed (GimpDrawable   *drawable,$/;"	f	file:
gimp_source_core_start	paint/gimpsourcecore.c	/^gimp_source_core_start (GimpPaintCore     *paint_core,$/;"	f	file:
gimp_source_options_class_init	paint/gimpsourceoptions.c	/^gimp_source_options_class_init (GimpSourceOptionsClass *klass)$/;"	f	file:
gimp_source_options_get_property	paint/gimpsourceoptions.c	/^gimp_source_options_get_property (GObject    *object,$/;"	f	file:
gimp_source_options_init	paint/gimpsourceoptions.c	/^gimp_source_options_init (GimpSourceOptions *options)$/;"	f	file:
gimp_source_options_set_property	paint/gimpsourceoptions.c	/^gimp_source_options_set_property (GObject      *object,$/;"	f	file:
gimp_source_tool_button_press	tools/gimpsourcetool.c	/^gimp_source_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_source_tool_class_init	tools/gimpsourcetool.c	/^gimp_source_tool_class_init (GimpSourceToolClass *klass)$/;"	f	file:
gimp_source_tool_control	tools/gimpsourcetool.c	/^gimp_source_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_source_tool_cursor_update	tools/gimpsourcetool.c	/^gimp_source_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_source_tool_draw	tools/gimpsourcetool.c	/^gimp_source_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_source_tool_has_display	tools/gimpsourcetool.c	/^gimp_source_tool_has_display (GimpTool    *tool,$/;"	f	file:
gimp_source_tool_has_image	tools/gimpsourcetool.c	/^gimp_source_tool_has_image (GimpTool  *tool,$/;"	f	file:
gimp_source_tool_init	tools/gimpsourcetool.c	/^gimp_source_tool_init (GimpSourceTool *source)$/;"	f	file:
gimp_source_tool_modifier_key	tools/gimpsourcetool.c	/^gimp_source_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_source_tool_motion	tools/gimpsourcetool.c	/^gimp_source_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_source_tool_oper_update	tools/gimpsourcetool.c	/^gimp_source_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_space_bar_action_get_type	display/display-enums.c	/^gimp_space_bar_action_get_type (void)$/;"	f
gimp_statusbar_class_init	display/gimpstatusbar.c	/^gimp_statusbar_class_init (GimpStatusbarClass *klass)$/;"	f	file:
gimp_statusbar_clear_cursor	display/gimpstatusbar.c	/^gimp_statusbar_clear_cursor (GimpStatusbar *statusbar)$/;"	f
gimp_statusbar_destroy	display/gimpstatusbar.c	/^gimp_statusbar_destroy (GtkObject *object)$/;"	f	file:
gimp_statusbar_finalize	display/gimpstatusbar.c	/^gimp_statusbar_finalize (GObject *object)$/;"	f	file:
gimp_statusbar_get_context_id	display/gimpstatusbar.c	/^gimp_statusbar_get_context_id (GimpStatusbar *statusbar,$/;"	f	file:
gimp_statusbar_get_visible	display/gimpstatusbar.c	/^gimp_statusbar_get_visible (GimpStatusbar *statusbar)$/;"	f
gimp_statusbar_init	display/gimpstatusbar.c	/^gimp_statusbar_init (GimpStatusbar *statusbar)$/;"	f	file:
gimp_statusbar_msg_free	display/gimpstatusbar.c	/^gimp_statusbar_msg_free (GimpStatusbarMsg *msg)$/;"	f	file:
gimp_statusbar_new	display/gimpstatusbar.c	/^gimp_statusbar_new (GimpDisplayShell *shell)$/;"	f
gimp_statusbar_pop	display/gimpstatusbar.c	/^gimp_statusbar_pop (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_pop_temp	display/gimpstatusbar.c	/^gimp_statusbar_pop_temp (GimpStatusbar *statusbar)$/;"	f
gimp_statusbar_progress_canceled	display/gimpstatusbar.c	/^gimp_statusbar_progress_canceled (GtkWidget     *button,$/;"	f	file:
gimp_statusbar_progress_end	display/gimpstatusbar.c	/^gimp_statusbar_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_statusbar_progress_expose	display/gimpstatusbar.c	/^gimp_statusbar_progress_expose (GtkWidget      *widget,$/;"	f	file:
gimp_statusbar_progress_get_value	display/gimpstatusbar.c	/^gimp_statusbar_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_statusbar_progress_iface_init	display/gimpstatusbar.c	/^gimp_statusbar_progress_iface_init (GimpProgressInterface *iface)$/;"	f	file:
gimp_statusbar_progress_is_active	display/gimpstatusbar.c	/^gimp_statusbar_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_statusbar_progress_message	display/gimpstatusbar.c	/^gimp_statusbar_progress_message (GimpProgress        *progress,$/;"	f	file:
gimp_statusbar_progress_pulse	display/gimpstatusbar.c	/^gimp_statusbar_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_statusbar_progress_set_text	display/gimpstatusbar.c	/^gimp_statusbar_progress_set_text (GimpProgress *progress,$/;"	f	file:
gimp_statusbar_progress_set_value	display/gimpstatusbar.c	/^gimp_statusbar_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_statusbar_progress_start	display/gimpstatusbar.c	/^gimp_statusbar_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_statusbar_progress_style_set	display/gimpstatusbar.c	/^gimp_statusbar_progress_style_set (GtkWidget     *widget,$/;"	f	file:
gimp_statusbar_push	display/gimpstatusbar.c	/^gimp_statusbar_push (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_push_coords	display/gimpstatusbar.c	/^gimp_statusbar_push_coords (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_push_length	display/gimpstatusbar.c	/^gimp_statusbar_push_length (GimpStatusbar       *statusbar,$/;"	f
gimp_statusbar_push_temp	display/gimpstatusbar.c	/^gimp_statusbar_push_temp (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_push_temp_valist	display/gimpstatusbar.c	/^gimp_statusbar_push_temp_valist (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_push_valist	display/gimpstatusbar.c	/^gimp_statusbar_push_valist (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_replace	display/gimpstatusbar.c	/^gimp_statusbar_replace (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_replace_valist	display/gimpstatusbar.c	/^gimp_statusbar_replace_valist (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_scale_changed	display/gimpstatusbar.c	/^gimp_statusbar_scale_changed (GimpScaleComboBox *combo,$/;"	f	file:
gimp_statusbar_set_visible	display/gimpstatusbar.c	/^gimp_statusbar_set_visible (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_shell_scaled	display/gimpstatusbar.c	/^gimp_statusbar_shell_scaled (GimpDisplayShell *shell,$/;"	f	file:
gimp_statusbar_temp_timeout	display/gimpstatusbar.c	/^gimp_statusbar_temp_timeout (GimpStatusbar *statusbar)$/;"	f	file:
gimp_statusbar_unit_changed	display/gimpstatusbar.c	/^gimp_statusbar_unit_changed (GimpUnitComboBox *combo,$/;"	f	file:
gimp_statusbar_update	display/gimpstatusbar.c	/^gimp_statusbar_update (GimpStatusbar *statusbar)$/;"	f	file:
gimp_statusbar_update_cursor	display/gimpstatusbar.c	/^gimp_statusbar_update_cursor (GimpStatusbar *statusbar,$/;"	f
gimp_statusbar_vprintf	display/gimpstatusbar.c	/^gimp_statusbar_vprintf (const gchar *format,$/;"	f	file:
gimp_string_action_activate	widgets/gimpstringaction.c	/^gimp_string_action_activate (GtkAction *action)$/;"	f	file:
gimp_string_action_class_init	widgets/gimpstringaction.c	/^gimp_string_action_class_init (GimpStringActionClass *klass)$/;"	f	file:
gimp_string_action_finalize	widgets/gimpstringaction.c	/^gimp_string_action_finalize (GObject *object)$/;"	f	file:
gimp_string_action_get_property	widgets/gimpstringaction.c	/^gimp_string_action_get_property (GObject    *object,$/;"	f	file:
gimp_string_action_init	widgets/gimpstringaction.c	/^gimp_string_action_init (GimpStringAction *action)$/;"	f	file:
gimp_string_action_new	widgets/gimpstringaction.c	/^gimp_string_action_new (const gchar *name,$/;"	f
gimp_string_action_selected	widgets/gimpstringaction.c	/^gimp_string_action_selected (GimpStringAction *action,$/;"	f
gimp_string_action_set_property	widgets/gimpstringaction.c	/^gimp_string_action_set_property (GObject      *object,$/;"	f	file:
gimp_string_array_copy	core/gimpparamspecs.c	/^gimp_string_array_copy (const GimpArray *array)$/;"	f
gimp_string_array_free	core/gimpparamspecs.c	/^gimp_string_array_free (GimpArray *array)$/;"	f
gimp_string_array_get_type	core/gimpparamspecs.c	/^gimp_string_array_get_type (void)$/;"	f
gimp_string_array_new	core/gimpparamspecs.c	/^gimp_string_array_new (const gchar **data,$/;"	f
gimp_stroke_anchor_convert	vectors/gimpstroke.c	/^gimp_stroke_anchor_convert (GimpStroke            *stroke,$/;"	f
gimp_stroke_anchor_delete	vectors/gimpstroke.c	/^gimp_stroke_anchor_delete (GimpStroke *stroke,$/;"	f
gimp_stroke_anchor_get	vectors/gimpstroke.c	/^gimp_stroke_anchor_get (const GimpStroke *stroke,$/;"	f
gimp_stroke_anchor_get_next	vectors/gimpstroke.c	/^gimp_stroke_anchor_get_next (const GimpStroke *stroke,$/;"	f
gimp_stroke_anchor_insert	vectors/gimpstroke.c	/^gimp_stroke_anchor_insert (GimpStroke *stroke,$/;"	f
gimp_stroke_anchor_is_insertable	vectors/gimpstroke.c	/^gimp_stroke_anchor_is_insertable (GimpStroke *stroke,$/;"	f
gimp_stroke_anchor_move_absolute	vectors/gimpstroke.c	/^gimp_stroke_anchor_move_absolute (GimpStroke            *stroke,$/;"	f
gimp_stroke_anchor_move_relative	vectors/gimpstroke.c	/^gimp_stroke_anchor_move_relative (GimpStroke            *stroke,$/;"	f
gimp_stroke_anchor_select	vectors/gimpstroke.c	/^gimp_stroke_anchor_select (GimpStroke *stroke,$/;"	f
gimp_stroke_class_init	vectors/gimpstroke.c	/^gimp_stroke_class_init (GimpStrokeClass *klass)$/;"	f	file:
gimp_stroke_close	vectors/gimpstroke.c	/^gimp_stroke_close (GimpStroke *stroke)$/;"	f
gimp_stroke_connect_stroke	vectors/gimpstroke.c	/^gimp_stroke_connect_stroke (GimpStroke *stroke,$/;"	f
gimp_stroke_control_points_get	vectors/gimpstroke.c	/^gimp_stroke_control_points_get (const GimpStroke *stroke,$/;"	f
gimp_stroke_desc_class_init	core/gimpstrokedesc.c	/^gimp_stroke_desc_class_init (GimpStrokeDescClass *klass)$/;"	f	file:
gimp_stroke_desc_config_iface_init	core/gimpstrokedesc.c	/^gimp_stroke_desc_config_iface_init (gpointer  iface,$/;"	f	file:
gimp_stroke_desc_constructor	core/gimpstrokedesc.c	/^gimp_stroke_desc_constructor (GType                  type,$/;"	f	file:
gimp_stroke_desc_duplicate	core/gimpstrokedesc.c	/^gimp_stroke_desc_duplicate (GimpConfig *config)$/;"	f	file:
gimp_stroke_desc_finalize	core/gimpstrokedesc.c	/^gimp_stroke_desc_finalize (GObject *object)$/;"	f	file:
gimp_stroke_desc_finish	core/gimpstrokedesc.c	/^gimp_stroke_desc_finish (GimpStrokeDesc *desc)$/;"	f
gimp_stroke_desc_get_property	core/gimpstrokedesc.c	/^gimp_stroke_desc_get_property (GObject    *object,$/;"	f	file:
gimp_stroke_desc_init	core/gimpstrokedesc.c	/^gimp_stroke_desc_init (GimpStrokeDesc *desc)$/;"	f	file:
gimp_stroke_desc_new	core/gimpstrokedesc.c	/^gimp_stroke_desc_new (Gimp        *gimp,$/;"	f
gimp_stroke_desc_prepare	core/gimpstrokedesc.c	/^gimp_stroke_desc_prepare (GimpStrokeDesc *desc,$/;"	f
gimp_stroke_desc_set_property	core/gimpstrokedesc.c	/^gimp_stroke_desc_set_property (GObject      *object,$/;"	f	file:
gimp_stroke_duplicate	vectors/gimpstroke.c	/^gimp_stroke_duplicate (const GimpStroke *stroke)$/;"	f
gimp_stroke_editor_class_init	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_class_init (GimpStrokeEditorClass *klass)$/;"	f	file:
gimp_stroke_editor_combo_fill	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_combo_fill (GimpStrokeOptions *options,$/;"	f	file:
gimp_stroke_editor_combo_update	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_combo_update (GtkTreeModel      *model,$/;"	f	file:
gimp_stroke_editor_constructor	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_constructor (GType                   type,$/;"	f	file:
gimp_stroke_editor_dash_preset	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_dash_preset (GtkWidget         *widget,$/;"	f	file:
gimp_stroke_editor_finalize	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_finalize (GObject *object)$/;"	f	file:
gimp_stroke_editor_get_property	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_get_property (GObject    *object,$/;"	f	file:
gimp_stroke_editor_init	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_init (GimpStrokeEditor *editor)$/;"	f	file:
gimp_stroke_editor_new	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_new (GimpStrokeOptions *options,$/;"	f
gimp_stroke_editor_paint_button	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_paint_button (GtkWidget       *widget,$/;"	f	file:
gimp_stroke_editor_set_property	widgets/gimpstrokeeditor.c	/^gimp_stroke_editor_set_property (GObject      *object,$/;"	f	file:
gimp_stroke_extend	vectors/gimpstroke.c	/^gimp_stroke_extend (GimpStroke           *stroke,$/;"	f
gimp_stroke_finalize	vectors/gimpstroke.c	/^gimp_stroke_finalize (GObject *object)$/;"	f	file:
gimp_stroke_flip	vectors/gimpstroke.c	/^gimp_stroke_flip   (GimpStroke          *stroke,$/;"	f
gimp_stroke_flip_free	vectors/gimpstroke.c	/^gimp_stroke_flip_free   (GimpStroke          *stroke,$/;"	f
gimp_stroke_get_ID	vectors/gimpstroke.c	/^gimp_stroke_get_ID (const GimpStroke *stroke)$/;"	f
gimp_stroke_get_distance	vectors/gimpstroke.c	/^gimp_stroke_get_distance (const GimpStroke *stroke,$/;"	f
gimp_stroke_get_draw_anchors	vectors/gimpstroke.c	/^gimp_stroke_get_draw_anchors (const GimpStroke  *stroke)$/;"	f
gimp_stroke_get_draw_controls	vectors/gimpstroke.c	/^gimp_stroke_get_draw_controls (const GimpStroke  *stroke)$/;"	f
gimp_stroke_get_draw_lines	vectors/gimpstroke.c	/^gimp_stroke_get_draw_lines (const GimpStroke  *stroke)$/;"	f
gimp_stroke_get_length	vectors/gimpstroke.c	/^gimp_stroke_get_length (const GimpStroke *stroke,$/;"	f
gimp_stroke_get_memsize	vectors/gimpstroke.c	/^gimp_stroke_get_memsize (GimpObject *object,$/;"	f	file:
gimp_stroke_get_point_at_dist	vectors/gimpstroke.c	/^gimp_stroke_get_point_at_dist (const GimpStroke *stroke,$/;"	f
gimp_stroke_get_property	vectors/gimpstroke.c	/^gimp_stroke_get_property (GObject    *object,$/;"	f	file:
gimp_stroke_init	vectors/gimpstroke.c	/^gimp_stroke_init (GimpStroke *stroke)$/;"	f	file:
gimp_stroke_interpolate	vectors/gimpstroke.c	/^gimp_stroke_interpolate (const GimpStroke *stroke,$/;"	f
gimp_stroke_is_empty	vectors/gimpstroke.c	/^gimp_stroke_is_empty (const GimpStroke *stroke)$/;"	f
gimp_stroke_is_extendable	vectors/gimpstroke.c	/^gimp_stroke_is_extendable (GimpStroke *stroke,$/;"	f
gimp_stroke_make_bezier	vectors/gimpstroke.c	/^gimp_stroke_make_bezier (const GimpStroke *stroke)$/;"	f
gimp_stroke_method_get_type	core/core-enums.c	/^gimp_stroke_method_get_type (void)$/;"	f
gimp_stroke_nearest_intersection_get	vectors/gimpstroke.c	/^gimp_stroke_nearest_intersection_get (const GimpStroke      *stroke,$/;"	f
gimp_stroke_nearest_point_get	vectors/gimpstroke.c	/^gimp_stroke_nearest_point_get (const GimpStroke *stroke,$/;"	f
gimp_stroke_nearest_tangent_get	vectors/gimpstroke.c	/^gimp_stroke_nearest_tangent_get   (const GimpStroke      *stroke,$/;"	f
gimp_stroke_new_from_coords	vectors/gimpstroke-new.c	/^gimp_stroke_new_from_coords (GimpVectorsStrokeType  type,$/;"	f
gimp_stroke_open	vectors/gimpstroke.c	/^gimp_stroke_open (GimpStroke *stroke,$/;"	f
gimp_stroke_options_class_init	core/gimpstrokeoptions.c	/^gimp_stroke_options_class_init (GimpStrokeOptionsClass *klass)$/;"	f	file:
gimp_stroke_options_get_property	core/gimpstrokeoptions.c	/^gimp_stroke_options_get_property (GObject    *object,$/;"	f	file:
gimp_stroke_options_init	core/gimpstrokeoptions.c	/^gimp_stroke_options_init (GimpStrokeOptions *options)$/;"	f	file:
gimp_stroke_options_set_dash_pattern	core/gimpstrokeoptions.c	/^gimp_stroke_options_set_dash_pattern (GimpStrokeOptions *options,$/;"	f
gimp_stroke_options_set_property	core/gimpstrokeoptions.c	/^gimp_stroke_options_set_property (GObject      *object,$/;"	f	file:
gimp_stroke_point_is_movable	vectors/gimpstroke.c	/^gimp_stroke_point_is_movable (GimpStroke *stroke,$/;"	f
gimp_stroke_point_move_absolute	vectors/gimpstroke.c	/^gimp_stroke_point_move_absolute (GimpStroke            *stroke,$/;"	f
gimp_stroke_point_move_relative	vectors/gimpstroke.c	/^gimp_stroke_point_move_relative (GimpStroke            *stroke,$/;"	f
gimp_stroke_real_anchor_convert	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_convert (GimpStroke            *stroke,$/;"	f	file:
gimp_stroke_real_anchor_delete	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_delete (GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_anchor_get	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_get (const GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_anchor_get_next	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_get_next (const GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_anchor_insert	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_insert (GimpStroke *stroke,$/;"	f
gimp_stroke_real_anchor_is_insertable	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_is_insertable (GimpStroke *stroke,$/;"	f
gimp_stroke_real_anchor_move_absolute	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_move_absolute (GimpStroke            *stroke,$/;"	f	file:
gimp_stroke_real_anchor_move_relative	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_move_relative (GimpStroke            *stroke,$/;"	f	file:
gimp_stroke_real_anchor_select	vectors/gimpstroke.c	/^gimp_stroke_real_anchor_select (GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_close	vectors/gimpstroke.c	/^gimp_stroke_real_close (GimpStroke *stroke)$/;"	f	file:
gimp_stroke_real_connect_stroke	vectors/gimpstroke.c	/^gimp_stroke_real_connect_stroke (GimpStroke *stroke,$/;"	f
gimp_stroke_real_control_points_get	vectors/gimpstroke.c	/^gimp_stroke_real_control_points_get (const GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_duplicate	vectors/gimpstroke.c	/^gimp_stroke_real_duplicate (const GimpStroke *stroke)$/;"	f
gimp_stroke_real_extend	vectors/gimpstroke.c	/^gimp_stroke_real_extend (GimpStroke           *stroke,$/;"	f	file:
gimp_stroke_real_flip	vectors/gimpstroke.c	/^gimp_stroke_real_flip   (GimpStroke          *stroke,$/;"	f	file:
gimp_stroke_real_flip_free	vectors/gimpstroke.c	/^gimp_stroke_real_flip_free   (GimpStroke          *stroke,$/;"	f	file:
gimp_stroke_real_get_distance	vectors/gimpstroke.c	/^gimp_stroke_real_get_distance (const GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_get_draw_anchors	vectors/gimpstroke.c	/^gimp_stroke_real_get_draw_anchors (const GimpStroke  *stroke)$/;"	f	file:
gimp_stroke_real_get_draw_controls	vectors/gimpstroke.c	/^gimp_stroke_real_get_draw_controls (const GimpStroke  *stroke)$/;"	f	file:
gimp_stroke_real_get_draw_lines	vectors/gimpstroke.c	/^gimp_stroke_real_get_draw_lines (const GimpStroke  *stroke)$/;"	f	file:
gimp_stroke_real_get_length	vectors/gimpstroke.c	/^gimp_stroke_real_get_length (const GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_get_point_at_dist	vectors/gimpstroke.c	/^gimp_stroke_real_get_point_at_dist (const GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_interpolate	vectors/gimpstroke.c	/^gimp_stroke_real_interpolate (const GimpStroke  *stroke,$/;"	f	file:
gimp_stroke_real_is_empty	vectors/gimpstroke.c	/^gimp_stroke_real_is_empty (const GimpStroke *stroke)$/;"	f	file:
gimp_stroke_real_is_extendable	vectors/gimpstroke.c	/^gimp_stroke_real_is_extendable (GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_make_bezier	vectors/gimpstroke.c	/^gimp_stroke_real_make_bezier (const GimpStroke *stroke)$/;"	f	file:
gimp_stroke_real_open	vectors/gimpstroke.c	/^gimp_stroke_real_open (GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_point_is_movable	vectors/gimpstroke.c	/^gimp_stroke_real_point_is_movable (GimpStroke *stroke,$/;"	f
gimp_stroke_real_point_move_absolute	vectors/gimpstroke.c	/^gimp_stroke_real_point_move_absolute (GimpStroke           *stroke,$/;"	f
gimp_stroke_real_point_move_relative	vectors/gimpstroke.c	/^gimp_stroke_real_point_move_relative (GimpStroke           *stroke,$/;"	f
gimp_stroke_real_rotate	vectors/gimpstroke.c	/^gimp_stroke_real_rotate (GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_scale	vectors/gimpstroke.c	/^gimp_stroke_real_scale (GimpStroke *stroke,$/;"	f	file:
gimp_stroke_real_transform	vectors/gimpstroke.c	/^gimp_stroke_real_transform (GimpStroke        *stroke,$/;"	f	file:
gimp_stroke_real_translate	vectors/gimpstroke.c	/^gimp_stroke_real_translate (GimpStroke *stroke,$/;"	f	file:
gimp_stroke_rotate	vectors/gimpstroke.c	/^gimp_stroke_rotate (GimpStroke *stroke,$/;"	f
gimp_stroke_scale	vectors/gimpstroke.c	/^gimp_stroke_scale (GimpStroke *stroke,$/;"	f
gimp_stroke_set_ID	vectors/gimpstroke.c	/^gimp_stroke_set_ID (GimpStroke *stroke,$/;"	f
gimp_stroke_set_property	vectors/gimpstroke.c	/^gimp_stroke_set_property (GObject      *object,$/;"	f	file:
gimp_stroke_style_get_type	core/core-enums.c	/^gimp_stroke_style_get_type (void)$/;"	f
gimp_stroke_transform	vectors/gimpstroke.c	/^gimp_stroke_transform (GimpStroke        *stroke,$/;"	f
gimp_stroke_translate	vectors/gimpstroke.c	/^gimp_stroke_translate (GimpStroke *stroke,$/;"	f
gimp_stroke_warp_point	vectors/gimpvectors-warp.c	/^gimp_stroke_warp_point (const GimpStroke *stroke,$/;"	f	file:
gimp_sub_progress_class_init	core/gimpsubprogress.c	/^gimp_sub_progress_class_init (GimpSubProgressClass *klass)$/;"	f	file:
gimp_sub_progress_end	core/gimpsubprogress.c	/^gimp_sub_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_sub_progress_finalize	core/gimpsubprogress.c	/^gimp_sub_progress_finalize (GObject *object)$/;"	f	file:
gimp_sub_progress_get_value	core/gimpsubprogress.c	/^gimp_sub_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_sub_progress_get_window	core/gimpsubprogress.c	/^gimp_sub_progress_get_window (GimpProgress *progress)$/;"	f	file:
gimp_sub_progress_iface_init	core/gimpsubprogress.c	/^gimp_sub_progress_iface_init (GimpProgressInterface *iface)$/;"	f	file:
gimp_sub_progress_init	core/gimpsubprogress.c	/^gimp_sub_progress_init (GimpSubProgress *sub)$/;"	f	file:
gimp_sub_progress_is_active	core/gimpsubprogress.c	/^gimp_sub_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_sub_progress_message	core/gimpsubprogress.c	/^gimp_sub_progress_message (GimpProgress        *progress,$/;"	f	file:
gimp_sub_progress_new	core/gimpsubprogress.c	/^gimp_sub_progress_new (GimpProgress *progress)$/;"	f
gimp_sub_progress_pulse	core/gimpsubprogress.c	/^gimp_sub_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_sub_progress_set_range	core/gimpsubprogress.c	/^gimp_sub_progress_set_range (GimpSubProgress *progress,$/;"	f
gimp_sub_progress_set_step	core/gimpsubprogress.c	/^gimp_sub_progress_set_step (GimpSubProgress *progress,$/;"	f
gimp_sub_progress_set_text	core/gimpsubprogress.c	/^gimp_sub_progress_set_text (GimpProgress *progress,$/;"	f	file:
gimp_sub_progress_set_value	core/gimpsubprogress.c	/^gimp_sub_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_sub_progress_start	core/gimpsubprogress.c	/^gimp_sub_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_substitute_underscores	widgets/gimpwidgets-utils.c	/^gimp_substitute_underscores (gchar *str)$/;"	f	file:
gimp_suggest_modifiers	widgets/gimpwidgets-utils.c	/^gimp_suggest_modifiers (const gchar     *message,$/;"	f
gimp_swap_file	base/tile-swap.c	/^static SwapFile     * gimp_swap_file   = NULL;$/;"	v	file:
gimp_tab_style_get_type	widgets/widgets-enums.c	/^gimp_tab_style_get_type (void)$/;"	f
gimp_table_attach_stock	widgets/gimpwidgets-utils.c	/^gimp_table_attach_stock (GtkTable    *table,$/;"	f
gimp_template_class_init	core/gimptemplate.c	/^gimp_template_class_init (GimpTemplateClass *klass)$/;"	f	file:
gimp_template_create_image	core/gimptemplate.c	/^gimp_template_create_image (Gimp         *gimp,$/;"	f
gimp_template_editor_aspect_callback	widgets/gimptemplateeditor.c	/^gimp_template_editor_aspect_callback (GtkWidget          *widget,$/;"	f	file:
gimp_template_editor_class_init	widgets/gimptemplateeditor.c	/^gimp_template_editor_class_init (GimpTemplateEditorClass *klass)$/;"	f	file:
gimp_template_editor_constructor	widgets/gimptemplateeditor.c	/^gimp_template_editor_constructor (GType                  type,$/;"	f	file:
gimp_template_editor_finalize	widgets/gimptemplateeditor.c	/^gimp_template_editor_finalize (GObject *object)$/;"	f	file:
gimp_template_editor_get_property	widgets/gimptemplateeditor.c	/^gimp_template_editor_get_property (GObject      *object,$/;"	f	file:
gimp_template_editor_icon_changed	widgets/gimptemplateeditor.c	/^gimp_template_editor_icon_changed (GimpContext        *context,$/;"	f	file:
gimp_template_editor_init	widgets/gimptemplateeditor.c	/^gimp_template_editor_init (GimpTemplateEditor *editor)$/;"	f	file:
gimp_template_editor_new	widgets/gimptemplateeditor.c	/^gimp_template_editor_new (GimpTemplate *template,$/;"	f
gimp_template_editor_set_pixels	widgets/gimptemplateeditor.c	/^gimp_template_editor_set_pixels (GimpTemplateEditor *editor,$/;"	f	file:
gimp_template_editor_set_property	widgets/gimptemplateeditor.c	/^gimp_template_editor_set_property (GObject      *object,$/;"	f	file:
gimp_template_editor_show_advanced	widgets/gimptemplateeditor.c	/^gimp_template_editor_show_advanced (GimpTemplateEditor *editor,$/;"	f
gimp_template_editor_template_notify	widgets/gimptemplateeditor.c	/^gimp_template_editor_template_notify (GimpTemplate       *template,$/;"	f	file:
gimp_template_finalize	core/gimptemplate.c	/^gimp_template_finalize (GObject *object)$/;"	f	file:
gimp_template_get_property	core/gimptemplate.c	/^gimp_template_get_property (GObject    *object,$/;"	f	file:
gimp_template_init	core/gimptemplate.c	/^gimp_template_init (GimpTemplate *template)$/;"	f	file:
gimp_template_new	core/gimptemplate.c	/^gimp_template_new (const gchar *name)$/;"	f
gimp_template_notify	core/gimptemplate.c	/^gimp_template_notify (GObject    *object,$/;"	f	file:
gimp_template_set_from_image	core/gimptemplate.c	/^gimp_template_set_from_image (GimpTemplate *template,$/;"	f
gimp_template_set_property	core/gimptemplate.c	/^gimp_template_set_property (GObject      *object,$/;"	f	file:
gimp_template_view_activate_item	widgets/gimptemplateview.c	/^gimp_template_view_activate_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_template_view_class_init	widgets/gimptemplateview.c	/^gimp_template_view_class_init (GimpTemplateViewClass *klass)$/;"	f	file:
gimp_template_view_init	widgets/gimptemplateview.c	/^gimp_template_view_init (GimpTemplateView *view)$/;"	f	file:
gimp_template_view_new	widgets/gimptemplateview.c	/^gimp_template_view_new (GimpViewType     view_type,$/;"	f
gimp_template_view_tree_name_edited	widgets/gimptemplateview.c	/^gimp_template_view_tree_name_edited (GtkCellRendererText *cell,$/;"	f	file:
gimp_templates_load	core/gimp-templates.c	/^gimp_templates_load (Gimp *gimp)$/;"	f
gimp_templates_migrate	core/gimp-templates.c	/^gimp_templates_migrate (const gchar *olddir)$/;"	f
gimp_templates_migrate_get_child_by_name	core/gimp-templates.c	/^gimp_templates_migrate_get_child_by_name (const GimpContainer *container,$/;"	f	file:
gimp_templates_save	core/gimp-templates.c	/^gimp_templates_save (Gimp *gimp)$/;"	f
gimp_temporary_procedure_class_init	plug-in/gimptemporaryprocedure.c	/^gimp_temporary_procedure_class_init (GimpTemporaryProcedureClass *klass)$/;"	f	file:
gimp_temporary_procedure_execute	plug-in/gimptemporaryprocedure.c	/^gimp_temporary_procedure_execute (GimpProcedure *procedure,$/;"	f	file:
gimp_temporary_procedure_execute_async	plug-in/gimptemporaryprocedure.c	/^gimp_temporary_procedure_execute_async (GimpProcedure *procedure,$/;"	f	file:
gimp_temporary_procedure_finalize	plug-in/gimptemporaryprocedure.c	/^gimp_temporary_procedure_finalize (GObject *object)$/;"	f	file:
gimp_temporary_procedure_get_progname	plug-in/gimptemporaryprocedure.c	/^gimp_temporary_procedure_get_progname (const GimpPlugInProcedure *procedure)$/;"	f
gimp_temporary_procedure_init	plug-in/gimptemporaryprocedure.c	/^gimp_temporary_procedure_init (GimpTemporaryProcedure *proc)$/;"	f	file:
gimp_temporary_procedure_new	plug-in/gimptemporaryprocedure.c	/^gimp_temporary_procedure_new (GimpPlugIn *plug_in)$/;"	f
gimp_terminate	errors.c	/^gimp_terminate (const gchar *fmt, ...)$/;"	f
gimp_text_box_mode_get_type	text/text-enums.c	/^gimp_text_box_mode_get_type (void)$/;"	f
gimp_text_buffer_load	widgets/gimpwidgets-utils.c	/^gimp_text_buffer_load (GtkTextBuffer  *buffer,$/;"	f
gimp_text_buffer_save	widgets/gimpwidgets-utils.c	/^gimp_text_buffer_save (GtkTextBuffer  *buffer,$/;"	f
gimp_text_class_init	text/gimptext.c	/^gimp_text_class_init (GimpTextClass *klass)$/;"	f	file:
gimp_text_direction_get_type	text/text-enums.c	/^gimp_text_direction_get_type (void)$/;"	f
gimp_text_editor_class_init	widgets/gimptexteditor.c	/^gimp_text_editor_class_init (GimpTextEditorClass *klass)$/;"	f	file:
gimp_text_editor_finalize	widgets/gimptexteditor.c	/^gimp_text_editor_finalize (GObject *object)$/;"	f	file:
gimp_text_editor_font_toggled	widgets/gimptexteditor.c	/^gimp_text_editor_font_toggled (GtkToggleButton *button,$/;"	f	file:
gimp_text_editor_get_direction	widgets/gimptexteditor.c	/^gimp_text_editor_get_direction (GimpTextEditor *editor)$/;"	f
gimp_text_editor_get_font_name	widgets/gimptexteditor.c	/^gimp_text_editor_get_font_name (GimpTextEditor *editor)$/;"	f
gimp_text_editor_get_text	widgets/gimptexteditor.c	/^gimp_text_editor_get_text (GimpTextEditor *editor)$/;"	f
gimp_text_editor_init	widgets/gimptexteditor.c	/^gimp_text_editor_init (GimpTextEditor *editor)$/;"	f	file:
gimp_text_editor_new	widgets/gimptexteditor.c	/^gimp_text_editor_new (const gchar     *title,$/;"	f
gimp_text_editor_set_direction	widgets/gimptexteditor.c	/^gimp_text_editor_set_direction (GimpTextEditor    *editor,$/;"	f
gimp_text_editor_set_font_name	widgets/gimptexteditor.c	/^gimp_text_editor_set_font_name (GimpTextEditor *editor,$/;"	f
gimp_text_editor_set_text	widgets/gimptexteditor.c	/^gimp_text_editor_set_text (GimpTextEditor *editor,$/;"	f
gimp_text_editor_text_changed	widgets/gimptexteditor.c	/^gimp_text_editor_text_changed (GtkTextBuffer  *buffer,$/;"	f	file:
gimp_text_finalize	text/gimptext.c	/^gimp_text_finalize (GObject *object)$/;"	f	file:
gimp_text_font_name_from_xlfd	text/gimptext-xlfd.c	/^gimp_text_font_name_from_xlfd (const gchar *xlfd)$/;"	f
gimp_text_font_size_from_xlfd	text/gimptext-xlfd.c	/^gimp_text_font_size_from_xlfd (const gchar *xlfd,$/;"	f
gimp_text_from_gdyntext_parasite	text/gimptext-parasite.c	/^gimp_text_from_gdyntext_parasite (const GimpParasite *parasite)$/;"	f
gimp_text_from_parasite	text/gimptext-parasite.c	/^gimp_text_from_parasite (const GimpParasite  *parasite,$/;"	f
gimp_text_ft2_subst_func	text/gimptextlayout.c	/^gimp_text_ft2_subst_func (FcPattern *pattern,$/;"	f	file:
gimp_text_gdyntext_parasite_name	text/gimptext-parasite.c	/^gimp_text_gdyntext_parasite_name (void)$/;"	f
gimp_text_get_memsize	text/gimptext.c	/^gimp_text_get_memsize (GimpObject *object,$/;"	f	file:
gimp_text_get_pango_context	text/gimptextlayout.c	/^gimp_text_get_pango_context (GimpText *text,$/;"	f	file:
gimp_text_get_property	text/gimptext.c	/^gimp_text_get_property (GObject      *object,$/;"	f	file:
gimp_text_get_transformation	text/gimptext.c	/^gimp_text_get_transformation (GimpText    *text,$/;"	f
gimp_text_get_xlfd_field	text/gimptext-xlfd.c	/^gimp_text_get_xlfd_field (const gchar *fontname,$/;"	f	file:
gimp_text_init	text/gimptext.c	/^gimp_text_init (GimpText *text)$/;"	f	file:
gimp_text_justification_get_type	text/text-enums.c	/^gimp_text_justification_get_type (void)$/;"	f
gimp_text_layer_class_init	text/gimptextlayer.c	/^gimp_text_layer_class_init (GimpTextLayerClass *klass)$/;"	f	file:
gimp_text_layer_discard	text/gimptextlayer.c	/^gimp_text_layer_discard (GimpTextLayer *layer)$/;"	f
gimp_text_layer_duplicate	text/gimptextlayer.c	/^gimp_text_layer_duplicate (GimpItem *item,$/;"	f	file:
gimp_text_layer_finalize	text/gimptextlayer.c	/^gimp_text_layer_finalize (GObject *object)$/;"	f	file:
gimp_text_layer_flip	text/gimptextlayer-transform.c	/^gimp_text_layer_flip (GimpItem            *item,$/;"	f
gimp_text_layer_from_layer	text/gimptextlayer-xcf.c	/^gimp_text_layer_from_layer (GimpLayer *layer,$/;"	f	file:
gimp_text_layer_get_memsize	text/gimptextlayer.c	/^gimp_text_layer_get_memsize (GimpObject *object,$/;"	f	file:
gimp_text_layer_get_property	text/gimptextlayer.c	/^gimp_text_layer_get_property (GObject      *object,$/;"	f	file:
gimp_text_layer_get_text	text/gimptextlayer.c	/^gimp_text_layer_get_text (GimpTextLayer *layer)$/;"	f
gimp_text_layer_get_transformation	text/gimptextlayer-transform.c	/^gimp_text_layer_get_transformation (GimpTextLayer *layer,$/;"	f	file:
gimp_text_layer_get_xcf_flags	text/gimptextlayer-xcf.c	/^gimp_text_layer_get_xcf_flags (GimpTextLayer *text_layer)$/;"	f
gimp_text_layer_init	text/gimptextlayer.c	/^gimp_text_layer_init (GimpTextLayer *layer)$/;"	f	file:
gimp_text_layer_new	text/gimptextlayer.c	/^gimp_text_layer_new (GimpImage *image,$/;"	f
gimp_text_layer_parent_class	text/gimptextlayer-transform.c	/^gimp_text_layer_parent_class (void)$/;"	f	file:
gimp_text_layer_push_undo	text/gimptextlayer.c	/^gimp_text_layer_push_undo (GimpDrawable *drawable,$/;"	f	file:
gimp_text_layer_rename	text/gimptextlayer.c	/^gimp_text_layer_rename (GimpItem    *item,$/;"	f	file:
gimp_text_layer_render	text/gimptextlayer.c	/^gimp_text_layer_render (GimpTextLayer *layer)$/;"	f	file:
gimp_text_layer_render_layout	text/gimptextlayer.c	/^gimp_text_layer_render_layout (GimpTextLayer  *layer,$/;"	f	file:
gimp_text_layer_rotate	text/gimptextlayer-transform.c	/^gimp_text_layer_rotate (GimpItem         *item,$/;"	f
gimp_text_layer_scale	text/gimptextlayer-transform.c	/^gimp_text_layer_scale (GimpItem               *item,$/;"	f
gimp_text_layer_set	text/gimptextlayer.c	/^gimp_text_layer_set (GimpTextLayer *layer,$/;"	f
gimp_text_layer_set_property	text/gimptextlayer.c	/^gimp_text_layer_set_property (GObject      *object,$/;"	f	file:
gimp_text_layer_set_text	text/gimptextlayer.c	/^gimp_text_layer_set_text (GimpTextLayer *layer,$/;"	f
gimp_text_layer_set_tiles	text/gimptextlayer.c	/^gimp_text_layer_set_tiles (GimpDrawable  *drawable,$/;"	f	file:
gimp_text_layer_set_transformation	text/gimptextlayer-transform.c	/^gimp_text_layer_set_transformation (GimpTextLayer *layer,$/;"	f	file:
gimp_text_layer_set_xcf_flags	text/gimptextlayer-xcf.c	/^gimp_text_layer_set_xcf_flags (GimpTextLayer *text_layer,$/;"	f
gimp_text_layer_text_notify	text/gimptextlayer.c	/^gimp_text_layer_text_notify (GimpTextLayer *layer)$/;"	f	file:
gimp_text_layer_transform	text/gimptextlayer-transform.c	/^gimp_text_layer_transform (GimpItem               *item,$/;"	f
gimp_text_layer_transform_flip	text/gimptextlayer-transform.c	/^gimp_text_layer_transform_flip (GimpTextLayer       *layer,$/;"	f	file:
gimp_text_layer_transform_rotate	text/gimptextlayer-transform.c	/^gimp_text_layer_transform_rotate (GimpTextLayer    *layer,$/;"	f	file:
gimp_text_layer_xcf_load_hack	text/gimptextlayer-xcf.c	/^gimp_text_layer_xcf_load_hack (GimpLayer **layer)$/;"	f
gimp_text_layer_xcf_save_prepare	text/gimptextlayer-xcf.c	/^gimp_text_layer_xcf_save_prepare (GimpTextLayer *layer)$/;"	f
gimp_text_layout_class_init	text/gimptextlayout.c	/^gimp_text_layout_class_init (GimpTextLayoutClass *klass)$/;"	f	file:
gimp_text_layout_finalize	text/gimptextlayout.c	/^gimp_text_layout_finalize (GObject *object)$/;"	f	file:
gimp_text_layout_get_offsets	text/gimptextlayout.c	/^gimp_text_layout_get_offsets (GimpTextLayout *layout,$/;"	f
gimp_text_layout_get_size	text/gimptextlayout.c	/^gimp_text_layout_get_size (GimpTextLayout *layout,$/;"	f
gimp_text_layout_init	text/gimptextlayout.c	/^gimp_text_layout_init (GimpTextLayout *layout)$/;"	f	file:
gimp_text_layout_new	text/gimptextlayout.c	/^gimp_text_layout_new (GimpText  *text,$/;"	f
gimp_text_layout_pixel_size	text/gimptextlayout.c	/^gimp_text_layout_pixel_size (Gimp     *gimp,$/;"	f	file:
gimp_text_layout_point_size	text/gimptextlayout.c	/^gimp_text_layout_point_size (Gimp     *gimp,$/;"	f	file:
gimp_text_layout_position	text/gimptextlayout.c	/^gimp_text_layout_position (GimpTextLayout *layout)$/;"	f	file:
gimp_text_layout_render	text/gimptextlayout-render.c	/^gimp_text_layout_render (GimpTextLayout     *layout,$/;"	f
gimp_text_layout_render_flags	text/gimptextlayout-render.c	/^gimp_text_layout_render_flags (GimpTextLayout *layout)$/;"	f	file:
gimp_text_layout_render_glyphs	text/gimptextlayout-render.c	/^gimp_text_layout_render_glyphs (GimpTextLayout     *layout,$/;"	f	file:
gimp_text_layout_render_line	text/gimptextlayout-render.c	/^gimp_text_layout_render_line (GimpTextLayout     *layout,$/;"	f	file:
gimp_text_layout_render_trafo	text/gimptextlayout-render.c	/^gimp_text_layout_render_trafo (GimpTextLayout *layout,$/;"	f	file:
gimp_text_options_class_init	tools/gimptextoptions.c	/^gimp_text_options_class_init (GimpTextOptionsClass *klass)$/;"	f	file:
gimp_text_options_connect_text	tools/gimptextoptions.c	/^gimp_text_options_connect_text (GimpTextOptions *options,$/;"	f
gimp_text_options_editor_dir_changed	tools/gimptextoptions.c	/^gimp_text_options_editor_dir_changed (GimpTextEditor  *editor,$/;"	f	file:
gimp_text_options_editor_new	tools/gimptextoptions.c	/^gimp_text_options_editor_new (GtkWindow       *parent,$/;"	f
gimp_text_options_editor_notify_dir	tools/gimptextoptions.c	/^gimp_text_options_editor_notify_dir (GimpTextOptions *options,$/;"	f	file:
gimp_text_options_editor_notify_font	tools/gimptextoptions.c	/^gimp_text_options_editor_notify_font (GimpTextOptions *options,$/;"	f	file:
gimp_text_options_get_property	tools/gimptextoptions.c	/^gimp_text_options_get_property (GObject    *object,$/;"	f	file:
gimp_text_options_gui	tools/gimptextoptions.c	/^gimp_text_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_text_options_init	tools/gimptextoptions.c	/^gimp_text_options_init (GimpTextOptions *options)$/;"	f	file:
gimp_text_options_notify_color	tools/gimptextoptions.c	/^gimp_text_options_notify_color (GimpContext *context,$/;"	f	file:
gimp_text_options_notify_font	tools/gimptextoptions.c	/^gimp_text_options_notify_font (GimpContext *context,$/;"	f	file:
gimp_text_options_notify_text_color	tools/gimptextoptions.c	/^gimp_text_options_notify_text_color (GimpText    *text,$/;"	f	file:
gimp_text_options_notify_text_font	tools/gimptextoptions.c	/^gimp_text_options_notify_text_font (GimpText    *text,$/;"	f	file:
gimp_text_options_set_property	tools/gimptextoptions.c	/^gimp_text_options_set_property (GObject      *object,$/;"	f	file:
gimp_text_outline_get_type	text/text-enums.c	/^gimp_text_outline_get_type (void)$/;"	f
gimp_text_parasite_name	text/gimptext-parasite.c	/^gimp_text_parasite_name (void)$/;"	f
gimp_text_render_bitmap	text/gimptext-bitmap.c	/^gimp_text_render_bitmap (PangoFont  *font,$/;"	f
gimp_text_render_vectors	text/gimptext-vectors.c	/^gimp_text_render_vectors (PangoFont     *font,$/;"	f	file:
gimp_text_set_font_from_xlfd	text/gimptext-xlfd.c	/^gimp_text_set_font_from_xlfd (GimpText    *text,$/;"	f
gimp_text_set_property	text/gimptext.c	/^gimp_text_set_property (GObject      *object,$/;"	f	file:
gimp_text_to_parasite	text/gimptext-parasite.c	/^gimp_text_to_parasite (const GimpText *text)$/;"	f
gimp_text_tool_apply	tools/gimptexttool.c	/^gimp_text_tool_apply (GimpTextTool *text_tool)$/;"	f	file:
gimp_text_tool_button_press	tools/gimptexttool.c	/^gimp_text_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_text_tool_class_init	tools/gimptexttool.c	/^gimp_text_tool_class_init (GimpTextToolClass *klass)$/;"	f	file:
gimp_text_tool_confirm_dialog	tools/gimptexttool.c	/^gimp_text_tool_confirm_dialog (GimpTextTool *text_tool)$/;"	f	file:
gimp_text_tool_confirm_response	tools/gimptexttool.c	/^gimp_text_tool_confirm_response (GtkWidget    *widget,$/;"	f	file:
gimp_text_tool_connect	tools/gimptexttool.c	/^gimp_text_tool_connect (GimpTextTool  *text_tool,$/;"	f	file:
gimp_text_tool_constructor	tools/gimptexttool.c	/^gimp_text_tool_constructor (GType                  type,$/;"	f	file:
gimp_text_tool_control	tools/gimptexttool.c	/^gimp_text_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_text_tool_create_layer	tools/gimptexttool.c	/^gimp_text_tool_create_layer (GimpTextTool *text_tool,$/;"	f	file:
gimp_text_tool_create_vectors	tools/gimptexttool.c	/^gimp_text_tool_create_vectors (GimpTextTool *text_tool)$/;"	f	file:
gimp_text_tool_create_vectors_warped	tools/gimptexttool.c	/^gimp_text_tool_create_vectors_warped (GimpTextTool *text_tool)$/;"	f	file:
gimp_text_tool_cursor_update	tools/gimptexttool.c	/^gimp_text_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_text_tool_dispose	tools/gimptexttool.c	/^gimp_text_tool_dispose (GObject *object)$/;"	f	file:
gimp_text_tool_editor	tools/gimptexttool.c	/^gimp_text_tool_editor (GimpTextTool *text_tool)$/;"	f	file:
gimp_text_tool_editor_update	tools/gimptexttool.c	/^gimp_text_tool_editor_update (GimpTextTool *text_tool)$/;"	f	file:
gimp_text_tool_finalize	tools/gimptexttool.c	/^gimp_text_tool_finalize (GObject *object)$/;"	f	file:
gimp_text_tool_idle_apply	tools/gimptexttool.c	/^gimp_text_tool_idle_apply (GimpTextTool *text_tool)$/;"	f	file:
gimp_text_tool_init	tools/gimptexttool.c	/^gimp_text_tool_init (GimpTextTool *text_tool)$/;"	f	file:
gimp_text_tool_layer_changed	tools/gimptexttool.c	/^gimp_text_tool_layer_changed (GimpImage    *image,$/;"	f	file:
gimp_text_tool_layer_notify	tools/gimptexttool.c	/^gimp_text_tool_layer_notify (GimpTextLayer *layer,$/;"	f	file:
gimp_text_tool_proxy_notify	tools/gimptexttool.c	/^gimp_text_tool_proxy_notify (GimpText     *text,$/;"	f	file:
gimp_text_tool_set_drawable	tools/gimptexttool.c	/^gimp_text_tool_set_drawable (GimpTextTool *text_tool,$/;"	f	file:
gimp_text_tool_set_image	tools/gimptexttool.c	/^gimp_text_tool_set_image (GimpTextTool *text_tool,$/;"	f	file:
gimp_text_tool_set_layer	tools/gimptexttool.c	/^gimp_text_tool_set_layer (GimpTextTool *text_tool,$/;"	f
gimp_text_tool_text_changed	tools/gimptexttool.c	/^gimp_text_tool_text_changed (GimpTextEditor *editor,$/;"	f	file:
gimp_text_tool_text_notify	tools/gimptexttool.c	/^gimp_text_tool_text_notify (GimpText     *text,$/;"	f	file:
gimp_text_undo_class_init	text/gimptextundo.c	/^gimp_text_undo_class_init (GimpTextUndoClass *klass)$/;"	f	file:
gimp_text_undo_constructor	text/gimptextundo.c	/^gimp_text_undo_constructor (GType                  type,$/;"	f	file:
gimp_text_undo_free	text/gimptextundo.c	/^gimp_text_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_text_undo_get_memsize	text/gimptextundo.c	/^gimp_text_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_text_undo_get_property	text/gimptextundo.c	/^gimp_text_undo_get_property (GObject    *object,$/;"	f	file:
gimp_text_undo_init	text/gimptextundo.c	/^gimp_text_undo_init (GimpTextUndo *undo)$/;"	f	file:
gimp_text_undo_pop	text/gimptextundo.c	/^gimp_text_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_text_undo_set_property	text/gimptextundo.c	/^gimp_text_undo_set_property (GObject      *object,$/;"	f	file:
gimp_text_vector_coords	text/gimptext-vectors.c	/^gimp_text_vector_coords (RenderContext   *context,$/;"	f	file:
gimp_text_vectors_new	text/gimptext-vectors.c	/^gimp_text_vectors_new (GimpImage *image,$/;"	f
gimp_threads_enter	core/gimp-gui.c	/^gimp_threads_enter (Gimp *gimp)$/;"	f
gimp_threads_leave	core/gimp-gui.c	/^gimp_threads_leave (Gimp *gimp)$/;"	f
gimp_threshold_tool_auto_clicked	tools/gimpthresholdtool.c	/^gimp_threshold_tool_auto_clicked (GtkWidget         *button,$/;"	f	file:
gimp_threshold_tool_class_init	tools/gimpthresholdtool.c	/^gimp_threshold_tool_class_init (GimpThresholdToolClass *klass)$/;"	f	file:
gimp_threshold_tool_dialog	tools/gimpthresholdtool.c	/^gimp_threshold_tool_dialog (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_threshold_tool_finalize	tools/gimpthresholdtool.c	/^gimp_threshold_tool_finalize (GObject *object)$/;"	f	file:
gimp_threshold_tool_histogram_range	tools/gimpthresholdtool.c	/^gimp_threshold_tool_histogram_range (GimpHistogramView *widget,$/;"	f	file:
gimp_threshold_tool_init	tools/gimpthresholdtool.c	/^gimp_threshold_tool_init (GimpThresholdTool *t_tool)$/;"	f	file:
gimp_threshold_tool_initialize	tools/gimpthresholdtool.c	/^gimp_threshold_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_threshold_tool_map	tools/gimpthresholdtool.c	/^gimp_threshold_tool_map (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_threshold_tool_reset	tools/gimpthresholdtool.c	/^gimp_threshold_tool_reset (GimpImageMapTool *image_map_tool)$/;"	f	file:
gimp_thumb_box_auto_thumbnail	widgets/gimpthumbbox.c	/^gimp_thumb_box_auto_thumbnail (GimpThumbBox *box)$/;"	f	file:
gimp_thumb_box_class_init	widgets/gimpthumbbox.c	/^gimp_thumb_box_class_init (GimpThumbBoxClass *klass)$/;"	f	file:
gimp_thumb_box_create_thumbnail	widgets/gimpthumbbox.c	/^gimp_thumb_box_create_thumbnail (GimpThumbBox      *box,$/;"	f	file:
gimp_thumb_box_create_thumbnails	widgets/gimpthumbbox.c	/^gimp_thumb_box_create_thumbnails (GimpThumbBox *box,$/;"	f	file:
gimp_thumb_box_dispose	widgets/gimpthumbbox.c	/^gimp_thumb_box_dispose (GObject *object)$/;"	f	file:
gimp_thumb_box_ebox_button_press	widgets/gimpthumbbox.c	/^gimp_thumb_box_ebox_button_press (GtkWidget      *widget,$/;"	f	file:
gimp_thumb_box_finalize	widgets/gimpthumbbox.c	/^gimp_thumb_box_finalize (GObject *object)$/;"	f	file:
gimp_thumb_box_imagefile_info_changed	widgets/gimpthumbbox.c	/^gimp_thumb_box_imagefile_info_changed (GimpImagefile *imagefile,$/;"	f	file:
gimp_thumb_box_init	widgets/gimpthumbbox.c	/^gimp_thumb_box_init (GimpThumbBox *box)$/;"	f	file:
gimp_thumb_box_new	widgets/gimpthumbbox.c	/^gimp_thumb_box_new (GimpContext *context)$/;"	f
gimp_thumb_box_progress_end	widgets/gimpthumbbox.c	/^gimp_thumb_box_progress_end (GimpProgress *progress)$/;"	f	file:
gimp_thumb_box_progress_get_value	widgets/gimpthumbbox.c	/^gimp_thumb_box_progress_get_value (GimpProgress *progress)$/;"	f	file:
gimp_thumb_box_progress_iface_init	widgets/gimpthumbbox.c	/^gimp_thumb_box_progress_iface_init (GimpProgressInterface *iface)$/;"	f	file:
gimp_thumb_box_progress_is_active	widgets/gimpthumbbox.c	/^gimp_thumb_box_progress_is_active (GimpProgress *progress)$/;"	f	file:
gimp_thumb_box_progress_message	widgets/gimpthumbbox.c	/^gimp_thumb_box_progress_message (GimpProgress        *progress,$/;"	f	file:
gimp_thumb_box_progress_pulse	widgets/gimpthumbbox.c	/^gimp_thumb_box_progress_pulse (GimpProgress *progress)$/;"	f	file:
gimp_thumb_box_progress_set_value	widgets/gimpthumbbox.c	/^gimp_thumb_box_progress_set_value (GimpProgress *progress,$/;"	f	file:
gimp_thumb_box_progress_start	widgets/gimpthumbbox.c	/^gimp_thumb_box_progress_start (GimpProgress *progress,$/;"	f	file:
gimp_thumb_box_style_set	widgets/gimpthumbbox.c	/^gimp_thumb_box_style_set (GtkWidget *widget,$/;"	f	file:
gimp_thumb_box_take_uri	widgets/gimpthumbbox.c	/^gimp_thumb_box_take_uri (GimpThumbBox *box,$/;"	f
gimp_thumb_box_take_uris	widgets/gimpthumbbox.c	/^gimp_thumb_box_take_uris (GimpThumbBox *box,$/;"	f
gimp_thumb_box_thumb_state_notify	widgets/gimpthumbbox.c	/^gimp_thumb_box_thumb_state_notify (GimpThumbnail *thumb,$/;"	f	file:
gimp_thumb_box_thumbnail_clicked	widgets/gimpthumbbox.c	/^gimp_thumb_box_thumbnail_clicked (GtkWidget       *widget,$/;"	f	file:
gimp_thumbnail_set_info	core/gimpimagefile.c	/^gimp_thumbnail_set_info (GimpThumbnail *thumbnail,$/;"	f	file:
gimp_thumbnail_set_info_from_image	core/gimpimagefile.c	/^gimp_thumbnail_set_info_from_image (GimpThumbnail *thumbnail,$/;"	f	file:
gimp_thumbnail_size_get_type	core/core-enums.c	/^gimp_thumbnail_size_get_type (void)$/;"	f
gimp_time_since	display/gimpdisplayshell-close.c	/^gimp_time_since (guint  then,$/;"	f	file:
gimp_tip_free	dialogs/tips-parser.c	/^gimp_tip_free (GimpTip *tip)$/;"	f
gimp_tip_new	dialogs/tips-parser.c	/^gimp_tip_new  (const gchar *format,$/;"	f
gimp_tip_set	dialogs/tips-parser.c	/^gimp_tip_set (GimpTip     *tip,$/;"	f
gimp_tips_free	dialogs/tips-parser.c	/^gimp_tips_free (GList *tips)$/;"	f
gimp_tips_from_file	dialogs/tips-parser.c	/^gimp_tips_from_file (const gchar  *filename,$/;"	f
gimp_toggle_button_set_visible	widgets/gimpwidgets-utils.c	/^gimp_toggle_button_set_visible (GtkToggleButton *toggle,$/;"	f
gimp_tool_active_modifier_key	tools/gimptool.c	/^gimp_tool_active_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_tool_button_press	tools/gimptool.c	/^gimp_tool_button_press (GimpTool        *tool,$/;"	f
gimp_tool_button_release	tools/gimptool.c	/^gimp_tool_button_release (GimpTool        *tool,$/;"	f
gimp_tool_check_click_distance	tools/gimptool.c	/^gimp_tool_check_click_distance (GimpTool    *tool,$/;"	f	file:
gimp_tool_class_init	tools/gimptool.c	/^gimp_tool_class_init (GimpToolClass *klass)$/;"	f	file:
gimp_tool_clear_status	tools/gimptool.c	/^gimp_tool_clear_status (GimpTool *tool)$/;"	f	file:
gimp_tool_control	tools/gimptool.c	/^gimp_tool_control (GimpTool       *tool,$/;"	f
gimp_tool_control_activate	tools/gimptoolcontrol.c	/^gimp_tool_control_activate (GimpToolControl *control)$/;"	f
gimp_tool_control_class_init	tools/gimptoolcontrol.c	/^gimp_tool_control_class_init (GimpToolControlClass *klass)$/;"	f	file:
gimp_tool_control_finalize	tools/gimptoolcontrol.c	/^gimp_tool_control_finalize (GObject *object)$/;"	f	file:
gimp_tool_control_get_action_object_1	tools/gimptoolcontrol.c	/^gimp_tool_control_get_action_object_1 (GimpToolControl *control)$/;"	f
gimp_tool_control_get_action_object_2	tools/gimptoolcontrol.c	/^gimp_tool_control_get_action_object_2 (GimpToolControl *control)$/;"	f
gimp_tool_control_get_action_value_1	tools/gimptoolcontrol.c	/^gimp_tool_control_get_action_value_1 (GimpToolControl *control)$/;"	f
gimp_tool_control_get_action_value_2	tools/gimptoolcontrol.c	/^gimp_tool_control_get_action_value_2 (GimpToolControl *control)$/;"	f
gimp_tool_control_get_action_value_3	tools/gimptoolcontrol.c	/^gimp_tool_control_get_action_value_3 (GimpToolControl *control)$/;"	f
gimp_tool_control_get_action_value_4	tools/gimptoolcontrol.c	/^gimp_tool_control_get_action_value_4 (GimpToolControl *control)$/;"	f
gimp_tool_control_get_cursor	tools/gimptoolcontrol.c	/^gimp_tool_control_get_cursor (GimpToolControl *control)$/;"	f
gimp_tool_control_get_cursor_modifier	tools/gimptoolcontrol.c	/^gimp_tool_control_get_cursor_modifier (GimpToolControl *control)$/;"	f
gimp_tool_control_get_dirty_mask	tools/gimptoolcontrol.c	/^gimp_tool_control_get_dirty_mask (GimpToolControl *control)$/;"	f
gimp_tool_control_get_handle_empty_image	tools/gimptoolcontrol.c	/^gimp_tool_control_get_handle_empty_image (GimpToolControl *control)$/;"	f
gimp_tool_control_get_motion_mode	tools/gimptoolcontrol.c	/^gimp_tool_control_get_motion_mode (GimpToolControl *control)$/;"	f
gimp_tool_control_get_preserve	tools/gimptoolcontrol.c	/^gimp_tool_control_get_preserve (GimpToolControl *control)$/;"	f
gimp_tool_control_get_scroll_lock	tools/gimptoolcontrol.c	/^gimp_tool_control_get_scroll_lock (GimpToolControl *control)$/;"	f
gimp_tool_control_get_snap_offsets	tools/gimptoolcontrol.c	/^gimp_tool_control_get_snap_offsets (GimpToolControl *control,$/;"	f
gimp_tool_control_get_snap_to	tools/gimptoolcontrol.c	/^gimp_tool_control_get_snap_to (GimpToolControl *control)$/;"	f
gimp_tool_control_get_toggled	tools/gimptoolcontrol.c	/^gimp_tool_control_get_toggled (GimpToolControl *control)$/;"	f
gimp_tool_control_get_tool_cursor	tools/gimptoolcontrol.c	/^gimp_tool_control_get_tool_cursor (GimpToolControl *control)$/;"	f
gimp_tool_control_get_wants_click	tools/gimptoolcontrol.c	/^gimp_tool_control_get_wants_click (GimpToolControl *control)$/;"	f
gimp_tool_control_halt	tools/gimptoolcontrol.c	/^gimp_tool_control_halt (GimpToolControl *control)$/;"	f
gimp_tool_control_init	tools/gimptoolcontrol.c	/^gimp_tool_control_init (GimpToolControl *control)$/;"	f	file:
gimp_tool_control_is_active	tools/gimptoolcontrol.c	/^gimp_tool_control_is_active (GimpToolControl *control)$/;"	f
gimp_tool_control_is_paused	tools/gimptoolcontrol.c	/^gimp_tool_control_is_paused (GimpToolControl *control)$/;"	f
gimp_tool_control_pause	tools/gimptoolcontrol.c	/^gimp_tool_control_pause (GimpToolControl *control)$/;"	f
gimp_tool_control_resume	tools/gimptoolcontrol.c	/^gimp_tool_control_resume (GimpToolControl *control)$/;"	f
gimp_tool_control_set_action_object_1	tools/gimptoolcontrol.c	/^gimp_tool_control_set_action_object_1 (GimpToolControl *control,$/;"	f
gimp_tool_control_set_action_object_2	tools/gimptoolcontrol.c	/^gimp_tool_control_set_action_object_2 (GimpToolControl *control,$/;"	f
gimp_tool_control_set_action_value_1	tools/gimptoolcontrol.c	/^gimp_tool_control_set_action_value_1 (GimpToolControl *control,$/;"	f
gimp_tool_control_set_action_value_2	tools/gimptoolcontrol.c	/^gimp_tool_control_set_action_value_2 (GimpToolControl *control,$/;"	f
gimp_tool_control_set_action_value_3	tools/gimptoolcontrol.c	/^gimp_tool_control_set_action_value_3 (GimpToolControl *control,$/;"	f
gimp_tool_control_set_action_value_4	tools/gimptoolcontrol.c	/^gimp_tool_control_set_action_value_4 (GimpToolControl *control,$/;"	f
gimp_tool_control_set_cursor	tools/gimptoolcontrol.c	/^gimp_tool_control_set_cursor (GimpToolControl *control,$/;"	f
gimp_tool_control_set_cursor_modifier	tools/gimptoolcontrol.c	/^gimp_tool_control_set_cursor_modifier (GimpToolControl    *control,$/;"	f
gimp_tool_control_set_dirty_mask	tools/gimptoolcontrol.c	/^gimp_tool_control_set_dirty_mask (GimpToolControl *control,$/;"	f
gimp_tool_control_set_handle_empty_image	tools/gimptoolcontrol.c	/^gimp_tool_control_set_handle_empty_image (GimpToolControl *control,$/;"	f
gimp_tool_control_set_motion_mode	tools/gimptoolcontrol.c	/^gimp_tool_control_set_motion_mode (GimpToolControl *control,$/;"	f
gimp_tool_control_set_preserve	tools/gimptoolcontrol.c	/^gimp_tool_control_set_preserve (GimpToolControl *control,$/;"	f
gimp_tool_control_set_scroll_lock	tools/gimptoolcontrol.c	/^gimp_tool_control_set_scroll_lock (GimpToolControl *control,$/;"	f
gimp_tool_control_set_snap_offsets	tools/gimptoolcontrol.c	/^gimp_tool_control_set_snap_offsets (GimpToolControl *control,$/;"	f
gimp_tool_control_set_snap_to	tools/gimptoolcontrol.c	/^gimp_tool_control_set_snap_to (GimpToolControl *control,$/;"	f
gimp_tool_control_set_toggle_cursor	tools/gimptoolcontrol.c	/^gimp_tool_control_set_toggle_cursor (GimpToolControl *control,$/;"	f
gimp_tool_control_set_toggle_cursor_modifier	tools/gimptoolcontrol.c	/^gimp_tool_control_set_toggle_cursor_modifier (GimpToolControl    *control,$/;"	f
gimp_tool_control_set_toggle_tool_cursor	tools/gimptoolcontrol.c	/^gimp_tool_control_set_toggle_tool_cursor (GimpToolControl    *control,$/;"	f
gimp_tool_control_set_toggled	tools/gimptoolcontrol.c	/^gimp_tool_control_set_toggled (GimpToolControl *control,$/;"	f
gimp_tool_control_set_tool_cursor	tools/gimptoolcontrol.c	/^gimp_tool_control_set_tool_cursor (GimpToolControl    *control,$/;"	f
gimp_tool_control_set_wants_click	tools/gimptoolcontrol.c	/^gimp_tool_control_set_wants_click (GimpToolControl *control,$/;"	f
gimp_tool_cursor_update	tools/gimptool.c	/^gimp_tool_cursor_update (GimpTool        *tool,$/;"	f
gimp_tool_cursors	widgets/gimpcursor.c	/^static GimpCursor gimp_tool_cursors[] =$/;"	v	file:
gimp_tool_dialog_class_init	widgets/gimptooldialog.c	/^gimp_tool_dialog_class_init (GimpToolDialogClass *klass)$/;"	f	file:
gimp_tool_dialog_init	widgets/gimptooldialog.c	/^gimp_tool_dialog_init (GimpToolDialog *dialog)$/;"	f	file:
gimp_tool_dialog_new	widgets/gimptooldialog.c	/^gimp_tool_dialog_new (GimpToolInfo *tool_info,$/;"	f
gimp_tool_finalize	tools/gimptool.c	/^gimp_tool_finalize (GObject *object)$/;"	f	file:
gimp_tool_get_options	tools/gimptool.c	/^gimp_tool_get_options (GimpTool *tool)$/;"	f
gimp_tool_get_property	tools/gimptool.c	/^gimp_tool_get_property (GObject    *object,$/;"	f	file:
gimp_tool_has_display	tools/gimptool.c	/^gimp_tool_has_display (GimpTool    *tool,$/;"	f
gimp_tool_has_image	tools/gimptool.c	/^gimp_tool_has_image (GimpTool  *tool,$/;"	f
gimp_tool_info_class_init	core/gimptoolinfo.c	/^gimp_tool_info_class_init (GimpToolInfoClass *klass)$/;"	f	file:
gimp_tool_info_finalize	core/gimptoolinfo.c	/^gimp_tool_info_finalize (GObject *object)$/;"	f	file:
gimp_tool_info_get_description	core/gimptoolinfo.c	/^gimp_tool_info_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_tool_info_get_property	core/gimptoolinfo.c	/^gimp_tool_info_get_property (GObject    *object,$/;"	f	file:
gimp_tool_info_get_standard	core/gimptoolinfo.c	/^gimp_tool_info_get_standard (Gimp *gimp)$/;"	f
gimp_tool_info_init	core/gimptoolinfo.c	/^gimp_tool_info_init (GimpToolInfo *tool_info)$/;"	f	file:
gimp_tool_info_new	core/gimptoolinfo.c	/^gimp_tool_info_new (Gimp                *gimp,$/;"	f
gimp_tool_info_set_property	core/gimptoolinfo.c	/^gimp_tool_info_set_property (GObject      *object,$/;"	f	file:
gimp_tool_info_set_standard	core/gimptoolinfo.c	/^gimp_tool_info_set_standard (Gimp         *gimp,$/;"	f
gimp_tool_init	tools/gimptool.c	/^gimp_tool_init (GimpTool *tool)$/;"	f	file:
gimp_tool_initialize	tools/gimptool.c	/^gimp_tool_initialize (GimpTool    *tool,$/;"	f
gimp_tool_key_press	tools/gimptool.c	/^gimp_tool_key_press (GimpTool    *tool,$/;"	f
gimp_tool_message	tools/gimptool.c	/^gimp_tool_message (GimpTool    *tool,$/;"	f
gimp_tool_modifier_key	tools/gimptool.c	/^gimp_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_tool_motion	tools/gimptool.c	/^gimp_tool_motion (GimpTool        *tool,$/;"	f
gimp_tool_motion_constrain	tools/tools-utils.c	/^gimp_tool_motion_constrain (gdouble   start_x,$/;"	f
gimp_tool_motion_constrain_helper	tools/tools-utils.c	/^gimp_tool_motion_constrain_helper (gdouble dx,$/;"	f	file:
gimp_tool_oper_update	tools/gimptool.c	/^gimp_tool_oper_update (GimpTool        *tool,$/;"	f
gimp_tool_options_build_filename	core/gimptooloptions.c	/^gimp_tool_options_build_filename (GimpToolOptions  *tool_options)$/;"	f	file:
gimp_tool_options_class_init	core/gimptooloptions.c	/^gimp_tool_options_class_init (GimpToolOptionsClass *klass)$/;"	f	file:
gimp_tool_options_create_folder	core/gimptooloptions.c	/^gimp_tool_options_create_folder (void)$/;"	f
gimp_tool_options_delete	core/gimptooloptions.c	/^gimp_tool_options_delete (GimpToolOptions  *tool_options,$/;"	f
gimp_tool_options_deserialize	core/gimptooloptions.c	/^gimp_tool_options_deserialize (GimpToolOptions  *tool_options,$/;"	f
gimp_tool_options_editor_class_init	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_class_init (GimpToolOptionsEditorClass *klass)$/;"	f	file:
gimp_tool_options_editor_constructor	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_constructor (GType                  type,$/;"	f	file:
gimp_tool_options_editor_delete_clicked	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_delete_clicked (GtkWidget             *widget,$/;"	f	file:
gimp_tool_options_editor_destroy	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_destroy (GtkObject *object)$/;"	f	file:
gimp_tool_options_editor_docked_iface_init	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_docked_iface_init (GimpDockedInterface *docked_iface)$/;"	f	file:
gimp_tool_options_editor_drop_tool	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_drop_tool (GtkWidget    *widget,$/;"	f	file:
gimp_tool_options_editor_get_preview	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_get_preview (GimpDocked   *docked,$/;"	f	file:
gimp_tool_options_editor_get_title	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_get_title (GimpDocked *docked)$/;"	f	file:
gimp_tool_options_editor_init	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_init (GimpToolOptionsEditor *editor)$/;"	f	file:
gimp_tool_options_editor_menu_popup	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_menu_popup (GimpToolOptionsEditor *editor,$/;"	f	file:
gimp_tool_options_editor_menu_pos	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_menu_pos (GtkMenu  *menu,$/;"	f	file:
gimp_tool_options_editor_new	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_new (Gimp            *gimp,$/;"	f
gimp_tool_options_editor_presets_changed	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_presets_changed (GimpToolPresets       *presets,$/;"	f	file:
gimp_tool_options_editor_presets_update	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_presets_update (GimpToolOptionsEditor *editor,$/;"	f	file:
gimp_tool_options_editor_queue_save_presets	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_queue_save_presets (GimpToolOptionsEditor *editor,$/;"	f	file:
gimp_tool_options_editor_restore_clicked	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_restore_clicked (GtkWidget             *widget,$/;"	f	file:
gimp_tool_options_editor_save_clicked	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_save_clicked (GtkWidget             *widget,$/;"	f	file:
gimp_tool_options_editor_save_presets	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_save_presets (GimpToolOptionsEditor *editor)$/;"	f	file:
gimp_tool_options_editor_save_presets_idle	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_save_presets_idle (GimpToolOptionsEditor *editor)$/;"	f	file:
gimp_tool_options_editor_tool_changed	widgets/gimptooloptionseditor.c	/^gimp_tool_options_editor_tool_changed (GimpContext           *context,$/;"	f	file:
gimp_tool_options_get_property	core/gimptooloptions.c	/^gimp_tool_options_get_property (GObject    *object,$/;"	f	file:
gimp_tool_options_gui	tools/gimptooloptions-gui.c	/^gimp_tool_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_tool_options_init	core/gimptooloptions.c	/^gimp_tool_options_init (GimpToolOptions *options)$/;"	f	file:
gimp_tool_options_real_reset	core/gimptooloptions.c	/^gimp_tool_options_real_reset (GimpToolOptions *tool_options)$/;"	f	file:
gimp_tool_options_reset	core/gimptooloptions.c	/^gimp_tool_options_reset (GimpToolOptions *tool_options)$/;"	f
gimp_tool_options_serialize	core/gimptooloptions.c	/^gimp_tool_options_serialize (GimpToolOptions  *tool_options,$/;"	f
gimp_tool_options_set_property	core/gimptooloptions.c	/^gimp_tool_options_set_property (GObject      *object,$/;"	f	file:
gimp_tool_pop_status	tools/gimptool.c	/^gimp_tool_pop_status (GimpTool    *tool,$/;"	f
gimp_tool_presets_add	core/gimptoolpresets.c	/^gimp_tool_presets_add (GimpContainer *container,$/;"	f	file:
gimp_tool_presets_build_filename	core/gimptoolpresets.c	/^gimp_tool_presets_build_filename (GimpToolPresets *presets)$/;"	f	file:
gimp_tool_presets_class_init	core/gimptoolpresets.c	/^gimp_tool_presets_class_init (GimpToolPresetsClass *klass)$/;"	f	file:
gimp_tool_presets_finalize	core/gimptoolpresets.c	/^gimp_tool_presets_finalize (GObject *object)$/;"	f	file:
gimp_tool_presets_get_options	core/gimptoolpresets.c	/^gimp_tool_presets_get_options (GimpToolPresets *presets,$/;"	f
gimp_tool_presets_get_property	core/gimptoolpresets.c	/^gimp_tool_presets_get_property (GObject    *object,$/;"	f	file:
gimp_tool_presets_init	core/gimptoolpresets.c	/^gimp_tool_presets_init (GimpToolPresets *presets)$/;"	f	file:
gimp_tool_presets_load	core/gimptoolpresets.c	/^gimp_tool_presets_load (GimpToolPresets  *presets,$/;"	f
gimp_tool_presets_new	core/gimptoolpresets.c	/^gimp_tool_presets_new (GimpToolInfo *tool_info)$/;"	f
gimp_tool_presets_notify	core/gimptoolpresets.c	/^gimp_tool_presets_notify (GimpToolPresets *presets)$/;"	f	file:
gimp_tool_presets_remove	core/gimptoolpresets.c	/^gimp_tool_presets_remove (GimpContainer *container,$/;"	f	file:
gimp_tool_presets_save	core/gimptoolpresets.c	/^gimp_tool_presets_save (GimpToolPresets  *presets,$/;"	f
gimp_tool_presets_set_property	core/gimptoolpresets.c	/^gimp_tool_presets_set_property (GObject      *object,$/;"	f	file:
gimp_tool_presets_signals	core/gimptoolpresets.c	/^static guint gimp_tool_presets_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_tool_push_status	tools/gimptool.c	/^gimp_tool_push_status (GimpTool    *tool,$/;"	f
gimp_tool_push_status_coords	tools/gimptool.c	/^gimp_tool_push_status_coords (GimpTool    *tool,$/;"	f
gimp_tool_push_status_length	tools/gimptool.c	/^gimp_tool_push_status_length (GimpTool            *tool,$/;"	f
gimp_tool_real_active_modifier_key	tools/gimptool.c	/^gimp_tool_real_active_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_tool_real_button_press	tools/gimptool.c	/^gimp_tool_real_button_press (GimpTool        *tool,$/;"	f	file:
gimp_tool_real_button_release	tools/gimptool.c	/^gimp_tool_real_button_release (GimpTool              *tool,$/;"	f	file:
gimp_tool_real_control	tools/gimptool.c	/^gimp_tool_real_control (GimpTool       *tool,$/;"	f	file:
gimp_tool_real_cursor_update	tools/gimptool.c	/^gimp_tool_real_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_tool_real_has_display	tools/gimptool.c	/^gimp_tool_real_has_display (GimpTool    *tool,$/;"	f	file:
gimp_tool_real_has_image	tools/gimptool.c	/^gimp_tool_real_has_image (GimpTool  *tool,$/;"	f	file:
gimp_tool_real_initialize	tools/gimptool.c	/^gimp_tool_real_initialize (GimpTool     *tool,$/;"	f	file:
gimp_tool_real_key_press	tools/gimptool.c	/^gimp_tool_real_key_press (GimpTool    *tool,$/;"	f	file:
gimp_tool_real_modifier_key	tools/gimptool.c	/^gimp_tool_real_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_tool_real_motion	tools/gimptool.c	/^gimp_tool_real_motion (GimpTool        *tool,$/;"	f	file:
gimp_tool_real_oper_update	tools/gimptool.c	/^gimp_tool_real_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_tool_replace_status	tools/gimptool.c	/^gimp_tool_replace_status (GimpTool    *tool,$/;"	f
gimp_tool_set_active_modifier_state	tools/gimptool.c	/^gimp_tool_set_active_modifier_state (GimpTool        *tool,$/;"	f
gimp_tool_set_cursor	tools/gimptool.c	/^gimp_tool_set_cursor (GimpTool           *tool,$/;"	f
gimp_tool_set_focus_display	tools/gimptool.c	/^gimp_tool_set_focus_display (GimpTool    *tool,$/;"	f
gimp_tool_set_modifier_state	tools/gimptool.c	/^gimp_tool_set_modifier_state (GimpTool        *tool,$/;"	f
gimp_tool_set_property	tools/gimptool.c	/^gimp_tool_set_property (GObject      *object,$/;"	f	file:
gimp_tool_view_activate_item	widgets/gimptoolview.c	/^gimp_tool_view_activate_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_tool_view_class_init	widgets/gimptoolview.c	/^gimp_tool_view_class_init (GimpToolViewClass *klass)$/;"	f	file:
gimp_tool_view_destroy	widgets/gimptoolview.c	/^gimp_tool_view_destroy (GtkObject *object)$/;"	f	file:
gimp_tool_view_eye_clicked	widgets/gimptoolview.c	/^gimp_tool_view_eye_clicked (GtkCellRendererToggle *toggle,$/;"	f	file:
gimp_tool_view_eye_data_func	widgets/gimptoolview.c	/^gimp_tool_view_eye_data_func (GtkTreeViewColumn *tree_column,$/;"	f	file:
gimp_tool_view_init	widgets/gimptoolview.c	/^gimp_tool_view_init (GimpToolView *view)$/;"	f	file:
gimp_tool_view_new	widgets/gimptoolview.c	/^gimp_tool_view_new (GimpViewType     view_type,$/;"	f
gimp_tool_view_select_item	widgets/gimptoolview.c	/^gimp_tool_view_select_item (GimpContainerEditor *editor,$/;"	f	file:
gimp_tool_view_visible_notify	widgets/gimptoolview.c	/^gimp_tool_view_visible_notify (GimpToolInfo          *tool_info,$/;"	f	file:
gimp_toolbox_book_added	widgets/gimptoolbox.c	/^gimp_toolbox_book_added (GimpDock     *dock,$/;"	f	file:
gimp_toolbox_book_removed	widgets/gimptoolbox.c	/^gimp_toolbox_book_removed (GimpDock     *dock,$/;"	f	file:
gimp_toolbox_class_init	widgets/gimptoolbox.c	/^gimp_toolbox_class_init (GimpToolboxClass *klass)$/;"	f	file:
gimp_toolbox_color_area_create	widgets/gimptoolbox-color-area.c	/^gimp_toolbox_color_area_create (GimpToolbox *toolbox,$/;"	f
gimp_toolbox_constructor	widgets/gimptoolbox.c	/^gimp_toolbox_constructor (GType                  type,$/;"	f	file:
gimp_toolbox_delete_event	widgets/gimptoolbox.c	/^gimp_toolbox_delete_event (GtkWidget   *widget,$/;"	f	file:
gimp_toolbox_dnd_init	widgets/gimptoolbox-dnd.c	/^gimp_toolbox_dnd_init (GimpToolbox *toolbox)$/;"	f
gimp_toolbox_drop_buffer	widgets/gimptoolbox-dnd.c	/^gimp_toolbox_drop_buffer (GtkWidget    *widget,$/;"	f	file:
gimp_toolbox_drop_component	widgets/gimptoolbox-dnd.c	/^gimp_toolbox_drop_component (GtkWidget       *widget,$/;"	f	file:
gimp_toolbox_drop_drawable	widgets/gimptoolbox-dnd.c	/^gimp_toolbox_drop_drawable (GtkWidget    *widget,$/;"	f	file:
gimp_toolbox_drop_pixbuf	widgets/gimptoolbox-dnd.c	/^gimp_toolbox_drop_pixbuf (GtkWidget *widget,$/;"	f	file:
gimp_toolbox_drop_tool	widgets/gimptoolbox-dnd.c	/^gimp_toolbox_drop_tool (GtkWidget    *widget,$/;"	f	file:
gimp_toolbox_drop_uri_list	widgets/gimptoolbox-dnd.c	/^gimp_toolbox_drop_uri_list (GtkWidget *widget,$/;"	f	file:
gimp_toolbox_image_area_create	widgets/gimptoolbox-image-area.c	/^gimp_toolbox_image_area_create (GimpToolbox *toolbox,$/;"	f
gimp_toolbox_indicator_area_create	widgets/gimptoolbox-indicator-area.c	/^gimp_toolbox_indicator_area_create (GimpToolbox *toolbox)$/;"	f
gimp_toolbox_init	widgets/gimptoolbox.c	/^gimp_toolbox_init (GimpToolbox *toolbox)$/;"	f	file:
gimp_toolbox_new	widgets/gimptoolbox.c	/^gimp_toolbox_new (GimpDialogFactory *dialog_factory,$/;"	f
gimp_toolbox_set_geometry	widgets/gimptoolbox.c	/^gimp_toolbox_set_geometry (GimpToolbox *toolbox)$/;"	f	file:
gimp_toolbox_size_allocate	widgets/gimptoolbox.c	/^gimp_toolbox_size_allocate (GtkWidget     *widget,$/;"	f	file:
gimp_toolbox_style_set	widgets/gimptoolbox.c	/^gimp_toolbox_style_set (GtkWidget *widget,$/;"	f	file:
gimp_tools_clear	tools/gimp-tools.c	/^gimp_tools_clear (Gimp    *gimp,$/;"	f
gimp_tools_exit	tools/gimp-tools.c	/^gimp_tools_exit (Gimp *gimp)$/;"	f
gimp_tools_get_default_order	tools/gimp-tools.c	/^gimp_tools_get_default_order (Gimp *gimp)$/;"	f
gimp_tools_init	tools/gimp-tools.c	/^gimp_tools_init (Gimp *gimp)$/;"	f
gimp_tools_register	tools/gimp-tools.c	/^gimp_tools_register (GType                   tool_type,$/;"	f	file:
gimp_tools_restore	tools/gimp-tools.c	/^gimp_tools_restore (Gimp *gimp)$/;"	f
gimp_tools_save	tools/gimp-tools.c	/^gimp_tools_save (Gimp     *gimp,$/;"	f
gimp_transform_grid_type_get_type	tools/tools-enums.c	/^gimp_transform_grid_type_get_type (void)$/;"	f
gimp_transform_matrix_flip	core/gimp-transform-utils.c	/^gimp_transform_matrix_flip (GimpMatrix3         *matrix,$/;"	f
gimp_transform_matrix_flip_free	core/gimp-transform-utils.c	/^gimp_transform_matrix_flip_free (GimpMatrix3 *matrix,$/;"	f
gimp_transform_matrix_perspective	core/gimp-transform-utils.c	/^gimp_transform_matrix_perspective (GimpMatrix3 *matrix,$/;"	f
gimp_transform_matrix_rotate	core/gimp-transform-utils.c	/^gimp_transform_matrix_rotate (GimpMatrix3         *matrix,$/;"	f
gimp_transform_matrix_rotate_center	core/gimp-transform-utils.c	/^gimp_transform_matrix_rotate_center (GimpMatrix3 *matrix,$/;"	f
gimp_transform_matrix_rotate_rect	core/gimp-transform-utils.c	/^gimp_transform_matrix_rotate_rect (GimpMatrix3 *matrix,$/;"	f
gimp_transform_matrix_scale	core/gimp-transform-utils.c	/^gimp_transform_matrix_scale (GimpMatrix3 *matrix,$/;"	f
gimp_transform_matrix_shear	core/gimp-transform-utils.c	/^gimp_transform_matrix_shear (GimpMatrix3         *matrix,$/;"	f
gimp_transform_options_class_init	tools/gimptransformoptions.c	/^gimp_transform_options_class_init (GimpTransformOptionsClass *klass)$/;"	f	file:
gimp_transform_options_get_property	tools/gimptransformoptions.c	/^gimp_transform_options_get_property (GObject    *object,$/;"	f	file:
gimp_transform_options_gui	tools/gimptransformoptions.c	/^gimp_transform_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_transform_options_init	tools/gimptransformoptions.c	/^gimp_transform_options_init (GimpTransformOptions *options)$/;"	f	file:
gimp_transform_options_preview_notify	tools/gimptransformoptions.c	/^gimp_transform_options_preview_notify (GimpTransformOptions *options,$/;"	f	file:
gimp_transform_options_reset	tools/gimptransformoptions.c	/^gimp_transform_options_reset (GimpToolOptions *tool_options)$/;"	f	file:
gimp_transform_options_set_property	tools/gimptransformoptions.c	/^gimp_transform_options_set_property (GObject      *object,$/;"	f	file:
gimp_transform_preview_type_get_type	tools/tools-enums.c	/^gimp_transform_preview_type_get_type (void)$/;"	f
gimp_transform_region	core/gimp-transform-region.c	/^gimp_transform_region (GimpPickable          *pickable,$/;"	f
gimp_transform_region_cubic	core/gimp-transform-region.c	/^gimp_transform_region_cubic (TileManager        *orig_tiles,$/;"	f	file:
gimp_transform_region_lanczos	core/gimp-transform-region.c	/^gimp_transform_region_lanczos (TileManager       *orig_tiles,$/;"	f	file:
gimp_transform_region_linear	core/gimp-transform-region.c	/^gimp_transform_region_linear (TileManager        *orig_tiles,$/;"	f	file:
gimp_transform_region_nearest	core/gimp-transform-region.c	/^gimp_transform_region_nearest (TileManager        *orig_tiles,$/;"	f	file:
gimp_transform_resize_adjust	core/gimp-transform-resize.c	/^gimp_transform_resize_adjust (gdouble  dx1,$/;"	f	file:
gimp_transform_resize_boundary	core/gimp-transform-resize.c	/^gimp_transform_resize_boundary (const GimpMatrix3   *inv,$/;"	f
gimp_transform_resize_crop	core/gimp-transform-resize.c	/^gimp_transform_resize_crop (gdouble  dx1,$/;"	f	file:
gimp_transform_tool_bounds	tools/gimptransformtool.c	/^gimp_transform_tool_bounds (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_transform_tool_button_press	tools/gimptransformtool.c	/^gimp_transform_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_transform_tool_button_release	tools/gimptransformtool.c	/^gimp_transform_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_transform_tool_class_init	tools/gimptransformtool.c	/^gimp_transform_tool_class_init (GimpTransformToolClass *klass)$/;"	f	file:
gimp_transform_tool_constructor	tools/gimptransformtool.c	/^gimp_transform_tool_constructor (GType                  type,$/;"	f	file:
gimp_transform_tool_control	tools/gimptransformtool.c	/^gimp_transform_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_transform_tool_cursor_update	tools/gimptransformtool.c	/^gimp_transform_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_transform_tool_dialog	tools/gimptransformtool.c	/^gimp_transform_tool_dialog (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_transform_tool_dialog_update	tools/gimptransformtool.c	/^gimp_transform_tool_dialog_update (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_transform_tool_doit	tools/gimptransformtool.c	/^gimp_transform_tool_doit (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_transform_tool_draw	tools/gimptransformtool.c	/^gimp_transform_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_transform_tool_expose_preview	tools/gimptransformtool.c	/^gimp_transform_tool_expose_preview (GimpTransformTool *tr_tool)$/;"	f
gimp_transform_tool_finalize	tools/gimptransformtool.c	/^gimp_transform_tool_finalize (GObject *object)$/;"	f	file:
gimp_transform_tool_force_expose_preview	tools/gimptransformtool.c	/^gimp_transform_tool_force_expose_preview (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_transform_tool_grid_recalc	tools/gimptransformtool.c	/^gimp_transform_tool_grid_recalc (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_transform_tool_halt	tools/gimptransformtool.c	/^gimp_transform_tool_halt (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_transform_tool_handles_recalc	tools/gimptransformtool.c	/^gimp_transform_tool_handles_recalc (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_transform_tool_init	tools/gimptransformtool.c	/^gimp_transform_tool_init (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_transform_tool_initialize	tools/gimptransformtool.c	/^gimp_transform_tool_initialize (GimpTool     *tool,$/;"	f	file:
gimp_transform_tool_key_press	tools/gimptransformtool.c	/^gimp_transform_tool_key_press (GimpTool    *tool,$/;"	f	file:
gimp_transform_tool_modifier_key	tools/gimptransformtool.c	/^gimp_transform_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_transform_tool_motion	tools/gimptransformtool.c	/^gimp_transform_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_transform_tool_notify_preview	tools/gimptransformtool.c	/^gimp_transform_tool_notify_preview (GimpTransformOptions *options,$/;"	f	file:
gimp_transform_tool_notify_type	tools/gimptransformtool.c	/^gimp_transform_tool_notify_type (GimpTransformOptions *options,$/;"	f	file:
gimp_transform_tool_oper_update	tools/gimptransformtool.c	/^gimp_transform_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_transform_tool_prepare	tools/gimptransformtool.c	/^gimp_transform_tool_prepare (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_transform_tool_real_transform	tools/gimptransformtool.c	/^gimp_transform_tool_real_transform (GimpTransformTool *tr_tool,$/;"	f	file:
gimp_transform_tool_recalc	tools/gimptransformtool.c	/^gimp_transform_tool_recalc (GimpTransformTool *tr_tool,$/;"	f
gimp_transform_tool_response	tools/gimptransformtool.c	/^gimp_transform_tool_response (GtkWidget         *widget,$/;"	f	file:
gimp_transform_tool_transform_bounding_box	tools/gimptransformtool.c	/^gimp_transform_tool_transform_bounding_box (GimpTransformTool *tr_tool)$/;"	f	file:
gimp_transform_tool_undo_class_init	tools/gimptransformtoolundo.c	/^gimp_transform_tool_undo_class_init (GimpTransformToolUndoClass *klass)$/;"	f	file:
gimp_transform_tool_undo_constructor	tools/gimptransformtoolundo.c	/^gimp_transform_tool_undo_constructor (GType                  type,$/;"	f	file:
gimp_transform_tool_undo_free	tools/gimptransformtoolundo.c	/^gimp_transform_tool_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_transform_tool_undo_get_property	tools/gimptransformtoolundo.c	/^gimp_transform_tool_undo_get_property (GObject    *object,$/;"	f	file:
gimp_transform_tool_undo_init	tools/gimptransformtoolundo.c	/^gimp_transform_tool_undo_init (GimpTransformToolUndo *undo)$/;"	f	file:
gimp_transform_tool_undo_pop	tools/gimptransformtoolundo.c	/^gimp_transform_tool_undo_pop (GimpUndo              *undo,$/;"	f	file:
gimp_transform_tool_undo_set_property	tools/gimptransformtoolundo.c	/^gimp_transform_tool_undo_set_property (GObject      *object,$/;"	f	file:
gimp_transform_type_get_type	tools/tools-enums.c	/^gimp_transform_type_get_type (void)$/;"	f
gimp_ui_manager_activate_action	widgets/gimpuimanager.c	/^gimp_ui_manager_activate_action (GimpUIManager *manager,$/;"	f
gimp_ui_manager_class_init	widgets/gimpuimanager.c	/^gimp_ui_manager_class_init (GimpUIManagerClass *klass)$/;"	f	file:
gimp_ui_manager_connect_proxy	widgets/gimpuimanager.c	/^gimp_ui_manager_connect_proxy (GtkUIManager *manager,$/;"	f	file:
gimp_ui_manager_constructor	widgets/gimpuimanager.c	/^gimp_ui_manager_constructor (GType                  type,$/;"	f	file:
gimp_ui_manager_delete_popdown_data	widgets/gimpuimanager.c	/^gimp_ui_manager_delete_popdown_data (GtkObject     *object,$/;"	f	file:
gimp_ui_manager_dispose	widgets/gimpuimanager.c	/^gimp_ui_manager_dispose (GObject *object)$/;"	f	file:
gimp_ui_manager_entry_ensure	widgets/gimpuimanager.c	/^gimp_ui_manager_entry_ensure (GimpUIManager *manager,$/;"	f	file:
gimp_ui_manager_entry_get	widgets/gimpuimanager.c	/^gimp_ui_manager_entry_get (GimpUIManager *manager,$/;"	f	file:
gimp_ui_manager_entry_load	widgets/gimpuimanager.c	/^gimp_ui_manager_entry_load (GimpUIManager         *manager,$/;"	f	file:
gimp_ui_manager_finalize	widgets/gimpuimanager.c	/^gimp_ui_manager_finalize (GObject *object)$/;"	f	file:
gimp_ui_manager_find_action	widgets/gimpuimanager.c	/^gimp_ui_manager_find_action (GimpUIManager *manager,$/;"	f
gimp_ui_manager_get_action	widgets/gimpuimanager.c	/^gimp_ui_manager_get_action (GtkUIManager *manager,$/;"	f	file:
gimp_ui_manager_get_action_group	widgets/gimpuimanager.c	/^gimp_ui_manager_get_action_group (GimpUIManager *manager,$/;"	f
gimp_ui_manager_get_property	widgets/gimpuimanager.c	/^gimp_ui_manager_get_property (GObject    *object,$/;"	f	file:
gimp_ui_manager_get_widget	widgets/gimpuimanager.c	/^gimp_ui_manager_get_widget (GtkUIManager *manager,$/;"	f	file:
gimp_ui_manager_init	widgets/gimpuimanager.c	/^gimp_ui_manager_init (GimpUIManager *manager)$/;"	f	file:
gimp_ui_manager_item_key_press	widgets/gimpuimanager.c	/^gimp_ui_manager_item_key_press (GtkWidget     *widget,$/;"	f	file:
gimp_ui_manager_item_realize	widgets/gimpuimanager.c	/^gimp_ui_manager_item_realize (GtkWidget     *widget,$/;"	f	file:
gimp_ui_manager_menu_item_deselect	widgets/gimpuimanager.c	/^gimp_ui_manager_menu_item_deselect (GtkWidget     *widget,$/;"	f	file:
gimp_ui_manager_menu_item_select	widgets/gimpuimanager.c	/^gimp_ui_manager_menu_item_select (GtkWidget     *widget,$/;"	f	file:
gimp_ui_manager_menu_pos	widgets/gimpuimanager.c	/^gimp_ui_manager_menu_pos (GtkMenu  *menu,$/;"	f	file:
gimp_ui_manager_menu_position	widgets/gimpuimanager.c	/^gimp_ui_manager_menu_position (GtkMenu  *menu,$/;"	f	file:
gimp_ui_manager_new	widgets/gimpuimanager.c	/^gimp_ui_manager_new (Gimp        *gimp,$/;"	f
gimp_ui_manager_real_update	widgets/gimpuimanager.c	/^gimp_ui_manager_real_update (GimpUIManager *manager,$/;"	f	file:
gimp_ui_manager_set_property	widgets/gimpuimanager.c	/^gimp_ui_manager_set_property (GObject      *object,$/;"	f	file:
gimp_ui_manager_ui_popup	widgets/gimpuimanager.c	/^gimp_ui_manager_ui_popup (GimpUIManager        *manager,$/;"	f
gimp_ui_manager_ui_register	widgets/gimpuimanager.c	/^gimp_ui_manager_ui_register (GimpUIManager          *manager,$/;"	f
gimp_ui_manager_update	widgets/gimpuimanager.c	/^gimp_ui_manager_update (GimpUIManager *manager,$/;"	f
gimp_ui_managers_from_name	widgets/gimpuimanager.c	/^gimp_ui_managers_from_name (const gchar *name)$/;"	f
gimp_undo_class_init	core/gimpundo.c	/^gimp_undo_class_init (GimpUndoClass *klass)$/;"	f	file:
gimp_undo_constructor	core/gimpundo.c	/^gimp_undo_constructor (GType                  type,$/;"	f	file:
gimp_undo_create_preview	core/gimpundo.c	/^gimp_undo_create_preview (GimpUndo    *undo,$/;"	f
gimp_undo_create_preview_idle	core/gimpundo.c	/^gimp_undo_create_preview_idle (gpointer data)$/;"	f	file:
gimp_undo_create_preview_private	core/gimpundo.c	/^gimp_undo_create_preview_private (GimpUndo    *undo,$/;"	f	file:
gimp_undo_editor_class_init	widgets/gimpundoeditor.c	/^gimp_undo_editor_class_init (GimpUndoEditorClass *klass)$/;"	f	file:
gimp_undo_editor_clear	widgets/gimpundoeditor.c	/^gimp_undo_editor_clear (GimpUndoEditor *editor)$/;"	f	file:
gimp_undo_editor_constructor	widgets/gimpundoeditor.c	/^gimp_undo_editor_constructor (GType                  type,$/;"	f	file:
gimp_undo_editor_docked_iface_init	widgets/gimpundoeditor.c	/^gimp_undo_editor_docked_iface_init (GimpDockedInterface *iface)$/;"	f	file:
gimp_undo_editor_fill	widgets/gimpundoeditor.c	/^gimp_undo_editor_fill (GimpUndoEditor *editor)$/;"	f	file:
gimp_undo_editor_init	widgets/gimpundoeditor.c	/^gimp_undo_editor_init (GimpUndoEditor *undo_editor)$/;"	f	file:
gimp_undo_editor_new	widgets/gimpundoeditor.c	/^gimp_undo_editor_new (GimpCoreConfig  *config,$/;"	f
gimp_undo_editor_select_item	widgets/gimpundoeditor.c	/^gimp_undo_editor_select_item (GimpContainerView *view,$/;"	f	file:
gimp_undo_editor_set_context	widgets/gimpundoeditor.c	/^gimp_undo_editor_set_context (GimpDocked  *docked,$/;"	f	file:
gimp_undo_editor_set_image	widgets/gimpundoeditor.c	/^gimp_undo_editor_set_image (GimpImageEditor *image_editor,$/;"	f	file:
gimp_undo_editor_set_property	widgets/gimpundoeditor.c	/^gimp_undo_editor_set_property (GObject      *object,$/;"	f	file:
gimp_undo_editor_undo_event	widgets/gimpundoeditor.c	/^gimp_undo_editor_undo_event (GimpImage      *image,$/;"	f	file:
gimp_undo_event_get_type	core/core-enums.c	/^gimp_undo_event_get_type (void)$/;"	f
gimp_undo_finalize	core/gimpundo.c	/^gimp_undo_finalize (GObject *object)$/;"	f	file:
gimp_undo_free	core/gimpundo.c	/^gimp_undo_free (GimpUndo     *undo,$/;"	f
gimp_undo_get_age	core/gimpundo.c	/^gimp_undo_get_age (GimpUndo *undo)$/;"	f
gimp_undo_get_memsize	core/gimpundo.c	/^gimp_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_undo_get_new_preview	core/gimpundo.c	/^gimp_undo_get_new_preview (GimpViewable *viewable,$/;"	f	file:
gimp_undo_get_popup_size	core/gimpundo.c	/^gimp_undo_get_popup_size (GimpViewable *viewable,$/;"	f	file:
gimp_undo_get_property	core/gimpundo.c	/^gimp_undo_get_property (GObject    *object,$/;"	f	file:
gimp_undo_idle_free	core/gimpundo.c	/^gimp_undo_idle_free (GimpUndoIdle *idle)$/;"	f	file:
gimp_undo_init	core/gimpundo.c	/^gimp_undo_init (GimpUndo *undo)$/;"	f	file:
gimp_undo_is_weak	core/gimpundo.c	/^gimp_undo_is_weak (GimpUndo *undo)$/;"	f
gimp_undo_mode_get_type	core/core-enums.c	/^gimp_undo_mode_get_type (void)$/;"	f
gimp_undo_pop	core/gimpundo.c	/^gimp_undo_pop (GimpUndo            *undo,$/;"	f
gimp_undo_real_free	core/gimpundo.c	/^gimp_undo_real_free (GimpUndo     *undo,$/;"	f	file:
gimp_undo_real_pop	core/gimpundo.c	/^gimp_undo_real_pop (GimpUndo            *undo,$/;"	f	file:
gimp_undo_refresh_preview	core/gimpundo.c	/^gimp_undo_refresh_preview (GimpUndo    *undo,$/;"	f
gimp_undo_reset_age	core/gimpundo.c	/^gimp_undo_reset_age (GimpUndo *undo)$/;"	f
gimp_undo_set_property	core/gimpundo.c	/^gimp_undo_set_property (GObject      *object,$/;"	f	file:
gimp_undo_stack_class_init	core/gimpundostack.c	/^gimp_undo_stack_class_init (GimpUndoStackClass *klass)$/;"	f	file:
gimp_undo_stack_finalize	core/gimpundostack.c	/^gimp_undo_stack_finalize (GObject *object)$/;"	f	file:
gimp_undo_stack_free	core/gimpundostack.c	/^gimp_undo_stack_free (GimpUndo     *undo,$/;"	f	file:
gimp_undo_stack_free_bottom	core/gimpundostack.c	/^gimp_undo_stack_free_bottom (GimpUndoStack *stack,$/;"	f
gimp_undo_stack_get_depth	core/gimpundostack.c	/^gimp_undo_stack_get_depth (GimpUndoStack *stack)$/;"	f
gimp_undo_stack_get_memsize	core/gimpundostack.c	/^gimp_undo_stack_get_memsize (GimpObject *object,$/;"	f	file:
gimp_undo_stack_init	core/gimpundostack.c	/^gimp_undo_stack_init (GimpUndoStack *stack)$/;"	f	file:
gimp_undo_stack_new	core/gimpundostack.c	/^gimp_undo_stack_new (GimpImage *image)$/;"	f
gimp_undo_stack_peek	core/gimpundostack.c	/^gimp_undo_stack_peek (GimpUndoStack *stack)$/;"	f
gimp_undo_stack_pop	core/gimpundostack.c	/^gimp_undo_stack_pop (GimpUndo            *undo,$/;"	f	file:
gimp_undo_stack_pop_undo	core/gimpundostack.c	/^gimp_undo_stack_pop_undo (GimpUndoStack       *stack,$/;"	f
gimp_undo_stack_push_undo	core/gimpundostack.c	/^gimp_undo_stack_push_undo (GimpUndoStack *stack,$/;"	f
gimp_undo_type_get_type	core/core-enums.c	/^gimp_undo_type_get_type (void)$/;"	f
gimp_undo_type_to_name	core/gimpundo.c	/^gimp_undo_type_to_name (GimpUndoType type)$/;"	f
gimp_unescape_uri_string	widgets/gimpselectiondata.c	/^gimp_unescape_uri_string (const char *escaped,$/;"	f	file:
gimp_unit_combo_box_class_init	widgets/gimpunitcombobox.c	/^gimp_unit_combo_box_class_init (GimpUnitComboBoxClass *klass)$/;"	f	file:
gimp_unit_combo_box_get_active	widgets/gimpunitcombobox.c	/^gimp_unit_combo_box_get_active (GimpUnitComboBox *combo)$/;"	f
gimp_unit_combo_box_init	widgets/gimpunitcombobox.c	/^gimp_unit_combo_box_init (GimpUnitComboBox *combo)$/;"	f	file:
gimp_unit_combo_box_new	widgets/gimpunitcombobox.c	/^gimp_unit_combo_box_new (void)$/;"	f
gimp_unit_combo_box_new_with_model	widgets/gimpunitcombobox.c	/^gimp_unit_combo_box_new_with_model (GimpUnitStore *model)$/;"	f
gimp_unit_combo_box_set_active	widgets/gimpunitcombobox.c	/^gimp_unit_combo_box_set_active (GimpUnitComboBox *combo,$/;"	f
gimp_unit_defs	core/gimpunit.c	/^static const GimpUnitDef gimp_unit_defs[GIMP_UNIT_END] =$/;"	v	file:
gimp_unit_get_identifier	config/test-config.c	/^gimp_unit_get_identifier (GimpUnit unit)$/;"	f
gimp_unit_get_number_of_units	config/test-config.c	/^gimp_unit_get_number_of_units (void)$/;"	f
gimp_unit_percent	core/gimpunit.c	/^static const GimpUnitDef gimp_unit_percent =$/;"	v	file:
gimp_unit_store_class_init	widgets/gimpunitstore.c	/^gimp_unit_store_class_init (GimpUnitStoreClass *klass)$/;"	f	file:
gimp_unit_store_finalize	widgets/gimpunitstore.c	/^gimp_unit_store_finalize (GObject *object)$/;"	f	file:
gimp_unit_store_get_column_type	widgets/gimpunitstore.c	/^gimp_unit_store_get_column_type (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_get_flags	widgets/gimpunitstore.c	/^gimp_unit_store_get_flags (GtkTreeModel *tree_model)$/;"	f	file:
gimp_unit_store_get_iter	widgets/gimpunitstore.c	/^gimp_unit_store_get_iter (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_get_n_columns	widgets/gimpunitstore.c	/^gimp_unit_store_get_n_columns (GtkTreeModel *tree_model)$/;"	f	file:
gimp_unit_store_get_path	widgets/gimpunitstore.c	/^gimp_unit_store_get_path (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_get_property	widgets/gimpunitstore.c	/^gimp_unit_store_get_property (GObject      *object,$/;"	f	file:
gimp_unit_store_get_value	widgets/gimpunitstore.c	/^gimp_unit_store_get_value (GimpUnitStore *store,$/;"	f
gimp_unit_store_get_values	widgets/gimpunitstore.c	/^gimp_unit_store_get_values (GimpUnitStore *store,$/;"	f
gimp_unit_store_init	widgets/gimpunitstore.c	/^gimp_unit_store_init (GimpUnitStore *store)$/;"	f	file:
gimp_unit_store_iter_children	widgets/gimpunitstore.c	/^gimp_unit_store_iter_children (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_iter_has_child	widgets/gimpunitstore.c	/^gimp_unit_store_iter_has_child (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_iter_n_children	widgets/gimpunitstore.c	/^gimp_unit_store_iter_n_children (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_iter_next	widgets/gimpunitstore.c	/^gimp_unit_store_iter_next (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_iter_nth_child	widgets/gimpunitstore.c	/^gimp_unit_store_iter_nth_child (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_iter_parent	widgets/gimpunitstore.c	/^gimp_unit_store_iter_parent (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_new	widgets/gimpunitstore.c	/^gimp_unit_store_new (gint  num_values)$/;"	f
gimp_unit_store_set_pixel_value	widgets/gimpunitstore.c	/^gimp_unit_store_set_pixel_value (GimpUnitStore *store,$/;"	f
gimp_unit_store_set_pixel_values	widgets/gimpunitstore.c	/^gimp_unit_store_set_pixel_values (GimpUnitStore *store,$/;"	f
gimp_unit_store_set_property	widgets/gimpunitstore.c	/^gimp_unit_store_set_property (GObject      *object,$/;"	f	file:
gimp_unit_store_set_resolution	widgets/gimpunitstore.c	/^gimp_unit_store_set_resolution (GimpUnitStore *store,$/;"	f
gimp_unit_store_set_resolutions	widgets/gimpunitstore.c	/^gimp_unit_store_set_resolutions  (GimpUnitStore *store,$/;"	f
gimp_unit_store_tree_model_get_value	widgets/gimpunitstore.c	/^gimp_unit_store_tree_model_get_value (GtkTreeModel *tree_model,$/;"	f	file:
gimp_unit_store_tree_model_init	widgets/gimpunitstore.c	/^gimp_unit_store_tree_model_init (GtkTreeModelIface *iface)$/;"	f	file:
gimp_unitrc_load	core/gimp-units.c	/^gimp_unitrc_load (Gimp *gimp)$/;"	f
gimp_unitrc_save	core/gimp-units.c	/^gimp_unitrc_save (Gimp *gimp)$/;"	f
gimp_unitrc_unit_info_deserialize	core/gimp-units.c	/^gimp_unitrc_unit_info_deserialize (GScanner *scanner,$/;"	f	file:
gimp_units_exit	core/gimp-units.c	/^gimp_units_exit (Gimp *gimp)$/;"	f
gimp_units_init	core/gimp-units.c	/^gimp_units_init (Gimp *gimp)$/;"	f
gimp_unset_busy	core/gimp-gui.c	/^gimp_unset_busy (Gimp *gimp)$/;"	f
gimp_user_install_free	core/gimp-user-install.c	/^gimp_user_install_free (GimpUserInstall *install)$/;"	f
gimp_user_install_items	core/gimp-user-install.c	/^gimp_user_install_items[] =$/;"	v	typeref:struct:__anon161	file:
gimp_user_install_new	core/gimp-user-install.c	/^gimp_user_install_new (gboolean verbose)$/;"	f
gimp_user_install_run	core/gimp-user-install.c	/^gimp_user_install_run (GimpUserInstall *install)$/;"	f
gimp_user_install_set_log_handler	core/gimp-user-install.c	/^gimp_user_install_set_log_handler (GimpUserInstall        *install,$/;"	f
gimp_user_units_free	core/gimpunit.c	/^gimp_user_units_free (Gimp *gimp)$/;"	f
gimp_v16_t	composite/gimp-composite-regression.h	/^} gimp_v16_t;$/;"	t	typeref:struct:__anon23
gimp_v32_t	composite/gimp-composite-regression.h	/^} gimp_v32_t;$/;"	t	typeref:struct:__anon27
gimp_v8_t	composite/gimp-composite-regression.h	/^} gimp_v8_t;$/;"	t	typeref:struct:__anon19
gimp_va16_t	composite/gimp-composite-regression.h	/^} gimp_va16_t;$/;"	t	typeref:struct:__anon24
gimp_va32_t	composite/gimp-composite-regression.h	/^} gimp_va32_t;$/;"	t	typeref:struct:__anon28
gimp_va8_t	composite/gimp-composite-regression.h	/^} gimp_va8_t;$/;"	t	typeref:struct:__anon20
gimp_value_array_truncate	core/gimp-utils.c	/^gimp_value_array_truncate (GValueArray  *args,$/;"	f
gimp_value_dup_array	core/gimpparamspecs.c	/^gimp_value_dup_array (const GValue *value)$/;"	f	file:
gimp_value_dup_floatarray	core/gimpparamspecs.c	/^gimp_value_dup_floatarray (const GValue *value)$/;"	f
gimp_value_dup_int16array	core/gimpparamspecs.c	/^gimp_value_dup_int16array (const GValue *value)$/;"	f
gimp_value_dup_int32array	core/gimpparamspecs.c	/^gimp_value_dup_int32array (const GValue *value)$/;"	f
gimp_value_dup_int8array	core/gimpparamspecs.c	/^gimp_value_dup_int8array (const GValue *value)$/;"	f
gimp_value_dup_stringarray	core/gimpparamspecs.c	/^gimp_value_dup_stringarray (const GValue *value)$/;"	f
gimp_value_get_array	core/gimpparamspecs.c	/^gimp_value_get_array (const GValue *value)$/;"	f	file:
gimp_value_get_channel	core/gimpparamspecs.c	/^gimp_value_get_channel (const GValue *value,$/;"	f
gimp_value_get_display	core/gimpparamspecs.c	/^gimp_value_get_display (const GValue *value,$/;"	f
gimp_value_get_drawable	core/gimpparamspecs.c	/^gimp_value_get_drawable (const GValue *value,$/;"	f
gimp_value_get_floatarray	core/gimpparamspecs.c	/^gimp_value_get_floatarray (const GValue *value)$/;"	f
gimp_value_get_image	core/gimpparamspecs.c	/^gimp_value_get_image (const GValue *value,$/;"	f
gimp_value_get_int16array	core/gimpparamspecs.c	/^gimp_value_get_int16array (const GValue *value)$/;"	f
gimp_value_get_int32array	core/gimpparamspecs.c	/^gimp_value_get_int32array (const GValue *value)$/;"	f
gimp_value_get_int8array	core/gimpparamspecs.c	/^gimp_value_get_int8array (const GValue *value)$/;"	f
gimp_value_get_item	core/gimpparamspecs.c	/^gimp_value_get_item (const GValue *value,$/;"	f
gimp_value_get_layer	core/gimpparamspecs.c	/^gimp_value_get_layer (const GValue *value,$/;"	f
gimp_value_get_layer_mask	core/gimpparamspecs.c	/^gimp_value_get_layer_mask (const GValue *value,$/;"	f
gimp_value_get_selection	core/gimpparamspecs.c	/^gimp_value_get_selection (const GValue *value,$/;"	f
gimp_value_get_stringarray	core/gimpparamspecs.c	/^gimp_value_get_stringarray (const GValue *value)$/;"	f
gimp_value_get_vectors	core/gimpparamspecs.c	/^gimp_value_get_vectors (const GValue *value,$/;"	f
gimp_value_set_array	core/gimpparamspecs.c	/^gimp_value_set_array (GValue       *value,$/;"	f	file:
gimp_value_set_channel	core/gimpparamspecs.c	/^gimp_value_set_channel (GValue      *value,$/;"	f
gimp_value_set_display	core/gimpparamspecs.c	/^gimp_value_set_display (GValue     *value,$/;"	f
gimp_value_set_drawable	core/gimpparamspecs.c	/^gimp_value_set_drawable (GValue       *value,$/;"	f
gimp_value_set_floatarray	core/gimpparamspecs.c	/^gimp_value_set_floatarray (GValue        *value,$/;"	f
gimp_value_set_image	core/gimpparamspecs.c	/^gimp_value_set_image (GValue    *value,$/;"	f
gimp_value_set_int16array	core/gimpparamspecs.c	/^gimp_value_set_int16array (GValue       *value,$/;"	f
gimp_value_set_int32array	core/gimpparamspecs.c	/^gimp_value_set_int32array (GValue       *value,$/;"	f
gimp_value_set_int8array	core/gimpparamspecs.c	/^gimp_value_set_int8array (GValue       *value,$/;"	f
gimp_value_set_item	core/gimpparamspecs.c	/^gimp_value_set_item (GValue   *value,$/;"	f
gimp_value_set_layer	core/gimpparamspecs.c	/^gimp_value_set_layer (GValue    *value,$/;"	f
gimp_value_set_layer_mask	core/gimpparamspecs.c	/^gimp_value_set_layer_mask (GValue        *value,$/;"	f
gimp_value_set_selection	core/gimpparamspecs.c	/^gimp_value_set_selection (GValue        *value,$/;"	f
gimp_value_set_static_array	core/gimpparamspecs.c	/^gimp_value_set_static_array (GValue       *value,$/;"	f	file:
gimp_value_set_static_floatarray	core/gimpparamspecs.c	/^gimp_value_set_static_floatarray (GValue        *value,$/;"	f
gimp_value_set_static_int16array	core/gimpparamspecs.c	/^gimp_value_set_static_int16array (GValue       *value,$/;"	f
gimp_value_set_static_int32array	core/gimpparamspecs.c	/^gimp_value_set_static_int32array (GValue       *value,$/;"	f
gimp_value_set_static_int8array	core/gimpparamspecs.c	/^gimp_value_set_static_int8array (GValue       *value,$/;"	f
gimp_value_set_static_stringarray	core/gimpparamspecs.c	/^gimp_value_set_static_stringarray (GValue       *value,$/;"	f
gimp_value_set_stringarray	core/gimpparamspecs.c	/^gimp_value_set_stringarray (GValue       *value,$/;"	f
gimp_value_set_vectors	core/gimpparamspecs.c	/^gimp_value_set_vectors (GValue      *value,$/;"	f
gimp_value_take_array	core/gimpparamspecs.c	/^gimp_value_take_array (GValue *value,$/;"	f	file:
gimp_value_take_floatarray	core/gimpparamspecs.c	/^gimp_value_take_floatarray (GValue  *value,$/;"	f
gimp_value_take_int16array	core/gimpparamspecs.c	/^gimp_value_take_int16array (GValue *value,$/;"	f
gimp_value_take_int32array	core/gimpparamspecs.c	/^gimp_value_take_int32array (GValue *value,$/;"	f
gimp_value_take_int8array	core/gimpparamspecs.c	/^gimp_value_take_int8array (GValue *value,$/;"	f
gimp_value_take_stringarray	core/gimpparamspecs.c	/^gimp_value_take_stringarray (GValue  *value,$/;"	f
gimp_vector_mode_get_type	tools/tools-enums.c	/^gimp_vector_mode_get_type (void)$/;"	f
gimp_vector_options_class_init	tools/gimpvectoroptions.c	/^gimp_vector_options_class_init (GimpVectorOptionsClass *klass)$/;"	f	file:
gimp_vector_options_get_property	tools/gimpvectoroptions.c	/^gimp_vector_options_get_property (GObject    *object,$/;"	f	file:
gimp_vector_options_gui	tools/gimpvectoroptions.c	/^gimp_vector_options_gui (GimpToolOptions *tool_options)$/;"	f
gimp_vector_options_init	tools/gimpvectoroptions.c	/^gimp_vector_options_init (GimpVectorOptions *options)$/;"	f	file:
gimp_vector_options_set_property	tools/gimpvectoroptions.c	/^gimp_vector_options_set_property (GObject      *object,$/;"	f	file:
gimp_vector_tool_button_press	tools/gimpvectortool.c	/^gimp_vector_tool_button_press (GimpTool        *tool,$/;"	f	file:
gimp_vector_tool_button_release	tools/gimpvectortool.c	/^gimp_vector_tool_button_release (GimpTool              *tool,$/;"	f	file:
gimp_vector_tool_class_init	tools/gimpvectortool.c	/^gimp_vector_tool_class_init (GimpVectorToolClass *klass)$/;"	f	file:
gimp_vector_tool_control	tools/gimpvectortool.c	/^gimp_vector_tool_control (GimpTool       *tool,$/;"	f	file:
gimp_vector_tool_cursor_update	tools/gimpvectortool.c	/^gimp_vector_tool_cursor_update (GimpTool        *tool,$/;"	f	file:
gimp_vector_tool_delete_selected_anchors	tools/gimpvectortool.c	/^gimp_vector_tool_delete_selected_anchors (GimpVectorTool *vector_tool)$/;"	f	file:
gimp_vector_tool_draw	tools/gimpvectortool.c	/^gimp_vector_tool_draw (GimpDrawTool *draw_tool)$/;"	f	file:
gimp_vector_tool_init	tools/gimpvectortool.c	/^gimp_vector_tool_init (GimpVectorTool *vector_tool)$/;"	f	file:
gimp_vector_tool_key_press	tools/gimpvectortool.c	/^gimp_vector_tool_key_press (GimpTool     *tool,$/;"	f	file:
gimp_vector_tool_modifier_key	tools/gimpvectortool.c	/^gimp_vector_tool_modifier_key (GimpTool        *tool,$/;"	f	file:
gimp_vector_tool_motion	tools/gimpvectortool.c	/^gimp_vector_tool_motion (GimpTool        *tool,$/;"	f	file:
gimp_vector_tool_move_selected_anchors	tools/gimpvectortool.c	/^gimp_vector_tool_move_selected_anchors (GimpVectorTool *vector_tool,$/;"	f	file:
gimp_vector_tool_oper_update	tools/gimpvectortool.c	/^gimp_vector_tool_oper_update (GimpTool        *tool,$/;"	f	file:
gimp_vector_tool_set_vectors	tools/gimpvectortool.c	/^gimp_vector_tool_set_vectors (GimpVectorTool *vector_tool,$/;"	f
gimp_vector_tool_status_update	tools/gimpvectortool.c	/^gimp_vector_tool_status_update (GimpTool        *tool,$/;"	f	file:
gimp_vector_tool_stroke_vectors	tools/gimpvectortool.c	/^gimp_vector_tool_stroke_vectors (GimpVectorTool *vector_tool,$/;"	f	file:
gimp_vector_tool_to_selection	tools/gimpvectortool.c	/^gimp_vector_tool_to_selection (GimpVectorTool *vector_tool)$/;"	f	file:
gimp_vector_tool_to_selection_extended	tools/gimpvectortool.c	/^gimp_vector_tool_to_selection_extended (GimpVectorTool *vector_tool,$/;"	f	file:
gimp_vector_tool_undo_push	tools/gimpvectortool.c	/^gimp_vector_tool_undo_push (GimpVectorTool *vector_tool,$/;"	f	file:
gimp_vector_tool_vectors_changed	tools/gimpvectortool.c	/^gimp_vector_tool_vectors_changed (GimpImage      *image,$/;"	f	file:
gimp_vector_tool_vectors_freeze	tools/gimpvectortool.c	/^gimp_vector_tool_vectors_freeze (GimpVectors    *vectors,$/;"	f	file:
gimp_vector_tool_vectors_removed	tools/gimpvectortool.c	/^gimp_vector_tool_vectors_removed (GimpVectors    *vectors,$/;"	f	file:
gimp_vector_tool_vectors_thaw	tools/gimpvectortool.c	/^gimp_vector_tool_vectors_thaw (GimpVectors    *vectors,$/;"	f	file:
gimp_vector_tool_vectors_visible	tools/gimpvectortool.c	/^gimp_vector_tool_vectors_visible (GimpVectors    *vectors,$/;"	f	file:
gimp_vector_tool_verify_state	tools/gimpvectortool.c	/^gimp_vector_tool_verify_state (GimpVectorTool *vector_tool)$/;"	f	file:
gimp_vectors_add_strokes	vectors/gimpvectors.c	/^gimp_vectors_add_strokes (const GimpVectors *src_vectors,$/;"	f
gimp_vectors_anchor_delete	vectors/gimpvectors.c	/^gimp_vectors_anchor_delete (GimpVectors *vectors,$/;"	f
gimp_vectors_anchor_get	vectors/gimpvectors.c	/^gimp_vectors_anchor_get (const GimpVectors *vectors,$/;"	f
gimp_vectors_anchor_select	vectors/gimpvectors.c	/^gimp_vectors_anchor_select (GimpVectors *vectors,$/;"	f
gimp_vectors_bounds	vectors/gimpvectors.c	/^gimp_vectors_bounds (const GimpVectors  *vectors,$/;"	f
gimp_vectors_class_init	vectors/gimpvectors.c	/^gimp_vectors_class_init (GimpVectorsClass *klass)$/;"	f	file:
gimp_vectors_compat_get_points	vectors/gimpvectors-compat.c	/^gimp_vectors_compat_get_points (GimpVectors *vectors,$/;"	f
gimp_vectors_compat_is_compatible	vectors/gimpvectors-compat.c	/^gimp_vectors_compat_is_compatible (GimpImage *image)$/;"	f
gimp_vectors_compat_new	vectors/gimpvectors-compat.c	/^gimp_vectors_compat_new (GimpImage              *image,$/;"	f
gimp_vectors_convert	vectors/gimpvectors.c	/^gimp_vectors_convert (GimpItem  *item,$/;"	f	file:
gimp_vectors_copy_strokes	vectors/gimpvectors.c	/^gimp_vectors_copy_strokes (const GimpVectors *src_vectors,$/;"	f
gimp_vectors_duplicate	vectors/gimpvectors.c	/^gimp_vectors_duplicate (GimpItem *item,$/;"	f	file:
gimp_vectors_export	vectors/gimpvectors-export.c	/^gimp_vectors_export (const GimpImage   *image,$/;"	f	file:
gimp_vectors_export_file	vectors/gimpvectors-export.c	/^gimp_vectors_export_file (const GimpImage    *image,$/;"	f
gimp_vectors_export_image_size	vectors/gimpvectors-export.c	/^gimp_vectors_export_image_size (const GimpImage *image,$/;"	f	file:
gimp_vectors_export_path	vectors/gimpvectors-export.c	/^gimp_vectors_export_path (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_export_path_data	vectors/gimpvectors-export.c	/^gimp_vectors_export_path_data (const GimpVectors *vectors)$/;"	f	file:
gimp_vectors_export_string	vectors/gimpvectors-export.c	/^gimp_vectors_export_string (const GimpImage    *image,$/;"	f
gimp_vectors_finalize	vectors/gimpvectors.c	/^gimp_vectors_finalize (GObject *object)$/;"	f	file:
gimp_vectors_flip	vectors/gimpvectors.c	/^gimp_vectors_flip (GimpItem            *item,$/;"	f	file:
gimp_vectors_freeze	vectors/gimpvectors.c	/^gimp_vectors_freeze (GimpVectors *vectors)$/;"	f
gimp_vectors_get_distance	vectors/gimpvectors.c	/^gimp_vectors_get_distance (const GimpVectors *vectors,$/;"	f
gimp_vectors_get_length	vectors/gimpvectors.c	/^gimp_vectors_get_length (const GimpVectors *vectors,$/;"	f
gimp_vectors_get_memsize	vectors/gimpvectors.c	/^gimp_vectors_get_memsize (GimpObject *object,$/;"	f	file:
gimp_vectors_get_n_strokes	vectors/gimpvectors.c	/^gimp_vectors_get_n_strokes (const GimpVectors *vectors)$/;"	f
gimp_vectors_get_new_preview	vectors/gimpvectors-preview.c	/^gimp_vectors_get_new_preview (GimpViewable *viewable,$/;"	f
gimp_vectors_id_get_type	core/gimpparamspecs.c	/^gimp_vectors_id_get_type (void)$/;"	f
gimp_vectors_import	vectors/gimpvectors-import.c	/^gimp_vectors_import (GimpImage    *image,$/;"	f	file:
gimp_vectors_import_buffer	vectors/gimpvectors-import.c	/^gimp_vectors_import_buffer (GimpImage    *image,$/;"	f
gimp_vectors_import_file	vectors/gimpvectors-import.c	/^gimp_vectors_import_file (GimpImage    *image,$/;"	f
gimp_vectors_init	vectors/gimpvectors.c	/^gimp_vectors_init (GimpVectors *vectors)$/;"	f	file:
gimp_vectors_interpolate	vectors/gimpvectors.c	/^gimp_vectors_interpolate (const GimpVectors *vectors,$/;"	f
gimp_vectors_is_attached	vectors/gimpvectors.c	/^gimp_vectors_is_attached (GimpItem *item)$/;"	f	file:
gimp_vectors_make_bezier	vectors/gimpvectors.c	/^gimp_vectors_make_bezier (const GimpVectors *vectors)$/;"	f
gimp_vectors_mod_undo_class_init	vectors/gimpvectorsmodundo.c	/^gimp_vectors_mod_undo_class_init (GimpVectorsModUndoClass *klass)$/;"	f	file:
gimp_vectors_mod_undo_constructor	vectors/gimpvectorsmodundo.c	/^gimp_vectors_mod_undo_constructor (GType                  type,$/;"	f	file:
gimp_vectors_mod_undo_free	vectors/gimpvectorsmodundo.c	/^gimp_vectors_mod_undo_free (GimpUndo     *undo,$/;"	f	file:
gimp_vectors_mod_undo_get_memsize	vectors/gimpvectorsmodundo.c	/^gimp_vectors_mod_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_vectors_mod_undo_init	vectors/gimpvectorsmodundo.c	/^gimp_vectors_mod_undo_init (GimpVectorsModUndo *undo)$/;"	f	file:
gimp_vectors_mod_undo_pop	vectors/gimpvectorsmodundo.c	/^gimp_vectors_mod_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_vectors_new	vectors/gimpvectors.c	/^gimp_vectors_new (GimpImage   *image,$/;"	f
gimp_vectors_prop_undo_class_init	vectors/gimpvectorspropundo.c	/^gimp_vectors_prop_undo_class_init (GimpVectorsPropUndoClass *klass)$/;"	f	file:
gimp_vectors_prop_undo_constructor	vectors/gimpvectorspropundo.c	/^gimp_vectors_prop_undo_constructor (GType                  type,$/;"	f	file:
gimp_vectors_prop_undo_init	vectors/gimpvectorspropundo.c	/^gimp_vectors_prop_undo_init (GimpVectorsPropUndo *undo)$/;"	f	file:
gimp_vectors_prop_undo_pop	vectors/gimpvectorspropundo.c	/^gimp_vectors_prop_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_vectors_real_anchor_delete	vectors/gimpvectors.c	/^gimp_vectors_real_anchor_delete (GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_anchor_get	vectors/gimpvectors.c	/^gimp_vectors_real_anchor_get (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_get_distance	vectors/gimpvectors.c	/^gimp_vectors_real_get_distance (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_get_length	vectors/gimpvectors.c	/^gimp_vectors_real_get_length (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_interpolate	vectors/gimpvectors.c	/^gimp_vectors_real_interpolate (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_make_bezier	vectors/gimpvectors.c	/^gimp_vectors_real_make_bezier (const GimpVectors *vectors)$/;"	f	file:
gimp_vectors_real_stroke_add	vectors/gimpvectors.c	/^gimp_vectors_real_stroke_add (GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_stroke_get	vectors/gimpvectors.c	/^gimp_vectors_real_stroke_get (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_stroke_get_length	vectors/gimpvectors.c	/^gimp_vectors_real_stroke_get_length (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_stroke_get_next	vectors/gimpvectors.c	/^gimp_vectors_real_stroke_get_next (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_stroke_remove	vectors/gimpvectors.c	/^gimp_vectors_real_stroke_remove (GimpVectors *vectors,$/;"	f	file:
gimp_vectors_real_thaw	vectors/gimpvectors.c	/^gimp_vectors_real_thaw (GimpVectors *vectors)$/;"	f	file:
gimp_vectors_resize	vectors/gimpvectors.c	/^gimp_vectors_resize (GimpItem    *item,$/;"	f	file:
gimp_vectors_rotate	vectors/gimpvectors.c	/^gimp_vectors_rotate (GimpItem         *item,$/;"	f	file:
gimp_vectors_scale	vectors/gimpvectors.c	/^gimp_vectors_scale (GimpItem              *item,$/;"	f	file:
gimp_vectors_signals	vectors/gimpvectors.c	/^static guint gimp_vectors_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
gimp_vectors_stroke	vectors/gimpvectors.c	/^gimp_vectors_stroke (GimpItem       *item,$/;"	f	file:
gimp_vectors_stroke_add	vectors/gimpvectors.c	/^gimp_vectors_stroke_add (GimpVectors *vectors,$/;"	f
gimp_vectors_stroke_get	vectors/gimpvectors.c	/^gimp_vectors_stroke_get (const GimpVectors *vectors,$/;"	f
gimp_vectors_stroke_get_by_ID	vectors/gimpvectors.c	/^gimp_vectors_stroke_get_by_ID (const GimpVectors *vectors,$/;"	f
gimp_vectors_stroke_get_length	vectors/gimpvectors.c	/^gimp_vectors_stroke_get_length (const GimpVectors *vectors,$/;"	f
gimp_vectors_stroke_get_next	vectors/gimpvectors.c	/^gimp_vectors_stroke_get_next (const GimpVectors *vectors,$/;"	f
gimp_vectors_stroke_remove	vectors/gimpvectors.c	/^gimp_vectors_stroke_remove (GimpVectors *vectors,$/;"	f
gimp_vectors_thaw	vectors/gimpvectors.c	/^gimp_vectors_thaw (GimpVectors *vectors)$/;"	f
gimp_vectors_transform	vectors/gimpvectors.c	/^gimp_vectors_transform (GimpItem               *item,$/;"	f	file:
gimp_vectors_translate	vectors/gimpvectors.c	/^gimp_vectors_translate (GimpItem *item,$/;"	f	file:
gimp_vectors_tree_view_class_init	widgets/gimpvectorstreeview.c	/^gimp_vectors_tree_view_class_init (GimpVectorsTreeViewClass *klass)$/;"	f	file:
gimp_vectors_tree_view_constructor	widgets/gimpvectorstreeview.c	/^gimp_vectors_tree_view_constructor (GType                  type,$/;"	f	file:
gimp_vectors_tree_view_drag_svg	widgets/gimpvectorstreeview.c	/^gimp_vectors_tree_view_drag_svg (GtkWidget *widget,$/;"	f	file:
gimp_vectors_tree_view_drop_svg	widgets/gimpvectorstreeview.c	/^gimp_vectors_tree_view_drop_svg (GimpContainerTreeView   *tree_view,$/;"	f	file:
gimp_vectors_tree_view_init	widgets/gimpvectorstreeview.c	/^gimp_vectors_tree_view_init (GimpVectorsTreeView *view)$/;"	f	file:
gimp_vectors_tree_view_item_new	widgets/gimpvectorstreeview.c	/^gimp_vectors_tree_view_item_new (GimpImage *image)$/;"	f	file:
gimp_vectors_tree_view_set_container	widgets/gimpvectorstreeview.c	/^gimp_vectors_tree_view_set_container (GimpContainerView *view,$/;"	f	file:
gimp_vectors_tree_view_view_iface_init	widgets/gimpvectorstreeview.c	/^gimp_vectors_tree_view_view_iface_init (GimpContainerViewInterface *iface)$/;"	f	file:
gimp_vectors_undo_class_init	vectors/gimpvectorsundo.c	/^gimp_vectors_undo_class_init (GimpVectorsUndoClass *klass)$/;"	f	file:
gimp_vectors_undo_constructor	vectors/gimpvectorsundo.c	/^gimp_vectors_undo_constructor (GType                  type,$/;"	f	file:
gimp_vectors_undo_get_memsize	vectors/gimpvectorsundo.c	/^gimp_vectors_undo_get_memsize (GimpObject *object,$/;"	f	file:
gimp_vectors_undo_get_property	vectors/gimpvectorsundo.c	/^gimp_vectors_undo_get_property (GObject    *object,$/;"	f	file:
gimp_vectors_undo_init	vectors/gimpvectorsundo.c	/^gimp_vectors_undo_init (GimpVectorsUndo *undo)$/;"	f	file:
gimp_vectors_undo_pop	vectors/gimpvectorsundo.c	/^gimp_vectors_undo_pop (GimpUndo            *undo,$/;"	f	file:
gimp_vectors_undo_set_property	vectors/gimpvectorsundo.c	/^gimp_vectors_undo_set_property (GObject      *object,$/;"	f	file:
gimp_vectors_warp_point	vectors/gimpvectors-warp.c	/^gimp_vectors_warp_point (const GimpVectors *vectors,$/;"	f
gimp_vectors_warp_stroke	vectors/gimpvectors-warp.c	/^gimp_vectors_warp_stroke (const GimpVectors *vectors,$/;"	f	file:
gimp_vectors_warp_vectors	vectors/gimpvectors-warp.c	/^gimp_vectors_warp_vectors (const GimpVectors *vectors,$/;"	f
gimp_view_button_press_event	widgets/gimpview.c	/^gimp_view_button_press_event (GtkWidget      *widget,$/;"	f	file:
gimp_view_button_release_event	widgets/gimpview.c	/^gimp_view_button_release_event (GtkWidget      *widget,$/;"	f	file:
gimp_view_class_init	widgets/gimpview.c	/^gimp_view_class_init (GimpViewClass *klass)$/;"	f	file:
gimp_view_destroy	widgets/gimpview.c	/^gimp_view_destroy (GtkObject *object)$/;"	f	file:
gimp_view_drag_pixbuf	widgets/gimpview.c	/^gimp_view_drag_pixbuf (GtkWidget *widget,$/;"	f	file:
gimp_view_drag_viewable	widgets/gimpview.c	/^gimp_view_drag_viewable (GtkWidget    *widget,$/;"	f	file:
gimp_view_enter_notify_event	widgets/gimpview.c	/^gimp_view_enter_notify_event (GtkWidget        *widget,$/;"	f	file:
gimp_view_expose_event	widgets/gimpview.c	/^gimp_view_expose_event (GtkWidget      *widget,$/;"	f	file:
gimp_view_get_viewable	widgets/gimpview.c	/^gimp_view_get_viewable (GimpView *view)$/;"	f
gimp_view_init	widgets/gimpview.c	/^gimp_view_init (GimpView *view)$/;"	f	file:
gimp_view_leave_notify_event	widgets/gimpview.c	/^gimp_view_leave_notify_event (GtkWidget        *widget,$/;"	f	file:
gimp_view_map	widgets/gimpview.c	/^gimp_view_map (GtkWidget *widget)$/;"	f	file:
gimp_view_new	widgets/gimpview.c	/^gimp_view_new (GimpContext  *context,$/;"	f
gimp_view_new_by_types	widgets/gimpview.c	/^gimp_view_new_by_types (GimpContext *context,$/;"	f
gimp_view_new_full	widgets/gimpview.c	/^gimp_view_new_full (GimpContext  *context,$/;"	f
gimp_view_new_full_by_types	widgets/gimpview.c	/^gimp_view_new_full_by_types (GimpContext *context,$/;"	f
gimp_view_popup_button_release	widgets/gimpview-popup.c	/^gimp_view_popup_button_release (GtkWidget      *widget,$/;"	f	file:
gimp_view_popup_drag_begin	widgets/gimpview-popup.c	/^gimp_view_popup_drag_begin (GtkWidget      *widget,$/;"	f	file:
gimp_view_popup_hide	widgets/gimpview-popup.c	/^gimp_view_popup_hide (GimpViewPopup *popup)$/;"	f	file:
gimp_view_popup_show	widgets/gimpview-popup.c	/^gimp_view_popup_show (GtkWidget      *widget,$/;"	f
gimp_view_popup_timeout	widgets/gimpview-popup.c	/^gimp_view_popup_timeout (GimpViewPopup *popup)$/;"	f	file:
gimp_view_popup_unmap	widgets/gimpview-popup.c	/^gimp_view_popup_unmap (GtkWidget     *widget,$/;"	f	file:
gimp_view_real_set_viewable	widgets/gimpview.c	/^gimp_view_real_set_viewable (GimpView     *view,$/;"	f	file:
gimp_view_realize	widgets/gimpview.c	/^gimp_view_realize (GtkWidget *widget)$/;"	f	file:
gimp_view_render_to_buffer	widgets/gimpviewrenderer.c	/^gimp_view_render_to_buffer (TempBuf    *temp_buf,$/;"	f
gimp_view_renderer_brush_class_init	widgets/gimpviewrendererbrush.c	/^gimp_view_renderer_brush_class_init (GimpViewRendererBrushClass *klass)$/;"	f	file:
gimp_view_renderer_brush_finalize	widgets/gimpviewrendererbrush.c	/^gimp_view_renderer_brush_finalize (GObject *object)$/;"	f	file:
gimp_view_renderer_brush_init	widgets/gimpviewrendererbrush.c	/^gimp_view_renderer_brush_init (GimpViewRendererBrush *renderer)$/;"	f	file:
gimp_view_renderer_brush_render	widgets/gimpviewrendererbrush.c	/^gimp_view_renderer_brush_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_brush_render_timeout	widgets/gimpviewrendererbrush.c	/^gimp_view_renderer_brush_render_timeout (gpointer data)$/;"	f	file:
gimp_view_renderer_buffer_class_init	widgets/gimpviewrendererbuffer.c	/^gimp_view_renderer_buffer_class_init (GimpViewRendererBufferClass *klass)$/;"	f	file:
gimp_view_renderer_buffer_init	widgets/gimpviewrendererbuffer.c	/^gimp_view_renderer_buffer_init (GimpViewRendererBuffer *renderer)$/;"	f	file:
gimp_view_renderer_buffer_render	widgets/gimpviewrendererbuffer.c	/^gimp_view_renderer_buffer_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_class_init	widgets/gimpviewrenderer.c	/^gimp_view_renderer_class_init (GimpViewRendererClass *klass)$/;"	f	file:
gimp_view_renderer_create_gc	widgets/gimpviewrenderer.c	/^gimp_view_renderer_create_gc (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_default_render_buffer	widgets/gimpviewrenderer.c	/^gimp_view_renderer_default_render_buffer (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_default_render_stock	widgets/gimpviewrenderer.c	/^gimp_view_renderer_default_render_stock (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_dispose	widgets/gimpviewrenderer.c	/^gimp_view_renderer_dispose (GObject *object)$/;"	f	file:
gimp_view_renderer_draw	widgets/gimpviewrenderer.c	/^gimp_view_renderer_draw (GimpViewRenderer   *renderer,$/;"	f
gimp_view_renderer_drawable_class_init	widgets/gimpviewrendererdrawable.c	/^gimp_view_renderer_drawable_class_init (GimpViewRendererDrawableClass *klass)$/;"	f	file:
gimp_view_renderer_drawable_init	widgets/gimpviewrendererdrawable.c	/^gimp_view_renderer_drawable_init (GimpViewRendererDrawable *renderer)$/;"	f	file:
gimp_view_renderer_drawable_render	widgets/gimpviewrendererdrawable.c	/^gimp_view_renderer_drawable_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_ensure_frame	widgets/gimpviewrenderer-frame.c	/^gimp_view_renderer_ensure_frame (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_finalize	widgets/gimpviewrenderer.c	/^gimp_view_renderer_finalize (GObject *object)$/;"	f	file:
gimp_view_renderer_get_frame	widgets/gimpviewrenderer-frame.c	/^gimp_view_renderer_get_frame (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_get_frame_pixbuf	widgets/gimpviewrenderer-frame.c	/^gimp_view_renderer_get_frame_pixbuf (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_get_frame_size	widgets/gimpviewrenderer-frame.c	/^gimp_view_renderer_get_frame_size (gint *horizontal,$/;"	f
gimp_view_renderer_gradient_class_init	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_class_init (GimpViewRendererGradientClass *klass)$/;"	f	file:
gimp_view_renderer_gradient_fg_bg_changed	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_fg_bg_changed (GimpContext      *context,$/;"	f	file:
gimp_view_renderer_gradient_finalize	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_finalize (GObject *object)$/;"	f	file:
gimp_view_renderer_gradient_init	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_init (GimpViewRendererGradient *renderer)$/;"	f	file:
gimp_view_renderer_gradient_invalidate	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_invalidate (GimpViewRenderer *renderer)$/;"	f	file:
gimp_view_renderer_gradient_render	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_gradient_set_context	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_set_context (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_gradient_set_offsets	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_set_offsets (GimpViewRendererGradient *renderer,$/;"	f
gimp_view_renderer_gradient_set_reverse	widgets/gimpviewrenderergradient.c	/^gimp_view_renderer_gradient_set_reverse (GimpViewRendererGradient *renderer,$/;"	f
gimp_view_renderer_idle_update	widgets/gimpviewrenderer.c	/^gimp_view_renderer_idle_update (GimpViewRenderer *renderer)$/;"	f	file:
gimp_view_renderer_image_class_init	widgets/gimpviewrendererimage.c	/^gimp_view_renderer_image_class_init (GimpViewRendererImageClass *klass)$/;"	f	file:
gimp_view_renderer_image_init	widgets/gimpviewrendererimage.c	/^gimp_view_renderer_image_init (GimpViewRendererImage *renderer)$/;"	f	file:
gimp_view_renderer_image_render	widgets/gimpviewrendererimage.c	/^gimp_view_renderer_image_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_imagefile_class_init	widgets/gimpviewrendererimagefile.c	/^gimp_view_renderer_imagefile_class_init (GimpViewRendererImagefileClass *klass)$/;"	f	file:
gimp_view_renderer_imagefile_init	widgets/gimpviewrendererimagefile.c	/^gimp_view_renderer_imagefile_init (GimpViewRendererImagefile *renderer)$/;"	f	file:
gimp_view_renderer_imagefile_render	widgets/gimpviewrendererimagefile.c	/^gimp_view_renderer_imagefile_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_init	widgets/gimpviewrenderer.c	/^gimp_view_renderer_init (GimpViewRenderer *renderer)$/;"	f	file:
gimp_view_renderer_invalidate	widgets/gimpviewrenderer.c	/^gimp_view_renderer_invalidate (GimpViewRenderer *renderer)$/;"	f
gimp_view_renderer_layer_class_init	widgets/gimpviewrendererlayer.c	/^gimp_view_renderer_layer_class_init (GimpViewRendererLayerClass *klass)$/;"	f	file:
gimp_view_renderer_layer_init	widgets/gimpviewrendererlayer.c	/^gimp_view_renderer_layer_init (GimpViewRendererLayer *renderer)$/;"	f	file:
gimp_view_renderer_layer_render	widgets/gimpviewrendererlayer.c	/^gimp_view_renderer_layer_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_new	widgets/gimpviewrenderer.c	/^gimp_view_renderer_new (GimpContext *context,$/;"	f
gimp_view_renderer_new_full	widgets/gimpviewrenderer.c	/^gimp_view_renderer_new_full (GimpContext *context,$/;"	f
gimp_view_renderer_new_internal	widgets/gimpviewrenderer.c	/^gimp_view_renderer_new_internal (GimpContext *context,$/;"	f	file:
gimp_view_renderer_palette_class_init	widgets/gimpviewrendererpalette.c	/^gimp_view_renderer_palette_class_init (GimpViewRendererPaletteClass *klass)$/;"	f	file:
gimp_view_renderer_palette_finalize	widgets/gimpviewrendererpalette.c	/^gimp_view_renderer_palette_finalize (GObject *object)$/;"	f	file:
gimp_view_renderer_palette_init	widgets/gimpviewrendererpalette.c	/^gimp_view_renderer_palette_init (GimpViewRendererPalette *renderer)$/;"	f	file:
gimp_view_renderer_palette_render	widgets/gimpviewrendererpalette.c	/^gimp_view_renderer_palette_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_palette_set_cell_size	widgets/gimpviewrendererpalette.c	/^gimp_view_renderer_palette_set_cell_size (GimpViewRendererPalette *renderer,$/;"	f
gimp_view_renderer_palette_set_draw_grid	widgets/gimpviewrendererpalette.c	/^gimp_view_renderer_palette_set_draw_grid (GimpViewRendererPalette *renderer,$/;"	f
gimp_view_renderer_real_draw	widgets/gimpviewrenderer.c	/^gimp_view_renderer_real_draw (GimpViewRenderer   *renderer,$/;"	f	file:
gimp_view_renderer_real_invalidate	widgets/gimpviewrenderer.c	/^gimp_view_renderer_real_invalidate (GimpViewRenderer *renderer)$/;"	f	file:
gimp_view_renderer_real_render	widgets/gimpviewrenderer.c	/^gimp_view_renderer_real_render (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_real_set_context	widgets/gimpviewrenderer.c	/^gimp_view_renderer_real_set_context (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_remove_idle	widgets/gimpviewrenderer.c	/^gimp_view_renderer_remove_idle (GimpViewRenderer *renderer)$/;"	f
gimp_view_renderer_render_buffer	widgets/gimpviewrenderer.c	/^gimp_view_renderer_render_buffer (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_render_pixbuf	widgets/gimpviewrenderer.c	/^gimp_view_renderer_render_pixbuf (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_set_background	widgets/gimpviewrenderer.c	/^gimp_view_renderer_set_background (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_set_border_color	widgets/gimpviewrenderer.c	/^gimp_view_renderer_set_border_color (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_set_border_type	widgets/gimpviewrenderer.c	/^gimp_view_renderer_set_border_type (GimpViewRenderer   *renderer,$/;"	f
gimp_view_renderer_set_context	widgets/gimpviewrenderer.c	/^gimp_view_renderer_set_context (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_set_dot_for_dot	widgets/gimpviewrenderer.c	/^gimp_view_renderer_set_dot_for_dot (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_set_size	widgets/gimpviewrenderer.c	/^gimp_view_renderer_set_size (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_set_size_full	widgets/gimpviewrenderer.c	/^gimp_view_renderer_set_size_full (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_set_viewable	widgets/gimpviewrenderer.c	/^gimp_view_renderer_set_viewable (GimpViewRenderer *renderer,$/;"	f
gimp_view_renderer_size_changed	widgets/gimpviewrenderer.c	/^gimp_view_renderer_size_changed (GimpViewRenderer *renderer,$/;"	f	file:
gimp_view_renderer_type_from_viewable_type	widgets/gimpviewrenderer-utils.c	/^gimp_view_renderer_type_from_viewable_type (GType viewable_type)$/;"	f
gimp_view_renderer_unrealize	widgets/gimpviewrenderer.c	/^gimp_view_renderer_unrealize (GimpViewRenderer *renderer)$/;"	f
gimp_view_renderer_update	widgets/gimpviewrenderer.c	/^gimp_view_renderer_update (GimpViewRenderer *renderer)$/;"	f
gimp_view_renderer_update_idle	widgets/gimpviewrenderer.c	/^gimp_view_renderer_update_idle (GimpViewRenderer *renderer)$/;"	f
gimp_view_renderer_vectors_class_init	widgets/gimpviewrenderervectors.c	/^gimp_view_renderer_vectors_class_init (GimpViewRendererVectorsClass *klass)$/;"	f	file:
gimp_view_renderer_vectors_draw	widgets/gimpviewrenderervectors.c	/^gimp_view_renderer_vectors_draw (GimpViewRenderer   *renderer,$/;"	f	file:
gimp_view_renderer_vectors_init	widgets/gimpviewrenderervectors.c	/^gimp_view_renderer_vectors_init (GimpViewRendererVectors *renderer)$/;"	f	file:
gimp_view_set_expand	widgets/gimpview.c	/^gimp_view_set_expand (GimpView *view,$/;"	f
gimp_view_set_viewable	widgets/gimpview.c	/^gimp_view_set_viewable (GimpView     *view,$/;"	f
gimp_view_size_allocate	widgets/gimpview.c	/^gimp_view_size_allocate (GtkWidget     *widget,$/;"	f	file:
gimp_view_size_get_type	core/core-enums.c	/^gimp_view_size_get_type (void)$/;"	f
gimp_view_size_request	widgets/gimpview.c	/^gimp_view_size_request (GtkWidget      *widget,$/;"	f	file:
gimp_view_type_get_type	core/core-enums.c	/^gimp_view_type_get_type (void)$/;"	f
gimp_view_unmap	widgets/gimpview.c	/^gimp_view_unmap (GtkWidget *widget)$/;"	f	file:
gimp_view_unrealize	widgets/gimpview.c	/^gimp_view_unrealize (GtkWidget *widget)$/;"	f	file:
gimp_view_update_callback	widgets/gimpview.c	/^gimp_view_update_callback (GimpViewRenderer *renderer,$/;"	f	file:
gimp_viewable_box_new	widgets/gimpviewablebox.c	/^gimp_viewable_box_new (GimpContainer *container,$/;"	f	file:
gimp_viewable_button_class_init	widgets/gimpviewablebutton.c	/^gimp_viewable_button_class_init (GimpViewableButtonClass *klass)$/;"	f	file:
gimp_viewable_button_clicked	widgets/gimpviewablebutton.c	/^gimp_viewable_button_clicked (GtkButton *button)$/;"	f	file:
gimp_viewable_button_finalize	widgets/gimpviewablebutton.c	/^gimp_viewable_button_finalize (GObject *object)$/;"	f	file:
gimp_viewable_button_get_property	widgets/gimpviewablebutton.c	/^gimp_viewable_button_get_property (GObject    *object,$/;"	f	file:
gimp_viewable_button_get_view_size	widgets/gimpviewablebutton.c	/^gimp_viewable_button_get_view_size (GimpViewableButton *button)$/;"	f
gimp_viewable_button_get_view_type	widgets/gimpviewablebutton.c	/^gimp_viewable_button_get_view_type (GimpViewableButton *button)$/;"	f
gimp_viewable_button_init	widgets/gimpviewablebutton.c	/^gimp_viewable_button_init (GimpViewableButton *button)$/;"	f	file:
gimp_viewable_button_new	widgets/gimpviewablebutton.c	/^gimp_viewable_button_new (GimpContainer     *container,$/;"	f
gimp_viewable_button_popup_closed	widgets/gimpviewablebutton.c	/^gimp_viewable_button_popup_closed (GimpContainerPopup *popup,$/;"	f	file:
gimp_viewable_button_scroll_event	widgets/gimpviewablebutton.c	/^gimp_viewable_button_scroll_event (GtkWidget      *widget,$/;"	f	file:
gimp_viewable_button_set_property	widgets/gimpviewablebutton.c	/^gimp_viewable_button_set_property (GObject      *object,$/;"	f	file:
gimp_viewable_button_set_view_size	widgets/gimpviewablebutton.c	/^gimp_viewable_button_set_view_size (GimpViewableButton *button,$/;"	f
gimp_viewable_button_set_view_type	widgets/gimpviewablebutton.c	/^gimp_viewable_button_set_view_type (GimpViewableButton *button,$/;"	f
gimp_viewable_calc_preview_size	core/gimpviewable.c	/^gimp_viewable_calc_preview_size (gint       aspect_width,$/;"	f
gimp_viewable_class_init	core/gimpviewable.c	/^gimp_viewable_class_init (GimpViewableClass *klass)$/;"	f	file:
gimp_viewable_config_iface_init	core/gimpviewable.c	/^gimp_viewable_config_iface_init (GimpConfigInterface *iface)$/;"	f	file:
gimp_viewable_dialog_class_init	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_class_init (GimpViewableDialogClass *klass)$/;"	f	file:
gimp_viewable_dialog_close	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_close (GimpViewableDialog *dialog)$/;"	f	file:
gimp_viewable_dialog_destroy	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_destroy (GtkObject *object)$/;"	f	file:
gimp_viewable_dialog_get_property	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_get_property (GObject    *object,$/;"	f	file:
gimp_viewable_dialog_init	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_init (GimpViewableDialog *dialog)$/;"	f	file:
gimp_viewable_dialog_name_changed	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_name_changed (GimpObject         *object,$/;"	f	file:
gimp_viewable_dialog_new	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_new (GimpViewable *viewable,$/;"	f
gimp_viewable_dialog_set_property	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_set_property (GObject      *object,$/;"	f	file:
gimp_viewable_dialog_set_viewable	widgets/gimpviewabledialog.c	/^gimp_viewable_dialog_set_viewable (GimpViewableDialog *dialog,$/;"	f
gimp_viewable_finalize	core/gimpviewable.c	/^gimp_viewable_finalize (GObject *object)$/;"	f	file:
gimp_viewable_get_description	core/gimpviewable.c	/^gimp_viewable_get_description (GimpViewable  *viewable,$/;"	f
gimp_viewable_get_dummy_pixbuf	core/gimpviewable.c	/^gimp_viewable_get_dummy_pixbuf (GimpViewable  *viewable,$/;"	f
gimp_viewable_get_dummy_preview	core/gimpviewable.c	/^gimp_viewable_get_dummy_preview (GimpViewable  *viewable,$/;"	f
gimp_viewable_get_memsize	core/gimpviewable.c	/^gimp_viewable_get_memsize (GimpObject *object,$/;"	f	file:
gimp_viewable_get_new_pixbuf	core/gimpviewable.c	/^gimp_viewable_get_new_pixbuf (GimpViewable *viewable,$/;"	f
gimp_viewable_get_new_preview	core/gimpviewable.c	/^gimp_viewable_get_new_preview (GimpViewable *viewable,$/;"	f
gimp_viewable_get_pixbuf	core/gimpviewable.c	/^gimp_viewable_get_pixbuf (GimpViewable *viewable,$/;"	f
gimp_viewable_get_popup_size	core/gimpviewable.c	/^gimp_viewable_get_popup_size (GimpViewable *viewable,$/;"	f
gimp_viewable_get_preview	core/gimpviewable.c	/^gimp_viewable_get_preview (GimpViewable *viewable,$/;"	f
gimp_viewable_get_preview_size	core/gimpviewable.c	/^gimp_viewable_get_preview_size (GimpViewable *viewable,$/;"	f
gimp_viewable_get_property	core/gimpviewable.c	/^gimp_viewable_get_property (GObject    *object,$/;"	f	file:
gimp_viewable_get_size	core/gimpviewable.c	/^gimp_viewable_get_size (GimpViewable  *viewable,$/;"	f
gimp_viewable_get_stock_id	core/gimpviewable.c	/^gimp_viewable_get_stock_id (GimpViewable *viewable)$/;"	f
gimp_viewable_init	core/gimpviewable.c	/^gimp_viewable_init (GimpViewable *viewable)$/;"	f	file:
gimp_viewable_invalidate_preview	core/gimpviewable.c	/^gimp_viewable_invalidate_preview (GimpViewable *viewable)$/;"	f
gimp_viewable_real_get_description	core/gimpviewable.c	/^gimp_viewable_real_get_description (GimpViewable  *viewable,$/;"	f	file:
gimp_viewable_real_get_new_pixbuf	core/gimpviewable.c	/^gimp_viewable_real_get_new_pixbuf (GimpViewable *viewable,$/;"	f	file:
gimp_viewable_real_get_popup_size	core/gimpviewable.c	/^gimp_viewable_real_get_popup_size (GimpViewable *viewable,$/;"	f	file:
gimp_viewable_real_get_preview_size	core/gimpviewable.c	/^gimp_viewable_real_get_preview_size (GimpViewable *viewable,$/;"	f	file:
gimp_viewable_real_invalidate_preview	core/gimpviewable.c	/^gimp_viewable_real_invalidate_preview (GimpViewable *viewable)$/;"	f	file:
gimp_viewable_serialize_property	core/gimpviewable.c	/^gimp_viewable_serialize_property (GimpConfig       *config,$/;"	f	file:
gimp_viewable_set_property	core/gimpviewable.c	/^gimp_viewable_set_property (GObject      *object,$/;"	f	file:
gimp_viewable_set_stock_id	core/gimpviewable.c	/^gimp_viewable_set_stock_id (GimpViewable *viewable,$/;"	f
gimp_viewable_size_changed	core/gimpviewable.c	/^gimp_viewable_size_changed (GimpViewable *viewable)$/;"	f
gimp_widget_accel_changed	widgets/gimpwidgets-utils.c	/^gimp_widget_accel_changed (GtkAccelGroup   *accel_group,$/;"	f	file:
gimp_widget_accel_find_func	widgets/gimpwidgets-utils.c	/^gimp_widget_accel_find_func (GtkAccelKey *key,$/;"	f	file:
gimp_widget_set_accel_help	widgets/gimpwidgets-utils.c	/^gimp_widget_set_accel_help (GtkWidget *widget,$/;"	f
gimp_win32_large_truncate	base/tile-swap.c	/^gimp_win32_large_truncate (gint   fd,$/;"	f	file:
gimp_window_get_native	widgets/gimpwidgets-utils.c	/^gimp_window_get_native (GtkWindow *window)$/;"	f
gimp_window_hint_get_type	widgets/widgets-enums.c	/^gimp_window_hint_get_type (void)$/;"	f
gimp_window_set_hint	widgets/gimpwidgets-utils.c	/^gimp_window_set_hint (GtkWindow      *window,$/;"	f
gimp_window_set_transient_for	widgets/gimpwidgets-utils.c	/^gimp_window_set_transient_for (GtkWindow *window,$/;"	f
gimp_window_transient_realized	widgets/gimpwidgets-utils.c	/^gimp_window_transient_realized (GtkWidget *window,$/;"	f	file:
gimp_xml_parser_free	config/gimpxmlparser.c	/^gimp_xml_parser_free (GimpXmlParser *parser)$/;"	f
gimp_xml_parser_new	config/gimpxmlparser.c	/^gimp_xml_parser_new (const GMarkupParser *markup_parser,$/;"	f
gimp_xml_parser_parse_buffer	config/gimpxmlparser.c	/^gimp_xml_parser_parse_buffer (GimpXmlParser  *parser,$/;"	f
gimp_xml_parser_parse_fd	config/gimpxmlparser.c	/^gimp_xml_parser_parse_fd (GimpXmlParser  *parser,$/;"	f
gimp_xml_parser_parse_file	config/gimpxmlparser.c	/^gimp_xml_parser_parse_file (GimpXmlParser  *parser,$/;"	f
gimp_xml_parser_parse_io_channel	config/gimpxmlparser.c	/^gimp_xml_parser_parse_io_channel (GimpXmlParser  *parser,$/;"	f
gimprc_query_invoker	pdb/gimprc_cmds.c	/^gimprc_query_invoker (GimpProcedure     *procedure,$/;"	f	file:
gimprc_set_invoker	pdb/gimprc_cmds.c	/^gimprc_set_invoker (GimpProcedure     *procedure,$/;"	f	file:
gimpressionist_path	config/gimppluginconfig.h	/^  gchar              *gimpressionist_path;$/;"	m	struct:_GimpPluginConfig
global_action_factory	actions/actions.c	/^GimpActionFactory *global_action_factory = NULL;$/;"	v
global_brush	config/gimpcoreconfig.h	/^  gboolean                global_brush;$/;"	m	struct:_GimpCoreConfig
global_buffer	core/gimp.h	/^  GimpBuffer             *global_buffer;$/;"	m	struct:_Gimp
global_core_ID	paint/gimppaintcore.c	/^static gint global_core_ID = 1;$/;"	v	file:
global_dialog_factory	dialogs/dialogs.c	/^GimpDialogFactory *global_dialog_factory  = NULL;$/;"	v
global_dock_factory	dialogs/dialogs.c	/^GimpDialogFactory *global_dock_factory    = NULL;$/;"	v
global_error_dialog	gui/gui-message.c	/^global_error_dialog (void)$/;"	f	file:
global_font	config/gimpcoreconfig.h	/^  gboolean                global_font;$/;"	m	struct:_GimpCoreConfig
global_gradient	config/gimpcoreconfig.h	/^  gboolean                global_gradient;$/;"	m	struct:_GimpCoreConfig
global_label	widgets/gimpbufferview.h	/^  GtkWidget           *global_label;$/;"	m	struct:_GimpBufferView
global_menu_factory	menus/menus.c	/^GimpMenuFactory * global_menu_factory = NULL;$/;"	v
global_palette	config/gimpcoreconfig.h	/^  gboolean                global_palette;$/;"	m	struct:_GimpCoreConfig
global_pattern	config/gimpcoreconfig.h	/^  gboolean                global_pattern;$/;"	m	struct:_GimpCoreConfig
global_tool_ID	tools/gimptool.c	/^static gint global_tool_ID = 1;$/;"	v	file:
global_toolbox_factory	dialogs/dialogs.c	/^GimpDialogFactory *global_toolbox_factory = NULL;$/;"	v
global_view	widgets/gimpbufferview.h	/^  GtkWidget           *global_view;$/;"	m	struct:_GimpBufferView
got_first	core/gimpscanconvert.c	/^  gboolean        got_first;$/;"	m	struct:_GimpScanConvert	file:
got_motion_event	tools/gimptool.h	/^  gboolean         got_motion_event;$/;"	m	struct:_GimpTool
grab_button	widgets/gimpcontrollereditor.h	/^  GtkWidget          *grab_button;$/;"	m	struct:_GimpControllerEditor
grabbed	tools/gimpcurvestool.h	/^  gboolean              grabbed;$/;"	m	struct:_GimpCurvesTool
gradient	core/gimpcontext.h	/^  GimpGradient         *gradient;$/;"	m	struct:_GimpContext
gradient	core/gimpdrawable-blend.c	/^  GimpGradient     *gradient;$/;"	m	struct:__anon117	file:
gradient	core/gimpgradient-load.c	/^  GimpGradient *gradient;  \/*  current gradient    *\/$/;"	m	struct:__anon151	file:
gradient	widgets/gimpdevicestatus.c	/^  GtkWidget      *gradient;$/;"	m	struct:_GimpDeviceStatusEntry	file:
gradient_box_new	widgets/gimpviewablebox.c	/^gradient_box_new (GimpContainer *container,$/;"	f	file:
gradient_calc_bilinear_factor	core/gimpdrawable-blend.c	/^gradient_calc_bilinear_factor (gdouble  dist,$/;"	f	file:
gradient_calc_conical_asym_factor	core/gimpdrawable-blend.c	/^gradient_calc_conical_asym_factor (gdouble  dist,$/;"	f	file:
gradient_calc_conical_sym_factor	core/gimpdrawable-blend.c	/^gradient_calc_conical_sym_factor (gdouble  dist,$/;"	f	file:
gradient_calc_linear_factor	core/gimpdrawable-blend.c	/^gradient_calc_linear_factor (gdouble  dist,$/;"	f	file:
gradient_calc_radial_factor	core/gimpdrawable-blend.c	/^gradient_calc_radial_factor (gdouble dist,$/;"	f	file:
gradient_calc_shapeburst_angular_factor	core/gimpdrawable-blend.c	/^gradient_calc_shapeburst_angular_factor (gdouble x,$/;"	f	file:
gradient_calc_shapeburst_dimpled_factor	core/gimpdrawable-blend.c	/^gradient_calc_shapeburst_dimpled_factor (gdouble x,$/;"	f	file:
gradient_calc_shapeburst_spherical_factor	core/gimpdrawable-blend.c	/^gradient_calc_shapeburst_spherical_factor (gdouble x,$/;"	f	file:
gradient_calc_spiral_factor	core/gimpdrawable-blend.c	/^gradient_calc_spiral_factor (gdouble   dist,$/;"	f	file:
gradient_calc_square_factor	core/gimpdrawable-blend.c	/^gradient_calc_square_factor (gdouble dist,$/;"	f	file:
gradient_changed	core/gimpcontext.h	/^  void (* gradient_changed)   (GimpContext          *context,$/;"	m	struct:_GimpContextClass
gradient_combo	dialogs/palette-import-dialog.c	/^  GtkWidget     *gradient_combo;$/;"	m	struct:__anon178	file:
gradient_delete_invoker	pdb/gradient_cmds.c	/^gradient_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_duplicate_invoker	pdb/gradient_cmds.c	/^gradient_duplicate_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_editor_actions	actions/gradient-editor-actions.c	/^static const GimpActionEntry gradient_editor_actions[] =$/;"	v	file:
gradient_editor_actions_setup	actions/gradient-editor-actions.c	/^gradient_editor_actions_setup (GimpActionGroup *group)$/;"	f
gradient_editor_actions_update	actions/gradient-editor-actions.c	/^gradient_editor_actions_update (GimpActionGroup *group,$/;"	f
gradient_editor_blend_color_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_blend_color_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_blend_opacity_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_blend_opacity_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_blending_actions	actions/gradient-editor-actions.c	/^static const GimpRadioActionEntry gradient_editor_blending_actions[] =$/;"	v	file:
gradient_editor_blending_func_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_blending_func_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_coloring_actions	actions/gradient-editor-actions.c	/^static const GimpRadioActionEntry gradient_editor_coloring_actions[] =$/;"	v	file:
gradient_editor_coloring_type_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_coloring_type_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_control_drop_color	widgets/gimpgradienteditor.c	/^gradient_editor_control_drop_color (GtkWidget     *widget,$/;"	f	file:
gradient_editor_delete_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_delete_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_drop_color	widgets/gimpgradienteditor.c	/^gradient_editor_drop_color (GtkWidget     *widget,$/;"	f	file:
gradient_editor_drop_gradient	widgets/gimpgradienteditor.c	/^gradient_editor_drop_gradient (GtkWidget    *widget,$/;"	f	file:
gradient_editor_flip_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_flip_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_instant_update_update	widgets/gimpgradienteditor.c	/^gradient_editor_instant_update_update (GtkWidget          *widget,$/;"	f	file:
gradient_editor_left_color_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_left_color_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_left_color_type_actions	actions/gradient-editor-actions.c	/^static const GimpRadioActionEntry gradient_editor_left_color_type_actions[] =$/;"	v	file:
gradient_editor_left_color_type_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_left_color_type_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_left_color_update	actions/gradient-editor-commands.c	/^gradient_editor_left_color_update (GimpColorDialog      *dialog,$/;"	f	file:
gradient_editor_load_left_actions	actions/gradient-editor-actions.c	/^static const GimpEnumActionEntry gradient_editor_load_left_actions[] =$/;"	v	file:
gradient_editor_load_left_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_load_left_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_load_right_actions	actions/gradient-editor-actions.c	/^static const GimpEnumActionEntry gradient_editor_load_right_actions[] =$/;"	v	file:
gradient_editor_load_right_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_load_right_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_recenter_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_recenter_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_redistribute_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_redistribute_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_replace_selection	actions/gradient-editor-commands.c	/^gradient_editor_replace_selection (GimpGradientEditor  *editor,$/;"	f	file:
gradient_editor_replicate_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_replicate_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_replicate_response	actions/gradient-editor-commands.c	/^gradient_editor_replicate_response (GtkWidget          *widget,$/;"	f	file:
gradient_editor_right_color_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_right_color_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_right_color_type_actions	actions/gradient-editor-actions.c	/^static const GimpRadioActionEntry gradient_editor_right_color_type_actions[] =$/;"	v	file:
gradient_editor_right_color_type_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_right_color_type_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_right_color_update	actions/gradient-editor-commands.c	/^gradient_editor_right_color_update (GimpColorDialog      *dialog,$/;"	f	file:
gradient_editor_save_left_actions	actions/gradient-editor-actions.c	/^static const GimpEnumActionEntry gradient_editor_save_left_actions[] =$/;"	v	file:
gradient_editor_save_left_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_save_left_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_save_right_actions	actions/gradient-editor-actions.c	/^static const GimpEnumActionEntry gradient_editor_save_right_actions[] =$/;"	v	file:
gradient_editor_save_right_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_save_right_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_save_selection	actions/gradient-editor-commands.c	/^gradient_editor_save_selection (GimpGradientEditor *editor)$/;"	f	file:
gradient_editor_scrollbar_update	widgets/gimpgradienteditor.c	/^gradient_editor_scrollbar_update (GtkAdjustment      *adjustment,$/;"	f	file:
gradient_editor_set_hint	widgets/gimpgradienteditor.c	/^gradient_editor_set_hint (GimpGradientEditor *editor,$/;"	f	file:
gradient_editor_split_midpoint_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_split_midpoint_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_split_uniform_response	actions/gradient-editor-commands.c	/^gradient_editor_split_uniform_response (GtkWidget          *widget,$/;"	f	file:
gradient_editor_split_uniformly_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_split_uniformly_cmd_callback (GtkAction *action,$/;"	f
gradient_editor_toggle_actions	actions/gradient-editor-actions.c	/^static const GimpToggleActionEntry gradient_editor_toggle_actions[] =$/;"	v	file:
gradient_editor_zoom_actions	actions/gradient-editor-actions.c	/^static const GimpEnumActionEntry gradient_editor_zoom_actions[] =$/;"	v	file:
gradient_editor_zoom_cmd_callback	actions/gradient-editor-commands.c	/^gradient_editor_zoom_cmd_callback (GtkAction *action,$/;"	f
gradient_factory	core/gimp.h	/^  GimpDataFactory        *gradient_factory;$/;"	m	struct:_Gimp
gradient_fill_region	core/gimpdrawable-blend.c	/^gradient_fill_region (GimpImage        *image,$/;"	f	file:
gradient_fill_single_region_gray	core/gimpdrawable-blend.c	/^gradient_fill_single_region_gray (RenderBlendData *rbd,$/;"	f	file:
gradient_fill_single_region_gray_dither	core/gimpdrawable-blend.c	/^gradient_fill_single_region_gray_dither (RenderBlendData *rbd,$/;"	f	file:
gradient_fill_single_region_rgb	core/gimpdrawable-blend.c	/^gradient_fill_single_region_rgb (RenderBlendData *rbd,$/;"	f	file:
gradient_fill_single_region_rgb_dither	core/gimpdrawable-blend.c	/^gradient_fill_single_region_rgb_dither (RenderBlendData *rbd,$/;"	f	file:
gradient_get	pdb/gradient_cmds.c	/^gradient_get (Gimp                 *gimp,$/;"	f	file:
gradient_get_custom_samples_invoker	pdb/gradient_cmds.c	/^gradient_get_custom_samples_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_get_range	pdb/gradient_cmds.c	/^gradient_get_range (Gimp                 *gimp,$/;"	f	file:
gradient_get_uniform_samples_invoker	pdb/gradient_cmds.c	/^gradient_get_uniform_samples_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_hint_label_add	widgets/gimpgradienteditor.c	/^gradient_hint_label_add (GtkBox *box)$/;"	f	file:
gradient_is_editable_invoker	pdb/gradient_cmds.c	/^gradient_is_editable_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_length	paint/gimppaintoptions.h	/^  gdouble         gradient_length;$/;"	m	struct:_GimpGradientOptions
gradient_map	tools/gimpiscissorstool.h	/^  TileManager    *gradient_map; \/*  lazily filled gradient map            *\/$/;"	m	struct:_GimpIscissorsTool
gradient_map_new	tools/gimpiscissorstool.c	/^gradient_map_new (GimpImage *image)$/;"	f	file:
gradient_map_value	tools/gimpiscissorstool.c	/^gradient_map_value (TileManager *map,$/;"	f	file:
gradient_name	core/gimpcontext.h	/^  gchar                *gradient_name;$/;"	m	struct:_GimpContext
gradient_new_invoker	pdb/gradient_cmds.c	/^gradient_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_options	paint/gimppaintoptions.h	/^  GimpGradientOptions      *gradient_options;$/;"	m	struct:_GimpPaintOptions
gradient_options_gui	tools/gimppaintoptions-gui.c	/^gradient_options_gui (GimpGradientOptions *gradient,$/;"	f	file:
gradient_path	config/gimpcoreconfig.h	/^  gchar                  *gradient_path;$/;"	m	struct:_GimpCoreConfig
gradient_path_writable	config/gimpcoreconfig.h	/^  gchar                  *gradient_path_writable;$/;"	m	struct:_GimpCoreConfig
gradient_precalc_shapeburst	core/gimpdrawable-blend.c	/^gradient_precalc_shapeburst (GimpImage    *image,$/;"	f	file:
gradient_preview_clicked	widgets/gimptoolbox-indicator-area.c	/^gradient_preview_clicked (GtkWidget       *widget,$/;"	f	file:
gradient_preview_drop_gradient	widgets/gimptoolbox-indicator-area.c	/^gradient_preview_drop_gradient (GtkWidget    *widget,$/;"	f	file:
gradient_put_pixel	core/gimpdrawable-blend.c	/^gradient_put_pixel (gint      x,$/;"	f	file:
gradient_radio	dialogs/palette-import-dialog.c	/^  GtkWidget     *gradient_radio;$/;"	m	struct:__anon178	file:
gradient_rename_invoker	pdb/gradient_cmds.c	/^gradient_rename_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_render_pixel	core/gimpdrawable-blend.c	/^gradient_render_pixel (gdouble   x,$/;"	f	file:
gradient_repeat	paint/gimppaintoptions.h	/^  GimpRepeatMode  gradient_repeat;$/;"	m	struct:_GimpGradientOptions
gradient_reverse	paint/gimppaintoptions.h	/^  gboolean        gradient_reverse;$/;"	m	struct:_GimpGradientOptions
gradient_segment_get_blending_function_invoker	pdb/gradient_cmds.c	/^gradient_segment_get_blending_function_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_get_coloring_type_invoker	pdb/gradient_cmds.c	/^gradient_segment_get_coloring_type_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_get_left_color_invoker	pdb/gradient_cmds.c	/^gradient_segment_get_left_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_get_left_pos_invoker	pdb/gradient_cmds.c	/^gradient_segment_get_left_pos_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_get_middle_pos_invoker	pdb/gradient_cmds.c	/^gradient_segment_get_middle_pos_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_get_right_color_invoker	pdb/gradient_cmds.c	/^gradient_segment_get_right_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_get_right_pos_invoker	pdb/gradient_cmds.c	/^gradient_segment_get_right_pos_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_blend_colors_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_blend_colors_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_blend_opacity_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_blend_opacity_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_delete_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_flip_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_flip_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_move_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_move_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_redistribute_handles_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_redistribute_handles_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_replicate_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_replicate_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_set_blending_function_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_set_blending_function_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_set_coloring_type_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_set_coloring_type_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_split_midpoint_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_split_midpoint_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_range_split_uniform_invoker	pdb/gradient_cmds.c	/^gradient_segment_range_split_uniform_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_set_left_color_invoker	pdb/gradient_cmds.c	/^gradient_segment_set_left_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_set_left_pos_invoker	pdb/gradient_cmds.c	/^gradient_segment_set_left_pos_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_set_middle_pos_invoker	pdb/gradient_cmds.c	/^gradient_segment_set_middle_pos_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_set_right_color_invoker	pdb/gradient_cmds.c	/^gradient_segment_set_right_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_segment_set_right_pos_invoker	pdb/gradient_cmds.c	/^gradient_segment_set_right_pos_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradient_type	core/gimpdrawable-blend.c	/^  GimpGradientType  gradient_type;$/;"	m	struct:__anon117	file:
gradient_type	tools/gimpblendoptions.h	/^  GimpGradientType  gradient_type;$/;"	m	struct:_GimpBlendOptions
gradient_unit	paint/gimppaintoptions.h	/^  GimpUnit        gradient_unit;$/;"	m	struct:_GimpGradientOptions
gradient_view_size	paint/gimppaintoptions.h	/^  GimpViewSize              gradient_view_size;$/;"	m	struct:_GimpPaintOptions
gradient_view_type	paint/gimppaintoptions.h	/^  GimpViewType              gradient_view_type;$/;"	m	struct:_GimpPaintOptions
gradients	core/gimpgradient-load.c	/^  GList        *gradients; \/*  finished gradients  *\/$/;"	m	struct:__anon151	file:
gradients_actions	actions/gradients-actions.c	/^static const GimpActionEntry gradients_actions[] =$/;"	v	file:
gradients_actions_setup	actions/gradients-actions.c	/^gradients_actions_setup (GimpActionGroup *group)$/;"	f
gradients_actions_update	actions/gradients-actions.c	/^gradients_actions_update (GimpActionGroup *group,$/;"	f
gradients_close_popup_invoker	pdb/gradient_select_cmds.c	/^gradients_close_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradients_edit_actions	actions/gradients-actions.c	/^static const GimpStringActionEntry gradients_edit_actions[] =$/;"	v	file:
gradients_get_gradient_data_invoker	pdb/gradients_cmds.c	/^gradients_get_gradient_data_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradients_get_list_invoker	pdb/gradients_cmds.c	/^gradients_get_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradients_popup_invoker	pdb/gradient_select_cmds.c	/^gradients_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradients_refresh_invoker	pdb/gradients_cmds.c	/^gradients_refresh_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradients_sample_custom_invoker	pdb/gradients_cmds.c	/^gradients_sample_custom_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradients_sample_uniform_invoker	pdb/gradients_cmds.c	/^gradients_sample_uniform_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradients_save_as_pov_ray_cmd_callback	actions/gradients-commands.c	/^gradients_save_as_pov_ray_cmd_callback (GtkAction *action,$/;"	f
gradients_save_as_pov_ray_response	actions/gradients-commands.c	/^gradients_save_as_pov_ray_response (GtkWidget    *dialog,$/;"	f	file:
gradients_set_popup_invoker	pdb/gradient_select_cmds.c	/^gradients_set_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
gradmap_tile_validate	tools/gimpiscissorstool.c	/^gradmap_tile_validate (TileManager *tm,$/;"	f	file:
grain_extract_pixels	paint-funcs/paint-funcs-generic.h	/^grain_extract_pixels (const guchar *src1,$/;"	f
grain_merge_pixels	paint-funcs/paint-funcs-generic.h	/^grain_merge_pixels (const guchar *src1,$/;"	f
graph	tools/gimpcurvestool.h	/^  GtkWidget            *graph;$/;"	m	struct:_GimpCurvesTool
gray_to_rgb_pixels	paint-funcs/paint-funcs-generic.h	/^gray_to_rgb_pixels (const guchar *src,$/;"	f
green	core/gimpimage-convert.c	/^  int green;$/;"	m	struct:_Color	file:
green_color	widgets/gimpviewrenderer.c	/^static GimpRGB  green_color;$/;"	v	file:
grid	core/gimpimage.h	/^  GimpGrid          *grid;                  \/*  grid                         *\/$/;"	m	struct:_GimpImage
grid	core/gimpimageundo.h	/^  GimpGrid          *grid;$/;"	m	struct:_GimpImageUndo
grid	widgets/gimpgrideditor.h	/^  GimpGrid     *grid;$/;"	m	struct:_GimpGridEditor
grid_coords	tools/gimptransformtool.h	/^  gdouble        *grid_coords;     \/*  x and y coordinates of the grid$/;"	m	struct:_GimpTransformTool
grid_dialog	display/gimpdisplayshell.h	/^  GtkWidget        *grid_dialog;       \/*  grid configuration dialog          *\/$/;"	m	struct:_GimpDisplayShell
grid_dialog_new	dialogs/grid-dialog.c	/^grid_dialog_new (GimpImage   *image,$/;"	f
grid_dialog_response	dialogs/grid-dialog.c	/^grid_dialog_response (GtkWidget  *widget,$/;"	f	file:
grid_gc	display/gimpdisplayshell.h	/^  GdkGC            *grid_gc;           \/*  GC for grid drawing                *\/$/;"	m	struct:_GimpDisplayShell
grid_size	tools/gimptransformoptions.h	/^  gint                      grid_size;$/;"	m	struct:_GimpTransformOptions
grid_type	tools/gimptransformoptions.h	/^  GimpTransformGridType     grid_type;$/;"	m	struct:_GimpTransformOptions
grid_view_signals	widgets/gimpcontainergridview.c	/^static guint grid_view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
group_count	core/gimpimage.h	/^  gint               group_count;           \/*  nested undo groups           *\/$/;"	m	struct:_GimpImage
groups	file/gimprecentitem.c	/^  GList    *groups;$/;"	m	struct:_GimpRecentItem	file:
groups	widgets/gimpactiongroup.h	/^  GHashTable          *groups;$/;"	m	struct:_GimpActionGroupClass
grow	core/gimpchannel.h	/^  void     (* grow)          (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
grow_desc	core/gimpchannel.h	/^  const gchar *grow_desc;$/;"	m	struct:_GimpChannelClass
gtk_hwrap_box_class_init	widgets/gtkhwrapbox.c	/^gtk_hwrap_box_class_init (GtkHWrapBoxClass *class)$/;"	f	file:
gtk_hwrap_box_get_type	widgets/gtkhwrapbox.c	/^gtk_hwrap_box_get_type (void)$/;"	f
gtk_hwrap_box_init	widgets/gtkhwrapbox.c	/^gtk_hwrap_box_init (GtkHWrapBox *hwbox)$/;"	f	file:
gtk_hwrap_box_new	widgets/gtkhwrapbox.c	/^gtk_hwrap_box_new (gboolean homogeneous)$/;"	f
gtk_hwrap_box_size_allocate	widgets/gtkhwrapbox.c	/^gtk_hwrap_box_size_allocate (GtkWidget     *widget,$/;"	f	file:
gtk_hwrap_box_size_request	widgets/gtkhwrapbox.c	/^gtk_hwrap_box_size_request (GtkWidget      *widget,$/;"	f	file:
gtk_vwrap_box_class_init	widgets/gtkvwrapbox.c	/^gtk_vwrap_box_class_init (GtkVWrapBoxClass *class)$/;"	f	file:
gtk_vwrap_box_get_type	widgets/gtkvwrapbox.c	/^gtk_vwrap_box_get_type (void)$/;"	f
gtk_vwrap_box_init	widgets/gtkvwrapbox.c	/^gtk_vwrap_box_init (GtkVWrapBox *vwbox)$/;"	f	file:
gtk_vwrap_box_new	widgets/gtkvwrapbox.c	/^gtk_vwrap_box_new (gboolean homogeneous)$/;"	f
gtk_vwrap_box_size_allocate	widgets/gtkvwrapbox.c	/^gtk_vwrap_box_size_allocate (GtkWidget     *widget,$/;"	f	file:
gtk_vwrap_box_size_request	widgets/gtkvwrapbox.c	/^gtk_vwrap_box_size_request (GtkWidget      *widget,$/;"	f	file:
gtk_wrap_box_add	widgets/gtkwrapbox.c	/^gtk_wrap_box_add (GtkContainer *container,$/;"	f	file:
gtk_wrap_box_child_type	widgets/gtkwrapbox.c	/^gtk_wrap_box_child_type        (GtkContainer *container)$/;"	f	file:
gtk_wrap_box_class_init	widgets/gtkwrapbox.c	/^gtk_wrap_box_class_init (GtkWrapBoxClass *class)$/;"	f	file:
gtk_wrap_box_expose	widgets/gtkwrapbox.c	/^gtk_wrap_box_expose (GtkWidget      *widget,$/;"	f	file:
gtk_wrap_box_forall	widgets/gtkwrapbox.c	/^gtk_wrap_box_forall (GtkContainer *container,$/;"	f	file:
gtk_wrap_box_get_child_property	widgets/gtkwrapbox.c	/^gtk_wrap_box_get_child_property (GtkContainer    *container,$/;"	f	file:
gtk_wrap_box_get_property	widgets/gtkwrapbox.c	/^gtk_wrap_box_get_property (GObject    *object,$/;"	f	file:
gtk_wrap_box_get_type	widgets/gtkwrapbox.c	/^gtk_wrap_box_get_type (void)$/;"	f
gtk_wrap_box_init	widgets/gtkwrapbox.c	/^gtk_wrap_box_init (GtkWrapBox *wbox)$/;"	f	file:
gtk_wrap_box_map	widgets/gtkwrapbox.c	/^gtk_wrap_box_map (GtkWidget *widget)$/;"	f	file:
gtk_wrap_box_pack	widgets/gtkwrapbox.c	/^gtk_wrap_box_pack (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_pack_wrapped	widgets/gtkwrapbox.c	/^gtk_wrap_box_pack_wrapped (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_query_child_packing	widgets/gtkwrapbox.c	/^gtk_wrap_box_query_child_packing (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_query_line_lengths	widgets/gtkwrapbox.c	/^gtk_wrap_box_query_line_lengths (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_remove	widgets/gtkwrapbox.c	/^gtk_wrap_box_remove (GtkContainer *container,$/;"	f	file:
gtk_wrap_box_reorder_child	widgets/gtkwrapbox.c	/^gtk_wrap_box_reorder_child (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_set_aspect_ratio	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_aspect_ratio (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_set_child_packing	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_child_packing (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_set_child_property	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_child_property (GtkContainer    *container,$/;"	f	file:
gtk_wrap_box_set_homogeneous	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_homogeneous (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_set_hspacing	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_hspacing (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_set_justify	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_justify (GtkWrapBox      *wbox,$/;"	f
gtk_wrap_box_set_line_justify	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_line_justify (GtkWrapBox      *wbox,$/;"	f
gtk_wrap_box_set_property	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_property (GObject      *object,$/;"	f	file:
gtk_wrap_box_set_vspacing	widgets/gtkwrapbox.c	/^gtk_wrap_box_set_vspacing (GtkWrapBox *wbox,$/;"	f
gtk_wrap_box_unmap	widgets/gtkwrapbox.c	/^gtk_wrap_box_unmap (GtkWidget *widget)$/;"	f	file:
gui	core/gimp.h	/^  GimpGui                 gui; \/* gui vtable *\/$/;"	m	struct:_Gimp
gui_abort	gui/gui.c	/^gui_abort (const gchar *abort_message)$/;"	f
gui_dbus_service_exit	gui/gui.c	/^gui_dbus_service_exit (void)$/;"	f	file:
gui_dbus_service_init	gui/gui.c	/^gui_dbus_service_init (Gimp *gimp)$/;"	f	file:
gui_device_change_notify	gui/gui.c	/^gui_device_change_notify (Gimp *gimp)$/;"	f	file:
gui_display_changed	gui/gui.c	/^gui_display_changed (GimpContext *context,$/;"	f	file:
gui_display_create	gui/gui-vtable.c	/^gui_display_create (GimpImage *image,$/;"	f	file:
gui_display_delete	gui/gui-vtable.c	/^gui_display_delete (GimpObject *display)$/;"	f	file:
gui_display_get_ID	gui/gui-vtable.c	/^gui_display_get_ID (GimpObject *display)$/;"	f	file:
gui_display_get_by_ID	gui/gui-vtable.c	/^gui_display_get_by_ID (Gimp *gimp,$/;"	f	file:
gui_display_get_window	gui/gui-vtable.c	/^gui_display_get_window (GimpObject *display)$/;"	f	file:
gui_display_remove	gui/gui.c	/^gui_display_remove (GimpContainer *displays)$/;"	f	file:
gui_displays_reconnect	gui/gui-vtable.c	/^gui_displays_reconnect (Gimp      *gimp,$/;"	f	file:
gui_exit_after_callback	gui/gui.c	/^gui_exit_after_callback (Gimp     *gimp,$/;"	f	file:
gui_exit_callback	gui/gui.c	/^gui_exit_callback (Gimp     *gimp,$/;"	f	file:
gui_free_progress	gui/gui-vtable.c	/^gui_free_progress (Gimp          *gimp,$/;"	f	file:
gui_get_background_func	gui/gui.c	/^gui_get_background_func (GimpRGB *color)$/;"	f	file:
gui_get_display_name	gui/gui-vtable.c	/^gui_get_display_name (Gimp *gimp,$/;"	f	file:
gui_get_foreground_func	gui/gui.c	/^gui_get_foreground_func (GimpRGB *color)$/;"	f	file:
gui_get_program_class	gui/gui-vtable.c	/^gui_get_program_class (Gimp *gimp)$/;"	f	file:
gui_get_theme_dir	gui/gui-vtable.c	/^gui_get_theme_dir (Gimp *gimp)$/;"	f	file:
gui_global_buffer_changed	gui/gui.c	/^gui_global_buffer_changed (Gimp *gimp)$/;"	f	file:
gui_help	gui/gui-vtable.c	/^gui_help (Gimp        *gimp,$/;"	f	file:
gui_help_func	gui/gui.c	/^gui_help_func (const gchar *help_id,$/;"	f	file:
gui_init	gui/gui.c	/^gui_init (Gimp     *gimp,$/;"	f
gui_initialize_after_callback	gui/gui.c	/^gui_initialize_after_callback (Gimp               *gimp,$/;"	f	file:
gui_libs_init	gui/gui.c	/^gui_libs_init (GOptionContext *context)$/;"	f
gui_menu_hide_tooltip	gui/gui.c	/^gui_menu_hide_tooltip (GimpUIManager *manager,$/;"	f	file:
gui_menu_show_tooltip	gui/gui.c	/^gui_menu_show_tooltip (GimpUIManager *manager,$/;"	f	file:
gui_message	gui/gui-message.c	/^gui_message (Gimp                *gimp,$/;"	f
gui_message_console	gui/gui-message.c	/^gui_message_console (GimpMessageSeverity  severity,$/;"	f	file:
gui_message_error_console	gui/gui-message.c	/^gui_message_error_console (GimpMessageSeverity  severity,$/;"	f	file:
gui_message_error_dialog	gui/gui-message.c	/^gui_message_error_dialog (Gimp                *gimp,$/;"	f	file:
gui_new_progress	gui/gui-vtable.c	/^gui_new_progress (Gimp       *gimp,$/;"	f	file:
gui_pdb_dialog_close	gui/gui-vtable.c	/^gui_pdb_dialog_close (Gimp          *gimp,$/;"	f	file:
gui_pdb_dialog_new	gui/gui-vtable.c	/^gui_pdb_dialog_new (Gimp          *gimp,$/;"	f	file:
gui_pdb_dialog_present	gui/gui-vtable.c	/^gui_pdb_dialog_present (GtkWindow *window)$/;"	f	file:
gui_pdb_dialog_set	gui/gui-vtable.c	/^gui_pdb_dialog_set (Gimp          *gimp,$/;"	f	file:
gui_post_init	gui/gui.c	/^gui_post_init (Gimp *gimp)$/;"	f
gui_restore_after_callback	gui/gui.c	/^gui_restore_after_callback (Gimp               *gimp,$/;"	f	file:
gui_restore_callback	gui/gui.c	/^gui_restore_callback (Gimp               *gimp,$/;"	f	file:
gui_sanity_check	gui/gui.c	/^gui_sanity_check (void)$/;"	f	file:
gui_set_busy	gui/gui-vtable.c	/^gui_set_busy (Gimp *gimp)$/;"	f	file:
gui_show_help_button_notify	gui/gui.c	/^gui_show_help_button_notify (GimpGuiConfig *gui_config,$/;"	f	file:
gui_show_tooltips_notify	gui/gui.c	/^gui_show_tooltips_notify (GimpGuiConfig *gui_config,$/;"	f	file:
gui_size	core/gimp-utils.c	/^  gint64          gui_size;$/;"	m	struct:__anon112	file:
gui_tearoff_menus_notify	gui/gui.c	/^gui_tearoff_menus_notify (GimpGuiConfig *gui_config,$/;"	f	file:
gui_threads_enter	gui/gui-vtable.c	/^gui_threads_enter (Gimp *gimp)$/;"	f	file:
gui_threads_leave	gui/gui-vtable.c	/^gui_threads_leave (Gimp *gimp)$/;"	f	file:
gui_ungrab	gui/gui-vtable.c	/^gui_ungrab (Gimp *gimp)$/;"	f	file:
gui_unset_busy	gui/gui-vtable.c	/^gui_unset_busy (Gimp *gimp)$/;"	f	file:
gui_vtable_init	gui/gui-vtable.c	/^gui_vtable_init (Gimp *gimp)$/;"	f
guide	core/gimpguideundo.h	/^  GimpGuide           *guide;$/;"	m	struct:_GimpGuideUndo
guide	tools/gimpmovetool.h	/^  GimpGuide           *guide;$/;"	m	struct:_GimpMoveTool
guide	tools/gimprectangleoptions.h	/^  GimpRectangleGuide          guide;$/;"	m	struct:_GimpRectangleOptionsPrivate
guide	tools/gimprectangletool.c	/^  GimpRectangleGuide      guide;$/;"	m	struct:_GimpRectangleToolPrivate	file:
guide_ID	core/gimpguide.h	/^  guint32              guide_ID;$/;"	m	struct:_GimpGuide
guide_orientation	tools/gimpmovetool.h	/^  GimpOrientationType  guide_orientation;$/;"	m	struct:_GimpMoveTool
guide_position	tools/gimpmovetool.h	/^  gint                 guide_position;$/;"	m	struct:_GimpMoveTool
guides	core/gimpimage.h	/^  GList             *guides;                \/*  guides                       *\/$/;"	m	struct:_GimpImage
h	base/pixel-region.h	/^  gint         h;              \/*  height of region              *\/$/;"	m	struct:_PixelRegion
h	base/pixel-surround.c	/^  gint         h;          \/*  height of pixel surround area        *\/$/;"	m	struct:_PixelSurround	file:
h	display/gimpdisplayshell-render.c	/^  gint              w, h;$/;"	m	struct:_RenderInfo	file:
h	tools/gimpmagnifytool.h	/^  gdouble       w, h;  \/*  width and height            *\/$/;"	m	struct:_GimpMagnifyTool
handle_empty_image	tools/gimptoolcontrol.h	/^  gboolean           handle_empty_image; \/*  invoke the tool on images       *$/;"	m	struct:_GimpToolControl
handle_h	tools/gimprectangletool.c	/^  gint                    handle_h;$/;"	m	struct:_GimpRectangleToolPrivate	file:
handle_h	tools/gimptransformtool.h	/^  gint            handle_h;        \/*  handle height                     *\/$/;"	m	struct:_GimpTransformTool
handle_w	tools/gimprectangletool.c	/^  gint                    handle_w;$/;"	m	struct:_GimpRectangleToolPrivate	file:
handle_w	tools/gimptransformtool.h	/^  gint            handle_w;        \/*  handle width                      *\/$/;"	m	struct:_GimpTransformTool
handlers	core/gimpcontainer.h	/^  GList               *handlers;$/;"	m	struct:_GimpContainer
handles_changing_brush	paint/gimpbrushcore.h	/^  gboolean            handles_changing_brush;$/;"	m	struct:_GimpBrushCoreClass
hard	paint/gimppaintoptions.h	/^  gboolean                  hard;$/;"	m	struct:_GimpPaintOptions
hardlight_pixels	paint-funcs/paint-funcs-generic.h	/^hardlight_pixels (const guchar *src1,$/;"	f
hardness	core/gimpbrushgenerated.h	/^  gfloat                  hardness;     \/* 0.0 - 1.0  *\/$/;"	m	struct:_GimpBrushGenerated
hardness	paint/gimppaintoptions.h	/^  gboolean  hardness;$/;"	m	struct:_GimpPressureOptions
hardness_data	widgets/gimpbrusheditor.h	/^  GtkAdjustment  *hardness_data;$/;"	m	struct:_GimpBrushEditor
has_alpha	core/gimpdrawable.h	/^  gboolean       has_alpha;          \/* drawable has alpha             *\/$/;"	m	struct:_GimpDrawable
has_alpha	core/gimpimage-contiguous-region.c	/^  gboolean             has_alpha;$/;"	m	struct:__anon100	file:
has_button_bar	widgets/gimpdocked.h	/^  gboolean        (* has_button_bar)      (GimpDocked   *docked);$/;"	m	struct:_GimpDockedInterface
has_color_area	widgets/gimpcolorframe.h	/^  gboolean            has_color_area;$/;"	m	struct:_GimpColorFrame
has_display	tools/gimptool.h	/^  gboolean      (* has_display)         (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
has_fg_bg_segments	widgets/gimpviewrenderergradient.h	/^  gboolean          has_fg_bg_segments;$/;"	m	struct:_GimpViewRendererGradient
has_grab	widgets/gimpnavigationview.h	/^  gboolean     has_grab;$/;"	m	struct:_GimpNavigationView
has_grab	widgets/gimpview.h	/^  guint             has_grab : 1;$/;"	m	struct:_GimpView
has_image	tools/gimptool.h	/^  GimpDisplay * (* has_image)           (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
has_init	plug-in/gimpplugindef.h	/^  gboolean    has_init;     \/* Does the plug-in need to be initialized ? *\/$/;"	m	struct:_GimpPlugInDef
has_number	widgets/gimpcolorframe.h	/^  gboolean            has_number;$/;"	m	struct:_GimpColorFrame
hash_memsize_foreach	core/gimp-utils.c	/^hash_memsize_foreach (gpointer     key,$/;"	f	file:
hash_table	widgets/gimpcontainerview.c	/^  GHashTable    *hash_table;$/;"	m	struct:_GimpContainerViewPrivate	file:
have	core/gimpcontainer.h	/^  gboolean     (* have)               (const GimpContainer *container,$/;"	m	struct:_GimpContainerClass
have_cursor	display/gimpdisplayshell.h	/^  gboolean          have_cursor;       \/* is cursor currently drawn ?         *\/$/;"	m	struct:_GimpDisplayShell
have_open	core/gimpscanconvert.c	/^  gboolean        have_open;$/;"	m	struct:_GimpScanConvert	file:
have_undo	tools/gimpvectortool.h	/^  gboolean              have_undo;      \/* did we push an undo at            *\/$/;"	m	struct:_GimpVectorTool
hbox	widgets/gimpcoloreditor.h	/^  GtkWidget   *hbox;$/;"	m	struct:_GimpColorEditor
hbox	widgets/gimpcontrollerlist.h	/^  GtkWidget          *hbox;$/;"	m	struct:_GimpControllerList
header_size	core/gimpbrush-header.h	/^  guint32   header_size;  \/*  header_size = sizeof (BrushHeader) + brush name  *\/$/;"	m	struct:_BrushHeader
header_size	core/gimppattern-header.h	/^  guint32   header_size;  \/*  header_size = sizeof(PatternHeader) + pattern name  *\/$/;"	m	struct:_PatternHeader
heal_default_invoker	pdb/paint_tools_cmds.c	/^heal_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
heal_invoker	pdb/paint_tools_cmds.c	/^heal_invoker (GimpProcedure     *procedure,$/;"	f	file:
height	base/siox.c	/^  gint          height;$/;"	m	struct:_SioxState	file:
height	base/temp-buf.h	/^  gint    height;$/;"	m	struct:_TempBuf
height	base/tile-manager-private.h	/^  gint               height;        \/*  the height of the tiled area         *\/$/;"	m	struct:_TileManager
height	base/tile-pyramid.c	/^  guint          height;$/;"	m	struct:_TilePyramid	file:
height	core/gimpbrush-header.h	/^  guint32   height;       \/*  height of brush  *\/$/;"	m	struct:_BrushHeader
height	core/gimpdrawableundo.h	/^  gint          height;$/;"	m	struct:_GimpDrawableUndo
height	core/gimpimage.h	/^  gint               width, height;         \/*  width and height attributes  *\/$/;"	m	struct:_GimpImage
height	core/gimpimageundo.h	/^  gint               height;$/;"	m	struct:_GimpImageUndo
height	core/gimpitem.h	/^  gint              width, height;      \/*  size in pixels           *\/$/;"	m	struct:_GimpItem
height	core/gimppattern-header.h	/^  guint32   height;       \/*  height of pattern  *\/$/;"	m	struct:_PatternHeader
height	core/gimppreviewcache.c	/^  gint     height;$/;"	m	struct:__anon110	file:
height	core/gimpprojection.h	/^  gint    height;$/;"	m	struct:_GimpProjectionIdleRender
height	core/gimptemplate.h	/^  gint               height;$/;"	m	struct:_GimpTemplate
height	dialogs/image-scale-dialog.c	/^  gint                   height;$/;"	m	struct:__anon167	file:
height	gui/splash.c	/^  gint            height;$/;"	m	struct:__anon201	file:
height	paint/gimpink-blob.h	/^  gint     height;$/;"	m	struct:_Blob
height	tools/gimprectangleoptions.h	/^  gdouble                     height;$/;"	m	struct:_GimpRectangleOptionsPrivate
height	vectors/gimpvectors-import.c	/^  gdouble       height;$/;"	m	struct:_SvgHandler	file:
height	widgets/gimpcursor.c	/^  const gint    width, height;$/;"	m	struct:_GimpCursor	file:
height	widgets/gimpnavigationview.h	/^  gdouble      height;$/;"	m	struct:_GimpNavigationView
height	widgets/gimpsessioninfo.h	/^  gint                    height;$/;"	m	struct:_GimpSessionInfo
height	widgets/gimpsizebox.h	/^  gint          height;$/;"	m	struct:_GimpSizeBox
height	widgets/gimpviewrenderer.h	/^  gint                height;$/;"	m	struct:_GimpViewRenderer
height_entry	tools/gimprectangleoptions.h	/^  GtkWidget                  *height_entry;$/;"	m	struct:_GimpRectangleOptionsPrivate
height_label	tools/gimpmeasuretool.h	/^  GtkWidget       *height_label[2];$/;"	m	struct:_GimpMeasureTool
help	core/gimp-gui.h	/^  void           (* help)                (Gimp                *gimp,$/;"	m	struct:_GimpGui
help	core/gimptoolinfo.h	/^  gchar               *help;$/;"	m	struct:_GimpToolInfo
help	pdb/gimppdb-query.c	/^  gchar    *help;$/;"	m	struct:_PDBStrings	file:
help	pdb/gimpprocedure.h	/^  gchar            *help;           \/* Detailed help instructions     *\/$/;"	m	struct:_GimpProcedure
help_actions	actions/help-actions.c	/^static const GimpActionEntry help_actions[] =$/;"	v	file:
help_actions_setup	actions/help-actions.c	/^help_actions_setup (GimpActionGroup *group)$/;"	f
help_actions_update	actions/help-actions.c	/^help_actions_update (GimpActionGroup *group,$/;"	f
help_browser	config/gimpguiconfig.h	/^  GimpHelpBrowserType  help_browser;$/;"	m	struct:_GimpGuiConfig
help_context_help_cmd_callback	actions/help-commands.c	/^help_context_help_cmd_callback (GtkAction *action,$/;"	f
help_domain	core/gimptoolinfo.h	/^  gchar               *help_domain;$/;"	m	struct:_GimpToolInfo
help_domain	plug-in/gimppluginprocedure.h	/^  GQuark               help_domain;$/;"	m	struct:_GimpPlugInProcedure
help_domain	widgets/gimphelp.c	/^  gchar *help_domain;$/;"	m	struct:_GimpIdleHelp	file:
help_domain_name	plug-in/gimpplugindef.h	/^  gchar      *help_domain_name;$/;"	m	struct:_GimpPlugInDef
help_domain_uri	plug-in/gimpplugindef.h	/^  gchar      *help_domain_uri;$/;"	m	struct:_GimpPlugInDef
help_domains	plug-in/gimppluginmanager.h	/^  GSList            *help_domains;$/;"	m	struct:_GimpPlugInManager
help_help_cmd_callback	actions/help-commands.c	/^help_help_cmd_callback (GtkAction *action,$/;"	f
help_id	core/gimptoolinfo.h	/^  gchar               *help_id;$/;"	m	struct:_GimpToolInfo
help_id	widgets/gimpactiongroup.h	/^  const gchar         *help_id;$/;"	m	struct:_GimpPlugInActionEntry
help_id	widgets/gimpactiongroup.h	/^  const gchar *help_id;$/;"	m	struct:_GimpActionEntry
help_id	widgets/gimpactiongroup.h	/^  const gchar *help_id;$/;"	m	struct:_GimpEnumActionEntry
help_id	widgets/gimpactiongroup.h	/^  const gchar *help_id;$/;"	m	struct:_GimpRadioActionEntry
help_id	widgets/gimpactiongroup.h	/^  const gchar *help_id;$/;"	m	struct:_GimpStringActionEntry
help_id	widgets/gimpactiongroup.h	/^  const gchar *help_id;$/;"	m	struct:_GimpToggleActionEntry
help_id	widgets/gimpdialogfactory.h	/^  gchar             *help_id;$/;"	m	struct:_GimpDialogFactoryEntry
help_id	widgets/gimpdockable.h	/^  gchar        *help_id;$/;"	m	struct:_GimpDockable
help_id	widgets/gimphelp.c	/^  gchar *help_id;$/;"	m	struct:_GimpIdleHelp	file:
help_invoker	pdb/help_cmds.c	/^help_invoker (GimpProcedure     *procedure,$/;"	f	file:
help_locales	config/gimpguiconfig.h	/^  gchar               *help_locales;$/;"	m	struct:_GimpGuiConfig
help_locales	widgets/gimphelp.c	/^  gchar *help_locales;$/;"	m	struct:_GimpIdleHelp	file:
help_regex	pdb/gimppdb-query.c	/^  regex_t   help_regex;$/;"	m	struct:_PDBQuery	file:
hex_entry	widgets/gimpcoloreditor.h	/^  GtkWidget   *hex_entry;$/;"	m	struct:_GimpColorEditor
hexpand	widgets/gtkwrapbox.h	/^  guint      hexpand : 1;$/;"	m	struct:_GtkWrapBoxChild
hfill	widgets/gtkwrapbox.h	/^  guint      hfill : 1;$/;"	m	struct:_GtkWrapBoxChild
hidden	display/gimpdisplayshell-selection.c	/^  gboolean          hidden;           \/*  is the selection hidden?          *\/$/;"	m	struct:_Selection	file:
hide_tooltip	widgets/gimpuimanager.h	/^  void (* hide_tooltip) (GimpUIManager *manager);$/;"	m	struct:_GimpUIManagerClass
high_adj	widgets/gimphistogrambox.h	/^  GtkAdjustment     *high_adj;$/;"	m	struct:_GimpHistogramBox
high_input	base/levels.h	/^  gint    high_input[5];$/;"	m	struct:_Levels
high_input	tools/gimplevelstool.h	/^  GtkAdjustment        *high_input;$/;"	m	struct:_GimpLevelsTool
high_output	base/levels.h	/^  gint    high_output[5];$/;"	m	struct:_Levels
high_output	tools/gimplevelstool.h	/^  GtkAdjustment        *high_output;$/;"	m	struct:_GimpLevelsTool
high_slider_val	widgets/gimphistogrambox.h	/^  gint              high_slider_val;$/;"	m	struct:_GimpHistogramBox
high_threshold	base/threshold.h	/^  gint     high_threshold;$/;"	m	struct:_Threshold
highlight	display/gimpdisplayshell.h	/^  GdkRectangle     *highlight;         \/* in image coordinates, can be NULL   *\/$/;"	m	struct:_GimpDisplayShell
highlight	tools/gimprectangleoptions.h	/^  gboolean                    highlight;$/;"	m	struct:_GimpRectangleOptionsPrivate
highlights_add	base/color-balance.c	/^static gdouble  highlights_add[256] = { 0 };$/;"	v	file:
highlights_sub	base/color-balance.c	/^static gdouble  highlights_sub[256] = { 0 };$/;"	v	file:
hint_label1	widgets/gimpgradienteditor.h	/^  GtkWidget      *hint_label1;$/;"	m	struct:_GimpGradientEditor
hint_label2	widgets/gimpgradienteditor.h	/^  GtkWidget      *hint_label2;$/;"	m	struct:_GimpGradientEditor
hint_label3	widgets/gimpgradienteditor.h	/^  GtkWidget      *hint_label3;$/;"	m	struct:_GimpGradientEditor
hint_label4	widgets/gimpgradienteditor.h	/^  GtkWidget      *hint_label4;$/;"	m	struct:_GimpGradientEditor
hinting	text/gimptext.h	/^  gboolean               hinting;$/;"	m	struct:_GimpText
hinting	tools/gimptextoptions.h	/^  gboolean               hinting;$/;"	m	struct:_GimpTextOptions
his_read	plug-in/gimpplugin.h	/^  GIOChannel          *his_read;        \/*  Plug-in's read and write channels *\/$/;"	m	struct:_GimpPlugIn
his_write	plug-in/gimpplugin.h	/^  GIOChannel          *his_write;$/;"	m	struct:_GimpPlugIn
hist	tools/gimpcurvestool.h	/^  GimpHistogram        *hist;$/;"	m	struct:_GimpCurvesTool
hist	tools/gimplevelstool.h	/^  GimpHistogram        *hist;$/;"	m	struct:_GimpLevelsTool
hist	tools/gimpthresholdtool.h	/^  GimpHistogram    *hist;$/;"	m	struct:_GimpThresholdTool
hist_lut_struct	base/lut-funcs.c	/^} hist_lut_struct;$/;"	t	typeref:struct:__anon16	file:
hist_view	tools/gimplevelstool.h	/^  GtkWidget            *hist_view;$/;"	m	struct:_GimpLevelsTool
histogram	base/lut-funcs.c	/^  GimpHistogram *histogram;$/;"	m	struct:__anon16	file:
histogram	core/gimpimage-convert.c	/^  CFHistogram histogram;            \/* holds the histogram               *\/$/;"	m	struct:_QuantizeObj	file:
histogram	widgets/gimphistogrameditor.h	/^  GimpHistogram        *histogram;$/;"	m	struct:_GimpHistogramEditor
histogram	widgets/gimphistogramview.h	/^  GimpHistogram         *histogram;$/;"	m	struct:_GimpHistogramView
histogram_box	tools/gimpthresholdtool.h	/^  GimpHistogramBox *histogram_box;$/;"	m	struct:_GimpThresholdTool
histogram_invoker	pdb/color_cmds.c	/^histogram_invoker (GimpProcedure     *procedure,$/;"	f	file:
histogram_view_signals	widgets/gimphistogramview.c	/^static guint histogram_view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
history	plug-in/gimppluginmanager.h	/^  GSList            *history;$/;"	m	struct:_GimpPlugInManager
history	widgets/gimpcolordialog.h	/^  GtkWidget           *history[COLOR_HISTORY_SIZE];$/;"	m	struct:_GimpColorDialog
history_changed	plug-in/gimppluginmanager.h	/^  void (* history_changed)   (GimpPlugInManager *manager);$/;"	m	struct:_GimpPlugInManagerClass
homogeneous	widgets/gtkwrapbox.h	/^  guint            homogeneous : 1;$/;"	m	struct:_GtkWrapBox
horz_deriv	tools/gimpiscissorstool.c	/^static const gfloat horz_deriv[9] =$/;"	v	file:
horz_offset	tools/gimpaligntool.h	/^  gdouble                horz_offset;$/;"	m	struct:_GimpAlignTool
horz_offset_adjustment	tools/gimpaligntool.h	/^  GtkObject             *horz_offset_adjustment;$/;"	m	struct:_GimpAlignTool
hrule	display/gimpdisplayshell.h	/^  GtkWidget        *hrule;             \/*  rulers                             *\/$/;"	m	struct:_GimpDisplayShell
hsb	display/gimpdisplayshell.h	/^  GtkWidget        *hsb;               \/*  scroll bars                        *\/$/;"	m	struct:_GimpDisplayShell
hsbdata	display/gimpdisplayshell.h	/^  GtkAdjustment    *hsbdata;           \/*  adjustments                        *\/$/;"	m	struct:_GimpDisplayShell
hspacing	widgets/gtkwrapbox.h	/^  guint8           hspacing;$/;"	m	struct:_GtkWrapBox
hue	base/colorize.h	/^  gdouble hue;$/;"	m	struct:_Colorize
hue	base/hue-saturation.h	/^  gdouble hue[7];$/;"	m	struct:_HueSaturation
hue_data	tools/gimpcolorizetool.h	/^  GtkAdjustment    *hue_data;$/;"	m	struct:_GimpColorizeTool
hue_data	tools/gimphuesaturationtool.h	/^  GtkAdjustment    *hue_data;$/;"	m	struct:_GimpHueSaturationTool
hue_only_pixels	paint-funcs/paint-funcs-generic.h	/^hue_only_pixels (const guchar *src1,$/;"	f
hue_partition	tools/gimphuesaturationtool.h	/^  GimpHueRange      hue_partition;$/;"	m	struct:_GimpHueSaturationTool
hue_partition_da	tools/gimphuesaturationtool.h	/^  GtkWidget        *hue_partition_da[6];$/;"	m	struct:_GimpHueSaturationTool
hue_saturation	base/hue-saturation.c	/^hue_saturation (HueSaturation *hs,$/;"	f
hue_saturation	tools/gimphuesaturationtool.h	/^  HueSaturation    *hue_saturation;$/;"	m	struct:_GimpHueSaturationTool
hue_saturation_calculate_transfers	base/hue-saturation.c	/^hue_saturation_calculate_transfers (HueSaturation *hs)$/;"	f
hue_saturation_hue_adjustment_update	tools/gimphuesaturationtool.c	/^hue_saturation_hue_adjustment_update (GtkAdjustment *adjustment,$/;"	f	file:
hue_saturation_init	base/hue-saturation.c	/^hue_saturation_init (HueSaturation *hs)$/;"	f
hue_saturation_invoker	pdb/color_cmds.c	/^hue_saturation_invoker (GimpProcedure     *procedure,$/;"	f	file:
hue_saturation_lightness_adjustment_update	tools/gimphuesaturationtool.c	/^hue_saturation_lightness_adjustment_update (GtkAdjustment *adjustment,$/;"	f	file:
hue_saturation_overlap_adjustment_update	tools/gimphuesaturationtool.c	/^hue_saturation_overlap_adjustment_update (GtkAdjustment *adjustment,$/;"	f	file:
hue_saturation_partition_callback	tools/gimphuesaturationtool.c	/^hue_saturation_partition_callback (GtkWidget *widget,$/;"	f	file:
hue_saturation_partition_reset	base/hue-saturation.c	/^hue_saturation_partition_reset (HueSaturation *hs,$/;"	f
hue_saturation_partition_reset_callback	tools/gimphuesaturationtool.c	/^hue_saturation_partition_reset_callback (GtkWidget *widget,$/;"	f	file:
hue_saturation_saturation_adjustment_update	tools/gimphuesaturationtool.c	/^hue_saturation_saturation_adjustment_update (GtkAdjustment *adjustment,$/;"	f	file:
hue_saturation_update	tools/gimphuesaturationtool.c	/^hue_saturation_update (GimpHueSaturationTool *hs_tool,$/;"	f	file:
hue_transfer	base/hue-saturation.h	/^  gint    hue_transfer[6][256];$/;"	m	struct:_HueSaturation
hup	plug-in/gimpplugin.h	/^  guint                hup : 1;         \/*  Did we receive a G_IO_HUP         *\/$/;"	m	struct:_GimpPlugIn
icon	widgets/gimpviewabledialog.h	/^  GtkWidget   *icon;$/;"	m	struct:_GimpViewableDialog
icon_data	plug-in/gimppluginprocedure.h	/^  guint8              *icon_data;$/;"	m	struct:_GimpPlugInProcedure
icon_data_length	plug-in/gimppluginprocedure.h	/^  gint                 icon_data_length;$/;"	m	struct:_GimpPlugInProcedure
icon_idle_id	display/gimpdisplayshell.h	/^  guint             icon_idle_id;      \/*  ID of the idle-function            *\/$/;"	m	struct:_GimpDisplayShell
icon_size	display/gimpdisplayshell.h	/^  gint              icon_size;         \/*  size of the icon pixmap            *\/$/;"	m	struct:_GimpDisplayShell
icon_type	plug-in/gimppluginprocedure.h	/^  GimpIconType         icon_type;$/;"	m	struct:_GimpPlugInProcedure
id	vectors/gimpvectors-import.c	/^  gchar        *id;$/;"	m	struct:_SvgHandler	file:
id	vectors/gimpvectors-import.c	/^  gchar        *id;$/;"	m	struct:__anon304	file:
identifier	core/gimpunit.c	/^  gchar    *identifier;$/;"	m	struct:__anon105	file:
identifier	plug-in/gimppluginmanager-data.c	/^  gchar  *identifier;$/;"	m	struct:_GimpPlugInData	file:
identifier	widgets/gimpactionfactory.h	/^  gchar                     *identifier;$/;"	m	struct:_GimpActionFactoryEntry
identifier	widgets/gimpdialogfactory.h	/^  gchar             *identifier;$/;"	m	struct:_GimpDialogFactoryEntry
identifier	widgets/gimpmenufactory.h	/^  gchar *identifier;$/;"	m	struct:_GimpMenuFactoryEntry
identifier	widgets/gimpsessioninfo-dockable.h	/^  gchar        *identifier;$/;"	m	struct:_GimpSessionInfoDockable
idle_id	core/gimpimagemap.c	/^  guint                  idle_id;$/;"	m	struct:_GimpImageMap	file:
idle_id	core/gimpprojection.h	/^  guint   idle_id;$/;"	m	struct:_GimpProjectionIdleRender
idle_id	tools/gimpforegroundselecttool.h	/^  guint               idle_id;$/;"	m	struct:_GimpForegroundSelectTool
idle_id	tools/gimptexttool.h	/^  guint          idle_id;$/;"	m	struct:_GimpTextTool
idle_id	widgets/gimphistogrameditor.h	/^  guint                 idle_id;$/;"	m	struct:_GimpHistogramEditor
idle_id	widgets/gimpimageprofileview.h	/^  guint                  idle_id;$/;"	m	struct:_GimpImageProfileView
idle_id	widgets/gimpprofilechooserdialog.h	/^  guint                 idle_id;$/;"	m	struct:_GimpProfileChooserDialog
idle_id	widgets/gimpthumbbox.h	/^  guint          idle_id;$/;"	m	struct:_GimpThumbBox
idle_id	widgets/gimpviewrenderer.h	/^  guint               idle_id;$/;"	m	struct:_GimpViewRenderer
idle_render	core/gimpprojection.h	/^  GimpProjectionIdleRender  idle_render;$/;"	m	struct:_GimpProjection
idle_start_editing	widgets/gimpactionview.c	/^idle_start_editing (GtkTreeView *tree_view)$/;"	f	file:
idle_swapper	base/tile-cache.c	/^static guint         idle_swapper    = 0;$/;"	v	file:
image	core/gimpcontext.h	/^  GimpImage            *image;$/;"	m	struct:_GimpContext
image	core/gimpimage-colorhash.c	/^  GimpImage *image;$/;"	m	struct:_ColorHash	file:
image	core/gimpimage-contiguous-region.c	/^  GimpImage           *image;$/;"	m	struct:__anon100	file:
image	core/gimpitem.h	/^  GimpImage        *image;              \/*  item owner               *\/$/;"	m	struct:_GimpItem
image	core/gimpprojection.h	/^  GimpImage                *image;$/;"	m	struct:_GimpProjection
image	core/gimpundo.h	/^  GimpImage        *image;          \/* the image this undo is part of     *\/$/;"	m	struct:_GimpUndo
image	dialogs/channel-options-dialog.h	/^  GimpImage   *image;$/;"	m	struct:_ChannelOptionsDialog
image	dialogs/convert-dialog.c	/^  GimpImage              *image;$/;"	m	struct:__anon171	file:
image	dialogs/fade-dialog.c	/^  GimpImage            *image;$/;"	m	struct:__anon180	file:
image	dialogs/image-merge-layers-dialog.h	/^  GimpImage     *image;$/;"	m	struct:_ImageMergeLayersDialog
image	dialogs/image-scale-dialog.c	/^  GimpImage             *image;$/;"	m	struct:__anon167	file:
image	dialogs/layer-options-dialog.h	/^  GimpImage    *image;$/;"	m	struct:_LayerOptionsDialog
image	dialogs/offset-dialog.c	/^  GimpImage      *image;$/;"	m	struct:__anon169	file:
image	dialogs/palette-import-dialog.c	/^  GimpImage     *image;$/;"	m	struct:__anon178	file:
image	dialogs/print-size-dialog.c	/^  GimpImage              *image;$/;"	m	struct:__anon183	file:
image	dialogs/vectors-export-dialog.h	/^  GimpImage *image;$/;"	m	struct:_VectorsExportDialog
image	dialogs/vectors-import-dialog.h	/^  GimpImage *image;$/;"	m	struct:_VectorsImportDialog
image	dialogs/vectors-options-dialog.h	/^  GimpImage   *image;$/;"	m	struct:_VectorsOptionsDialog
image	display/gimpdisplay.h	/^  GimpImage  *image;            \/*  pointer to the associated image        *\/$/;"	m	struct:_GimpDisplay
image	display/gimpdisplayshell-layer-select.c	/^  GimpImage *image;$/;"	m	struct:__anon192	file:
image	plug-in/gimpplugin-cleanup.c	/^  GimpImage *image;$/;"	m	struct:_GimpPlugInCleanupImage	file:
image	tools/gimptexttool.h	/^  GimpImage     *image;$/;"	m	struct:_GimpTextTool
image	vectors/gimpvectors-import.c	/^  GimpImage    *image;$/;"	m	struct:__anon303	file:
image	widgets/gimpfiledialog.h	/^  GimpImage            *image;$/;"	m	struct:_GimpFileDialog
image	widgets/gimpimageeditor.h	/^  GimpImage   *image;$/;"	m	struct:_GimpImageEditor
image	widgets/gimpimageparasiteview.h	/^  GimpImage *image;$/;"	m	struct:_GimpImageParasiteView
image	widgets/gimpimagepropview.h	/^  GimpImage *image;$/;"	m	struct:_GimpImagePropView
image	widgets/gimpitemtreeview.h	/^  GimpImage             *image;$/;"	m	struct:_GimpItemTreeView
image	widgets/gimpmessagebox.h	/^  GtkWidget    *image;$/;"	m	struct:_GimpMessageBox
image_actions	actions/image-actions.c	/^static const GimpActionEntry image_actions[] =$/;"	v	file:
image_actions_setup	actions/image-actions.c	/^image_actions_setup (GimpActionGroup *group)$/;"	f
image_actions_update	actions/image-actions.c	/^image_actions_update (GimpActionGroup *group,$/;"	f
image_add_channel_invoker	pdb/image_cmds.c	/^image_add_channel_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_add_hguide_invoker	pdb/guides_cmds.c	/^image_add_hguide_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_add_layer_invoker	pdb/image_cmds.c	/^image_add_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_add_layer_mask_invoker	pdb/image_cmds.c	/^image_add_layer_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_add_vectors_invoker	pdb/image_cmds.c	/^image_add_vectors_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_add_vguide_invoker	pdb/guides_cmds.c	/^image_add_vguide_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_area	widgets/gimptoolbox.h	/^  GtkWidget     *image_area;$/;"	m	struct:_GimpToolbox
image_base_type_invoker	pdb/image_cmds.c	/^image_base_type_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_changed	core/gimpcontext.h	/^  void (* image_changed)      (GimpContext          *context,$/;"	m	struct:_GimpContextClass
image_clean_all_invoker	pdb/image_cmds.c	/^image_clean_all_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_clean_handler_id	tools/tool_manager.c	/^  GQuark    image_clean_handler_id;$/;"	m	struct:_GimpToolManager	file:
image_combo	dialogs/palette-import-dialog.c	/^  GtkWidget     *image_combo;$/;"	m	struct:__anon178	file:
image_combo	widgets/gimpmenudock.h	/^  GtkWidget     *image_combo;$/;"	m	struct:_GimpMenuDock
image_configure_grid_cmd_callback	actions/image-commands.c	/^image_configure_grid_cmd_callback (GtkAction *action,$/;"	f
image_container	widgets/gimpmenudock.h	/^  GimpContainer *image_container;$/;"	m	struct:_GimpMenuDock
image_convert_actions	actions/image-actions.c	/^static const GimpRadioActionEntry image_convert_actions[] =$/;"	v	file:
image_convert_cmd_callback	actions/image-commands.c	/^image_convert_cmd_callback (GtkAction *action,$/;"	f
image_convert_dialog_unset	actions/image-commands.c	/^image_convert_dialog_unset (GtkWidget *widget)$/;"	f	file:
image_convert_grayscale_invoker	pdb/convert_cmds.c	/^image_convert_grayscale_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_convert_indexed_invoker	pdb/convert_cmds.c	/^image_convert_indexed_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_convert_rgb_invoker	pdb/convert_cmds.c	/^image_convert_rgb_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_convert_set_dither_matrix_invoker	pdb/convert_cmds.c	/^image_convert_set_dither_matrix_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_crop_cmd_callback	actions/image-commands.c	/^image_crop_cmd_callback (GtkAction *action,$/;"	f
image_crop_invoker	pdb/image_cmds.c	/^image_crop_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_delete_guide_invoker	pdb/guides_cmds.c	/^image_delete_guide_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_delete_invoker	pdb/image_cmds.c	/^image_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_dirty_handler_id	tools/tool_manager.c	/^  GQuark    image_dirty_handler_id;$/;"	m	struct:_GimpToolManager	file:
image_duplicate_cmd_callback	actions/image-commands.c	/^image_duplicate_cmd_callback (GtkAction *action,$/;"	f
image_duplicate_invoker	pdb/image_cmds.c	/^image_duplicate_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_find_next_guide_invoker	pdb/guides_cmds.c	/^image_find_next_guide_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_flatten_image_cmd_callback	actions/image-commands.c	/^image_flatten_image_cmd_callback (GtkAction *action,$/;"	f
image_flatten_invoker	pdb/image_cmds.c	/^image_flatten_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_flip_actions	actions/image-actions.c	/^static const GimpEnumActionEntry image_flip_actions[] =$/;"	v	file:
image_flip_cmd_callback	actions/image-commands.c	/^image_flip_cmd_callback (GtkAction *action,$/;"	f
image_flip_invoker	pdb/image_cmds.c	/^image_flip_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_floating_sel_attached_to_invoker	pdb/image_cmds.c	/^image_floating_sel_attached_to_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_flush_handler_id	widgets/gimpimagedock.h	/^  GQuark         image_flush_handler_id;$/;"	m	struct:_GimpImageDock
image_free_shadow_invoker	pdb/image_cmds.c	/^image_free_shadow_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_active_channel_invoker	pdb/image_cmds.c	/^image_get_active_channel_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_active_drawable_invoker	pdb/image_cmds.c	/^image_get_active_drawable_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_active_layer_invoker	pdb/image_cmds.c	/^image_get_active_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_active_vectors_invoker	pdb/image_cmds.c	/^image_get_active_vectors_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_channel_by_tattoo_invoker	pdb/image_cmds.c	/^image_get_channel_by_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_channel_position_invoker	pdb/image_cmds.c	/^image_get_channel_position_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_channels_invoker	pdb/image_cmds.c	/^image_get_channels_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_colormap_invoker	pdb/image_cmds.c	/^image_get_colormap_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_component_active_invoker	pdb/image_cmds.c	/^image_get_component_active_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_component_visible_invoker	pdb/image_cmds.c	/^image_get_component_visible_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_filename_invoker	pdb/image_cmds.c	/^image_get_filename_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_floating_sel_invoker	pdb/image_cmds.c	/^image_get_floating_sel_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_guide_orientation_invoker	pdb/guides_cmds.c	/^image_get_guide_orientation_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_guide_position_invoker	pdb/guides_cmds.c	/^image_get_guide_position_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_layer_by_tattoo_invoker	pdb/image_cmds.c	/^image_get_layer_by_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_layer_position_invoker	pdb/image_cmds.c	/^image_get_layer_position_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_layers_invoker	pdb/image_cmds.c	/^image_get_layers_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_name_invoker	pdb/image_cmds.c	/^image_get_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_resolution_invoker	pdb/image_cmds.c	/^image_get_resolution_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_selection_invoker	pdb/image_cmds.c	/^image_get_selection_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_tattoo_state_invoker	pdb/image_cmds.c	/^image_get_tattoo_state_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_unit_invoker	pdb/image_cmds.c	/^image_get_unit_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_vectors_by_tattoo_invoker	pdb/image_cmds.c	/^image_get_vectors_by_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_vectors_invoker	pdb/image_cmds.c	/^image_get_vectors_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_get_vectors_position_invoker	pdb/image_cmds.c	/^image_get_vectors_position_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_get_background_color_invoker	pdb/grid_cmds.c	/^image_grid_get_background_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_get_foreground_color_invoker	pdb/grid_cmds.c	/^image_grid_get_foreground_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_get_offset_invoker	pdb/grid_cmds.c	/^image_grid_get_offset_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_get_spacing_invoker	pdb/grid_cmds.c	/^image_grid_get_spacing_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_get_style_invoker	pdb/grid_cmds.c	/^image_grid_get_style_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_set_background_color_invoker	pdb/grid_cmds.c	/^image_grid_set_background_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_set_foreground_color_invoker	pdb/grid_cmds.c	/^image_grid_set_foreground_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_set_offset_invoker	pdb/grid_cmds.c	/^image_grid_set_offset_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_set_spacing_invoker	pdb/grid_cmds.c	/^image_grid_set_spacing_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_grid_set_style_invoker	pdb/grid_cmds.c	/^image_grid_set_style_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_height_invoker	pdb/image_cmds.c	/^image_height_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_is_dirty_invoker	pdb/image_cmds.c	/^image_is_dirty_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_is_valid_invoker	pdb/image_cmds.c	/^image_is_valid_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_list_invoker	pdb/image_cmds.c	/^image_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_lower_channel_invoker	pdb/image_cmds.c	/^image_lower_channel_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_lower_layer_invoker	pdb/image_cmds.c	/^image_lower_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_lower_layer_to_bottom_invoker	pdb/image_cmds.c	/^image_lower_layer_to_bottom_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_lower_vectors_invoker	pdb/image_cmds.c	/^image_lower_vectors_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_lower_vectors_to_bottom_invoker	pdb/image_cmds.c	/^image_lower_vectors_to_bottom_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_map	tools/gimpimagemaptool.h	/^  GimpImageMap  *image_map;$/;"	m	struct:_GimpImageMapTool
image_map_signals	core/gimpimagemap.c	/^static guint image_map_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
image_menu_setup	menus/image-menu.c	/^image_menu_setup (GimpUIManager *manager,$/;"	f
image_merge_down_invoker	pdb/image_cmds.c	/^image_merge_down_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_merge_layers_cmd_callback	actions/image-commands.c	/^image_merge_layers_cmd_callback (GtkAction *action,$/;"	f
image_merge_layers_dialog_free	dialogs/image-merge-layers-dialog.c	/^image_merge_layers_dialog_free (ImageMergeLayersDialog *dialog)$/;"	f	file:
image_merge_layers_dialog_new	dialogs/image-merge-layers-dialog.c	/^image_merge_layers_dialog_new (GimpImage     *image,$/;"	f
image_merge_layers_discard_invisible	actions/image-commands.c	/^static gboolean              image_merge_layers_discard_invisible = FALSE;$/;"	v	file:
image_merge_layers_response	actions/image-commands.c	/^image_merge_layers_response (GtkWidget              *widget,$/;"	f	file:
image_merge_layers_type	actions/image-commands.c	/^static GimpMergeType         image_merge_layers_type = GIMP_EXPAND_AS_NECESSARY;$/;"	v	file:
image_merge_visible_layers_invoker	pdb/image_cmds.c	/^image_merge_visible_layers_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_new_cmd_callback	actions/image-commands.c	/^image_new_cmd_callback (GtkAction *action,$/;"	f
image_new_confirm_dialog	dialogs/image-new-dialog.c	/^image_new_confirm_dialog (ImageNewDialog *data)$/;"	f	file:
image_new_confirm_response	dialogs/image-new-dialog.c	/^image_new_confirm_response (GtkWidget      *dialog,$/;"	f	file:
image_new_create_image	dialogs/image-new-dialog.c	/^image_new_create_image (ImageNewDialog *dialog)$/;"	f	file:
image_new_dialog_free	dialogs/image-new-dialog.c	/^image_new_dialog_free (ImageNewDialog *dialog)$/;"	f	file:
image_new_dialog_new	dialogs/image-new-dialog.c	/^image_new_dialog_new (GimpContext *context)$/;"	f
image_new_dialog_response	dialogs/image-new-dialog.c	/^image_new_dialog_response (GtkWidget      *widget,$/;"	f	file:
image_new_dialog_set	dialogs/image-new-dialog.c	/^image_new_dialog_set (GtkWidget    *widget,$/;"	f
image_new_from_image_cmd_callback	actions/image-commands.c	/^image_new_from_image_cmd_callback (GtkAction *action,$/;"	f
image_new_invoker	pdb/image_cmds.c	/^image_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_new_last_template	core/gimp.h	/^  GimpTemplate           *image_new_last_template;$/;"	m	struct:_Gimp
image_new_template_changed	dialogs/image-new-dialog.c	/^image_new_template_changed (GimpContext    *context,$/;"	f	file:
image_parasite_attach_invoker	pdb/parasite_cmds.c	/^image_parasite_attach_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_parasite_detach_invoker	pdb/parasite_cmds.c	/^image_parasite_detach_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_parasite_find_invoker	pdb/parasite_cmds.c	/^image_parasite_find_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_parasite_list_invoker	pdb/parasite_cmds.c	/^image_parasite_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_pick_color_invoker	pdb/image_cmds.c	/^image_pick_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_pick_correlate_layer_invoker	pdb/image_cmds.c	/^image_pick_correlate_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_preview_clicked	widgets/gimptoolbox-image-area.c	/^image_preview_clicked (GtkWidget       *widget,$/;"	f	file:
image_preview_drop_image	widgets/gimptoolbox-image-area.c	/^image_preview_drop_image (GtkWidget    *widget,$/;"	f	file:
image_preview_set_viewable	widgets/gimptoolbox-image-area.c	/^image_preview_set_viewable (GimpView     *view,$/;"	f	file:
image_print_size_callback	actions/image-commands.c	/^image_print_size_callback (GtkWidget *dialog,$/;"	f	file:
image_print_size_cmd_callback	actions/image-commands.c	/^image_print_size_cmd_callback (GtkAction *action,$/;"	f
image_properties_cmd_callback	actions/image-commands.c	/^image_properties_cmd_callback (GtkAction *action,$/;"	f
image_properties_dialog_new	dialogs/image-properties-dialog.c	/^image_properties_dialog_new (GimpImage   *image,$/;"	f
image_radio	dialogs/palette-import-dialog.c	/^  GtkWidget     *image_radio;$/;"	m	struct:__anon178	file:
image_raise_channel_invoker	pdb/image_cmds.c	/^image_raise_channel_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_raise_layer_invoker	pdb/image_cmds.c	/^image_raise_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_raise_layer_to_top_invoker	pdb/image_cmds.c	/^image_raise_layer_to_top_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_raise_vectors_invoker	pdb/image_cmds.c	/^image_raise_vectors_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_raise_vectors_to_top_invoker	pdb/image_cmds.c	/^image_raise_vectors_to_top_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_remove_channel_invoker	pdb/image_cmds.c	/^image_remove_channel_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_remove_layer_invoker	pdb/image_cmds.c	/^image_remove_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_remove_layer_mask_invoker	pdb/image_cmds.c	/^image_remove_layer_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_remove_vectors_invoker	pdb/image_cmds.c	/^image_remove_vectors_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_resize_callback	actions/image-commands.c	/^image_resize_callback (GtkWidget    *dialog,$/;"	f	file:
image_resize_cmd_callback	actions/image-commands.c	/^image_resize_cmd_callback (GtkAction *action,$/;"	f
image_resize_invoker	pdb/image_cmds.c	/^image_resize_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_resize_options_free	actions/image-commands.c	/^image_resize_options_free (ImageResizeOptions *options)$/;"	f	file:
image_resize_to_layers_cmd_callback	actions/image-commands.c	/^image_resize_to_layers_cmd_callback (GtkAction *action,$/;"	f
image_resize_to_layers_invoker	pdb/image_cmds.c	/^image_resize_to_layers_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_resize_to_selection_cmd_callback	actions/image-commands.c	/^image_resize_to_selection_cmd_callback (GtkAction *action,$/;"	f
image_resize_unit	actions/image-commands.c	/^static GimpUnit              image_resize_unit       = GIMP_UNIT_PIXEL;$/;"	v	file:
image_rotate_actions	actions/image-actions.c	/^static const GimpEnumActionEntry image_rotate_actions[] =$/;"	v	file:
image_rotate_cmd_callback	actions/image-commands.c	/^image_rotate_cmd_callback (GtkAction *action,$/;"	f
image_rotate_invoker	pdb/image_cmds.c	/^image_rotate_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_scale_callback	actions/image-commands.c	/^image_scale_callback (GtkWidget              *dialog,$/;"	f	file:
image_scale_callback	dialogs/image-scale-dialog.c	/^image_scale_callback (GtkWidget             *widget,$/;"	f	file:
image_scale_cmd_callback	actions/image-commands.c	/^image_scale_cmd_callback (GtkAction *action,$/;"	f
image_scale_confirm_dialog	dialogs/image-scale-dialog.c	/^image_scale_confirm_dialog (ImageScaleDialog *dialog)$/;"	f	file:
image_scale_confirm_large	dialogs/image-scale-dialog.c	/^image_scale_confirm_large (ImageScaleDialog *dialog,$/;"	f	file:
image_scale_confirm_response	dialogs/image-scale-dialog.c	/^image_scale_confirm_response (GtkWidget        *widget,$/;"	f	file:
image_scale_confirm_small	dialogs/image-scale-dialog.c	/^image_scale_confirm_small (ImageScaleDialog *dialog)$/;"	f	file:
image_scale_dialog_free	dialogs/image-scale-dialog.c	/^image_scale_dialog_free (ImageScaleDialog *dialog)$/;"	f	file:
image_scale_dialog_new	dialogs/image-scale-dialog.c	/^image_scale_dialog_new (GimpImage             *image,$/;"	f
image_scale_interp	actions/image-commands.c	/^static GimpInterpolationType image_scale_interp      = -1;$/;"	v	file:
image_scale_invoker	pdb/image_cmds.c	/^image_scale_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_scale_unit	actions/image-commands.c	/^static GimpUnit              image_scale_unit        = GIMP_UNIT_PIXEL;$/;"	v	file:
image_set_active_channel_invoker	pdb/image_cmds.c	/^image_set_active_channel_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_active_layer_invoker	pdb/image_cmds.c	/^image_set_active_layer_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_active_vectors_invoker	pdb/image_cmds.c	/^image_set_active_vectors_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_colormap_invoker	pdb/image_cmds.c	/^image_set_colormap_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_component_active_invoker	pdb/image_cmds.c	/^image_set_component_active_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_component_visible_invoker	pdb/image_cmds.c	/^image_set_component_visible_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_filename_invoker	pdb/image_cmds.c	/^image_set_filename_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_resolution_invoker	pdb/image_cmds.c	/^image_set_resolution_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_tattoo_state_invoker	pdb/image_cmds.c	/^image_set_tattoo_state_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_set_unit_invoker	pdb/image_cmds.c	/^image_set_unit_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_status_format	config/gimpdisplayconfig.h	/^  gchar              *image_status_format;$/;"	m	struct:_GimpDisplayConfig
image_table	core/gimp.h	/^  GHashTable             *image_table;$/;"	m	struct:_Gimp
image_thumbnail_invoker	pdb/image_cmds.c	/^image_thumbnail_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_title_format	config/gimpdisplayconfig.h	/^  gchar              *image_title_format;$/;"	m	struct:_GimpDisplayConfig
image_type	core/gimptemplate.h	/^  GimpImageBaseType  image_type;$/;"	m	struct:_GimpTemplate
image_types	plug-in/gimppluginprocedure.h	/^  gchar               *image_types;$/;"	m	struct:_GimpPlugInProcedure
image_types_parse	plug-in/gimppluginprocedure.c	/^image_types_parse (const gchar *name,$/;"	f	file:
image_types_val	plug-in/gimppluginprocedure.h	/^  GimpPlugInImageType  image_types_val;$/;"	m	struct:_GimpPlugInProcedure
image_ui_manager	gui/gui.c	/^static GimpUIManager   *image_ui_manager = NULL;$/;"	v	file:
image_undo_disable_invoker	pdb/undo_cmds.c	/^image_undo_disable_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_undo_enable_invoker	pdb/undo_cmds.c	/^image_undo_enable_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_undo_freeze_invoker	pdb/undo_cmds.c	/^image_undo_freeze_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_undo_group_end_invoker	pdb/undo_cmds.c	/^image_undo_group_end_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_undo_group_start_invoker	pdb/undo_cmds.c	/^image_undo_group_start_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_undo_is_enabled_invoker	pdb/undo_cmds.c	/^image_undo_is_enabled_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_undo_thaw_invoker	pdb/undo_cmds.c	/^image_undo_thaw_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_unset_active_channel_invoker	pdb/image_cmds.c	/^image_unset_active_channel_invoker (GimpProcedure     *procedure,$/;"	f	file:
image_width_invoker	pdb/image_cmds.c	/^image_width_invoker (GimpProcedure     *procedure,$/;"	f	file:
imagefile	core/gimpcontext.h	/^  GimpImagefile        *imagefile;$/;"	m	struct:_GimpContext
imagefile	widgets/gimpthumbbox.h	/^  GimpImagefile *imagefile;$/;"	m	struct:_GimpThumbBox
imagefile_changed	core/gimpcontext.h	/^  void (* imagefile_changed)  (GimpContext          *context,$/;"	m	struct:_GimpContextClass
imagefile_name	core/gimpcontext.h	/^  gchar                *imagefile_name;$/;"	m	struct:_GimpContext
images	core/gimp.h	/^  GimpContainer          *images;$/;"	m	struct:_Gimp
images_actions	actions/images-actions.c	/^static const GimpActionEntry images_actions[] =$/;"	v	file:
images_actions_setup	actions/images-actions.c	/^images_actions_setup (GimpActionGroup *group)$/;"	f
images_actions_update	actions/images-actions.c	/^images_actions_update (GimpActionGroup *group,$/;"	f
images_delete_image_cmd_callback	actions/images-commands.c	/^images_delete_image_cmd_callback (GtkAction *action,$/;"	f
images_new_view_cmd_callback	actions/images-commands.c	/^images_new_view_cmd_callback (GtkAction *action,$/;"	f
images_raise_views_cmd_callback	actions/images-commands.c	/^images_raise_views_cmd_callback (GtkAction *action,$/;"	f
img2real	display/gimpdisplayshell-scale.c	/^img2real (GimpDisplayShell *shell,$/;"	f	file:
import_dialog_drop_callback	dialogs/palette-import-dialog.c	/^import_dialog_drop_callback (GtkWidget    *widget,$/;"	f	file:
import_type	dialogs/palette-import-dialog.c	/^  ImportType     import_type;$/;"	m	struct:__anon178	file:
in_button	widgets/gimpview.h	/^  guint             in_button : 1;$/;"	m	struct:_GimpView
in_click_distance	tools/gimptool.h	/^  gboolean         in_click_distance;$/;"	m	struct:_GimpTool
in_poly	core/gimp-transform-resize.c	/^in_poly (Point points[4],$/;"	f	file:
increase_opacity	composite/gimp-composite.h	/^  guchar increase_opacity;$/;"	m	struct:GimpCompositeOperationEffects
increase_opacity	paint-funcs/paint-funcs.c	/^  const guint   increase_opacity : 1; \/*  layer mode can increase opacity *\/$/;"	m	struct:_LayerMode	file:
indent	text/gimptext.h	/^  gdouble                indent;$/;"	m	struct:_GimpText
indent	tools/gimptextoptions.h	/^  gdouble                indent;$/;"	m	struct:_GimpTextOptions
index	core/gimpbrushpipe.h	/^  gint             *index;      \/* Current index for incremental dimensions *\/$/;"	m	struct:_GimpBrushPipe
index	core/gimpimage-colorhash.c	/^  gint       index;   \/*  colormap index        *\/$/;"	m	struct:_ColorHash	file:
index	dialogs/about-dialog.c	/^  gint          index;$/;"	m	struct:__anon168	file:
index	display/gimpdisplayshell-selection.c	/^  guint             index;            \/*  index of current stipple pattern  *\/$/;"	m	struct:_Selection	file:
index_adjustment	widgets/gimpcolormapeditor.h	/^  GtkAdjustment   *index_adjustment;$/;"	m	struct:_GimpColormapEditor
index_spinbutton	widgets/gimpcolormapeditor.h	/^  GtkWidget       *index_spinbutton;$/;"	m	struct:_GimpColormapEditor
index_used_count	core/gimpimage-convert.c	/^  gulong index_used_count[256];     \/* how many times an index was used *\/$/;"	m	struct:_QuantizeObj	file:
info	widgets/gimpcontrollereditor.h	/^  GimpControllerInfo *info;$/;"	m	struct:_GimpControllerEditor
info	widgets/gimpthumbbox.h	/^  GtkWidget     *info;$/;"	m	struct:_GimpThumbBox
info	xcf/xcf-save.c	/^  XcfInfo *info;$/;"	m	struct:__anon418	file:
info_changed	core/gimpimagefile.h	/^  void (* info_changed) (GimpImagefile *imagefile);$/;"	m	struct:_GimpImagefileClass
info_signals	widgets/gimpcontrollerinfo.c	/^static guint info_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
init_error_limit	core/gimpimage-convert.c	/^init_error_limit (const int error_freedom)$/;"	f	file:
init_powtable	base/cpercep.c	/^init_powtable(const double gamma)$/;"	f	file:
init_velocity	paint/gimpink.h	/^  gboolean       init_velocity;$/;"	m	struct:_GimpInk
init_velocity	paint/gimpinkundo.h	/^  gboolean           init_velocity;$/;"	m	struct:_GimpInkUndo
initial	core/gimplayer.h	/^    gboolean      initial;            \/*  is fs composited yet?          *\/$/;"	m	struct:_GimpLayer::__anon125
initial_channel_pixels	paint-funcs/paint-funcs-generic.h	/^initial_channel_pixels (const guchar *src,$/;"	f
initial_index	core/gimpimage-convert.c	/^  unsigned char initial_index;$/;"	m	struct:__anon109	file:
initial_indexed_a_pixels	paint-funcs/paint-funcs-generic.h	/^initial_indexed_a_pixels (const guchar *src,$/;"	f
initial_indexed_pixels	paint-funcs/paint-funcs-generic.h	/^initial_indexed_pixels (const guchar *src,$/;"	f
initial_inten_a_pixels	paint-funcs/paint-funcs-generic.h	/^initial_inten_a_pixels (const guchar   *src,$/;"	f
initial_inten_pixels	paint-funcs/paint-funcs-generic.h	/^initial_inten_pixels (const guchar   *src,$/;"	f
initial_mode	widgets/gimpbrushselect.h	/^  GimpLayerModeEffects  initial_mode;$/;"	m	struct:_GimpBrushSelect
initial_object	widgets/gimppdbdialog.h	/^  GimpObject      *initial_object;$/;"	m	struct:_GimpPdbDialog
initial_opacity	widgets/gimpbrushselect.h	/^  gdouble               initial_opacity;$/;"	m	struct:_GimpBrushSelect
initial_region	paint-funcs/paint-funcs.c	/^initial_region (PixelRegion          *src,$/;"	f
initial_regions_struct	paint-funcs/paint-funcs.c	/^struct initial_regions_struct$/;"	s	file:
initial_size	core/gimptemplate.h	/^  guint64            initial_size;$/;"	m	struct:_GimpTemplate
initial_sub_region	paint-funcs/paint-funcs.c	/^initial_sub_region (struct initial_regions_struct *st,$/;"	f	file:
initial_zoom_to_fit	config/gimpdisplayconfig.h	/^  gboolean            initial_zoom_to_fit;$/;"	m	struct:_GimpDisplayConfig
initialize	base/tile-cache.c	/^static gboolean initialize = TRUE;$/;"	v	file:
initialize	core/gimp.h	/^  void     (* initialize)     (Gimp               *gimp,$/;"	m	struct:_GimpClass
initialize	tools/gimptool.h	/^  gboolean      (* initialize)          (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
initialize_median_cut	core/gimpimage-convert.c	/^initialize_median_cut (GimpImageBaseType       type,$/;"	f	file:
initialized	paint/gimpsmudge.h	/^  gboolean       initialized;$/;"	m	struct:_GimpSmudge
ink_pen_ellipse	paint/gimpink.c	/^ink_pen_ellipse (GimpInkOptions *options,$/;"	f	file:
input	base/levels.h	/^  guchar  input[5][256]; \/* this is used only by the gui *\/$/;"	m	struct:_Levels
input_area	tools/gimplevelstool.h	/^  GtkWidget            *input_area;$/;"	m	struct:_GimpLevelsTool
input_bar	tools/gimplevelstool.h	/^  GtkWidget            *input_bar;$/;"	m	struct:_GimpLevelsTool
input_id	plug-in/gimpplugin.h	/^  guint                input_id;        \/*  Id of input proc                  *\/$/;"	m	struct:_GimpPlugIn
insert_data_free	widgets/gimpcontainerview.h	/^  GDestroyNotify  insert_data_free;$/;"	m	struct:_GimpContainerViewInterface
insert_item	widgets/gimpcontainerview.h	/^  gpointer (* insert_item)   (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
insert_sort	paint/gimpink.c	/^insert_sort (gint *data,$/;"	f	file:
insert_spacers	dialogs/about-dialog.c	/^insert_spacers (const gchar *string)$/;"	f	file:
install_cmap	config/gimpcoreconfig.h	/^  gboolean                install_cmap;$/;"	m	struct:_GimpCoreConfig
install_table	composite/gimp-composite-generic-installer.c	/^static const struct install_table {$/;"	s	file:
install_table	composite/gimp-composite-mmx-installer.c	/^static const struct install_table {$/;"	s	file:
install_table	composite/gimp-composite-sse-installer.c	/^static const struct install_table {$/;"	s	file:
install_table	composite/gimp-composite-sse2-installer.c	/^static const struct install_table {$/;"	s	file:
installed_during_init	plug-in/gimppluginprocedure.h	/^  gboolean             installed_during_init;$/;"	m	struct:_GimpPlugInProcedure
instance	display/gimpdisplay.h	/^  gint        instance;         \/*  the instance # of this display as      *\/$/;"	m	struct:_GimpDisplay
instance_count	core/gimpimage.h	/^  gint               instance_count;        \/*  number of instances          *\/$/;"	m	struct:_GimpImage
instant_update	widgets/gimpgradienteditor.h	/^  gboolean        instant_update;$/;"	m	struct:_GimpGradientEditor
interactive	tools/gimpselectionoptions.h	/^  gboolean            interactive;$/;"	m	struct:_GimpSelectionOptions
internal	core/gimpdata.h	/^  guint         internal  : 1;$/;"	m	struct:_GimpData
internal	plug-in/gimpenvirontable.h	/^  GHashTable  *internal;$/;"	m	struct:_GimpEnvironTable
internal_procs_init	pdb/internal_procs.c	/^internal_procs_init (GimpPDB *pdb)$/;"	f
interpolate	paint/gimppaintcore.h	/^  void       (* interpolate)    (GimpPaintCore    *core,$/;"	m	struct:_GimpPaintCoreClass
interpolate	vectors/gimpstroke.h	/^  GArray      * (* interpolate)          (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
interpolate	vectors/gimpvectors.h	/^  gint          (* interpolate)       (const GimpVectors *vectors,$/;"	m	struct:_GimpVectorsClass
interpolation	dialogs/image-scale-dialog.c	/^  GimpInterpolationType  interpolation;$/;"	m	struct:__anon167	file:
interpolation	dialogs/scale-dialog.c	/^  GimpInterpolationType  interpolation;$/;"	m	struct:__anon173	file:
interpolation	tools/gimptransformoptions.h	/^  GimpInterpolationType     interpolation;$/;"	m	struct:_GimpTransformOptions
interpolation_type	config/gimpcoreconfig.h	/^  GimpInterpolationType   interpolation_type;$/;"	m	struct:_GimpCoreConfig
interpreter_db	plug-in/gimppluginmanager.h	/^  GimpInterpreterDB *interpreter_db;$/;"	m	struct:_GimpPlugInManager
interpreter_path	config/gimpcoreconfig.h	/^  gchar                  *interpreter_path;$/;"	m	struct:_GimpCoreConfig
intersect	core/gimp-transform-resize.c	/^intersect (Point  a,$/;"	f	file:
intersect_lut_func	base/lut-funcs.c	/^intersect_lut_func (gdouble *min,$/;"	f	file:
intersect_lut_new	base/lut-funcs.c	/^intersect_lut_new (gdouble value,$/;"	f
intersect_lut_setup	base/lut-funcs.c	/^intersect_lut_setup (GimpLut *lut,$/;"	f	file:
intersect_x	core/gimp-transform-resize.c	/^intersect_x (Point  a,$/;"	f	file:
intersect_y	core/gimp-transform-resize.c	/^intersect_y (Point  a,$/;"	f	file:
inv_lin_trans	paint-funcs/scale-region.c	/^inv_lin_trans (const gdouble *t,$/;"	f	file:
invalidate	widgets/gimpviewrenderer.h	/^  void (* invalidate)  (GimpViewRenderer   *renderer);$/;"	m	struct:_GimpViewRendererClass
invalidate_boundary	core/gimpdrawable.h	/^  void (* invalidate_boundary)   (GimpDrawable         *drawable);$/;"	m	struct:_GimpDrawableClass
invalidate_preview	core/gimpprojection.h	/^  gboolean                  invalidate_preview;$/;"	m	struct:_GimpProjection
invalidate_preview	core/gimpviewable.h	/^  void        (* invalidate_preview) (GimpViewable  *viewable);$/;"	m	struct:_GimpViewableClass
invalidate_preview_handler_id	widgets/gimpcontainertreeview.h	/^  GQuark             invalidate_preview_handler_id;$/;"	m	struct:_GimpContainerTreeView
inverse_size	paint/gimppaintoptions.h	/^  gboolean  inverse_size;$/;"	m	struct:_GimpPressureOptions
invert	core/gimpchannel.h	/^  void     (* invert)        (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
invert	dialogs/layer-add-mask-dialog.h	/^  gboolean         invert;$/;"	m	struct:_LayerAddMaskDialog
invert_button	widgets/gimpselectioneditor.h	/^  GtkWidget       *invert_button;$/;"	m	struct:_GimpSelectionEditor
invert_desc	core/gimpchannel.h	/^  const gchar *invert_desc;$/;"	m	struct:_GimpChannelClass
invert_invoker	pdb/color_cmds.c	/^invert_invoker (GimpProcedure     *procedure,$/;"	f	file:
invert_lut_func	base/lut-funcs.c	/^invert_lut_func (gpointer  unused,$/;"	f	file:
invert_lut_new	base/lut-funcs.c	/^invert_lut_new (gint n_channels)$/;"	f
invert_lut_setup	base/lut-funcs.c	/^invert_lut_setup (GimpLut *lut,$/;"	f	file:
is_active	core/gimpprogress.h	/^  gboolean       (* is_active)  (GimpProgress        *progress);$/;"	m	struct:_GimpProgressInterface
is_active	widgets/gimpactiongroup.h	/^  gboolean     is_active;$/;"	m	struct:_GimpToggleActionEntry
is_attached	core/gimpitem.h	/^  gboolean   (* is_attached)  (GimpItem               *item);$/;"	m	struct:_GimpItemClass
is_drawn	tools/gimpdrawtool.h	/^  gboolean      is_drawn;     \/*  is the stuff we draw currently visible *\/$/;"	m	struct:_GimpDrawTool
is_empty	core/gimpchannel.h	/^  gboolean (* is_empty)      (GimpChannel     *channel);$/;"	m	struct:_GimpChannelClass
is_empty	vectors/gimpstroke.h	/^  gboolean      (* is_empty)             (const GimpStroke      *stroke);$/;"	m	struct:_GimpStrokeClass
is_extendable	vectors/gimpstroke.h	/^  gboolean      (* is_extendable)        (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
is_popup	widgets/gimpviewrenderer.h	/^  guint               is_popup    : 1;$/;"	m	struct:_GimpViewRenderer
iscissors_convert	tools/gimpiscissorstool.c	/^iscissors_convert (GimpIscissorsTool *iscissors,$/;"	f	file:
iscissors_draw_curve	tools/gimpiscissorstool.c	/^iscissors_draw_curve (GimpDrawTool *draw_tool,$/;"	f	file:
iscissors_free_icurves	tools/gimpiscissorstool.c	/^iscissors_free_icurves (GQueue *curves)$/;"	f	file:
italic_attrs	widgets/gimplayertreeview.h	/^  PangoAttrList        *italic_attrs;$/;"	m	struct:_GimpLayerTreeView
item	core/gimpitemundo.h	/^  GimpItem *item;  \/* the item this undo is for *\/$/;"	m	struct:_GimpItemUndo
item_table	core/gimp.h	/^  GHashTable             *item_table;$/;"	m	struct:_Gimp
item_type	core/gimpparamspecs.h	/^  GType          item_type;$/;"	m	struct:_GimpParamSpecItemID
item_type	widgets/gimpitemtreeview.h	/^  GType                 item_type;$/;"	m	struct:_GimpItemTreeViewClass
items	file/gimprecentlist.c	/^  GList          *items;$/;"	m	struct:__anon198	file:
ix	tools/gimpiscissorstool.h	/^  gint            ix, iy;       \/*  initial coordinates                   *\/$/;"	m	struct:_GimpIscissorsTool
iy	tools/gimpiscissorstool.h	/^  gint            ix, iy;       \/*  initial coordinates                   *\/$/;"	m	struct:_GimpIscissorsTool
jitter	paint/gimpbrushcore.h	/^  gdouble        jitter;$/;"	m	struct:_GimpBrushCore
jitter_amount	paint/gimppaintoptions.h	/^  gdouble   jitter_amount;$/;"	m	struct:_GimpJitterOptions
jitter_lut_x	paint/gimpbrushcore.h	/^  gdouble        jitter_lut_x[BRUSH_CORE_JITTER_LUTSIZE];$/;"	m	struct:_GimpBrushCore
jitter_lut_y	paint/gimpbrushcore.h	/^  gdouble        jitter_lut_y[BRUSH_CORE_JITTER_LUTSIZE];$/;"	m	struct:_GimpBrushCore
jitter_options	paint/gimppaintoptions.h	/^  GimpJitterOptions        *jitter_options;$/;"	m	struct:_GimpPaintOptions
jitter_options_gui	tools/gimppaintoptions-gui.c	/^jitter_options_gui (GimpJitterOptions  *jitter,$/;"	f	file:
join_style	core/gimpstrokeoptions.h	/^  GimpJoinStyle    join_style;$/;"	m	struct:_GimpStrokeOptions
justify	text/gimptext.h	/^  GimpTextJustification  justify;$/;"	m	struct:_GimpText
justify	tools/gimptextoptions.h	/^  GimpTextJustification  justify;$/;"	m	struct:_GimpTextOptions
justify	widgets/gtkwrapbox.h	/^  guint            justify : 4;$/;"	m	struct:_GtkWrapBox
kernel_brushes	paint/gimpbrushcore.h	/^  TempBuf       *kernel_brushes[BRUSH_CORE_SUBSAMPLE + 1][BRUSH_CORE_SUBSAMPLE + 1];$/;"	m	struct:_GimpBrushCore
kerning	text/gimptext.h	/^  gboolean               kerning;$/;"	m	struct:_GimpText
key	config/gimprc-unknown.c	/^  gchar *key;$/;"	m	struct:__anon43	file:
key_press	tools/gimptool.h	/^  gboolean      (* key_press)           (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
keyboard	widgets/gimpcontrollers.c	/^  GimpController *keyboard;$/;"	m	struct:_GimpControllerManager	file:
keyboard_events	widgets/gimpcontrollerkeyboard.c	/^static KeyboardEvent keyboard_events[] =$/;"	v	file:
keyboard_shortcuts_dialog_new	dialogs/keyboard-shortcuts-dialog.c	/^keyboard_shortcuts_dialog_new (Gimp *gimp)$/;"	f
keys	widgets/gimpdeviceinfo.h	/^  GdkDeviceKey  *keys;$/;"	m	struct:_GimpDeviceInfo
keyval	widgets/gimpcontrollerkeyboard.c	/^  const guint            keyval;$/;"	m	struct:_KeyboardEvent	file:
l	base/siox.c	/^  gfloat l;$/;"	m	struct:__anon7	file:
lab	base/siox.c	/^} lab;$/;"	t	typeref:struct:__anon7	file:
lab_to_xyz	base/cpercep.c	/^lab_to_xyz (double *inl,$/;"	f	file:
label	dialogs/module-dialog.c	/^  GtkWidget    *label[NUM_INFO_LINES];$/;"	m	struct:__anon182	file:
label	display/gimpdisplayshell-layer-select.c	/^  GtkWidget *label;$/;"	m	struct:__anon192	file:
label	plug-in/gimppluginprocedure.h	/^  gchar               *label;$/;"	m	struct:_GimpPlugInProcedure
label	tools/gimpperspectivetool.h	/^  GtkWidget         *label[3][3];$/;"	m	struct:_GimpPerspectiveTool
label	widgets/gimpactionfactory.h	/^  gchar                     *label;$/;"	m	struct:_GimpActionFactoryEntry
label	widgets/gimpactiongroup.h	/^  const gchar         *label;$/;"	m	struct:_GimpPlugInActionEntry
label	widgets/gimpactiongroup.h	/^  const gchar *label;$/;"	m	struct:_GimpActionEntry
label	widgets/gimpactiongroup.h	/^  const gchar *label;$/;"	m	struct:_GimpEnumActionEntry
label	widgets/gimpactiongroup.h	/^  const gchar *label;$/;"	m	struct:_GimpRadioActionEntry
label	widgets/gimpactiongroup.h	/^  const gchar *label;$/;"	m	struct:_GimpStringActionEntry
label	widgets/gimpactiongroup.h	/^  const gchar *label;$/;"	m	struct:_GimpToggleActionEntry
label	widgets/gimpactiongroup.h	/^  gchar                     *label;$/;"	m	struct:_GimpActionGroup
label	widgets/gimpdevicestatus.c	/^  GtkWidget      *label;$/;"	m	struct:_GimpDeviceStatusEntry	file:
label	widgets/gimpdockseparator.h	/^  GtkWidget   *label;$/;"	m	struct:_GimpDockSeparator
label	widgets/gimpmessagebox.h	/^  GtkWidget    *label[3];$/;"	m	struct:_GimpMessageBox
label	widgets/gimpprogressbox.h	/^  GtkWidget  *label;$/;"	m	struct:_GimpProgressBox
labels	widgets/gimphistogrameditor.h	/^  GtkWidget            *labels[6];$/;"	m	struct:_GimpHistogramEditor
lanczos_sum	paint-funcs/scale-region.c	/^lanczos_sum (guchar         *ptr,$/;"	f	file:
lanczos_sum_mul	paint-funcs/scale-region.c	/^lanczos_sum_mul (guchar         *ptr,$/;"	f	file:
language	text/gimptext.h	/^  gchar                 *language;$/;"	m	struct:_GimpText
language	tools/gimptextoptions.h	/^  gchar                 *language;$/;"	m	struct:_GimpTextOptions
last	base/tile-cache.c	/^  Tile *last;$/;"	m	struct:_TileList	file:
last	tools/gimpcurvestool.h	/^  gint                  last;$/;"	m	struct:_GimpCurvesTool
last_blob	paint/gimpink.h	/^  Blob          *last_blob;    \/*  blob for last cursor position  *\/$/;"	m	struct:_GimpInk
last_blob	paint/gimpinkundo.h	/^  Blob              *last_blob;$/;"	m	struct:_GimpInkUndo
last_box	widgets/gimperrordialog.h	/^  GtkWidget       *last_box;$/;"	m	struct:_GimpErrorDialog
last_brush_mask	paint/gimpbrushcore.h	/^  TempBuf       *last_brush_mask;$/;"	m	struct:_GimpBrushCore
last_coords	paint/gimppaintcore.h	/^  GimpCoords   last_coords;      \/*  last coords                         *\/$/;"	m	struct:_GimpPaintCore
last_coords	paint/gimppaintcoreundo.h	/^  GimpCoords     last_coords;$/;"	m	struct:_GimpPaintCoreUndo
last_coords	tools/gimpfreeselecttool.h	/^  GimpCoords         last_coords;$/;"	m	struct:_GimpFreeSelectTool
last_domain	widgets/gimperrordialog.h	/^  gchar           *last_domain;$/;"	m	struct:_GimpErrorDialog
last_known_state	dialogs/tips-parser.c	/^  TipsParserState        last_known_state;$/;"	m	struct:__anon176	file:
last_message	widgets/gimperrordialog.h	/^  gchar           *last_message;$/;"	m	struct:_GimpErrorDialog
last_motion_time	display/gimpdisplayshell.h	/^  guint32           last_motion_time;$/;"	m	struct:_GimpDisplayShell
last_offset_x	display/gimpdisplayshell.h	/^  gint              last_offset_x;     \/*  offsets used when reverting zoom   *\/$/;"	m	struct:_GimpDisplayShell
last_offset_y	display/gimpdisplayshell.h	/^  gint              last_offset_y;$/;"	m	struct:_GimpDisplayShell
last_opened_size	config/gimpguiconfig.h	/^  gint                 last_opened_size;$/;"	m	struct:_GimpGuiConfig
last_paint	paint/gimppaintcore.h	/^  GimpVector2  last_paint;       \/*  last point that was painted         *\/$/;"	m	struct:_GimpPaintCore
last_path	display/gimpscalecombobox.h	/^  GtkTreePath      *last_path;$/;"	m	struct:_GimpScaleComboBox
last_scale	display/gimpdisplayshell.h	/^  gdouble           last_scale;        \/*  scale used when reverting zoom     *\/$/;"	m	struct:_GimpDisplayShell
last_scale_brush	paint/gimpbrushcore.h	/^  TempBuf       *last_scale_brush;$/;"	m	struct:_GimpBrushCore
last_scale_height	paint/gimpbrushcore.h	/^  gint           last_scale_height;$/;"	m	struct:_GimpBrushCore
last_scale_pixmap	paint/gimpbrushcore.h	/^  TempBuf       *last_scale_pixmap;$/;"	m	struct:_GimpBrushCore
last_scale_pixmap_height	paint/gimpbrushcore.h	/^  gint           last_scale_pixmap_height;$/;"	m	struct:_GimpBrushCore
last_scale_pixmap_width	paint/gimpbrushcore.h	/^  gint           last_scale_pixmap_width;$/;"	m	struct:_GimpBrushCore
last_scale_time	display/gimpdisplayshell.h	/^  guint             last_scale_time;   \/*  time when last_scale was set       *\/$/;"	m	struct:_GimpDisplayShell
last_scale_width	paint/gimpbrushcore.h	/^  gint           last_scale_width;$/;"	m	struct:_GimpBrushCore
last_solid_brush	paint/gimpbrushcore.h	/^  TempBuf       *last_solid_brush;$/;"	m	struct:_GimpBrushCore
last_stroke_ID	vectors/gimpvectors.h	/^  gint      last_stroke_ID;$/;"	m	struct:_GimpVectors
last_time	gui/splash.c	/^  gdouble         last_time;$/;"	m	struct:__anon201	file:
last_time	paint/gimpink.h	/^  guint32        last_time;     \/*  previous time of a motion event  *\/$/;"	m	struct:_GimpInk
last_time	paint/gimpinkundo.h	/^  gdouble            last_time;$/;"	m	struct:_GimpInkUndo
last_tip	config/gimpguiconfig.h	/^  gint                 last_tip;  \/* saved in sessionrc *\/$/;"	m	struct:_GimpGuiConfig
last_update	dialogs/module-dialog.c	/^  GimpModule   *last_update;$/;"	m	struct:__anon182	file:
last_width	widgets/gimppaletteeditor.h	/^  gint              last_width;$/;"	m	struct:_GimpPaletteEditor
last_x	tools/gimpblendtool.h	/^  gdouble       last_x;     \/*  last x coord      *\/$/;"	m	struct:_GimpBlendTool
last_x	tools/gimpmeasuretool.h	/^  gint             last_x;      \/*  last x coordinate          *\/$/;"	m	struct:_GimpMeasureTool
last_x	tools/gimpvectortool.h	/^  gdouble               last_x;         \/* last x coordinate                 *\/$/;"	m	struct:_GimpVectorTool
last_y	tools/gimpblendtool.h	/^  gdouble       last_y;     \/*  last y coord      *\/$/;"	m	struct:_GimpBlendTool
last_y	tools/gimpmeasuretool.h	/^  gint             last_y;      \/*  last y coordinate          *\/$/;"	m	struct:_GimpMeasureTool
last_y	tools/gimpvectortool.h	/^  gdouble               last_y;         \/* last y coordinate                 *\/$/;"	m	struct:_GimpVectorTool
lastx	tools/gimpperspectiveclonetool.h	/^  gdouble         lastx;          \/*  last x coord                     *\/$/;"	m	struct:_GimpPerspectiveCloneTool
lastx	tools/gimprectangletool.c	/^  gint                    lastx;$/;"	m	struct:_GimpRectangleToolPrivate	file:
lastx	tools/gimptransformtool.h	/^  gdouble         lastx;           \/*  last x coord                      *\/$/;"	m	struct:_GimpTransformTool
lasty	tools/gimpperspectiveclonetool.h	/^  gdouble         lasty;          \/*  last y coord                     *\/$/;"	m	struct:_GimpPerspectiveCloneTool
lasty	tools/gimprectangletool.c	/^  gint                    lasty;$/;"	m	struct:_GimpRectangleToolPrivate	file:
lasty	tools/gimptransformtool.h	/^  gdouble         lasty;           \/*  last y coord                      *\/$/;"	m	struct:_GimpTransformTool
launder_font_name	text/gimptext-xlfd.c	/^launder_font_name (gchar *name)$/;"	f	file:
layer	core/gimplayermask.h	/^  GimpLayer   *layer;$/;"	m	struct:_GimpLayerMask
layer	dialogs/layer-add-mask-dialog.h	/^  GimpLayer       *layer;$/;"	m	struct:_LayerAddMaskDialog
layer	dialogs/layer-options-dialog.h	/^  GimpLayer    *layer;$/;"	m	struct:_LayerOptionsDialog
layer	text/gimptextlayer.h	/^  GimpLayer     layer;$/;"	m	struct:_GimpTextLayer
layer	tools/gimptexttool.h	/^  GimpTextLayer *layer;$/;"	m	struct:_GimpTextTool
layer_add_alpha_invoker	pdb/layer_cmds.c	/^layer_add_alpha_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_add_mask_dialog_channel_selected	dialogs/layer-add-mask-dialog.c	/^layer_add_mask_dialog_channel_selected (GimpContainerView  *view,$/;"	f	file:
layer_add_mask_dialog_free	dialogs/layer-add-mask-dialog.c	/^layer_add_mask_dialog_free (LayerAddMaskDialog *dialog)$/;"	f	file:
layer_add_mask_dialog_new	dialogs/layer-add-mask-dialog.c	/^layer_add_mask_dialog_new (GimpLayer       *layer,$/;"	f
layer_add_mask_invoker	pdb/layer_cmds.c	/^layer_add_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_add_mask_type	actions/layers-commands.c	/^static GimpAddMaskType        layer_add_mask_type = GIMP_ADD_WHITE_MASK;$/;"	v	file:
layer_addition_mode	paint-funcs/paint-funcs-generic.h	/^layer_addition_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_alpha_handler	core/gimpimage.h	/^  GQuark             layer_alpha_handler;$/;"	m	struct:_GimpImage
layer_anti_erase_mode	paint-funcs/paint-funcs-generic.h	/^layer_anti_erase_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_behind_mode	paint-funcs/paint-funcs-generic.h	/^layer_behind_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_burn_mode	paint-funcs/paint-funcs-generic.h	/^layer_burn_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_color_erase_mode	paint-funcs/paint-funcs-generic.h	/^layer_color_erase_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_color_mode	paint-funcs/paint-funcs-generic.h	/^layer_color_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_copy_invoker	pdb/layer_cmds.c	/^layer_copy_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_create_mask_invoker	pdb/layer_cmds.c	/^layer_create_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_darken_only_mode	paint-funcs/paint-funcs-generic.h	/^layer_darken_only_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_difference_mode	paint-funcs/paint-funcs-generic.h	/^layer_difference_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_dissolve_mode	paint-funcs/paint-funcs-generic.h	/^layer_dissolve_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_divide_mode	paint-funcs/paint-funcs-generic.h	/^layer_divide_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_dodge_mode	paint-funcs/paint-funcs-generic.h	/^layer_dodge_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_erase_mode	paint-funcs/paint-funcs-generic.h	/^layer_erase_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_fill_type	actions/layers-commands.c	/^static GimpFillType           layer_fill_type     = GIMP_TRANSPARENT_FILL;$/;"	v	file:
layer_from_mask_invoker	pdb/layer_cmds.c	/^layer_from_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_get_apply_mask_invoker	pdb/layer_cmds.c	/^layer_get_apply_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_get_edit_mask_invoker	pdb/layer_cmds.c	/^layer_get_edit_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_get_lock_alpha_invoker	pdb/layer_cmds.c	/^layer_get_lock_alpha_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_get_mask_invoker	pdb/layer_cmds.c	/^layer_get_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_get_mode_invoker	pdb/layer_cmds.c	/^layer_get_mode_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_get_opacity_invoker	pdb/layer_cmds.c	/^layer_get_opacity_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_get_show_mask_invoker	pdb/layer_cmds.c	/^layer_get_show_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_grain_extract_mode	paint-funcs/paint-funcs-generic.h	/^layer_grain_extract_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_grain_merge_mode	paint-funcs/paint-funcs-generic.h	/^layer_grain_merge_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_hardlight_mode	paint-funcs/paint-funcs-generic.h	/^layer_hardlight_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_hidden	display/gimpdisplayshell-selection.c	/^  gboolean          layer_hidden;     \/*  is the layer boundary hidden?     *\/$/;"	m	struct:_Selection	file:
layer_hue_mode	paint-funcs/paint-funcs-generic.h	/^layer_hue_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_is_floating_sel_invoker	pdb/layer_cmds.c	/^layer_is_floating_sel_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_lighten_only_mode	paint-funcs/paint-funcs-generic.h	/^layer_lighten_only_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_mask	core/gimplayermaskundo.h	/^  GimpLayerMask *layer_mask;$/;"	m	struct:_GimpLayerMaskUndo
layer_mask_invert	actions/layers-commands.c	/^static gboolean               layer_mask_invert   = FALSE;$/;"	v	file:
layer_mask_signals	core/gimplayermask.c	/^static guint layer_mask_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
layer_mode_funcs	paint-funcs/paint-funcs.c	/^static const LayerModeFunc layer_mode_funcs[] =$/;"	v	file:
layer_modes	actions/layers-commands.c	/^static const GimpLayerModeEffects layer_modes[] =$/;"	v	file:
layer_modes	paint-funcs/paint-funcs.c	/^static const LayerMode layer_modes[] =$/;"	v	file:
layer_multiply_mode	paint-funcs/paint-funcs-generic.h	/^layer_multiply_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_name	actions/layers-commands.c	/^static gchar                 *layer_name          = NULL;$/;"	v	file:
layer_new_from_drawable_invoker	pdb/layer_cmds.c	/^layer_new_from_drawable_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_new_invoker	pdb/layer_cmds.c	/^layer_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_normal_mode	paint-funcs/paint-funcs-generic.h	/^layer_normal_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_only	tools/gimpcropoptions.h	/^  gboolean         layer_only;$/;"	m	struct:_GimpCropOptions
layer_options_dialog_free	dialogs/layer-options-dialog.c	/^layer_options_dialog_free (LayerOptionsDialog *options)$/;"	f	file:
layer_options_dialog_new	dialogs/layer-options-dialog.c	/^layer_options_dialog_new (GimpImage    *image,$/;"	f
layer_options_dialog_toggle_rename	dialogs/layer-options-dialog.c	/^layer_options_dialog_toggle_rename (GtkWidget          *widget,$/;"	f	file:
layer_overlay_mode	paint-funcs/paint-funcs-generic.h	/^layer_overlay_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_preview_size	config/gimpcoreconfig.h	/^  GimpViewSize            layer_preview_size;$/;"	m	struct:_GimpCoreConfig
layer_previews	config/gimpcoreconfig.h	/^  gboolean                layer_previews;$/;"	m	struct:_GimpCoreConfig
layer_remove_mask_invoker	pdb/layer_cmds.c	/^layer_remove_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_replace_mode	paint-funcs/paint-funcs-generic.h	/^layer_replace_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_resize_invoker	pdb/layer_cmds.c	/^layer_resize_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_resize_to_image_size_invoker	pdb/layer_cmds.c	/^layer_resize_to_image_size_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_resize_unit	actions/layers-commands.c	/^static GimpUnit               layer_resize_unit   = GIMP_UNIT_PIXEL;$/;"	v	file:
layer_saturation_mode	paint-funcs/paint-funcs-generic.h	/^layer_saturation_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_scale_interp	actions/layers-commands.c	/^static GimpInterpolationType  layer_scale_interp  = -1;$/;"	v	file:
layer_scale_invoker	pdb/layer_cmds.c	/^layer_scale_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_scale_unit	actions/layers-commands.c	/^static GimpUnit               layer_scale_unit    = GIMP_UNIT_PIXEL;$/;"	v	file:
layer_screen_mode	paint-funcs/paint-funcs-generic.h	/^layer_screen_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_select_advance	display/gimpdisplayshell-layer-select.c	/^layer_select_advance (LayerSelect *layer_select,$/;"	f	file:
layer_select_destroy	display/gimpdisplayshell-layer-select.c	/^layer_select_destroy (LayerSelect *layer_select,$/;"	f	file:
layer_select_events	display/gimpdisplayshell-layer-select.c	/^layer_select_events (GtkWidget   *widget,$/;"	f	file:
layer_select_new	display/gimpdisplayshell-layer-select.c	/^layer_select_new (GimpImage *image,$/;"	f	file:
layer_set	dialogs/resize-dialog.c	/^  GimpItemSet         layer_set;$/;"	m	struct:__anon170	file:
layer_set_apply_mask_invoker	pdb/layer_cmds.c	/^layer_set_apply_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_set_edit_mask_invoker	pdb/layer_cmds.c	/^layer_set_edit_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_set_lock_alpha_invoker	pdb/layer_cmds.c	/^layer_set_lock_alpha_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_set_mode_invoker	pdb/layer_cmds.c	/^layer_set_mode_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_set_offsets_invoker	pdb/layer_cmds.c	/^layer_set_offsets_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_set_opacity_invoker	pdb/layer_cmds.c	/^layer_set_opacity_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_set_show_mask_invoker	pdb/layer_cmds.c	/^layer_set_show_mask_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_signals	core/gimplayer.c	/^static guint layer_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
layer_softlight_mode	paint-funcs/paint-funcs-generic.h	/^layer_softlight_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_stack	core/gimpimage.h	/^  GSList            *layer_stack;           \/*  the layers in MRU order      *\/$/;"	m	struct:_GimpImage
layer_subtract_mode	paint-funcs/paint-funcs-generic.h	/^layer_subtract_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_translate_invoker	pdb/layer_cmds.c	/^layer_translate_invoker (GimpProcedure     *procedure,$/;"	f	file:
layer_update_handler	core/gimpimage.h	/^  GQuark             layer_update_handler;$/;"	m	struct:_GimpImage
layer_value_mode	paint-funcs/paint-funcs-generic.h	/^layer_value_mode (struct apply_layer_mode_struct *alms)$/;"	f
layer_visible_handler	core/gimpimage.h	/^  GQuark             layer_visible_handler;$/;"	m	struct:_GimpImage
layers	core/gimpimage.h	/^  GimpContainer     *layers;                \/*  the list of layers           *\/$/;"	m	struct:_GimpImage
layers_actions	actions/layers-actions.c	/^static const GimpActionEntry layers_actions[] =$/;"	v	file:
layers_actions_setup	actions/layers-actions.c	/^layers_actions_setup (GimpActionGroup *group)$/;"	f
layers_actions_update	actions/layers-actions.c	/^layers_actions_update (GimpActionGroup *group,$/;"	f
layers_add_mask_response	actions/layers-commands.c	/^layers_add_mask_response (GtkWidget          *widget,$/;"	f	file:
layers_alpha_add_cmd_callback	actions/layers-commands.c	/^layers_alpha_add_cmd_callback (GtkAction *action,$/;"	f
layers_alpha_remove_cmd_callback	actions/layers-commands.c	/^layers_alpha_remove_cmd_callback (GtkAction *action,$/;"	f
layers_alpha_to_selection_actions	actions/layers-actions.c	/^static const GimpEnumActionEntry layers_alpha_to_selection_actions[] =$/;"	v	file:
layers_alpha_to_selection_cmd_callback	actions/layers-commands.c	/^layers_alpha_to_selection_cmd_callback (GtkAction *action,$/;"	f
layers_anchor_cmd_callback	actions/layers-commands.c	/^layers_anchor_cmd_callback (GtkAction *action,$/;"	f
layers_crop_cmd_callback	actions/layers-commands.c	/^layers_crop_cmd_callback (GtkAction *action,$/;"	f
layers_delete_cmd_callback	actions/layers-commands.c	/^layers_delete_cmd_callback (GtkAction *action,$/;"	f
layers_duplicate_cmd_callback	actions/layers-commands.c	/^layers_duplicate_cmd_callback (GtkAction *action,$/;"	f
layers_edit_attributes_cmd_callback	actions/layers-commands.c	/^layers_edit_attributes_cmd_callback (GtkAction *action,$/;"	f
layers_edit_layer_response	actions/layers-commands.c	/^layers_edit_layer_response (GtkWidget          *widget,$/;"	f	file:
layers_label	widgets/gimpimagepropview.h	/^  GtkWidget *layers_label;$/;"	m	struct:_GimpImagePropView
layers_lock_alpha_cmd_callback	actions/layers-commands.c	/^layers_lock_alpha_cmd_callback (GtkAction *action,$/;"	f
layers_lower_cmd_callback	actions/layers-commands.c	/^layers_lower_cmd_callback (GtkAction *action,$/;"	f
layers_lower_to_bottom_cmd_callback	actions/layers-commands.c	/^layers_lower_to_bottom_cmd_callback (GtkAction *action,$/;"	f
layers_mask_add_cmd_callback	actions/layers-commands.c	/^layers_mask_add_cmd_callback (GtkAction *action,$/;"	f
layers_mask_apply_actions	actions/layers-actions.c	/^static const GimpEnumActionEntry layers_mask_apply_actions[] =$/;"	v	file:
layers_mask_apply_cmd_callback	actions/layers-commands.c	/^layers_mask_apply_cmd_callback (GtkAction *action,$/;"	f
layers_mask_disable_cmd_callback	actions/layers-commands.c	/^layers_mask_disable_cmd_callback (GtkAction *action,$/;"	f
layers_mask_edit_cmd_callback	actions/layers-commands.c	/^layers_mask_edit_cmd_callback (GtkAction *action,$/;"	f
layers_mask_show_cmd_callback	actions/layers-commands.c	/^layers_mask_show_cmd_callback (GtkAction *action,$/;"	f
layers_mask_to_selection_actions	actions/layers-actions.c	/^static const GimpEnumActionEntry layers_mask_to_selection_actions[] =$/;"	v	file:
layers_mask_to_selection_cmd_callback	actions/layers-commands.c	/^layers_mask_to_selection_cmd_callback (GtkAction *action,$/;"	f
layers_merge_down_cmd_callback	actions/layers-commands.c	/^layers_merge_down_cmd_callback (GtkAction *action,$/;"	f
layers_mode_actions	actions/layers-actions.c	/^static const GimpEnumActionEntry layers_mode_actions[] =$/;"	v	file:
layers_mode_cmd_callback	actions/layers-commands.c	/^layers_mode_cmd_callback (GtkAction *action,$/;"	f
layers_mode_index	actions/layers-commands.c	/^layers_mode_index (GimpLayerModeEffects layer_mode)$/;"	f	file:
layers_new_cmd_callback	actions/layers-commands.c	/^layers_new_cmd_callback (GtkAction *action,$/;"	f
layers_new_last_vals_cmd_callback	actions/layers-commands.c	/^layers_new_last_vals_cmd_callback (GtkAction *action,$/;"	f
layers_new_layer_response	actions/layers-commands.c	/^layers_new_layer_response (GtkWidget          *widget,$/;"	f	file:
layers_opacity_actions	actions/layers-actions.c	/^static const GimpEnumActionEntry layers_opacity_actions[] =$/;"	v	file:
layers_opacity_cmd_callback	actions/layers-commands.c	/^layers_opacity_cmd_callback (GtkAction *action,$/;"	f
layers_raise_cmd_callback	actions/layers-commands.c	/^layers_raise_cmd_callback (GtkAction *action,$/;"	f
layers_raise_to_top_cmd_callback	actions/layers-commands.c	/^layers_raise_to_top_cmd_callback (GtkAction *action,$/;"	f
layers_resize_cmd_callback	actions/layers-commands.c	/^layers_resize_cmd_callback (GtkAction *action,$/;"	f
layers_resize_layer_callback	actions/layers-commands.c	/^layers_resize_layer_callback (GtkWidget    *dialog,$/;"	f	file:
layers_resize_to_image_cmd_callback	actions/layers-commands.c	/^layers_resize_to_image_cmd_callback (GtkAction *action,$/;"	f
layers_scale_cmd_callback	actions/layers-commands.c	/^layers_scale_cmd_callback (GtkAction *action,$/;"	f
layers_scale_layer_callback	actions/layers-commands.c	/^layers_scale_layer_callback (GtkWidget             *dialog,$/;"	f	file:
layers_select_actions	actions/layers-actions.c	/^static const GimpEnumActionEntry layers_select_actions[] =$/;"	v	file:
layers_select_cmd_callback	actions/layers-commands.c	/^layers_select_cmd_callback (GtkAction *action,$/;"	f
layers_text_along_vectors_cmd_callback	actions/layers-commands.c	/^layers_text_along_vectors_cmd_callback (GtkAction *action,$/;"	f
layers_text_discard_cmd_callback	actions/layers-commands.c	/^layers_text_discard_cmd_callback (GtkAction *action,$/;"	f
layers_text_to_selection_actions	actions/layers-actions.c	/^static const GimpEnumActionEntry layers_text_to_selection_actions[] =$/;"	v	file:
layers_text_to_vectors_cmd_callback	actions/layers-commands.c	/^layers_text_to_vectors_cmd_callback (GtkAction *action,$/;"	f
layers_text_tool_cmd_callback	actions/layers-commands.c	/^layers_text_tool_cmd_callback (GtkAction *action,$/;"	f
layers_toggle_actions	actions/layers-actions.c	/^static const GimpToggleActionEntry layers_toggle_actions[] =$/;"	v	file:
layout	dialogs/about-dialog.c	/^  PangoLayout  *layout;$/;"	m	struct:__anon168	file:
layout	display/gimpcanvas.h	/^  PangoLayout    *layout;$/;"	m	struct:_GimpCanvas
layout	text/gimptext-private.h	/^  PangoLayout    *layout;$/;"	m	struct:_GimpTextLayout
layout_col	widgets/gtkvwrapbox.c	/^layout_col (GtkWrapBox    *wbox,$/;"	f	file:
layout_cols	widgets/gtkvwrapbox.c	/^layout_cols (GtkWrapBox    *wbox,$/;"	f	file:
layout_row	widgets/gtkhwrapbox.c	/^layout_row (GtkWrapBox    *wbox,$/;"	f	file:
layout_rows	widgets/gtkhwrapbox.c	/^layout_rows (GtkWrapBox    *wbox,$/;"	f	file:
left	core/gimpgradient.h	/^  gdouble                  left, middle, right;$/;"	m	struct:_GimpGradientSegment
left	paint/gimpink-blob.h	/^  gint left;$/;"	m	struct:_BlobSpan
left	widgets/gimpviewrenderergradient.h	/^  gdouble           left;$/;"	m	struct:_GimpViewRendererGradient
left_and_right_handle_h	tools/gimprectangletool.c	/^  gint                    left_and_right_handle_h;$/;"	m	struct:_GimpRectangleToolPrivate	file:
left_color	core/gimpgradient.h	/^  GimpRGB                  left_color;$/;"	m	struct:_GimpGradientSegment
left_color_type	core/gimpgradient.h	/^  GimpGradientColor        left_color_type;$/;"	m	struct:_GimpGradientSegment
left_number_property	widgets/gimppropwidgets.c	/^  const gchar *left_number_property;$/;"	m	struct:__anon382	file:
left_saved_dirty	widgets/gimpgradienteditor.h	/^  gboolean             left_saved_dirty;$/;"	m	struct:_GimpGradientEditor
left_saved_segments	widgets/gimpgradienteditor.h	/^  GimpGradientSegment *left_saved_segments;$/;"	m	struct:_GimpGradientEditor
leftmost	tools/gimpcurvestool.h	/^  gint                  leftmost;$/;"	m	struct:_GimpCurvesTool
length	core/gimpparamspecs.h	/^  gsize     length;$/;"	m	struct:_GimpArray
length	paint-funcs/paint-funcs-generic.h	/^  guint              length;$/;"	m	struct:apply_layer_mode_struct
length_format_str	display/gimpstatusbar.h	/^  gchar             length_format_str[CURSOR_FORMAT_LENGTH];$/;"	m	struct:_GimpStatusbar
lerp	core/gimp-transform-region.c	879;"	d	file:
lerp	core/gimp-transform-region.c	905;"	d	file:
letter_spacing	text/gimptext.h	/^  gdouble                letter_spacing;$/;"	m	struct:_GimpText
letter_spacing	tools/gimptextoptions.h	/^  gdouble                letter_spacing;$/;"	m	struct:_GimpTextOptions
levels	tools/gimplevelstool.h	/^  Levels               *levels;$/;"	m	struct:_GimpLevelsTool
levels	tools/gimpposterizetool.h	/^  gint              levels;$/;"	m	struct:_GimpPosterizeTool
levels_adjust_by_colors	base/levels.c	/^levels_adjust_by_colors (Levels               *levels,$/;"	f
levels_auto_invoker	pdb/color_cmds.c	/^levels_auto_invoker (GimpProcedure     *procedure,$/;"	f	file:
levels_calculate_transfers	base/levels.c	/^levels_calculate_transfers (Levels *levels)$/;"	f
levels_channel_callback	tools/gimplevelstool.c	/^levels_channel_callback (GtkWidget      *widget,$/;"	f	file:
levels_channel_reset	base/levels.c	/^levels_channel_reset (Levels               *levels,$/;"	f
levels_channel_reset_callback	tools/gimplevelstool.c	/^levels_channel_reset_callback (GtkWidget      *widget,$/;"	f	file:
levels_channel_stretch	base/levels.c	/^levels_channel_stretch (Levels               *levels,$/;"	f
levels_data	tools/gimpposterizetool.h	/^  GtkAdjustment    *levels_data;$/;"	m	struct:_GimpPosterizeTool
levels_draw_slider	tools/gimplevelstool.c	/^levels_draw_slider (GtkWidget *widget,$/;"	f	file:
levels_gamma_adjustment_update	tools/gimplevelstool.c	/^levels_gamma_adjustment_update (GtkAdjustment  *adjustment,$/;"	f	file:
levels_high_input_adjustment_update	tools/gimplevelstool.c	/^levels_high_input_adjustment_update (GtkAdjustment  *adjustment,$/;"	f	file:
levels_high_output_adjustment_update	tools/gimplevelstool.c	/^levels_high_output_adjustment_update (GtkAdjustment  *adjustment,$/;"	f	file:
levels_init	base/levels.c	/^levels_init (Levels *levels)$/;"	f
levels_input_adjust_by_color	tools/gimplevelstool.c	/^levels_input_adjust_by_color (Levels               *levels,$/;"	f	file:
levels_input_area_event	tools/gimplevelstool.c	/^levels_input_area_event (GtkWidget      *widget,$/;"	f	file:
levels_input_area_expose	tools/gimplevelstool.c	/^levels_input_area_expose (GtkWidget      *widget,$/;"	f	file:
levels_input_from_color	base/levels.c	/^levels_input_from_color (GimpHistogramChannel  channel,$/;"	f	file:
levels_input_picker_toggled	tools/gimplevelstool.c	/^levels_input_picker_toggled (GtkWidget      *widget,$/;"	f	file:
levels_invoker	pdb/color_cmds.c	/^levels_invoker (GimpProcedure     *procedure,$/;"	f	file:
levels_low_input_adjustment_update	tools/gimplevelstool.c	/^levels_low_input_adjustment_update (GtkAdjustment  *adjustment,$/;"	f	file:
levels_low_output_adjustment_update	tools/gimplevelstool.c	/^levels_low_output_adjustment_update (GtkAdjustment  *adjustment,$/;"	f	file:
levels_lut_func	base/levels.c	/^levels_lut_func (Levels *levels,$/;"	f
levels_menu_sensitivity	tools/gimplevelstool.c	/^levels_menu_sensitivity (gint      value,$/;"	f	file:
levels_of_undo	config/gimpcoreconfig.h	/^  gint                    levels_of_undo;$/;"	m	struct:_GimpCoreConfig
levels_output_area_event	tools/gimplevelstool.c	/^levels_output_area_event (GtkWidget      *widget,$/;"	f	file:
levels_output_area_expose	tools/gimplevelstool.c	/^levels_output_area_expose (GtkWidget      *widget,$/;"	f	file:
levels_stretch	base/levels.c	/^levels_stretch (Levels        *levels,$/;"	f
levels_stretch_callback	tools/gimplevelstool.c	/^levels_stretch_callback (GtkWidget      *widget,$/;"	f	file:
levels_stretch_invoker	pdb/color_cmds.c	/^levels_stretch_invoker (GimpProcedure     *procedure,$/;"	f	file:
levels_update	tools/gimplevelstool.c	/^levels_update (GimpLevelsTool *tool,$/;"	f	file:
light_histogram	widgets/gimphistogramview.h	/^  gboolean               light_histogram;$/;"	m	struct:_GimpHistogramView
lighten_pixels	paint-funcs/paint-funcs-generic.h	/^lighten_pixels (const guchar *src1,$/;"	f
lightness	base/colorize.h	/^  gdouble lightness;$/;"	m	struct:_Colorize
lightness	base/hue-saturation.h	/^  gdouble lightness[7];$/;"	m	struct:_HueSaturation
lightness_data	tools/gimpcolorizetool.h	/^  GtkAdjustment    *lightness_data;$/;"	m	struct:_GimpColorizeTool
lightness_data	tools/gimphuesaturationtool.h	/^  GtkAdjustment    *lightness_data;$/;"	m	struct:_GimpHueSaturationTool
lightness_transfer	base/hue-saturation.h	/^  gint    lightness_transfer[6][256];$/;"	m	struct:_HueSaturation
lin_to_rgb	core/gimpimage-convert.c	/^void lin_to_rgb(const double hr, const double hg, const double hb,$/;"	f	file:
line_justify	widgets/gtkwrapbox.h	/^  guint            line_justify : 4;$/;"	m	struct:_GtkWrapBox
line_spacing	text/gimptext.h	/^  gdouble                line_spacing;$/;"	m	struct:_GimpText
line_spacing	tools/gimptextoptions.h	/^  gdouble                line_spacing;$/;"	m	struct:_GimpTextOptions
lineto	text/gimptext-vectors.c	/^lineto (const FT_Vector *to,$/;"	f	file:
linked	core/gimpitem.h	/^  gboolean          linked;             \/*  control linkage          *\/$/;"	m	struct:_GimpItem
linked	core/gimpitempropundo.h	/^  gboolean      linked;$/;"	m	struct:_GimpItemPropUndo
linked_changed	core/gimpitem.h	/^  void       (* linked_changed)     (GimpItem      *item);$/;"	m	struct:_GimpItemClass
linked_changed_handler_id	widgets/gimpitemtreeview.h	/^  GQuark                 linked_changed_handler_id;$/;"	m	struct:_GimpItemTreeView
list	core/gimplist.h	/^  GList         *list;$/;"	m	struct:_GimpList
list	dialogs/module-dialog.c	/^  GtkListStore *list;$/;"	m	struct:__anon182	file:
list_func	core/gimp-parasites.c	/^list_func (const gchar    *key,$/;"	f	file:
list_func	core/gimpimage.c	/^list_func (gchar          *key,$/;"	f	file:
list_of_procs	pdb/gimppdb-query.c	/^  gchar   **list_of_procs;$/;"	m	struct:_PDBQuery	file:
listhead	base/tile-private.h	/^  gpointer  listhead;   \/* Pointer to the head of the list this tile is on *\/$/;"	m	struct:_Tile
livewire	tools/gimpiscissorstool.h	/^  ICurve         *livewire;     \/*  livewire boundary curve               *\/$/;"	m	struct:_GimpIscissorsTool
load_button	tools/gimpimagemaptool.h	/^  GtkWidget     *load_button;$/;"	m	struct:_GimpImageMapTool
load_button_tip	tools/gimpimagemaptool.h	/^  const gchar        *load_button_tip;$/;"	m	struct:_GimpImageMapToolClass
load_dialog_title	tools/gimpimagemaptool.h	/^  const gchar        *load_dialog_title;$/;"	m	struct:_GimpImageMapToolClass
load_func	core/gimpdatafactory.h	/^  GimpDataLoadFunc  load_func;$/;"	m	struct:_GimpDataFactoryLoaderEntry
load_function_table	composite/make-installer.py	/^def load_function_table(filename):$/;"	f
load_procs	plug-in/gimppluginmanager.h	/^  GSList            *load_procs;$/;"	m	struct:_GimpPlugInManager
loader_entries	core/gimpdatafactory.h	/^  const GimpDataFactoryLoaderEntry *loader_entries;$/;"	m	struct:_GimpDataFactory
locale	dialogs/tips-parser.c	/^  const gchar           *locale;$/;"	m	struct:__anon176	file:
locale_domain	plug-in/gimppluginprocedure.h	/^  GQuark               locale_domain;$/;"	m	struct:_GimpPlugInProcedure
locale_domain_name	plug-in/gimpplugindef.h	/^  gchar      *locale_domain_name;$/;"	m	struct:_GimpPlugInDef
locale_domain_path	plug-in/gimpplugindef.h	/^  gchar      *locale_domain_path;$/;"	m	struct:_GimpPlugInDef
locale_domains	plug-in/gimppluginmanager.h	/^  GSList            *locale_domains;$/;"	m	struct:_GimpPlugInManager
locale_state	dialogs/tips-parser.c	/^  TipsParserLocaleState  locale_state;$/;"	m	struct:__anon176	file:
lock_alpha	core/gimplayer.h	/^  gboolean              lock_alpha;       \/*  lock the alpha channel     *\/$/;"	m	struct:_GimpLayer
lock_alpha	core/gimplayerpropundo.h	/^  gboolean             lock_alpha;$/;"	m	struct:_GimpLayerPropUndo
lock_alpha_changed	core/gimplayer.h	/^  void (* lock_alpha_changed) (GimpLayer *layer);$/;"	m	struct:_GimpLayerClass
lock_alpha_changed_handler_id	widgets/gimplayertreeview.h	/^  GQuark                lock_alpha_changed_handler_id;$/;"	m	struct:_GimpLayerTreeView
lock_alpha_toggle	widgets/gimplayertreeview.h	/^  GtkWidget            *lock_alpha_toggle;$/;"	m	struct:_GimpLayerTreeView
log	core/gimp-user-install.c	/^  GimpUserInstallLogFunc  log;$/;"	m	struct:_GimpUserInstall	file:
log_data	core/gimp-user-install.c	/^  gpointer                log_data;$/;"	m	struct:_GimpUserInstall	file:
low_adj	widgets/gimphistogrambox.h	/^  GtkAdjustment     *low_adj;$/;"	m	struct:_GimpHistogramBox
low_input	base/levels.h	/^  gint    low_input[5];$/;"	m	struct:_Levels
low_input	tools/gimplevelstool.h	/^  GtkAdjustment        *low_input;$/;"	m	struct:_GimpLevelsTool
low_output	base/levels.h	/^  gint    low_output[5];$/;"	m	struct:_Levels
low_output	tools/gimplevelstool.h	/^  GtkAdjustment        *low_output;$/;"	m	struct:_GimpLevelsTool
low_slider_val	widgets/gimphistogrambox.h	/^  gint              low_slider_val;$/;"	m	struct:_GimpHistogramBox
low_threshold	base/threshold.h	/^  gint     low_threshold;$/;"	m	struct:_Threshold
lower	gui/splash.c	/^  PangoLayout    *lower;$/;"	m	struct:__anon201	file:
lower_action	widgets/gimpitemtreeview.h	/^  const gchar          *lower_action;$/;"	m	struct:_GimpItemTreeViewClass
lower_bottom_action	widgets/gimpitemtreeview.h	/^  const gchar          *lower_bottom_action;$/;"	m	struct:_GimpItemTreeViewClass
lower_button	widgets/gimpitemtreeview.h	/^  GtkWidget             *lower_button;$/;"	m	struct:_GimpItemTreeView
lower_button	widgets/gimptoolview.h	/^  GtkWidget           *lower_button;$/;"	m	struct:_GimpToolView
lower_x	gui/splash.c	/^  gint            lower_x;$/;"	m	struct:__anon201	file:
lower_y	gui/splash.c	/^  gint            lower_y;$/;"	m	struct:__anon201	file:
lum_blue_lookup	base/colorize.h	/^  gint    lum_blue_lookup[256];$/;"	m	struct:_Colorize
lum_green_lookup	base/colorize.h	/^  gint    lum_green_lookup[256];$/;"	m	struct:_Colorize
lum_red_lookup	base/colorize.h	/^  gint    lum_red_lookup[256];$/;"	m	struct:_Colorize
lut	paint/gimpdodgeburn.h	/^  GimpLut       *lut;$/;"	m	struct:_GimpDodgeBurn
lut	tools/gimpbrightnesscontrasttool.h	/^  GimpLut          *lut;$/;"	m	struct:_GimpBrightnessContrastTool
lut	tools/gimpcurvestool.h	/^  GimpLut              *lut;$/;"	m	struct:_GimpCurvesTool
lut	tools/gimplevelstool.h	/^  GimpLut              *lut;$/;"	m	struct:_GimpLevelsTool
lut	tools/gimpposterizetool.h	/^  GimpLut          *lut;$/;"	m	struct:_GimpPosterizeTool
luts	base/gimplut.h	/^  guchar **luts;$/;"	m	struct:_GimpLut
lxn	base/cpercep.c	/^static const double lxn = 0.312713F;$/;"	v	file:
lyn	base/cpercep.c	/^static const double lyn = 0.329016F;$/;"	v	file:
magenta_green	base/color-balance.h	/^  gdouble  magenta_green[3];$/;"	m	struct:_ColorBalance
magenta_green_adj	tools/gimpcolorbalancetool.h	/^  GtkAdjustment    *magenta_green_adj;$/;"	m	struct:_GimpColorBalanceTool
magic	plug-in/gimpinterpreterdb.c	/^  gchar    *magic;$/;"	m	struct:_GimpInterpreterMagic	file:
magic_names	plug-in/gimpinterpreterdb.h	/^  GHashTable *magic_names;$/;"	m	struct:_GimpInterpreterDB
magic_number	core/gimpbrush-header.h	/^  guint32   magic_number; \/*  GIMP brush magic number  *\/$/;"	m	struct:_BrushHeader
magic_number	core/gimppattern-header.h	/^  guint32   magic_number; \/*  GIMP pattern magic number  *\/$/;"	m	struct:_PatternHeader
magics	plug-in/gimpinterpreterdb.h	/^  GSList     *magics;$/;"	m	struct:_GimpInterpreterDB
magics	plug-in/gimppluginprocedure.h	/^  gchar               *magics;$/;"	m	struct:_GimpPlugInProcedure
magics_list	plug-in/gimppluginprocedure.h	/^  GSList              *magics_list;$/;"	m	struct:_GimpPlugInProcedure
main	composite/gimp-composite-3dnow-test.c	/^main (int argc, char *argv[])$/;"	f
main	composite/gimp-composite-altivec-test.c	/^main (int argc, char *argv[])$/;"	f
main	composite/gimp-composite-mmx-test.c	/^main (int argc, char *argv[])$/;"	f
main	composite/gimp-composite-sse-test.c	/^main (int argc, char *argv[])$/;"	f
main	composite/gimp-composite-sse2-test.c	/^main (int argc, char *argv[])$/;"	f
main	composite/gimp-composite-test.c	/^main(int argc, char *argv[])$/;"	f
main	composite/gimp-composite-vis-test.c	/^main (int argc, char *argv[])$/;"	f
main	composite/ns.py	/^def main(argv):$/;"	f
main	config/test-config.c	/^main (int   argc,$/;"	f
main	main.c	/^main (int    argc,$/;"	f
main_brush	paint/gimpbrushcore.h	/^  GimpBrush     *main_brush;$/;"	m	struct:_GimpBrushCore
main_column	widgets/gimpcontainertreeview.h	/^  GtkTreeViewColumn *main_column;$/;"	m	struct:_GimpContainerTreeView
main_context	plug-in/gimppluginprocframe.h	/^  GimpContext   *main_context;$/;"	m	struct:_GimpPlugInProcFrame
main_entries	main.c	/^static const GOptionEntry main_entries[] =$/;"	v	file:
main_loop	plug-in/gimppluginprocframe.h	/^  GMainLoop     *main_loop;$/;"	m	struct:_GimpPlugInProcFrame
main_proc_frame	plug-in/gimpplugin.h	/^  GimpPlugInProcFrame  main_proc_frame;$/;"	m	struct:_GimpPlugIn
main_vbox	tools/gimpimagemaptool.h	/^  GtkWidget     *main_vbox;$/;"	m	struct:_GimpImageMapTool
main_vbox	widgets/gimpdock.h	/^  GtkWidget         *main_vbox;$/;"	m	struct:_GimpDock
make_bezier	vectors/gimpstroke.h	/^  GimpStroke  * (* make_bezier)          (const GimpStroke      *stroke);$/;"	m	struct:_GimpStrokeClass
make_bezier	vectors/gimpvectors.h	/^  GimpVectors * (* make_bezier)       (const GimpVectors *vectors);$/;"	m	struct:_GimpVectorsClass
make_curve	paint-funcs/paint-funcs.c	/^make_curve (gdouble  sigma_square,$/;"	f	file:
make_depend	composite/ns.py	/^def make_depend(objects):$/;"	f
make_horiz_segs	base/boundary.c	/^make_horiz_segs (Boundary *boundary,$/;"	f	file:
make_list_item	dialogs/module-dialog.c	/^make_list_item (gpointer data,$/;"	f	file:
make_remap_table	core/gimpimage-convert.c	/^make_remap_table (const unsigned char  old_palette[],$/;"	f	file:
man_page_footer	config/gimpconfig-dump.c	/^static const gchar man_page_footer[] =$/;"	v	file:
man_page_header	config/gimpconfig-dump.c	/^static const gchar man_page_header[] =$/;"	v	file:
man_page_path	config/gimpconfig-dump.c	/^static const gchar *man_page_path =$/;"	v	file:
managed_uis	widgets/gimpmenufactory.h	/^  GList *managed_uis;$/;"	m	struct:_GimpMenuFactoryEntry
manager	plug-in/gimpplugin.h	/^  GimpPlugInManager   *manager;$/;"	m	struct:_GimpPlugIn
manager	widgets/gimpactionview.c	/^  GimpUIManager   *manager;$/;"	m	struct:__anon373	file:
manager	widgets/gimpactionview.h	/^  GimpUIManager *manager;$/;"	m	struct:_GimpActionView
manager_signals	plug-in/gimppluginmanager.c	/^static guint manager_signals[LAST_SIGNAL] = { 0, };$/;"	v	file:
manager_signals	widgets/gimpuimanager.c	/^static guint manager_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
managers	widgets/gimpuimanager.h	/^  GHashTable        *managers;$/;"	m	struct:_GimpUIManagerClass
map	tools/gimpimagemaptool.h	/^  void     (* map)           (GimpImageMapTool  *image_map_tool);$/;"	m	struct:_GimpImageMapToolClass
mapping	widgets/gimpcontrollerinfo.h	/^  GHashTable                 *mapping;$/;"	m	struct:_GimpControllerInfo
mapping_compare	core/gimpimage-convert.c	/^mapping_compare (const void *a, const void *b)$/;"	f	file:
marching_ants_speed	config/gimpdisplayconfig.h	/^  gint                marching_ants_speed;$/;"	m	struct:_GimpDisplayConfig
marker_changed	widgets/gimpnavigationview.h	/^  void (* marker_changed) (GimpNavigationView *view,$/;"	m	struct:_GimpNavigationViewClass
markup_depth	dialogs/tips-parser.c	/^  gint                   markup_depth;$/;"	m	struct:__anon176	file:
markup_parser	core/gimpgradient-load.c	/^static const GMarkupParser markup_parser =$/;"	v	file:
markup_parser	dialogs/tips-parser.c	/^static const GMarkupParser markup_parser =$/;"	v	file:
markup_parser	file/gimprecentlist.c	/^static const GMarkupParser markup_parser =$/;"	v	file:
markup_parser	vectors/gimpvectors-import.c	/^static const GMarkupParser markup_parser =$/;"	v	file:
marshal_func	pdb/gimpprocedure.h	/^  GimpMarshalFunc   marshal_func;   \/* Marshaller for internal procs  *\/$/;"	m	struct:_GimpProcedure
mask	core/gimpbrush.h	/^  TempBuf      *mask;       \/*  the actual mask                *\/$/;"	m	struct:_GimpBrush
mask	core/gimplayer.h	/^  GimpLayerMask        *mask;             \/*  possible layer mask        *\/$/;"	m	struct:_GimpLayer
mask	core/gimppattern.h	/^  TempBuf  *mask;$/;"	m	struct:_GimpPattern
mask	display/gimpdisplayshell.h	/^  GimpDrawable     *mask;$/;"	m	struct:_GimpDisplayShell
mask	paint-funcs/paint-funcs-generic.h	/^  const guchar      *mask;$/;"	m	struct:apply_layer_mode_struct
mask	plug-in/gimpinterpreterdb.c	/^  gchar    *mask;$/;"	m	struct:_GimpInterpreterMagic	file:
mask	tools/gimpforegroundselecttool.h	/^  GimpChannel        *mask;$/;"	m	struct:_GimpForegroundSelectTool
mask	tools/gimpiscissorstool.h	/^  GimpChannel    *mask;         \/*  selection mask                        *\/$/;"	m	struct:_GimpIscissorsTool
mask	widgets/gimpcursor.c	/^  GdkBitmap    *mask;$/;"	m	struct:_GimpCursor	file:
mask_bits	widgets/gimpcursor.c	/^  const guchar *mask_bits;$/;"	m	struct:_GimpCursor	file:
mask_cell	widgets/gimplayertreeview.h	/^  GtkCellRenderer      *mask_cell;$/;"	m	struct:_GimpLayerTreeView
mask_changed	core/gimpimage.h	/^  gboolean mask_changed;$/;"	m	struct:_GimpImageFlushAccumulator
mask_changed	core/gimpimage.h	/^  void (* mask_changed)                 (GimpImage            *image);$/;"	m	struct:_GimpImageClass
mask_changed	core/gimplayer.h	/^  void (* mask_changed)       (GimpLayer *layer);$/;"	m	struct:_GimpLayerClass
mask_changed_handler_id	widgets/gimplayertreeview.h	/^  GQuark                mask_changed_handler_id;$/;"	m	struct:_GimpLayerTreeView
mask_color	display/gimpdisplayshell.h	/^  GimpChannelType   mask_color;$/;"	m	struct:_GimpDisplayShell
mask_color	tools/gimpforegroundselectoptions.h	/^  GimpChannelType       mask_color;$/;"	m	struct:_GimpForegroundSelectOptions
match_strings	pdb/gimppdb-query.c	/^match_strings (regex_t     *preg,$/;"	f	file:
match_strings	plug-in/gimppluginmanager-query.c	/^match_strings (regex_t *preg,$/;"	f	file:
matrix	paint/gimpconvolve.h	/^  gfloat         matrix[9];$/;"	m	struct:_GimpConvolve
matrix_divisor	paint/gimpconvolve.h	/^  gfloat         matrix_divisor;$/;"	m	struct:_GimpConvolve
max_cache_size	base/tile-cache.c	/^static gulong        max_cache_size  = 0;$/;"	v	file:
max_child_height	widgets/gtkhwrapbox.h	/^  guint      max_child_height;$/;"	m	struct:_GtkHWrapBox
max_child_height	widgets/gtkvwrapbox.h	/^  guint      max_child_height;$/;"	m	struct:_GtkVWrapBox
max_child_width	widgets/gtkhwrapbox.h	/^  guint      max_child_width;$/;"	m	struct:_GtkHWrapBox
max_child_width	widgets/gtkvwrapbox.h	/^  guint      max_child_width;$/;"	m	struct:_GtkVWrapBox
max_empty_segs	base/boundary.c	/^  gint      max_empty_segs;$/;"	m	struct:_Boundary	file:
max_new_image_size	config/gimpguiconfig.h	/^  guint64              max_new_image_size;$/;"	m	struct:_GimpGuiConfig
max_segs	base/boundary.c	/^  gint      max_segs;$/;"	m	struct:_Boundary	file:
max_segs	tools/gimpfreeselecttool.h	/^  gint               max_segs;$/;"	m	struct:_GimpFreeSelectTool
max_tile_size	base/tile-cache.c	/^static const gulong  max_tile_size   = TILE_WIDTH * TILE_HEIGHT * 4;$/;"	v	file:
maxgrad_conv0	tools/gimpiscissorstool.c	/^static guchar  maxgrad_conv0[TILE_WIDTH * TILE_HEIGHT * 4] = "";$/;"	v	file:
maxgrad_conv1	tools/gimpiscissorstool.c	/^static guchar  maxgrad_conv1[TILE_WIDTH * TILE_HEIGHT * 4] = "";$/;"	v	file:
maxgrad_conv2	tools/gimpiscissorstool.c	/^static guchar  maxgrad_conv2[TILE_WIDTH * TILE_HEIGHT * 4] = "";$/;"	v	file:
median_cut_gray	core/gimpimage-convert.c	/^median_cut_gray (CFHistogram histogram,$/;"	f	file:
median_cut_pass1_gray	core/gimpimage-convert.c	/^median_cut_pass1_gray (QuantizeObj *quantobj)$/;"	f	file:
median_cut_pass1_rgb	core/gimpimage-convert.c	/^median_cut_pass1_rgb (QuantizeObj *quantobj)$/;"	f	file:
median_cut_pass2_fixed_dither_gray	core/gimpimage-convert.c	/^median_cut_pass2_fixed_dither_gray (QuantizeObj *quantobj,$/;"	f	file:
median_cut_pass2_fixed_dither_rgb	core/gimpimage-convert.c	/^median_cut_pass2_fixed_dither_rgb (QuantizeObj *quantobj,$/;"	f	file:
median_cut_pass2_fs_dither_gray	core/gimpimage-convert.c	/^median_cut_pass2_fs_dither_gray (QuantizeObj *quantobj,$/;"	f	file:
median_cut_pass2_fs_dither_rgb	core/gimpimage-convert.c	/^median_cut_pass2_fs_dither_rgb (QuantizeObj *quantobj,$/;"	f	file:
median_cut_pass2_gray_init	core/gimpimage-convert.c	/^median_cut_pass2_gray_init (QuantizeObj *quantobj)$/;"	f	file:
median_cut_pass2_no_dither_gray	core/gimpimage-convert.c	/^median_cut_pass2_no_dither_gray (QuantizeObj *quantobj,$/;"	f	file:
median_cut_pass2_no_dither_rgb	core/gimpimage-convert.c	/^median_cut_pass2_no_dither_rgb (QuantizeObj *quantobj,$/;"	f	file:
median_cut_pass2_nodestruct_dither_rgb	core/gimpimage-convert.c	/^median_cut_pass2_nodestruct_dither_rgb (QuantizeObj *quantobj,$/;"	f	file:
median_cut_pass2_rgb_init	core/gimpimage-convert.c	/^median_cut_pass2_rgb_init (QuantizeObj *quantobj)$/;"	f	file:
median_cut_rgb	core/gimpimage-convert.c	/^median_cut_rgb (CFHistogram   histogram,$/;"	f	file:
memsize	core/gimp-utils.c	/^  gint64          memsize;$/;"	m	struct:__anon112	file:
memsize_label	widgets/gimpimagepropview.h	/^  GtkWidget *memsize_label;$/;"	m	struct:_GimpImagePropView
memsize_label	widgets/gimptemplateeditor.h	/^  GtkWidget     *memsize_label;$/;"	m	struct:_GimpTemplateEditor
menu	widgets/gimpcolorframe.h	/^  GtkWidget          *menu;$/;"	m	struct:_GimpColorFrame
menu	widgets/gimphistogrameditor.h	/^  GtkWidget            *menu;$/;"	m	struct:_GimpHistogramEditor
menu_accel	core/gimptoolinfo.h	/^  gchar               *menu_accel;$/;"	m	struct:_GimpToolInfo
menu_bar	widgets/gimptoolbox.h	/^  GtkWidget     *menu_bar;$/;"	m	struct:_GimpToolbox
menu_branch_added	plug-in/gimppluginmanager.h	/^  void (* menu_branch_added) (GimpPlugInManager *manager,$/;"	m	struct:_GimpPlugInManagerClass
menu_branches	plug-in/gimppluginmanager.h	/^  GSList            *menu_branches;$/;"	m	struct:_GimpPlugInManager
menu_button	widgets/gimpdockable.h	/^  GtkWidget    *menu_button;$/;"	m	struct:_GimpDockable
menu_factory	widgets/gimpdialogfactory.h	/^  GimpMenuFactory       *menu_factory;$/;"	m	struct:_GimpDialogFactory
menu_factory	widgets/gimpeditor.h	/^  GimpMenuFactory *menu_factory;$/;"	m	struct:_GimpEditor
menu_factory	widgets/gimppdbdialog.h	/^  GimpMenuFactory *menu_factory;$/;"	m	struct:_GimpPdbDialog
menu_identifier	widgets/gimpeditor.h	/^  gchar           *menu_identifier;$/;"	m	struct:_GimpEditor
menu_label	plug-in/gimppluginmanager-menu-branch.h	/^  gchar *menu_label;$/;"	m	struct:_GimpPlugInMenuBranch
menu_label	plug-in/gimppluginprocedure.h	/^  gchar               *menu_label;$/;"	m	struct:_GimpPlugInProcedure
menu_mnemonics	config/gimpguiconfig.h	/^  gboolean             menu_mnemonics;$/;"	m	struct:_GimpGuiConfig
menu_path	core/gimptoolinfo.h	/^  gchar               *menu_path;$/;"	m	struct:_GimpToolInfo
menu_path	menus/plug-in-menus.c	/^  const gchar         *menu_path;$/;"	m	struct:_PlugInMenuEntry	file:
menu_path	plug-in/gimppluginmanager-menu-branch.h	/^  gchar *menu_path;$/;"	m	struct:_GimpPlugInMenuBranch
menu_path_added	plug-in/gimppluginprocedure.h	/^  void          (* menu_path_added) (GimpPlugInProcedure       *procedure,$/;"	m	struct:_GimpPlugInProcedureClass
menu_paths	plug-in/gimppluginprocedure.h	/^  GList               *menu_paths;$/;"	m	struct:_GimpPlugInProcedure
menu_pos_free	widgets/gimpuimanager.c	/^menu_pos_free (MenuPos *pos)$/;"	f	file:
menubar	display/gimpdisplayshell.h	/^  GtkWidget        *menubar;           \/*  menubar                            *\/$/;"	m	struct:_GimpDisplayShell
menubar_manager	display/gimpdisplayshell.h	/^  GimpUIManager    *menubar_manager;$/;"	m	struct:_GimpDisplayShell
menurc_deleted	menus/menus.c	/^static gboolean   menurc_deleted      = FALSE;$/;"	v	file:
menus_can_change_accels	menus/menus.c	/^menus_can_change_accels (GimpGuiConfig *config)$/;"	f	file:
menus_clear	menus/menus.c	/^menus_clear (Gimp    *gimp,$/;"	f
menus_exit	menus/menus.c	/^menus_exit (Gimp *gimp)$/;"	f
menus_init	menus/menus.c	/^menus_init (Gimp              *gimp,$/;"	f
menus_remove	menus/menus.c	/^menus_remove (Gimp *gimp)$/;"	f
menus_remove_accels	menus/menus.c	/^menus_remove_accels (gpointer        data,$/;"	f	file:
menus_restore	menus/menus.c	/^menus_restore (Gimp *gimp)$/;"	f
menus_save	menus/menus.c	/^menus_save (Gimp     *gimp,$/;"	f
merge_function_tables	composite/make-installer.py	/^def merge_function_tables(tables):$/;"	f
merge_id	widgets/gimpuimanager.h	/^  guint                   merge_id;$/;"	m	struct:_GimpUIManagerUIEntry
merge_type	dialogs/image-merge-layers-dialog.h	/^  GimpMergeType  merge_type;$/;"	m	struct:_ImageMergeLayersDialog
merge_vectors	dialogs/vectors-import-dialog.h	/^  gboolean    merge_vectors;$/;"	m	struct:_VectorsImportDialog
message	core/gimpprogress.h	/^  gboolean       (* message)    (GimpProgress        *progress,$/;"	m	struct:_GimpProgressInterface
message_get_handler_invoker	pdb/message_cmds.c	/^message_get_handler_invoker (GimpProcedure     *procedure,$/;"	f	file:
message_handler	core/gimp.h	/^  GimpMessageHandlerType  message_handler;$/;"	m	struct:_Gimp
message_invoker	pdb/message_cmds.c	/^message_invoker (GimpProcedure     *procedure,$/;"	f	file:
message_set_handler_invoker	pdb/message_cmds.c	/^message_set_handler_invoker (GimpProcedure     *procedure,$/;"	f	file:
messages	display/gimpstatusbar.h	/^  GSList           *messages;$/;"	m	struct:_GimpStatusbar
meta_extensions	widgets/gimpfileprocview.h	/^  GList             *meta_extensions;$/;"	m	struct:_GimpFileProcView
method	core/gimpstrokedesc.h	/^  GimpStrokeMethod   method;$/;"	m	struct:_GimpStrokeDesc
mevent	display/gimpdisplayshell-autoscroll.c	/^  GdkEventMotion  *mevent;$/;"	m	struct:__anon189	file:
mgr	base/pixel-surround.c	/^  TileManager *mgr;        \/*  tile manager to access tiles from    *\/$/;"	m	struct:_PixelSurround	file:
middle	core/gimpgradient.h	/^  gdouble                  left, middle, right;$/;"	m	struct:_GimpGradientSegment
midtones_add	base/color-balance.c	/^static gdouble  midtones_add[256]   = { 0 };$/;"	v	file:
midtones_sub	base/color-balance.c	/^static gdouble  midtones_sub[256]   = { 0 };$/;"	v	file:
migrate	core/gimp-user-install.c	/^  const gchar            *migrate;$/;"	m	struct:_GimpUserInstall	file:
mime_type	core/gimpdata.h	/^  GQuark        mime_type;$/;"	m	struct:_GimpData
mime_type	core/gimpimagefile.h	/^  gchar              *mime_type;$/;"	m	struct:_GimpImagefile
mime_type	file/gimprecentitem.c	/^  gchar    *mime_type;$/;"	m	struct:_GimpRecentItem	file:
mime_type	plug-in/gimppluginprocedure.h	/^  gchar               *mime_type;$/;"	m	struct:_GimpPlugInProcedure
min_colors	config/gimpcoreconfig.h	/^  gint                    min_colors;$/;"	m	struct:_GimpCoreConfig
min_size	widgets/gtkhwrapbox.c	/^  guint16  min_size;$/;"	m	struct:_Line	file:
min_size	widgets/gtkvwrapbox.c	/^  guint16  min_size;$/;"	m	struct:_Line	file:
misc	core/gimpbrush-load.c	/^  gint32   misc;$/;"	m	struct:_AbrSampledBrushHeader	file:
miter_limit	core/gimpstrokeoptions.h	/^  gdouble          miter_limit;$/;"	m	struct:_GimpStrokeOptions
mix_colors	dialogs/about-dialog.c	/^mix_colors (const GdkColor *start,$/;"	f	file:
mix_pixels	display/gimpdisplayshell-render.c	/^mix_pixels (gint          dx,$/;"	f	file:
mmx_high_bytes_to_words	composite/gimp-composite-x86.h	31;"	d
mmx_int_mult	composite/gimp-composite-x86.h	44;"	d
mmx_low_bytes_to_words	composite/gimp-composite-x86.h	24;"	d
mnemonics	widgets/gimpactionfactory.h	/^  gboolean    mnemonics;$/;"	m	struct:_GimpActionFactory
mnemonics	widgets/gimpactiongroup.h	/^  gboolean                   mnemonics;$/;"	m	struct:_GimpActionGroup
mod_mask	widgets/gimpeditor.c	/^  GdkModifierType  mod_mask;$/;"	m	struct:__anon346	file:
mode	composite/gimp-composite-generic-installer.c	/^  GimpCompositeOperation mode;$/;"	m	struct:install_table	file:
mode	composite/gimp-composite-mmx-installer.c	/^  GimpCompositeOperation mode;$/;"	m	struct:install_table	file:
mode	composite/gimp-composite-sse-installer.c	/^  GimpCompositeOperation mode;$/;"	m	struct:install_table	file:
mode	composite/gimp-composite-sse2-installer.c	/^  GimpCompositeOperation mode;$/;"	m	struct:install_table	file:
mode	core/gimplayer.h	/^  GimpLayerModeEffects  mode;             \/*  layer combination mode     *\/$/;"	m	struct:_GimpLayer
mode	core/gimplayerpropundo.h	/^  GimpLayerModeEffects mode;$/;"	m	struct:_GimpLayerPropUndo
mode	dialogs/desaturate-dialog.h	/^  GimpDesaturateMode  mode;$/;"	m	struct:_DesaturateDialog
mode	paint-funcs/paint-funcs.c	/^  GimpLayerModeEffects  mode;$/;"	m	struct:combine_regions_struct	file:
mode	paint-funcs/paint-funcs.c	/^  GimpLayerModeEffects  mode;$/;"	m	struct:initial_regions_struct	file:
mode	paint/gimpdodgeburnoptions.h	/^  GimpTransferMode   mode;     \/*highlights, midtones, shadows*\/$/;"	m	struct:_GimpDodgeBurnOptions
mode	widgets/gimpdeviceinfo.h	/^  GdkInputMode   mode;$/;"	m	struct:_GimpDeviceInfo
mode_changed	core/gimpimage.h	/^  void (* mode_changed)                 (GimpImage            *image);$/;"	m	struct:_GimpImageClass
mode_changed	core/gimplayer.h	/^  void (* mode_changed)       (GimpLayer *layer);$/;"	m	struct:_GimpLayerClass
mode_changed	core/gimpundo.h	/^  gboolean mode_changed;$/;"	m	struct:_GimpUndoAccumulator
mode_changed_handler_id	widgets/gimplayertreeview.h	/^  GQuark                mode_changed_handler_id;$/;"	m	struct:_GimpLayerTreeView
mode_name	composite/make-installer.py	/^def mode_name(mode):$/;"	f
model	display/gimpdisplayshell-scale.c	/^  GimpZoomModel    *model;$/;"	m	struct:__anon190	file:
model	widgets/gimpcomponenteditor.h	/^  GtkTreeModel      *model;$/;"	m	struct:_GimpComponentEditor
model	widgets/gimpcontainertreeview.h	/^  GtkTreeModel      *model;$/;"	m	struct:_GimpContainerTreeView
model_column_linked	widgets/gimpitemtreeview.h	/^  gint                   model_column_linked;$/;"	m	struct:_GimpItemTreeView
model_column_mask	widgets/gimplayertreeview.h	/^  gint                  model_column_mask;$/;"	m	struct:_GimpLayerTreeView
model_column_mask_visible	widgets/gimplayertreeview.h	/^  gint                  model_column_mask_visible;$/;"	m	struct:_GimpLayerTreeView
model_column_name	widgets/gimpcontainertreeview.h	/^  gint               model_column_name;$/;"	m	struct:_GimpContainerTreeView
model_column_name_attributes	widgets/gimpcontainertreeview.h	/^  gint               model_column_name_attributes;$/;"	m	struct:_GimpContainerTreeView
model_column_renderer	widgets/gimpcontainertreeview.h	/^  gint               model_column_renderer;$/;"	m	struct:_GimpContainerTreeView
model_column_visible	widgets/gimpitemtreeview.h	/^  gint                   model_column_visible;$/;"	m	struct:_GimpItemTreeView
model_columns	widgets/gimpcontainertreeview.h	/^  GType              model_columns[16];$/;"	m	struct:_GimpContainerTreeView
modified	text/gimptextlayer.h	/^  gboolean      modified;$/;"	m	struct:_GimpTextLayer
modified	text/gimptextundo.h	/^  gboolean          modified;$/;"	m	struct:_GimpTextUndo
modifier_key	tools/gimptool.h	/^  void          (* modifier_key)        (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
modifier_lock	tools/gimpvectortool.h	/^  gboolean              modifier_lock;  \/* can we toggle the Shift key?      *\/$/;"	m	struct:_GimpVectorTool
modifier_state	tools/gimptool.h	/^  GdkModifierType  modifier_state;$/;"	m	struct:_GimpTool
modifiers	widgets/gimpcontrollerkeyboard.c	/^  const GdkModifierType  modifiers;$/;"	m	struct:_KeyboardEvent	file:
modifiers	widgets/gimpcontrollerwheel.c	/^  const GdkModifierType     modifiers;$/;"	m	struct:_WheelEvent	file:
module_db	core/gimp.h	/^  GimpModuleDB           *module_db;$/;"	m	struct:_Gimp
module_dialog_new	dialogs/module-dialog.c	/^module_dialog_new (Gimp *gimp)$/;"	f
module_path	config/gimpcoreconfig.h	/^  gchar                  *module_path;$/;"	m	struct:_GimpCoreConfig
monitor_res_from_gdk	config/gimpdisplayconfig.h	/^  gboolean            monitor_res_from_gdk;$/;"	m	struct:_GimpDisplayConfig
monitor_xres	config/gimpdisplayconfig.h	/^  gdouble             monitor_xres;$/;"	m	struct:_GimpDisplayConfig
monitor_xres	display/gimpdisplayshell.h	/^  gdouble           monitor_xres;$/;"	m	struct:_GimpDisplayShell
monitor_yres	config/gimpdisplayconfig.h	/^  gdouble             monitor_yres;$/;"	m	struct:_GimpDisplayConfig
monitor_yres	display/gimpdisplayshell.h	/^  gdouble           monitor_yres;$/;"	m	struct:_GimpDisplayShell
monopal_pass1	core/gimpimage-convert.c	/^monopal_pass1 (QuantizeObj *quantobj)$/;"	f	file:
more_label	widgets/gimptemplateeditor.h	/^  GtkWidget     *more_label;$/;"	m	struct:_GimpTemplateEditor
motion	paint/gimpsourcecore.h	/^  void     (*  motion)    (GimpSourceCore   *source_core,$/;"	m	struct:_GimpSourceCoreClass
motion	tools/gimptool.h	/^  void          (* motion)              (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
motion	tools/gimptransformtool.h	/^  void          (* motion)        (GimpTransformTool *tool,$/;"	m	struct:_GimpTransformToolClass
motion_mode	tools/gimptoolcontrol.h	/^  GimpMotionMode     motion_mode;        \/*  how to process motion events    *$/;"	m	struct:_GimpToolControl
motion_offset_x	widgets/gimpnavigationview.h	/^  gint         motion_offset_x;$/;"	m	struct:_GimpNavigationView
motion_offset_y	widgets/gimpnavigationview.h	/^  gint         motion_offset_y;$/;"	m	struct:_GimpNavigationView
mouse_over_curve	tools/gimpiscissorstool.c	/^mouse_over_curve (GimpIscissorsTool *iscissors,$/;"	f	file:
mouse_over_vertex	tools/gimpiscissorstool.c	/^mouse_over_vertex (GimpIscissorsTool *iscissors,$/;"	f	file:
mouse_x	tools/gimpblendtool.h	/^  gdouble       mouse_x;    \/*  pointer x coord   *\/$/;"	m	struct:_GimpBlendTool
mouse_x	tools/gimpmeasuretool.h	/^  gdouble          mouse_x;     \/*  pointer x coordinate       *\/$/;"	m	struct:_GimpMeasureTool
mouse_y	tools/gimpblendtool.h	/^  gdouble       mouse_y;    \/*  pointer y coord   *\/$/;"	m	struct:_GimpBlendTool
mouse_y	tools/gimpmeasuretool.h	/^  gdouble          mouse_y;     \/*  pointer y coordinate       *\/$/;"	m	struct:_GimpMeasureTool
move	tools/gimpiscissorstool.c	/^static const gint move[8][2] =$/;"	v	file:
move_current	tools/gimpmoveoptions.h	/^  gboolean           move_current;$/;"	m	struct:_GimpMoveOptions
move_cursor	widgets/gimpcontainergridview.h	/^  gboolean (* move_cursor) (GimpContainerGridView *grid_view,$/;"	m	struct:_GimpContainerGridViewClass
move_tool_changes_active	config/gimpguiconfig.h	/^  gboolean             move_tool_changes_active;$/;"	m	struct:_GimpGuiConfig
move_type	tools/gimpmoveoptions.h	/^  GimpTransformType  move_type;$/;"	m	struct:_GimpMoveOptions
moveto	text/gimptext-vectors.c	/^moveto (const FT_Vector *to,$/;"	f	file:
moving_guide	tools/gimpmovetool.h	/^  gboolean             moving_guide;$/;"	m	struct:_GimpMoveTool
moving_sample_point	tools/gimpcolortool.h	/^  gboolean           moving_sample_point;$/;"	m	struct:_GimpColorTool
mru	display/gimpscalecombobox.h	/^  GList            *mru;$/;"	m	struct:_GimpScaleComboBox
mtime	core/gimpdata.h	/^  time_t        mtime;$/;"	m	struct:_GimpData
mtime	plug-in/gimpplugindef.h	/^  time_t      mtime;$/;"	m	struct:_GimpPlugInDef
mtime	plug-in/gimppluginprocedure.h	/^  time_t               mtime;$/;"	m	struct:_GimpPlugInProcedure
multiply_alpha_region	paint-funcs/paint-funcs.c	/^multiply_alpha_region (PixelRegion *srcR)$/;"	f
multiply_pixels	paint-funcs/paint-funcs-generic.h	/^multiply_pixels (const guchar *src1,$/;"	f
mustkeep	base/siox.c	/^  gboolean mustkeep;$/;"	m	struct:blob	file:
mutex	base/gimphistogram.c	/^  GStaticMutex   mutex;$/;"	m	struct:_GimpHistogram	file:
mutex	base/pixel-processor.c	/^  GMutex              *mutex;$/;"	m	struct:_PixelProcessor	file:
my_read	plug-in/gimpplugin.h	/^  GIOChannel          *my_read;         \/*  App's read and write channels     *\/$/;"	m	struct:_GimpPlugIn
my_write	plug-in/gimpplugin.h	/^  GIOChannel          *my_write;$/;"	m	struct:_GimpPlugIn
n_authors	dialogs/about-dialog.c	/^  gint          n_authors;$/;"	m	struct:__anon168	file:
n_brush_bound_segs	paint/gimpbrushcore.h	/^  gint           n_brush_bound_segs;$/;"	m	struct:_GimpBrushCore
n_channels	base/gimphistogram.c	/^  gint           n_channels;$/;"	m	struct:_GimpHistogram	file:
n_children	widgets/gtkwrapbox.h	/^  guint16          n_children;$/;"	m	struct:_GtkWrapBox
n_colors	core/gimppalette.h	/^  gint      n_colors;$/;"	m	struct:_GimpPalette
n_columns	core/gimppalette.h	/^  gint      n_columns;$/;"	m	struct:_GimpPalette
n_dialogs_dockable_actions	actions/dialogs-actions.c	/^gint n_dialogs_dockable_actions = G_N_ELEMENTS (dialogs_dockable_actions);$/;"	v
n_layers	core/gimpimage-convert.c	/^  gint          n_layers;$/;"	m	struct:_QuantizeObj	file:
n_loader_entries	core/gimpdatafactory.h	/^  gint                              n_loader_entries;$/;"	m	struct:_GimpDataFactory
n_model_columns	widgets/gimpcontainertreeview.h	/^  gint               n_model_columns;$/;"	m	struct:_GimpContainerTreeView
n_pixels	composite/gimp-composite.h	/^  gulong           n_pixels;$/;"	m	struct:__anon33
n_segments	widgets/gimpdasheditor.h	/^  gint               n_segments;$/;"	m	struct:_GimpDashEditor
n_svg_target_entries	widgets/gimpclipboard.c	/^  gint            n_svg_target_entries;$/;"	m	struct:_GimpClipboard	file:
n_target_entries	widgets/gimpclipboard.c	/^  gint            n_target_entries;$/;"	m	struct:_GimpClipboard	file:
n_user_units	core/gimp.h	/^  gint                    n_user_units;$/;"	m	struct:_Gimp
name	actions/documents-commands.c	/^  const gchar *name;$/;"	m	struct:__anon2	file:
name	core/gimp-user-install.c	/^  const gchar           *name;$/;"	m	struct:__anon161	file:
name	core/gimpitempropundo.h	/^  gchar        *name;$/;"	m	struct:_GimpItemPropUndo
name	core/gimpobject.h	/^  gchar   *name;$/;"	m	struct:_GimpObject
name	core/gimppalette.h	/^  gchar   *name;$/;"	m	struct:_GimpPaletteEntry
name	plug-in/gimpplugindebug.c	/^  gchar  *name;$/;"	m	struct:_GimpPlugInDebug	file:
name	vectors/gimpvectors-import.c	/^  const gchar  *name;$/;"	m	struct:_SvgHandler	file:
name	widgets/gimpactiongroup.h	/^  const gchar         *name;$/;"	m	struct:_GimpPlugInActionEntry
name	widgets/gimpactiongroup.h	/^  const gchar *name;$/;"	m	struct:_GimpActionEntry
name	widgets/gimpactiongroup.h	/^  const gchar *name;$/;"	m	struct:_GimpEnumActionEntry
name	widgets/gimpactiongroup.h	/^  const gchar *name;$/;"	m	struct:_GimpRadioActionEntry
name	widgets/gimpactiongroup.h	/^  const gchar *name;$/;"	m	struct:_GimpStringActionEntry
name	widgets/gimpactiongroup.h	/^  const gchar *name;$/;"	m	struct:_GimpToggleActionEntry
name	widgets/gimpcontrollerkeyboard.c	/^  const gchar           *name;$/;"	m	struct:_KeyboardEvent	file:
name	widgets/gimpcontrollerwheel.c	/^  const gchar              *name;$/;"	m	struct:_WheelEvent	file:
name	widgets/gimpdialogfactory.h	/^  gchar             *name;$/;"	m	struct:_GimpDialogFactoryEntry
name	widgets/gimpdockable.h	/^  gchar        *name;$/;"	m	struct:_GimpDockable
name	widgets/gimpsessioninfo-aux.h	/^  gchar *name;$/;"	m	struct:_GimpSessionInfoAux
name	widgets/gimpuimanager.h	/^  gchar        *name;$/;"	m	struct:_GimpUIManager
name_cell	widgets/gimpcontainertreeview.h	/^  GtkCellRenderer   *name_cell;$/;"	m	struct:_GimpContainerTreeView
name_changed	core/gimpobject.h	/^  void    (* name_changed) (GimpObject *object);$/;"	m	struct:_GimpObjectClass
name_changed_handler_id	widgets/gimpcontainerview.c	/^  GQuark         name_changed_handler_id;$/;"	m	struct:_GimpContainerViewPrivate	file:
name_changed_signal	core/gimpviewable.h	/^  const gchar     *name_changed_signal;$/;"	m	struct:_GimpViewableClass
name_entry	dialogs/channel-options-dialog.h	/^  GtkWidget   *name_entry;$/;"	m	struct:_ChannelOptionsDialog
name_entry	dialogs/layer-options-dialog.h	/^  GtkWidget    *name_entry;$/;"	m	struct:_LayerOptionsDialog
name_entry	dialogs/vectors-options-dialog.h	/^  GtkWidget   *name_entry;$/;"	m	struct:_VectorsOptionsDialog
name_entry	widgets/gimpdataeditor.h	/^  GtkWidget       *name_entry;$/;"	m	struct:_GimpDataEditor
name_label	widgets/gimpeditor.h	/^  GtkWidget       *name_label;$/;"	m	struct:_GimpEditor
name_labels	widgets/gimpcolorframe.h	/^  GtkWidget          *name_labels[GIMP_COLOR_FRAME_ROWS];$/;"	m	struct:_GimpColorFrame
name_regex	pdb/gimppdb-query.c	/^  regex_t   name_regex;$/;"	m	struct:_PDBQuery	file:
named_buffers	core/gimp.h	/^  GimpContainer          *named_buffers;$/;"	m	struct:_Gimp
nav_ebox	display/gimpdisplayshell.h	/^  GtkWidget        *nav_ebox;          \/*  SE: navigation event box           *\/$/;"	m	struct:_GimpDisplayShell
nav_popup	display/gimpdisplayshell.h	/^  GtkWidget        *nav_popup;         \/*  navigation popup                   *\/$/;"	m	struct:_GimpDisplayShell
nav_preview_size	config/gimpdisplayconfig.h	/^  GimpViewSize        nav_preview_size;$/;"	m	struct:_GimpDisplayConfig
nbrushes	core/gimpbrushpipe.h	/^  gint              nbrushes;   \/* Might be less than the product of the$/;"	m	struct:_GimpBrushPipe
nchannels	base/gimplut.h	/^  gint     nchannels;$/;"	m	struct:_GimpLut
nearest_intersection_get	vectors/gimpstroke.h	/^  gdouble       (* nearest_intersection_get)$/;"	m	struct:_GimpStrokeClass
nearest_point_get	vectors/gimpstroke.h	/^  gdouble       (* nearest_point_get)    (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
nearest_tangent_get	vectors/gimpstroke.h	/^  gdouble       (* nearest_tangent_get)  (const GimpStroke      *stroke,$/;"	m	struct:_GimpStrokeClass
need_closing	core/gimpscanconvert.c	/^  gboolean        need_closing;$/;"	m	struct:_GimpScanConvert	file:
needs_quantize	core/gimpimage-convert.c	/^static gboolean  needs_quantize;$/;"	v	file:
needs_query	plug-in/gimpplugindef.h	/^  gboolean    needs_query;  \/* Does the plug-in need to be queried ?     *\/$/;"	m	struct:_GimpPlugInDef
needs_render	widgets/gimpviewrenderer.h	/^  gboolean            needs_render;$/;"	m	struct:_GimpViewRenderer
new_action	widgets/gimpitemtreeview.h	/^  const gchar          *new_action;$/;"	m	struct:_GimpItemTreeViewClass
new_button	widgets/gimpdatafactoryview.h	/^  GtkWidget           *new_button;$/;"	m	struct:_GimpDataFactoryView
new_button	widgets/gimpimageview.h	/^  GtkWidget           *new_button;$/;"	m	struct:_GimpImageView
new_button	widgets/gimpitemtreeview.h	/^  GtkWidget             *new_button;$/;"	m	struct:_GimpItemTreeView
new_button	widgets/gimptemplateview.h	/^  GtkWidget           *new_button;$/;"	m	struct:_GimpTemplateView
new_default_action	widgets/gimpitemtreeview.h	/^  const gchar          *new_default_action;$/;"	m	struct:_GimpItemTreeViewClass
new_dock_func	widgets/gimpdialogfactory.h	/^  GimpDialogNewFunc      new_dock_func;$/;"	m	struct:_GimpDialogFactory
new_func	widgets/gimpdialogfactory.h	/^  GimpDialogNewFunc  new_func;$/;"	m	struct:_GimpDialogFactoryEntry
new_instance	main.c	/^static gboolean            new_instance      = FALSE;$/;"	v	file:
new_item	widgets/gimpitemtreeview.h	/^  GimpNewItemFunc       new_item;$/;"	m	struct:_GimpItemTreeViewClass
next	base/tile-private.h	/^  Tile     *next;$/;"	m	struct:_Tile
next	base/tile-private.h	/^  TileLink    *next;$/;"	m	struct:_TileLink
next	core/gimpgradient.h	/^  GimpGradientSegment     *next;$/;"	m	struct:_GimpGradientSegment
next	widgets/gtkhwrapbox.c	/^  Line    *next;$/;"	m	struct:_Line	file:
next	widgets/gtkvwrapbox.c	/^  Line     *next;$/;"	m	struct:_Line	file:
next	widgets/gtkwrapbox.h	/^  GtkWrapBoxChild *next;$/;"	m	struct:_GtkWrapBoxChild
next_display_ID	core/gimp.h	/^  gint                    next_display_ID;$/;"	m	struct:_Gimp
next_guide_ID	core/gimp.h	/^  guint32                 next_guide_ID;$/;"	m	struct:_Gimp
next_image_ID	core/gimp.h	/^  gint                    next_image_ID;$/;"	m	struct:_Gimp
next_item_ID	core/gimp.h	/^  gint                    next_item_ID;$/;"	m	struct:_Gimp
next_sample_point_ID	core/gimp.h	/^  guint32                 next_sample_point_ID;$/;"	m	struct:_Gimp
ngx	tools/gimptransformtool.h	/^  gint            ngx, ngy;        \/*  number of grid lines in original$/;"	m	struct:_GimpTransformTool
ngy	tools/gimptransformtool.h	/^  gint            ngx, ngy;        \/*  number of grid lines in original$/;"	m	struct:_GimpTransformTool
nm	composite/ns.py	/^def nm(nmfile):$/;"	f
nmx	composite/ns.py	/^class nmx:$/;"	c
no_colors_label	dialogs/palette-import-dialog.c	/^  GtkWidget     *no_colors_label;$/;"	m	struct:__anon178	file:
no_data	core/gimp.h	/^  gboolean                no_data;$/;"	m	struct:_Gimp
no_data	main.c	/^static gboolean            no_data           = FALSE;$/;"	v	file:
no_fonts	core/gimp.h	/^  gboolean                no_fonts;$/;"	m	struct:_Gimp
no_fonts	main.c	/^static gboolean            no_fonts          = FALSE;$/;"	v	file:
no_interface	core/gimp.h	/^  gboolean                no_interface;$/;"	m	struct:_Gimp
no_interface	main.c	/^static gboolean            no_interface      = FALSE;$/;"	v	file:
no_mask	paint-funcs/paint-funcs.c	/^static const guchar  no_mask = OPAQUE_OPACITY;$/;"	v	file:
no_splash	main.c	/^static gboolean            no_splash         = FALSE;$/;"	v	file:
non_empty	core/gimpparamspecs.h	/^  guint            non_empty      : 1;$/;"	m	struct:_GimpParamSpecString
none_button	widgets/gimpselectioneditor.h	/^  GtkWidget       *none_button;$/;"	m	struct:_GimpSelectionEditor
none_ok	core/gimpparamspecs.h	/^  gboolean       none_ok;$/;"	m	struct:_GimpParamSpecDisplayID
none_ok	core/gimpparamspecs.h	/^  gboolean       none_ok;$/;"	m	struct:_GimpParamSpecImageID
none_ok	core/gimpparamspecs.h	/^  gboolean       none_ok;$/;"	m	struct:_GimpParamSpecItemID
normalize_coords	core/gimp-transform-region.c	/^normalize_coords (const gint     coords,$/;"	f	file:
normalized	core/gimpobject.h	/^  gchar   *normalized;$/;"	m	struct:_GimpObject
notebook	widgets/gimpcoloreditor.h	/^  GtkWidget   *notebook;$/;"	m	struct:_GimpColorEditor
notify_callback	config/test-config.c	/^notify_callback (GObject    *object,$/;"	f	file:
nth_layer	core/gimpimage-convert.c	/^  gint          nth_layer;$/;"	m	struct:_QuantizeObj	file:
ntile_cols	base/tile-manager-private.h	/^  gint               ntile_cols;    \/*  the number of tiles in each columns  *\/$/;"	m	struct:_TileManager
ntile_rows	base/tile-manager-private.h	/^  gint               ntile_rows;    \/*  the number of tiles in each row      *\/$/;"	m	struct:_TileManager
null_ok	core/gimpparamspecs.h	/^  guint            null_ok        : 1;$/;"	m	struct:_GimpParamSpecString
num_adj	display/gimpdisplayshell-scale.c	/^  GtkObject        *num_adj;$/;"	m	struct:__anon190	file:
num_args	pdb/gimpprocedure.h	/^  gint32            num_args;       \/* Number of procedure arguments  *\/$/;"	m	struct:_GimpProcedure
num_axes	widgets/gimpdeviceinfo.h	/^  gint           num_axes;$/;"	m	struct:_GimpDeviceInfo
num_children	core/gimpcontainer.h	/^  gint                 num_children;$/;"	m	struct:_GimpContainer
num_colors	core/gimpimageundo.h	/^  gint               num_colors;$/;"	m	struct:_GimpImageUndo
num_colors	dialogs/convert-dialog.c	/^  gint                    num_colors;$/;"	m	struct:__anon171	file:
num_colors	dialogs/palette-import-dialog.c	/^  GtkAdjustment *num_colors;$/;"	m	struct:__anon178	file:
num_cols	core/gimpimage.h	/^  gint               num_cols;              \/*  number of cols--for indexed  *\/$/;"	m	struct:_GimpImage
num_found_cols	core/gimpimage-convert.c	/^static gint      num_found_cols;$/;"	v	file:
num_keys	widgets/gimpdeviceinfo.h	/^  gint           num_keys;$/;"	m	struct:_GimpDeviceInfo
num_messages	widgets/gimperrordialog.h	/^  gint             num_messages;$/;"	m	struct:_GimpErrorDialog
num_nodes	core/gimpscanconvert.c	/^  guint           num_nodes;$/;"	m	struct:_GimpScanConvert	file:
num_points	tools/gimpforegroundselecttool.c	/^  gint         num_points;$/;"	m	struct:__anon286	file:
num_points	tools/gimpfreeselecttool.h	/^  gint               num_points;$/;"	m	struct:_GimpFreeSelectTool
num_points	tools/gimpmeasuretool.h	/^  gint             num_points;  \/*  how many points?           *\/$/;"	m	struct:_GimpMeasureTool
num_points_in	display/gimpdisplayshell-selection.c	/^  gint              num_points_in[8]; \/*  number of points in points_in     *\/$/;"	m	struct:_Selection	file:
num_processors	config/gimpbaseconfig.h	/^  guint     num_processors;$/;"	m	struct:_GimpBaseConfig
num_procs	pdb/gimppdb-query.c	/^  gint      num_procs;$/;"	m	struct:_PDBQuery	file:
num_regions	base/pixel-processor.c	/^  gint                 num_regions;$/;"	m	struct:_PixelProcessor	file:
num_segs	base/boundary.c	/^  gint      num_segs;$/;"	m	struct:_Boundary	file:
num_segs	core/gimplayer.h	/^    gint          num_segs;           \/*  number of segs in boundary     *\/$/;"	m	struct:_GimpLayer::__anon125
num_segs	tools/gimpregionselecttool.h	/^  gint               num_segs;$/;"	m	struct:_GimpRegionSelectTool
num_segs_in	core/gimpchannel.h	/^  gint          num_segs_in;       \/*  number of lines in boundary    *\/$/;"	m	struct:_GimpChannel
num_segs_in	display/gimpdisplayshell-selection.c	/^  gint              num_segs_in;      \/*  number of segments in segs1       *\/$/;"	m	struct:_Selection	file:
num_segs_in	tools/gimpeditselectiontool.h	/^  gint                num_segs_in;     \/*  Num seg in selection boundary     *\/$/;"	m	struct:_GimpEditSelectionTool
num_segs_layer	display/gimpdisplayshell-selection.c	/^  gint              num_segs_layer;   \/*  number of segments in segs3       *\/$/;"	m	struct:_Selection	file:
num_segs_out	core/gimpchannel.h	/^  gint          num_segs_out;      \/*  number of lines in boundary    *\/$/;"	m	struct:_GimpChannel
num_segs_out	display/gimpdisplayshell-selection.c	/^  gint              num_segs_out;     \/*  number of segments in segs2       *\/$/;"	m	struct:_Selection	file:
num_segs_out	tools/gimpeditselectiontool.h	/^  gint                num_segs_out;    \/*  Num seg in selection boundary     *\/$/;"	m	struct:_GimpEditSelectionTool
num_values	pdb/gimpprocedure.h	/^  gint32            num_values;     \/* Number of return values        *\/$/;"	m	struct:_GimpProcedure
num_values	widgets/gimpunitstore.h	/^  gint          num_values;$/;"	m	struct:_GimpUnitStore
number	widgets/gimpcolorframe.h	/^  gint                number;$/;"	m	struct:_GimpColorFrame
number_label	widgets/gimpcolorframe.h	/^  GtkWidget          *number_label;$/;"	m	struct:_GimpColorFrame
nx	tools/gimpiscissorstool.h	/^  gint            nx, ny;       \/*  new coordinates                       *\/$/;"	m	struct:_GimpIscissorsTool
ny	tools/gimpiscissorstool.h	/^  gint            nx, ny;       \/*  new coordinates                       *\/$/;"	m	struct:_GimpIscissorsTool
object	core/gimpparasitelist.h	/^  GimpObject  object;$/;"	m	struct:_GimpParasiteList
object	core/gimppdbprogress.h	/^  GObject      object;$/;"	m	struct:_GimpPdbProgress
object	text/gimptext-private.h	/^  GObject         object;$/;"	m	struct:_GimpTextLayout
object_signals	core/gimpobject.c	/^static guint object_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
odd	widgets/gimpviewrenderergradient.h	/^  guchar           *odd;$/;"	m	struct:_GimpViewRendererGradient
off_se	dialogs/offset-dialog.c	/^  GtkWidget      *off_se;$/;"	m	struct:__anon169	file:
offset	core/gimpdrawable-blend.c	/^  gdouble           offset;$/;"	m	struct:__anon117	file:
offset	core/gimpgradient-load.c	/^  gdouble       offset;$/;"	m	struct:__anon152	file:
offset	dialogs/resize-dialog.c	/^  GtkWidget          *offset;$/;"	m	struct:__anon170	file:
offset	plug-in/gimpinterpreterdb.c	/^  gulong    offset;$/;"	m	struct:_GimpInterpreterMagic	file:
offset	tools/gimpblendoptions.h	/^  gdouble           offset;$/;"	m	struct:_GimpBlendOptions
offset_center_clicked	dialogs/resize-dialog.c	/^offset_center_clicked (GtkWidget    *widget,$/;"	f	file:
offset_compare	core/gimpimage-arrange.c	/^offset_compare (gconstpointer a,$/;"	f	file:
offset_dialog_free	dialogs/offset-dialog.c	/^offset_dialog_free (OffsetDialog *dialog)$/;"	f	file:
offset_dialog_new	dialogs/offset-dialog.c	/^offset_dialog_new (GimpDrawable *drawable,$/;"	f
offset_halfheight_callback	dialogs/offset-dialog.c	/^offset_halfheight_callback (GtkWidget    *widget,$/;"	f	file:
offset_response	dialogs/offset-dialog.c	/^offset_response (GtkWidget    *widget,$/;"	f	file:
offset_unit	core/gimpgrid.h	/^  GimpUnit       offset_unit;$/;"	m	struct:_GimpGrid
offset_update	dialogs/resize-dialog.c	/^offset_update (GtkWidget    *widget,$/;"	f	file:
offset_x	base/siox.c	/^  gint          offset_x;$/;"	m	struct:_SioxState	file:
offset_x	core/gimpdrawablemodundo.h	/^  gint           offset_x;$/;"	m	struct:_GimpDrawableModUndo
offset_x	core/gimpitem.h	/^  gint              offset_x, offset_y; \/*  pixel offset in image    *\/$/;"	m	struct:_GimpItem
offset_x	core/gimpitempropundo.h	/^  gint          offset_x;$/;"	m	struct:_GimpItemPropUndo
offset_x	display/gimpdisplayshell.h	/^  gint              offset_x;          \/*  offset of display image into raw image  *\/$/;"	m	struct:_GimpDisplayShell
offset_x	paint/gimpsourcecore.h	/^  gdouble        offset_x;$/;"	m	struct:_GimpSourceCore
offset_x	text/gimptext-vectors.c	/^  gdouble       offset_x;$/;"	m	struct:_RenderContext	file:
offset_x	text/gimptext.h	/^  gdouble                offset_x;$/;"	m	struct:_GimpText
offset_y	base/siox.c	/^  gint          offset_y;$/;"	m	struct:_SioxState	file:
offset_y	core/gimpdrawablemodundo.h	/^  gint           offset_y;$/;"	m	struct:_GimpDrawableModUndo
offset_y	core/gimpitem.h	/^  gint              offset_x, offset_y; \/*  pixel offset in image    *\/$/;"	m	struct:_GimpItem
offset_y	core/gimpitempropundo.h	/^  gint          offset_y;$/;"	m	struct:_GimpItemPropUndo
offset_y	display/gimpdisplayshell.h	/^  gint              offset_y;$/;"	m	struct:_GimpDisplayShell
offset_y	paint/gimpsourcecore.h	/^  gdouble        offset_y;$/;"	m	struct:_GimpSourceCore
offset_y	text/gimptext-vectors.c	/^  gdouble       offset_y;$/;"	m	struct:_RenderContext	file:
offset_y	text/gimptext.h	/^  gdouble                offset_y;$/;"	m	struct:_GimpText
offsets_changed	dialogs/resize-dialog.c	/^offsets_changed (GtkWidget    *area,$/;"	f	file:
offx	base/pixel-region.h	/^  gint         offx;           \/*  tile offsets                  *\/$/;"	m	struct:_PixelRegion
offy	base/pixel-region.h	/^  gint         offy;           \/*  tile offsets                  *\/$/;"	m	struct:_PixelRegion
old_active_layer	tools/gimpmovetool.h	/^  GimpLayer           *old_active_layer;$/;"	m	struct:_GimpMoveTool
old_active_vectors	tools/gimpmovetool.h	/^  GimpVectors         *old_active_vectors;$/;"	m	struct:_GimpMoveTool
old_dir	core/gimp-user-install.c	/^  gchar                  *old_dir;$/;"	m	struct:_GimpUserInstall	file:
old_height	dialogs/resize-dialog.c	/^  gint                old_height;$/;"	m	struct:__anon170	file:
old_major	core/gimp-user-install.c	/^  gint                    old_major;$/;"	m	struct:_GimpUserInstall	file:
old_minor	core/gimp-user-install.c	/^  gint                    old_minor;$/;"	m	struct:_GimpUserInstall	file:
old_stack	display/gimpdisplayshell-filter-dialog.c	/^  GimpColorDisplayStack *old_stack;$/;"	m	struct:__anon184	file:
old_trans_info	tools/gimpperspectiveclonetool.h	/^  TransInfo       old_trans_info; \/*  for cancelling a drag operation  *\/$/;"	m	struct:_GimpPerspectiveCloneTool
old_trans_info	tools/gimptransformtool.h	/^  TransInfo       old_trans_info;  \/*  for cancelling a drag operation   *\/$/;"	m	struct:_GimpTransformTool
old_unit	dialogs/resize-dialog.c	/^  GimpUnit            old_unit;$/;"	m	struct:__anon170	file:
old_width	dialogs/resize-dialog.c	/^  gint                old_width;$/;"	m	struct:__anon170	file:
op	composite/gimp-composite.h	/^  GimpCompositeOperation op;$/;"	m	struct:__anon33
op	core/gimpscanconvert.c	/^  GimpChannelOps  op;$/;"	m	struct:_GimpScanConvert	file:
op	tools/gimpiscissorstool.h	/^  IscissorsOps    op;$/;"	m	struct:_GimpIscissorsTool
opacity	composite/gimp-composite.h	/^  struct { gint opacity; gchar affect;   } replace;$/;"	m	struct:__anon33::__anon34
opacity	composite/gimp-composite.h	/^  struct { gint x; gint y; gint opacity; } dissolve;$/;"	m	struct:__anon33::__anon37
opacity	core/gimpcontext.h	/^  gdouble               opacity;$/;"	m	struct:_GimpContext
opacity	core/gimpdrawableundo.h	/^  gdouble               opacity;$/;"	m	struct:_GimpDrawableUndo
opacity	core/gimplayer.h	/^  gdouble               opacity;          \/*  layer opacity              *\/$/;"	m	struct:_GimpLayer
opacity	core/gimplayerpropundo.h	/^  gdouble              opacity;$/;"	m	struct:_GimpLayerPropUndo
opacity	paint-funcs/paint-funcs-generic.h	/^  guint              opacity;$/;"	m	struct:apply_layer_mode_struct
opacity	paint-funcs/paint-funcs.c	/^  guint                 opacity;$/;"	m	struct:combine_regions_struct	file:
opacity	paint-funcs/paint-funcs.c	/^  guint                 opacity;$/;"	m	struct:initial_regions_struct	file:
opacity	paint/gimppaintoptions.h	/^  gboolean  opacity;$/;"	m	struct:_GimpPressureOptions
opacity_adjustment	widgets/gimplayertreeview.h	/^  GtkAdjustment        *opacity_adjustment;$/;"	m	struct:_GimpLayerTreeView
opacity_changed	core/gimpcontext.h	/^  void (* opacity_changed)    (GimpContext          *context,$/;"	m	struct:_GimpContextClass
opacity_changed	core/gimplayer.h	/^  void (* opacity_changed)    (GimpLayer *layer);$/;"	m	struct:_GimpLayerClass
opacity_changed_handler_id	widgets/gimplayertreeview.h	/^  GQuark                opacity_changed_handler_id;$/;"	m	struct:_GimpLayerTreeView
opacity_data	widgets/gimpbrushselect.h	/^  GtkAdjustment        *opacity_data;$/;"	m	struct:_GimpBrushSelect
opacity_quickskip_possible	paint-funcs/paint-funcs.c	/^  gboolean              opacity_quickskip_possible;$/;"	m	struct:combine_regions_struct	file:
open	base/boundary.h	/^  guint  open    : 1;$/;"	m	struct:_BoundSeg
open	plug-in/gimpplugin.h	/^  guint                open : 1;        \/*  Is the plug-in open?              *\/$/;"	m	struct:_GimpPlugIn
open	vectors/gimpstroke.h	/^  GimpStroke  * (* open)                 (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
open	widgets/gimpsessioninfo.h	/^  gboolean                open;$/;"	m	struct:_GimpSessionInfo
open_button	widgets/gimpdocumentview.h	/^  GtkWidget           *open_button;$/;"	m	struct:_GimpDocumentView
open_dialogs	widgets/gimpdialogfactory.h	/^  GList                 *open_dialogs;$/;"	m	struct:_GimpDialogFactory
open_plug_ins	plug-in/gimppluginmanager.h	/^  GSList            *open_plug_ins;$/;"	m	struct:_GimpPlugInManager
oper_update	tools/gimptool.h	/^  void          (* oper_update)         (GimpTool              *tool,$/;"	m	struct:_GimpToolClass
operation	tools/gimprectangleselecttool.h	/^  GimpChannelOps     operation;            \/* remember for use when modifying   *\/$/;"	m	struct:_GimpRectSelectTool
operation	tools/gimpselectionoptions.h	/^  GimpChannelOps      operation;$/;"	m	struct:_GimpSelectionOptions
options	display/gimpdisplayshell.h	/^  GimpDisplayOptions *options;$/;"	m	struct:_GimpDisplayShell
options	tools/gimpcolortool.h	/^  GimpColorOptions  *options;$/;"	m	struct:_GimpColorTool
options	widgets/gimpstrokeeditor.h	/^  GimpStrokeOptions *options;$/;"	m	struct:_GimpStrokeEditor
options_box	widgets/gimplayertreeview.h	/^  GtkWidget            *options_box;$/;"	m	struct:_GimpLayerTreeView
options_table	widgets/gimpbrusheditor.h	/^  GtkWidget      *options_table;$/;"	m	struct:_GimpBrushEditor
options_vbox	widgets/gimptooloptionseditor.h	/^  GtkWidget       *options_vbox;$/;"	m	struct:_GimpToolOptionsEditor
orientation	core/gimpguide.h	/^  GimpOrientationType  orientation;$/;"	m	struct:_GimpGuide
orientation	core/gimpguideundo.h	/^  GimpOrientationType  orientation;$/;"	m	struct:_GimpGuideUndo
orientation	widgets/gimpcolorbar.h	/^  GtkOrientation  orientation;$/;"	m	struct:_GimpColorBar
orig_buf	paint/gimppaintcore.h	/^  TempBuf     *orig_buf;         \/*  the unmodified drawable pixels      *\/$/;"	m	struct:_GimpPaintCore
orig_context	widgets/gimpcontainerpopup.h	/^  GimpContext         *orig_context;$/;"	m	struct:_GimpContainerPopup
orig_layer	display/gimpdisplayshell-layer-select.c	/^  GimpLayer *orig_layer;$/;"	m	struct:__anon192	file:
orig_opacity	dialogs/fade-dialog.c	/^  gdouble               orig_opacity;$/;"	m	struct:__anon180	file:
orig_paint_mode	dialogs/fade-dialog.c	/^  GimpLayerModeEffects  orig_paint_mode;$/;"	m	struct:__anon180	file:
orig_proj_buf	paint/gimppaintcore.h	/^  TempBuf     *orig_proj_buf;    \/*  the unmodified projection pixels    *\/$/;"	m	struct:_GimpPaintCore
orig_src_x	paint/gimpsourcecore.h	/^  gdouble        orig_src_x;$/;"	m	struct:_GimpSourceCore
orig_src_y	paint/gimpsourcecore.h	/^  gdouble        orig_src_y;$/;"	m	struct:_GimpSourceCore
origin	display/gimpdisplayshell.h	/^  GtkWidget        *origin;            \/*  NW: origin                         *\/$/;"	m	struct:_GimpDisplayShell
original	tools/gimptransformtool.h	/^  TileManager    *original;        \/*  pointer to original tiles         *\/$/;"	m	struct:_GimpTransformTool
original	tools/gimptransformtoolundo.h	/^  TileManager       *original;$/;"	m	struct:_GimpTransformToolUndo
original_data	base/pixel-region.h	/^  guchar      *original_data;$/;"	m	struct:_PixelRegionHolder
original_name	pdb/gimpprocedure.h	/^  gchar            *original_name;  \/* Uncanonicalized procedure name *\/$/;"	m	struct:_GimpProcedure
origx	tools/gimpeditselectiontool.h	/^  gint                origx, origy;    \/*  Last x and y coords               *\/$/;"	m	struct:_GimpEditSelectionTool
origy	tools/gimpeditselectiontool.h	/^  gint                origx, origy;    \/*  Last x and y coords               *\/$/;"	m	struct:_GimpEditSelectionTool
other_scale	display/gimpdisplayshell.h	/^  gdouble           other_scale;       \/*  scale factor entered in Zoom->Other     *\/$/;"	m	struct:_GimpDisplayShell
other_side_x	tools/gimprectangletool.c	/^  gint                    other_side_x;$/;"	m	struct:_GimpRectangleToolPrivate	file:
other_side_y	tools/gimprectangletool.c	/^  gint                    other_side_y;$/;"	m	struct:_GimpRectangleToolPrivate	file:
outline	text/gimptext.h	/^  GimpTextOutline        outline;$/;"	m	struct:_GimpText
output_area	tools/gimplevelstool.h	/^  GtkWidget            *output_area;$/;"	m	struct:_GimpLevelsTool
output_bar	tools/gimplevelstool.h	/^  GtkWidget            *output_bar;$/;"	m	struct:_GimpLevelsTool
output_string	pdb/gimppdb-query.c	/^output_string (FILE        *file,$/;"	f	file:
output_unknown_token	config/test-config.c	/^output_unknown_token (const gchar *key,$/;"	f	file:
overlap	base/hue-saturation.h	/^  gdouble overlap;$/;"	m	struct:_HueSaturation
overlap_data	tools/gimphuesaturationtool.h	/^  GtkAdjustment    *overlap_data;$/;"	m	struct:_GimpHueSaturationTool
overlay_pixels	paint-funcs/paint-funcs-generic.h	/^overlay_pixels (const guchar *src1,$/;"	f
overridden_fixed_aspect	tools/gimprectangleoptions.h	/^  gboolean                    overridden_fixed_aspect;$/;"	m	struct:_GimpRectangleOptionsPrivate
overridden_fixed_size	tools/gimprectangleoptions.h	/^  gboolean                    overridden_fixed_size;$/;"	m	struct:_GimpRectangleOptionsPrivate
override_cursor	display/gimpdisplayshell.h	/^  GimpCursorType    override_cursor;   \/*  Overriding cursor                  *\/$/;"	m	struct:_GimpDisplayShell
ox0008	composite/gimp-composite-altivec.c	/^static const vector unsigned short ox0008 = (const vector unsigned short)$/;"	v	file:
ox0080	composite/gimp-composite-altivec.c	/^static const vector unsigned short ox0080 = (const vector unsigned short)$/;"	v	file:
ox00ff	composite/gimp-composite-altivec.c	/^static const vector signed short ox00ff = (const vector signed short)$/;"	v	file:
oxff80	composite/gimp-composite-altivec.c	/^static const vector signed short oxff80 = (const vector signed short)$/;"	v	file:
p1_func	base/pixel-processor.c	/^typedef void  (* p1_func) (gpointer      data,$/;"	t	file:
p2_func	base/pixel-processor.c	/^typedef void  (* p2_func) (gpointer      data,$/;"	t	file:
p3_func	base/pixel-processor.c	/^typedef void  (* p3_func) (gpointer      data,$/;"	t	file:
p4_func	base/pixel-processor.c	/^typedef void  (* p4_func) (gpointer      data,$/;"	t	file:
p_height	widgets/gimpnavigationview.h	/^  gint         p_height;$/;"	m	struct:_GimpNavigationView
p_width	widgets/gimpnavigationview.h	/^  gint         p_width;$/;"	m	struct:_GimpNavigationView
p_x	widgets/gimpnavigationview.h	/^  gint         p_x;$/;"	m	struct:_GimpNavigationView
p_y	widgets/gimpnavigationview.h	/^  gint         p_y;$/;"	m	struct:_GimpNavigationView
padding_color	display/gimpdisplayoptions.h	/^  GimpRGB                padding_color;$/;"	m	struct:_GimpDisplayOptions
padding_mode	display/gimpdisplayoptions.h	/^  GimpCanvasPaddingMode  padding_mode;$/;"	m	struct:_GimpDisplayOptions
padding_mode_set	display/gimpdisplayoptions.h	/^  gboolean               padding_mode_set;$/;"	m	struct:_GimpDisplayOptions
paint	paint/gimppaintcore.h	/^  void       (* paint)          (GimpPaintCore    *core,$/;"	m	struct:_GimpPaintCoreClass
paint_core	paint/gimppaintcoreundo.h	/^  GimpPaintCore *paint_core;$/;"	m	struct:_GimpPaintCoreUndo
paint_funcs_free	paint-funcs/paint-funcs.c	/^paint_funcs_free (void)$/;"	f
paint_funcs_setup	paint-funcs/paint-funcs.c	/^paint_funcs_setup (void)$/;"	f
paint_info	core/gimpcontext.h	/^  GimpPaintInfo        *paint_info;$/;"	m	struct:_GimpContext
paint_info	core/gimpstrokedesc.h	/^  GimpPaintInfo     *paint_info;$/;"	m	struct:_GimpStrokeDesc
paint_info	core/gimptoolinfo.h	/^  GimpPaintInfo       *paint_info;$/;"	m	struct:_GimpToolInfo
paint_info	paint/gimppaintoptions.h	/^  GimpPaintInfo            *paint_info;$/;"	m	struct:_GimpPaintOptions
paint_info_changed	core/gimpcontext.h	/^  void (* paint_info_changed) (GimpContext          *context,$/;"	m	struct:_GimpContextClass
paint_info_list	core/gimp.h	/^  GimpContainer          *paint_info_list;$/;"	m	struct:_Gimp
paint_instance	paint/gimpperspectivecloneoptions.h	/^  GimpCloneOptions          paint_instance;$/;"	m	struct:_GimpPerspectiveCloneOptions
paint_line_pixmap_mask	paint/gimpbrushcore.c	/^paint_line_pixmap_mask (GimpImage                *dest,$/;"	f	file:
paint_mask_to_canvas_buf	paint/gimppaintcore.c	/^paint_mask_to_canvas_buf (GimpPaintCore *core,$/;"	f	file:
paint_mask_to_canvas_tiles	paint/gimppaintcore.c	/^paint_mask_to_canvas_tiles (GimpPaintCore *core,$/;"	f	file:
paint_mode	core/gimpcontext.h	/^  GimpLayerModeEffects  paint_mode;$/;"	m	struct:_GimpContext
paint_mode	core/gimpdrawableundo.h	/^  GimpLayerModeEffects  paint_mode;$/;"	m	struct:_GimpDrawableUndo
paint_mode_changed	core/gimpcontext.h	/^  void (* paint_mode_changed) (GimpContext          *context,$/;"	m	struct:_GimpContextClass
paint_mode_menu	widgets/gimpbrushselect.h	/^  GtkWidget            *paint_mode_menu;$/;"	m	struct:_GimpBrushSelect
paint_mode_menu	widgets/gimplayertreeview.h	/^  GtkWidget            *paint_mode_menu;$/;"	m	struct:_GimpLayerTreeView
paint_modes	actions/context-commands.c	/^static const GimpLayerModeEffects paint_modes[] =$/;"	v	file:
paint_name	core/gimpcontext.h	/^  gchar                *paint_name;$/;"	m	struct:_GimpContext
paint_options	core/gimppaintinfo.h	/^  GimpPaintOptions *paint_options;$/;"	m	struct:_GimpPaintInfo
paint_options	core/gimpstrokedesc.h	/^  GimpPaintOptions  *paint_options;$/;"	m	struct:_GimpStrokeDesc
paint_options	paint/gimpairbrush.h	/^  GimpPaintOptions *paint_options;$/;"	m	struct:_GimpAirbrush
paint_options	tools/gimpblendoptions.h	/^  GimpPaintOptions  paint_options;$/;"	m	struct:_GimpBlendOptions
paint_options	tools/gimpbucketfilloptions.h	/^  GimpPaintOptions    paint_options;$/;"	m	struct:_GimpBucketFillOptions
paint_options_type	core/gimppaintinfo.h	/^  GType             paint_options_type;$/;"	m	struct:_GimpPaintInfo
paint_tools_stroke	pdb/paint_tools_cmds.c	/^paint_tools_stroke (Gimp             *gimp,$/;"	f	file:
paint_type	core/gimppaintinfo.h	/^  GType             paint_type;$/;"	m	struct:_GimpPaintInfo
paintbrush_default_invoker	pdb/paint_tools_cmds.c	/^paintbrush_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
paintbrush_invoker	pdb/paint_tools_cmds.c	/^paintbrush_invoker (GimpProcedure     *procedure,$/;"	f	file:
palentryStruct	core/gimpimage-convert.c	/^} palentryStruct;$/;"	t	typeref:struct:__anon109	file:
palette	core/gimpcontext.h	/^  GimpPalette          *palette;$/;"	m	struct:_GimpContext
palette	dialogs/palette-import-dialog.c	/^  GimpPalette   *palette;$/;"	m	struct:__anon178	file:
palette_add_entry_invoker	pdb/palette_cmds.c	/^palette_add_entry_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_box_new	widgets/gimpviewablebox.c	/^palette_box_new (GimpContainer *container,$/;"	f	file:
palette_changed	core/gimpcontext.h	/^  void (* palette_changed)    (GimpContext          *context,$/;"	m	struct:_GimpContextClass
palette_delete_entry_invoker	pdb/palette_cmds.c	/^palette_delete_entry_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_delete_invoker	pdb/palette_cmds.c	/^palette_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_duplicate_invoker	pdb/palette_cmds.c	/^palette_duplicate_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_editor_actions	actions/palette-editor-actions.c	/^static const GimpActionEntry palette_editor_actions[] =$/;"	v	file:
palette_editor_actions_setup	actions/palette-editor-actions.c	/^palette_editor_actions_setup (GimpActionGroup *group)$/;"	f
palette_editor_actions_update	actions/palette-editor-actions.c	/^palette_editor_actions_update (GimpActionGroup *group,$/;"	f
palette_editor_color_dropped	widgets/gimppaletteeditor.c	/^palette_editor_color_dropped (GimpPaletteView   *view,$/;"	f	file:
palette_editor_color_name_changed	widgets/gimppaletteeditor.c	/^palette_editor_color_name_changed (GtkWidget         *widget,$/;"	f	file:
palette_editor_columns_changed	widgets/gimppaletteeditor.c	/^palette_editor_columns_changed (GtkAdjustment     *adj,$/;"	f	file:
palette_editor_delete_color_cmd_callback	actions/palette-editor-commands.c	/^palette_editor_delete_color_cmd_callback (GtkAction *action,$/;"	f
palette_editor_drop_color	widgets/gimppaletteeditor.c	/^palette_editor_drop_color (GtkWidget     *widget,$/;"	f	file:
palette_editor_drop_palette	widgets/gimppaletteeditor.c	/^palette_editor_drop_palette (GtkWidget    *widget,$/;"	f	file:
palette_editor_edit_color_cmd_callback	actions/palette-editor-commands.c	/^palette_editor_edit_color_cmd_callback (GtkAction *action,$/;"	f
palette_editor_edit_color_update	actions/palette-editor-commands.c	/^palette_editor_edit_color_update (GimpColorDialog      *dialog,$/;"	f	file:
palette_editor_entry_activated	widgets/gimppaletteeditor.c	/^palette_editor_entry_activated (GimpPaletteView   *view,$/;"	f	file:
palette_editor_entry_clicked	widgets/gimppaletteeditor.c	/^palette_editor_entry_clicked (GimpPaletteView   *view,$/;"	f	file:
palette_editor_entry_context	widgets/gimppaletteeditor.c	/^palette_editor_entry_context (GimpPaletteView   *view,$/;"	f	file:
palette_editor_entry_selected	widgets/gimppaletteeditor.c	/^palette_editor_entry_selected (GimpPaletteView   *view,$/;"	f	file:
palette_editor_eventbox_button_press	widgets/gimppaletteeditor.c	/^palette_editor_eventbox_button_press (GtkWidget         *widget,$/;"	f	file:
palette_editor_invalidate_preview	widgets/gimppaletteeditor.c	/^palette_editor_invalidate_preview (GimpPalette       *palette,$/;"	f	file:
palette_editor_new_actions	actions/palette-editor-actions.c	/^static const GimpEnumActionEntry palette_editor_new_actions[] =$/;"	v	file:
palette_editor_new_color_cmd_callback	actions/palette-editor-commands.c	/^palette_editor_new_color_cmd_callback (GtkAction *action,$/;"	f
palette_editor_resize	widgets/gimppaletteeditor.c	/^palette_editor_resize (GimpPaletteEditor *editor,$/;"	f	file:
palette_editor_scroll_top_left	widgets/gimppaletteeditor.c	/^palette_editor_scroll_top_left (GimpPaletteEditor *palette_editor)$/;"	f	file:
palette_editor_toggle_actions	actions/palette-editor-actions.c	/^static const GimpToggleActionEntry palette_editor_toggle_actions[] =$/;"	v	file:
palette_editor_viewport_size_allocate	widgets/gimppaletteeditor.c	/^palette_editor_viewport_size_allocate (GtkWidget         *widget,$/;"	f	file:
palette_editor_zoom_actions	actions/palette-editor-actions.c	/^static const GimpEnumActionEntry palette_editor_zoom_actions[] =$/;"	v	file:
palette_editor_zoom_cmd_callback	actions/palette-editor-commands.c	/^palette_editor_zoom_cmd_callback (GtkAction *action,$/;"	f
palette_entry_get_color_invoker	pdb/palette_cmds.c	/^palette_entry_get_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_entry_get_name_invoker	pdb/palette_cmds.c	/^palette_entry_get_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_entry_set_color_invoker	pdb/palette_cmds.c	/^palette_entry_set_color_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_entry_set_name_invoker	pdb/palette_cmds.c	/^palette_entry_set_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_factory	core/gimp.h	/^  GimpDataFactory        *palette_factory;$/;"	m	struct:_Gimp
palette_get_columns_invoker	pdb/palette_cmds.c	/^palette_get_columns_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_get_info_invoker	pdb/palette_cmds.c	/^palette_get_info_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_import_columns_changed	dialogs/palette-import-dialog.c	/^palette_import_columns_changed (GtkAdjustment *adj,$/;"	f	file:
palette_import_dialog_new	dialogs/palette-import-dialog.c	/^palette_import_dialog_new (GimpContext *context)$/;"	f
palette_import_file_callback	dialogs/palette-import-dialog.c	/^palette_import_file_callback (GtkWidget    *widget,$/;"	f	file:
palette_import_filename_changed	dialogs/palette-import-dialog.c	/^palette_import_filename_changed (GtkFileChooser *button,$/;"	f	file:
palette_import_free	dialogs/palette-import-dialog.c	/^palette_import_free (ImportDialog *dialog)$/;"	f	file:
palette_import_grad_callback	dialogs/palette-import-dialog.c	/^palette_import_grad_callback (GtkWidget    *widget,$/;"	f	file:
palette_import_gradient_changed	dialogs/palette-import-dialog.c	/^palette_import_gradient_changed (GimpContext  *context,$/;"	f	file:
palette_import_image_add	dialogs/palette-import-dialog.c	/^palette_import_image_add (GimpContainer *container,$/;"	f	file:
palette_import_image_callback	dialogs/palette-import-dialog.c	/^palette_import_image_callback (GtkWidget    *widget,$/;"	f	file:
palette_import_image_changed	dialogs/palette-import-dialog.c	/^palette_import_image_changed (GimpContext  *context,$/;"	f	file:
palette_import_image_remove	dialogs/palette-import-dialog.c	/^palette_import_image_remove (GimpContainer *container,$/;"	f	file:
palette_import_layer_changed	dialogs/palette-import-dialog.c	/^palette_import_layer_changed (GimpImage    *image,$/;"	f	file:
palette_import_make_palette	dialogs/palette-import-dialog.c	/^palette_import_make_palette (ImportDialog *dialog)$/;"	f	file:
palette_import_mask_changed	dialogs/palette-import-dialog.c	/^palette_import_mask_changed (GimpImage    *image,$/;"	f	file:
palette_import_response	dialogs/palette-import-dialog.c	/^palette_import_response (GtkWidget    *widget,$/;"	f	file:
palette_import_set_sensitive	dialogs/palette-import-dialog.c	/^palette_import_set_sensitive (ImportDialog *dialog)$/;"	f	file:
palette_is_editable_invoker	pdb/palette_cmds.c	/^palette_is_editable_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_name	core/gimpcontext.h	/^  gchar                *palette_name;$/;"	m	struct:_GimpContext
palette_new_invoker	pdb/palette_cmds.c	/^palette_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_path	config/gimpcoreconfig.h	/^  gchar                  *palette_path;$/;"	m	struct:_GimpCoreConfig
palette_path_writable	config/gimpcoreconfig.h	/^  gchar                  *palette_path_writable;$/;"	m	struct:_GimpCoreConfig
palette_rename_invoker	pdb/palette_cmds.c	/^palette_rename_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_set_columns_invoker	pdb/palette_cmds.c	/^palette_set_columns_invoker (GimpProcedure     *procedure,$/;"	f	file:
palette_type	dialogs/convert-dialog.c	/^  GimpConvertPaletteType  palette_type;$/;"	m	struct:__anon171	file:
palettes_actions	actions/palettes-actions.c	/^static const GimpActionEntry palettes_actions[] =$/;"	v	file:
palettes_actions_setup	actions/palettes-actions.c	/^palettes_actions_setup (GimpActionGroup *group)$/;"	f
palettes_actions_update	actions/palettes-actions.c	/^palettes_actions_update (GimpActionGroup *group,$/;"	f
palettes_close_popup_invoker	pdb/palette_select_cmds.c	/^palettes_close_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
palettes_edit_actions	actions/palettes-actions.c	/^static const GimpStringActionEntry palettes_edit_actions[] =$/;"	v	file:
palettes_get_list_invoker	pdb/palettes_cmds.c	/^palettes_get_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
palettes_get_palette_entry_invoker	pdb/palettes_cmds.c	/^palettes_get_palette_entry_invoker (GimpProcedure     *procedure,$/;"	f	file:
palettes_get_palette_invoker	pdb/palettes_cmds.c	/^palettes_get_palette_invoker (GimpProcedure     *procedure,$/;"	f	file:
palettes_import_cmd_callback	actions/palettes-commands.c	/^palettes_import_cmd_callback (GtkAction *action,$/;"	f
palettes_merge_callback	actions/palettes-commands.c	/^palettes_merge_callback (GtkWidget   *widget,$/;"	f	file:
palettes_merge_cmd_callback	actions/palettes-commands.c	/^palettes_merge_cmd_callback (GtkAction *action,$/;"	f
palettes_popup_invoker	pdb/palette_select_cmds.c	/^palettes_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
palettes_refresh_invoker	pdb/palettes_cmds.c	/^palettes_refresh_invoker (GimpProcedure     *procedure,$/;"	f	file:
palettes_set_popup_invoker	pdb/palette_select_cmds.c	/^palettes_set_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
pango_context	text/gimpfont.c	/^  PangoContext *pango_context;$/;"	m	struct:_GimpFont	file:
param	vectors/gimpvectors-import.c	/^  gint         param;     \/* number of parameters                        *\/$/;"	m	struct:__anon305	file:
params	vectors/gimpvectors-import.c	/^  gdouble      params[7]; \/* parameters that have been parsed            *\/$/;"	m	struct:__anon305	file:
parasite	core/gimpimageundo.h	/^  GimpParasite      *parasite;$/;"	m	struct:_GimpImageUndo
parasite	core/gimpitempropundo.h	/^  GimpParasite *parasite;$/;"	m	struct:_GimpItemPropUndo
parasite	widgets/gimpimageparasiteview.h	/^  gchar     *parasite;$/;"	m	struct:_GimpImageParasiteView
parasite_attach_invoker	pdb/parasite_cmds.c	/^parasite_attach_invoker (GimpProcedure     *procedure,$/;"	f	file:
parasite_attached	core/gimpimage.h	/^  void (* parasite_attached)            (GimpImage            *image,$/;"	m	struct:_GimpImageClass
parasite_copy	core/gimpparasitelist.c	/^parasite_copy (const gchar      *key,$/;"	f	file:
parasite_count_if_persistent	core/gimpparasitelist.c	/^parasite_count_if_persistent (const gchar  *key,$/;"	f	file:
parasite_detach_invoker	pdb/parasite_cmds.c	/^parasite_detach_invoker (GimpProcedure     *procedure,$/;"	f	file:
parasite_detached	core/gimpimage.h	/^  void (* parasite_detached)            (GimpImage            *image,$/;"	m	struct:_GimpImageClass
parasite_find_invoker	pdb/parasite_cmds.c	/^parasite_find_invoker (GimpProcedure     *procedure,$/;"	f	file:
parasite_free	core/gimpparasitelist.c	/^parasite_free (const gchar  *key,$/;"	f	file:
parasite_list_invoker	pdb/parasite_cmds.c	/^parasite_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
parasite_list_signals	core/gimpparasitelist.c	/^static guint        parasite_list_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
parasite_name	core/gimpimageundo.h	/^  gchar             *parasite_name;$/;"	m	struct:_GimpImageUndo
parasite_name	core/gimpitempropundo.h	/^  gchar        *parasite_name;$/;"	m	struct:_GimpItemPropUndo
parasite_serialize	core/gimpparasitelist.c	/^parasite_serialize (const gchar      *key,$/;"	f	file:
parasite_symbol	core/gimpparasitelist.c	/^static const gchar  parasite_symbol[]                  = "parasite";$/;"	v	file:
parasites	core/gimp.h	/^  GimpParasiteList       *parasites;$/;"	m	struct:_Gimp
parasites	core/gimpimage.h	/^  GimpParasiteList  *parasites;             \/*  Plug-in parasite data        *\/$/;"	m	struct:_GimpImage
parasites	core/gimpitem.h	/^  GimpParasiteList *parasites;          \/*  Plug-in parasite data    *\/$/;"	m	struct:_GimpItem
parent	core/gimpcontext.h	/^  GimpContext          *parent;$/;"	m	struct:_GimpContext
parent_class	config/gimpbaseconfig.c	71;"	d	file:
parent_class	config/gimpbaseconfig.h	/^  GObjectClass           parent_class;$/;"	m	struct:_GimpBaseConfigClass
parent_class	config/gimpcoreconfig.c	118;"	d	file:
parent_class	config/gimpcoreconfig.h	/^  GimpBaseConfigClass  parent_class;$/;"	m	struct:_GimpCoreConfigClass
parent_class	config/gimpdisplayconfig.c	95;"	d	file:
parent_class	config/gimpdisplayconfig.h	/^  GimpCoreConfigClass  parent_class;$/;"	m	struct:_GimpDisplayConfigClass
parent_class	config/gimpguiconfig.c	100;"	d	file:
parent_class	config/gimpguiconfig.h	/^  GimpDisplayConfigClass  parent_class;$/;"	m	struct:_GimpGuiConfigClass
parent_class	config/gimppluginconfig.c	59;"	d	file:
parent_class	config/gimppluginconfig.h	/^  GimpGuiConfigClass  parent_class;$/;"	m	struct:_GimpPluginConfigClass
parent_class	config/gimprc.c	76;"	d	file:
parent_class	config/gimprc.h	/^  GimpPluginConfigClass  parent_class;$/;"	m	struct:_GimpRcClass
parent_class	core/gimp.c	115;"	d	file:
parent_class	core/gimp.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpClass
parent_class	core/gimpbrush.c	85;"	d	file:
parent_class	core/gimpbrush.h	/^  GimpDataClass parent_class;$/;"	m	struct:_GimpBrushClass
parent_class	core/gimpbrushclipboard.c	72;"	d	file:
parent_class	core/gimpbrushclipboard.h	/^  GimpBrushClass  parent_class;$/;"	m	struct:_GimpBrushClipboardClass
parent_class	core/gimpbrushgenerated.c	89;"	d	file:
parent_class	core/gimpbrushgenerated.h	/^  GimpBrushClass  parent_class;$/;"	m	struct:_GimpBrushGeneratedClass
parent_class	core/gimpbrushpipe.c	56;"	d	file:
parent_class	core/gimpbrushpipe.h	/^  GimpBrushClass  parent_class;$/;"	m	struct:_GimpBrushPipeClass
parent_class	core/gimpbuffer.c	67;"	d	file:
parent_class	core/gimpbuffer.h	/^  GimpViewableClass  parent_class;$/;"	m	struct:_GimpBufferClass
parent_class	core/gimpchannel.c	218;"	d	file:
parent_class	core/gimpchannel.h	/^  GimpDrawableClass  parent_class;$/;"	m	struct:_GimpChannelClass
parent_class	core/gimpchannelpropundo.c	43;"	d	file:
parent_class	core/gimpchannelpropundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpChannelPropUndoClass
parent_class	core/gimpchannelundo.c	61;"	d	file:
parent_class	core/gimpchannelundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpChannelUndoClass
parent_class	core/gimpcontainer.c	108;"	d	file:
parent_class	core/gimpcontainer.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpContainerClass
parent_class	core/gimpcontext.c	331;"	d	file:
parent_class	core/gimpcontext.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpContextClass
parent_class	core/gimpdata.c	/^static GimpViewableClass *parent_class = NULL;$/;"	v	file:
parent_class	core/gimpdata.h	/^  GimpViewableClass  parent_class;$/;"	m	struct:_GimpDataClass
parent_class	core/gimpdatafactory.c	63;"	d	file:
parent_class	core/gimpdatafactory.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpDataFactoryClass
parent_class	core/gimpdocumentlist.h	/^  GimpListClass  parent_class;$/;"	m	struct:_GimpDocumentListClass
parent_class	core/gimpdrawable.c	157;"	d	file:
parent_class	core/gimpdrawable.h	/^  GimpItemClass  parent_class;$/;"	m	struct:_GimpDrawableClass
parent_class	core/gimpdrawablemodundo.c	48;"	d	file:
parent_class	core/gimpdrawablemodundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpDrawableModUndoClass
parent_class	core/gimpdrawableundo.c	70;"	d	file:
parent_class	core/gimpdrawableundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpDrawableUndoClass
parent_class	core/gimpfloatingselundo.c	46;"	d	file:
parent_class	core/gimpfloatingselundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpFloatingSelUndoClass
parent_class	core/gimpgradient.c	85;"	d	file:
parent_class	core/gimpgradient.h	/^  GimpDataClass  parent_class;$/;"	m	struct:_GimpGradientClass
parent_class	core/gimpgrid.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpGridClass
parent_class	core/gimpguide.h	/^  GObjectClass         parent_class;$/;"	m	struct:_GimpGuideClass
parent_class	core/gimpguideundo.c	59;"	d	file:
parent_class	core/gimpguideundo.h	/^  GimpUndoClass  parent_class;$/;"	m	struct:_GimpGuideUndoClass
parent_class	core/gimpimage.c	214;"	d	file:
parent_class	core/gimpimage.h	/^  GimpViewableClass  parent_class;$/;"	m	struct:_GimpImageClass
parent_class	core/gimpimagefile.c	94;"	d	file:
parent_class	core/gimpimagefile.h	/^  GimpViewableClass   parent_class;$/;"	m	struct:_GimpImagefileClass
parent_class	core/gimpimagemap.c	84;"	d	file:
parent_class	core/gimpimagemap.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpImageMapClass
parent_class	core/gimpimageundo.c	71;"	d	file:
parent_class	core/gimpimageundo.h	/^  GimpUndoClass  parent_class;$/;"	m	struct:_GimpImageUndoClass
parent_class	core/gimpitem.c	109;"	d	file:
parent_class	core/gimpitem.h	/^  GimpViewableClass  parent_class;$/;"	m	struct:_GimpItemClass
parent_class	core/gimpitempropundo.c	65;"	d	file:
parent_class	core/gimpitempropundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpItemPropUndoClass
parent_class	core/gimpitemundo.c	55;"	d	file:
parent_class	core/gimpitemundo.h	/^  GimpUndoClass  parent_class;$/;"	m	struct:_GimpItemUndoClass
parent_class	core/gimplayer.c	172;"	d	file:
parent_class	core/gimplayer.h	/^  GimpDrawableClass  parent_class;$/;"	m	struct:_GimpLayerClass
parent_class	core/gimplayermask.c	59;"	d	file:
parent_class	core/gimplayermask.h	/^  GimpChannelClass  parent_class;$/;"	m	struct:_GimpLayerMaskClass
parent_class	core/gimplayermaskpropundo.c	41;"	d	file:
parent_class	core/gimplayermaskpropundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpLayerMaskPropUndoClass
parent_class	core/gimplayermaskundo.c	62;"	d	file:
parent_class	core/gimplayermaskundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpLayerMaskUndoClass
parent_class	core/gimplayerpropundo.c	43;"	d	file:
parent_class	core/gimplayerpropundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpLayerPropUndoClass
parent_class	core/gimplayerundo.c	62;"	d	file:
parent_class	core/gimplayerundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpLayerUndoClass
parent_class	core/gimplist.c	82;"	d	file:
parent_class	core/gimplist.h	/^  GimpContainerClass  parent_class;$/;"	m	struct:_GimpListClass
parent_class	core/gimpmaskundo.c	50;"	d	file:
parent_class	core/gimpmaskundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpMaskUndoClass
parent_class	core/gimpobject.c	65;"	d	file:
parent_class	core/gimpobject.h	/^  GObjectClass  parent_class;$/;"	m	struct:_GimpObjectClass
parent_class	core/gimppaintinfo.c	38;"	d	file:
parent_class	core/gimppaintinfo.h	/^  GimpViewableClass  parent_class;$/;"	m	struct:_GimpPaintInfoClass
parent_class	core/gimppalette.c	76;"	d	file:
parent_class	core/gimppalette.h	/^  GimpDataClass  parent_class;$/;"	m	struct:_GimpPaletteClass
parent_class	core/gimpparasitelist.c	81;"	d	file:
parent_class	core/gimpparasitelist.h	/^  GimpObjectClass parent_class;$/;"	m	struct:_GimpParasiteListClass
parent_class	core/gimppattern.c	57;"	d	file:
parent_class	core/gimppattern.h	/^  GimpDataClass  parent_class;$/;"	m	struct:_GimpPatternClass
parent_class	core/gimppatternclipboard.c	72;"	d	file:
parent_class	core/gimppatternclipboard.h	/^  GimpPatternClass  parent_class;$/;"	m	struct:_GimpPatternClipboardClass
parent_class	core/gimppdbprogress.c	/^static GObjectClass *parent_class = NULL;$/;"	v	file:
parent_class	core/gimppdbprogress.h	/^  GObjectClass  parent_class;$/;"	m	struct:_GimpPdbProgressClass
parent_class	core/gimpprojection.c	106;"	d	file:
parent_class	core/gimpprojection.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpProjectionClass
parent_class	core/gimpsamplepointundo.c	59;"	d	file:
parent_class	core/gimpsamplepointundo.h	/^  GimpUndoClass  parent_class;$/;"	m	struct:_GimpSamplePointUndoClass
parent_class	core/gimpselection.c	133;"	d	file:
parent_class	core/gimpselection.h	/^  GimpChannelClass parent_class;$/;"	m	struct:_GimpSelectionClass
parent_class	core/gimpstrokedesc.c	77;"	d	file:
parent_class	core/gimpstrokedesc.h	/^  GimpObjectClass parent_class;$/;"	m	struct:_GimpStrokeDescClass
parent_class	core/gimpstrokeoptions.h	/^  GimpContextClass parent_class;$/;"	m	struct:_GimpStrokeOptionsClass
parent_class	core/gimpsubprogress.c	55;"	d	file:
parent_class	core/gimpsubprogress.h	/^  GObjectClass  parent_class;$/;"	m	struct:_GimpSubProgressClass
parent_class	core/gimptemplate.c	91;"	d	file:
parent_class	core/gimptoolinfo.c	63;"	d	file:
parent_class	core/gimptoolinfo.h	/^  GimpViewableClass    parent_class;$/;"	m	struct:_GimpToolInfoClass
parent_class	core/gimptooloptions.h	/^  GimpContextClass parent_class;$/;"	m	struct:_GimpToolOptionsClass
parent_class	core/gimptoolpresets.c	74;"	d	file:
parent_class	core/gimptoolpresets.h	/^  GimpListClass  parent_class;$/;"	m	struct:_GimpToolPresetsClass
parent_class	core/gimpundo.c	100;"	d	file:
parent_class	core/gimpundo.h	/^  GimpViewableClass  parent_class;$/;"	m	struct:_GimpUndoClass
parent_class	core/gimpundostack.c	45;"	d	file:
parent_class	core/gimpundostack.h	/^  GimpUndoClass  parent_class;$/;"	m	struct:_GimpUndoStackClass
parent_class	core/gimpviewable.c	103;"	d	file:
parent_class	core/gimpviewable.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpViewableClass
parent_class	display/gimpcanvas.c	63;"	d	file:
parent_class	display/gimpcanvas.h	/^  GtkDrawingAreaClass  parent_class;$/;"	m	struct:_GimpCanvasClass
parent_class	display/gimpdisplay.c	102;"	d	file:
parent_class	display/gimpdisplay.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpDisplayClass
parent_class	display/gimpdisplayoptions.h	/^  GObjectClass           parent_class;$/;"	m	struct:_GimpDisplayOptionsClass
parent_class	display/gimpdisplayshell.c	138;"	d	file:
parent_class	display/gimpdisplayshell.h	/^  GtkWindowClass  parent_class;$/;"	m	struct:_GimpDisplayShellClass
parent_class	display/gimpnavigationeditor.c	99;"	d	file:
parent_class	display/gimpnavigationeditor.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpNavigationEditorClass
parent_class	display/gimpscalecombobox.c	62;"	d	file:
parent_class	display/gimpstatusbar.c	120;"	d	file:
parent_class	display/gimpstatusbar.h	/^  GtkHBoxClass parent_class;$/;"	m	struct:_GimpStatusbarClass
parent_class	paint/gimpairbrush.c	58;"	d	file:
parent_class	paint/gimpairbrush.h	/^  GimpPaintbrushClass  parent_class;$/;"	m	struct:_GimpAirbrushClass
parent_class	paint/gimpairbrushoptions.h	/^  GimpPaintOptionsClass  parent_class;$/;"	m	struct:_GimpAirbrushOptionsClass
parent_class	paint/gimpbrushcore.c	130;"	d	file:
parent_class	paint/gimpbrushcore.h	/^  GimpPaintCoreClass  parent_class;$/;"	m	struct:_GimpBrushCoreClass
parent_class	paint/gimpclone.c	89;"	d	file:
parent_class	paint/gimpclone.h	/^  GimpSourceCoreClass  parent_class;$/;"	m	struct:_GimpCloneClass
parent_class	paint/gimpcloneoptions.c	53;"	d	file:
parent_class	paint/gimpcloneoptions.h	/^  GimpSourceOptionsClass  parent_class;$/;"	m	struct:_GimpCloneOptionsClass
parent_class	paint/gimpconvolve.h	/^  GimpBrushCoreClass parent_class;$/;"	m	struct:_GimpConvolveClass
parent_class	paint/gimpconvolveoptions.h	/^  GimpPaintOptionsClass  parent_class;$/;"	m	struct:_GimpConvolveOptionsClass
parent_class	paint/gimpdodgeburn.c	76;"	d	file:
parent_class	paint/gimpdodgeburn.h	/^  GimpBrushCoreClass  parent_class;$/;"	m	struct:_GimpDodgeBurnClass
parent_class	paint/gimpdodgeburnoptions.h	/^  GimpPaintOptionsClass  parent_class;$/;"	m	struct:_GimpDodgeBurnOptionsClass
parent_class	paint/gimperaser.h	/^  GimpBrushCoreClass  parent_class;$/;"	m	struct:_GimpEraserClass
parent_class	paint/gimperaseroptions.h	/^  GimpPaintOptionsClass  parent_class;$/;"	m	struct:_GimpEraserOptionsClass
parent_class	paint/gimpheal.c	76;"	d	file:
parent_class	paint/gimpheal.h	/^  GimpSourceCoreClass  parent_class;$/;"	m	struct:_GimpHealClass
parent_class	paint/gimpink.c	98;"	d	file:
parent_class	paint/gimpink.h	/^  GimpPaintCoreClass  parent_class;$/;"	m	struct:_GimpInkClass
parent_class	paint/gimpinkundo.c	45;"	d	file:
parent_class	paint/gimpinkundo.h	/^  GimpPaintCoreUndoClass  parent_class;$/;"	m	struct:_GimpInkUndoClass
parent_class	paint/gimppaintbrush.h	/^  GimpBrushCoreClass  parent_class;$/;"	m	struct:_GimpPaintbrushClass
parent_class	paint/gimppaintcore.c	110;"	d	file:
parent_class	paint/gimppaintcore.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpPaintCoreClass
parent_class	paint/gimppaintcoreundo.c	57;"	d	file:
parent_class	paint/gimppaintcoreundo.h	/^  GimpUndoClass  parent_class;$/;"	m	struct:_GimpPaintCoreUndoClass
parent_class	paint/gimppaintoptions.c	112;"	d	file:
parent_class	paint/gimppencil.h	/^  GimpPaintbrushClass  parent_class;$/;"	m	struct:_GimpPencilClass
parent_class	paint/gimppenciloptions.h	/^  GimpPaintOptionsClass  parent_class;$/;"	m	struct:_GimpPencilOptionsClass
parent_class	paint/gimpperspectiveclone.c	84;"	d	file:
parent_class	paint/gimpperspectiveclone.h	/^  GimpCloneClass  parent_class;$/;"	m	struct:_GimpPerspectiveCloneClass
parent_class	paint/gimpperspectivecloneoptions.h	/^  GimpCloneOptionsClass  parent_class;$/;"	m	struct:_GimpPerspectiveCloneOptionsClass
parent_class	paint/gimpsmudge.c	67;"	d	file:
parent_class	paint/gimpsmudge.h	/^  GimpBrushCoreClass  parent_class;$/;"	m	struct:_GimpSmudgeClass
parent_class	paint/gimpsmudgeoptions.h	/^  GimpPaintOptionsClass  parent_class;$/;"	m	struct:_GimpSmudgeOptionsClass
parent_class	paint/gimpsourcecore.c	96;"	d	file:
parent_class	paint/gimpsourcecore.h	/^  GimpBrushCoreClass  parent_class;$/;"	m	struct:_GimpSourceCoreClass
parent_class	paint/gimpsourceoptions.h	/^  GimpPaintOptionsClass  parent_class;$/;"	m	struct:_GimpSourceOptionsClass
parent_class	pdb/gimppdb.c	69;"	d	file:
parent_class	pdb/gimppdb.h	/^  GimpObjectClass parent_class;$/;"	m	struct:_GimpPDBClass
parent_class	pdb/gimpprocedure.c	76;"	d	file:
parent_class	pdb/gimpprocedure.h	/^  GimpObjectClass parent_class;$/;"	m	struct:_GimpProcedureClass
parent_class	plug-in/gimpenvirontable.c	71;"	d	file:
parent_class	plug-in/gimpenvirontable.h	/^  GObjectClass  parent_class;$/;"	m	struct:_GimpEnvironTableClass
parent_class	plug-in/gimpinterpreterdb.c	107;"	d	file:
parent_class	plug-in/gimpinterpreterdb.h	/^  GObjectClass  parent_class;$/;"	m	struct:_GimpInterpreterDBClass
parent_class	plug-in/gimpplugin.c	122;"	d	file:
parent_class	plug-in/gimpplugin.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpPlugInClass
parent_class	plug-in/gimpplugindef.c	43;"	d	file:
parent_class	plug-in/gimpplugindef.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpPlugInDefClass
parent_class	plug-in/gimppluginmanager.c	76;"	d	file:
parent_class	plug-in/gimppluginmanager.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpPlugInManagerClass
parent_class	plug-in/gimppluginprocedure.c	73;"	d	file:
parent_class	plug-in/gimppluginprocedure.h	/^  GimpProcedureClass parent_class;$/;"	m	struct:_GimpPlugInProcedureClass
parent_class	plug-in/gimptemporaryprocedure.c	57;"	d	file:
parent_class	plug-in/gimptemporaryprocedure.h	/^  GimpPlugInProcedureClass parent_class;$/;"	m	struct:_GimpTemporaryProcedureClass
parent_class	text/gimpfont.c	/^  GimpViewableClass   parent_class;$/;"	m	struct:_GimpFontClass	file:
parent_class	text/gimpfont.c	101;"	d	file:
parent_class	text/gimpfontlist.h	/^  GimpListClass  parent_class;$/;"	m	struct:_GimpFontListClass
parent_class	text/gimptext-private.h	/^  GObjectClass   parent_class;$/;"	m	struct:_GimpTextLayoutClass
parent_class	text/gimptext.c	88;"	d	file:
parent_class	text/gimptext.h	/^  GimpObjectClass        parent_class;$/;"	m	struct:_GimpTextClass
parent_class	text/gimptextlayer.c	108;"	d	file:
parent_class	text/gimptextlayer.h	/^  GimpLayerClass  parent_class;$/;"	m	struct:_GimpTextLayerClass
parent_class	text/gimptextlayout.c	59;"	d	file:
parent_class	text/gimptextundo.c	67;"	d	file:
parent_class	text/gimptextundo.h	/^  GimpItemClass  parent_class;$/;"	m	struct:_GimpTextUndoClass
parent_class	tools/gimpairbrushtool.h	/^  GimpPaintbrushToolClass parent_class;$/;"	m	struct:_GimpAirbrushToolClass
parent_class	tools/gimpaligntool.c	108;"	d	file:
parent_class	tools/gimpaligntool.h	/^  GimpDrawToolClass parent_class;$/;"	m	struct:_GimpAlignToolClass
parent_class	tools/gimpblendtool.c	92;"	d	file:
parent_class	tools/gimpblendtool.h	/^  GimpDrawToolClass  parent_class;$/;"	m	struct:_GimpBlendToolClass
parent_class	tools/gimpbrightnesscontrasttool.c	91;"	d	file:
parent_class	tools/gimpbrightnesscontrasttool.h	/^  GimpImageMapToolClass  parent_class;$/;"	m	struct:_GimpBrightnessContrastToolClass
parent_class	tools/gimpbrushtool.c	83;"	d	file:
parent_class	tools/gimpbrushtool.h	/^  GimpPaintToolClass  parent_class;$/;"	m	struct:_GimpBrushToolClass
parent_class	tools/gimpbucketfilloptions.c	75;"	d	file:
parent_class	tools/gimpbucketfilltool.c	64;"	d	file:
parent_class	tools/gimpbucketfilltool.h	/^  GimpToolClass  parent_class;$/;"	m	struct:_GimpBucketFillToolClass
parent_class	tools/gimpbycolorselecttool.c	53;"	d	file:
parent_class	tools/gimpbycolorselecttool.h	/^  GimpRegionSelectToolClass  parent_class;$/;"	m	struct:_GimpByColorSelectToolClass
parent_class	tools/gimpclonetool.c	48;"	d	file:
parent_class	tools/gimpclonetool.h	/^  GimpSourceToolClass parent_class;$/;"	m	struct:_GimpCloneToolClass
parent_class	tools/gimpcolorbalancetool.c	81;"	d	file:
parent_class	tools/gimpcolorbalancetool.h	/^  GimpImageMapToolClass  parent_class;$/;"	m	struct:_GimpColorBalanceToolClass
parent_class	tools/gimpcolorizetool.c	79;"	d	file:
parent_class	tools/gimpcolorizetool.h	/^  GimpImageMapToolClass  parent_class;$/;"	m	struct:_GimpColorizeToolClass
parent_class	tools/gimpcolorpickertool.c	84;"	d	file:
parent_class	tools/gimpcolorpickertool.h	/^  GimpColorToolClass  parent_class;$/;"	m	struct:_GimpColorPickerToolClass
parent_class	tools/gimpcolortool.c	121;"	d	file:
parent_class	tools/gimpcolortool.h	/^  GimpDrawToolClass  parent_class;$/;"	m	struct:_GimpColorToolClass
parent_class	tools/gimpconvolvetool.c	61;"	d	file:
parent_class	tools/gimpconvolvetool.h	/^  GimpBrushToolClass parent_class;$/;"	m	struct:_GimpConvolveToolClass
parent_class	tools/gimpcroptool.c	87;"	d	file:
parent_class	tools/gimpcroptool.h	/^  GimpDrawToolClass parent_class;$/;"	m	struct:_GimpCropToolClass
parent_class	tools/gimpcurvestool.c	136;"	d	file:
parent_class	tools/gimpcurvestool.h	/^  GimpImageMapToolClass  parent_class;$/;"	m	struct:_GimpCurvesToolClass
parent_class	tools/gimpdodgeburntool.c	61;"	d	file:
parent_class	tools/gimpdodgeburntool.h	/^  GimpBrushToolClass parent_class;$/;"	m	struct:_GimpDodgeBurnToolClass
parent_class	tools/gimpdrawtool.c	79;"	d	file:
parent_class	tools/gimpdrawtool.h	/^  GimpToolClass   parent_class;$/;"	m	struct:_GimpDrawToolClass
parent_class	tools/gimpeditselectiontool.c	84;"	d	file:
parent_class	tools/gimpeditselectiontool.h	/^  GimpDrawToolClass   parent_class;$/;"	m	struct:_GimpEditSelectionToolClass
parent_class	tools/gimpellipseselecttool.c	54;"	d	file:
parent_class	tools/gimpellipseselecttool.h	/^  GimpRectSelectToolClass parent_class;$/;"	m	struct:_GimpEllipseSelectToolClass
parent_class	tools/gimperasertool.c	54;"	d	file:
parent_class	tools/gimperasertool.h	/^  GimpBrushToolClass parent_class;$/;"	m	struct:_GimpEraserToolClass
parent_class	tools/gimpfliptool.c	65;"	d	file:
parent_class	tools/gimpfliptool.h	/^  GimpTransformToolClass  parent_class;$/;"	m	struct:_GimpFlipToolClass
parent_class	tools/gimpforegroundselecttool.c	133;"	d	file:
parent_class	tools/gimpforegroundselecttool.h	/^  GimpFreeSelectToolClass  parent_class;$/;"	m	struct:_GimpForegroundSelectToolClass
parent_class	tools/gimpforegroundselecttoolundo.c	58;"	d	file:
parent_class	tools/gimpforegroundselecttoolundo.h	/^  GimpUndoClass  parent_class;$/;"	m	struct:_GimpForegroundSelectToolUndoClass
parent_class	tools/gimpfreeselecttool.c	85;"	d	file:
parent_class	tools/gimpfreeselecttool.h	/^  GimpSelectionToolClass  parent_class;$/;"	m	struct:_GimpFreeSelectToolClass
parent_class	tools/gimpfuzzyselecttool.c	51;"	d	file:
parent_class	tools/gimpfuzzyselecttool.h	/^  GimpRegionSelectToolClass  parent_class;$/;"	m	struct:_GimpFuzzySelectToolClass
parent_class	tools/gimphealtool.h	/^  GimpSourceToolClass parent_class;$/;"	m	struct:_GimpHealToolClass
parent_class	tools/gimphuesaturationtool.c	91;"	d	file:
parent_class	tools/gimphuesaturationtool.h	/^  GimpImageMapToolClass  parent_class;$/;"	m	struct:_GimpHueSaturationToolClass
parent_class	tools/gimpimagemapoptions.c	52;"	d	file:
parent_class	tools/gimpimagemaptool.c	108;"	d	file:
parent_class	tools/gimpimagemaptool.h	/^  GimpColorToolClass  parent_class;$/;"	m	struct:_GimpImageMapToolClass
parent_class	tools/gimpinktool.c	40;"	d	file:
parent_class	tools/gimpinktool.h	/^  GimpPaintToolClass parent_class;$/;"	m	struct:_GimpInkToolClass
parent_class	tools/gimpiscissorstool.c	206;"	d	file:
parent_class	tools/gimpiscissorstool.h	/^  GimpSelectionToolClass parent_class;$/;"	m	struct:_GimpIscissorsToolClass
parent_class	tools/gimplevelstool.c	145;"	d	file:
parent_class	tools/gimplevelstool.h	/^  GimpImageMapToolClass  parent_class;$/;"	m	struct:_GimpLevelsToolClass
parent_class	tools/gimpmagnifyoptions.c	64;"	d	file:
parent_class	tools/gimpmagnifytool.c	74;"	d	file:
parent_class	tools/gimpmagnifytool.h	/^  GimpDrawToolClass parent_class;$/;"	m	struct:_GimpMagnifyToolClass
parent_class	tools/gimpmeasuretool.c	109;"	d	file:
parent_class	tools/gimpmeasuretool.h	/^  GimpDrawToolClass parent_class;$/;"	m	struct:_GimpMeasureToolClass
parent_class	tools/gimpmovetool.c	113;"	d	file:
parent_class	tools/gimpmovetool.h	/^  GimpDrawToolClass parent_class;$/;"	m	struct:_GimpMoveToolClass
parent_class	tools/gimppaintbrushtool.h	/^  GimpBrushToolClass parent_class;$/;"	m	struct:_GimpPaintbrushToolClass
parent_class	tools/gimppainttool.c	96;"	d	file:
parent_class	tools/gimppainttool.h	/^  GimpColorToolClass  parent_class;$/;"	m	struct:_GimpPaintToolClass
parent_class	tools/gimppenciltool.h	/^  GimpPaintbrushToolClass parent_class;$/;"	m	struct:_GimpPencilToolClass
parent_class	tools/gimpperspectiveclonetool.c	107;"	d	file:
parent_class	tools/gimpperspectiveclonetool.h	/^  GimpBrushToolClass parent_class;$/;"	m	struct:_GimpPerspectiveCloneToolClass
parent_class	tools/gimpperspectivetool.h	/^  GimpTransformToolClass  parent_class;$/;"	m	struct:_GimpPerspectiveToolClass
parent_class	tools/gimpposterizetool.c	66;"	d	file:
parent_class	tools/gimpposterizetool.h	/^  GimpImageMapToolClass  parent_class;$/;"	m	struct:_GimpPosterizeToolClass
parent_class	tools/gimprectangleselecttool.c	126;"	d	file:
parent_class	tools/gimprectangleselecttool.h	/^  GimpSelectionToolClass parent_class;$/;"	m	struct:_GimpRectSelectToolClass
parent_class	tools/gimpregionselecttool.c	83;"	d	file:
parent_class	tools/gimpregionselecttool.h	/^  GimpSelectionToolClass parent_class;$/;"	m	struct:_GimpRegionSelectToolClass
parent_class	tools/gimprotatetool.c	73;"	d	file:
parent_class	tools/gimprotatetool.h	/^  GimpTransformToolClass  parent_class;$/;"	m	struct:_GimpRotateToolClass
parent_class	tools/gimpscaletool.c	66;"	d	file:
parent_class	tools/gimpscaletool.h	/^  GimpTransformToolClass parent_class;$/;"	m	struct:_GimpScaleToolClass
parent_class	tools/gimpselectionoptions.c	77;"	d	file:
parent_class	tools/gimpselectiontool.c	62;"	d	file:
parent_class	tools/gimpselectiontool.h	/^  GimpDrawToolClass  parent_class;$/;"	m	struct:_GimpSelectionToolClass
parent_class	tools/gimpsheartool.h	/^  GimpTransformToolClass  parent_class;$/;"	m	struct:_GimpShearToolClass
parent_class	tools/gimpsmudgetool.h	/^  GimpBrushToolClass parent_class;$/;"	m	struct:_GimpSmudgeToolClass
parent_class	tools/gimpsourcetool.c	82;"	d	file:
parent_class	tools/gimpsourcetool.h	/^  GimpBrushToolClass parent_class;$/;"	m	struct:_GimpSourceToolClass
parent_class	tools/gimptexttool.c	129;"	d	file:
parent_class	tools/gimptexttool.h	/^  GimpToolClass  parent_class;$/;"	m	struct:_GimpTextToolClass
parent_class	tools/gimpthresholdtool.c	70;"	d	file:
parent_class	tools/gimpthresholdtool.h	/^  GimpImageMapToolClass  parent_class;$/;"	m	struct:_GimpThresholdToolClass
parent_class	tools/gimptool.c	112;"	d	file:
parent_class	tools/gimptool.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpToolClass
parent_class	tools/gimptoolcontrol.c	33;"	d	file:
parent_class	tools/gimptoolcontrol.h	/^  GimpObjectClass parent_class;$/;"	m	struct:_GimpToolControlClass
parent_class	tools/gimptransformoptions.c	78;"	d	file:
parent_class	tools/gimptransformtool.c	157;"	d	file:
parent_class	tools/gimptransformtool.h	/^  GimpDrawToolClass parent_class;$/;"	m	struct:_GimpTransformToolClass
parent_class	tools/gimptransformtoolundo.c	60;"	d	file:
parent_class	tools/gimptransformtoolundo.h	/^  GimpUndoClass  parent_class;$/;"	m	struct:_GimpTransformToolUndoClass
parent_class	tools/gimpvectortool.c	147;"	d	file:
parent_class	tools/gimpvectortool.h	/^  GimpDrawToolClass  parent_class;$/;"	m	struct:_GimpVectorToolClass
parent_class	vectors/gimpbezierstroke.c	159;"	d	file:
parent_class	vectors/gimpbezierstroke.h	/^  GimpStrokeClass  parent_class;$/;"	m	struct:_GimpBezierStrokeClass
parent_class	vectors/gimpstroke.c	169;"	d	file:
parent_class	vectors/gimpstroke.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpStrokeClass
parent_class	vectors/gimpvectors.c	144;"	d	file:
parent_class	vectors/gimpvectors.h	/^  GimpItemClass  parent_class;$/;"	m	struct:_GimpVectorsClass
parent_class	vectors/gimpvectorsmodundo.c	45;"	d	file:
parent_class	vectors/gimpvectorsmodundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpVectorsModUndoClass
parent_class	vectors/gimpvectorspropundo.c	42;"	d	file:
parent_class	vectors/gimpvectorspropundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpVectorsPropUndoClass
parent_class	vectors/gimpvectorsundo.c	62;"	d	file:
parent_class	vectors/gimpvectorsundo.h	/^  GimpItemUndoClass  parent_class;$/;"	m	struct:_GimpVectorsUndoClass
parent_class	widgets/gimpaction.c	70;"	d	file:
parent_class	widgets/gimpaction.h	/^  GtkActionClass parent_class;$/;"	m	struct:_GimpActionClass
parent_class	widgets/gimpactionfactory.c	43;"	d	file:
parent_class	widgets/gimpactionfactory.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpActionFactoryClass
parent_class	widgets/gimpactiongroup.c	70;"	d	file:
parent_class	widgets/gimpactiongroup.h	/^  GtkActionGroupClass  parent_class;$/;"	m	struct:_GimpActionGroupClass
parent_class	widgets/gimpactionview.c	71;"	d	file:
parent_class	widgets/gimpactionview.h	/^  GtkTreeViewClass  parent_class;$/;"	m	struct:_GimpActionViewClass
parent_class	widgets/gimpblobeditor.c	69;"	d	file:
parent_class	widgets/gimpblobeditor.h	/^  GtkDrawingAreaClass  parent_class;$/;"	m	struct:_GimpBlobEditorClass
parent_class	widgets/gimpbrusheditor.c	76;"	d	file:
parent_class	widgets/gimpbrusheditor.h	/^  GimpDataEditorClass  parent_class;$/;"	m	struct:_GimpBrushEditorClass
parent_class	widgets/gimpbrushfactoryview.c	57;"	d	file:
parent_class	widgets/gimpbrushfactoryview.h	/^  GimpDataFactoryViewClass  parent_class;$/;"	m	struct:_GimpBrushFactoryViewClass
parent_class	widgets/gimpbrushselect.c	86;"	d	file:
parent_class	widgets/gimpbrushselect.h	/^  GimpPdbDialogClass  parent_class;$/;"	m	struct:_GimpBrushSelectClass
parent_class	widgets/gimpbufferview.c	69;"	d	file:
parent_class	widgets/gimpbufferview.h	/^  GimpContainerEditorClass  parent_class;$/;"	m	struct:_GimpBufferViewClass
parent_class	widgets/gimpcellrendererdashes.c	75;"	d	file:
parent_class	widgets/gimpcellrendererdashes.h	/^  GtkCellRendererClass  parent_class;$/;"	m	struct:_GimpCellRendererDashesClass
parent_class	widgets/gimpcellrendererviewable.c	84;"	d	file:
parent_class	widgets/gimpcellrendererviewable.h	/^  GtkCellRendererClass  parent_class;$/;"	m	struct:_GimpCellRendererViewableClass
parent_class	widgets/gimpchanneltreeview.c	78;"	d	file:
parent_class	widgets/gimpchanneltreeview.h	/^  GimpDrawableTreeViewClass  parent_class;$/;"	m	struct:_GimpChannelTreeViewClass
parent_class	widgets/gimpcolorbar.c	56;"	d	file:
parent_class	widgets/gimpcolorbar.h	/^  GtkMisc         parent_class;$/;"	m	struct:_GimpColorBar
parent_class	widgets/gimpcolorbar.h	/^  GtkMiscClass   parent_class;$/;"	m	struct:_GimpColorBarClass
parent_class	widgets/gimpcolordialog.c	76;"	d	file:
parent_class	widgets/gimpcolordialog.h	/^  GimpViewableDialogClass  parent_class;$/;"	m	struct:_GimpColorDialogClass
parent_class	widgets/gimpcolordisplayeditor.c	100;"	d	file:
parent_class	widgets/gimpcolordisplayeditor.h	/^  GtkVBoxClass parent_class;$/;"	m	struct:_GimpColorDisplayEditorClass
parent_class	widgets/gimpcoloreditor.c	106;"	d	file:
parent_class	widgets/gimpcoloreditor.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpColorEditorClass
parent_class	widgets/gimpcolorframe.c	63;"	d	file:
parent_class	widgets/gimpcolorframe.h	/^  GimpFrameClass      parent_class;$/;"	m	struct:_GimpColorFrameClass
parent_class	widgets/gimpcolormapeditor.c	122;"	d	file:
parent_class	widgets/gimpcolormapeditor.h	/^  GimpImageEditorClass  parent_class;$/;"	m	struct:_GimpColormapEditorClass
parent_class	widgets/gimpcolorpanel.c	51;"	d	file:
parent_class	widgets/gimpcolorpanel.h	/^  GimpColorButtonClass  parent_class;$/;"	m	struct:_GimpColorPanelClass
parent_class	widgets/gimpcolorselectorpalette.c	49;"	d	file:
parent_class	widgets/gimpcolorselectorpalette.h	/^  GimpColorSelectorClass  parent_class;$/;"	m	struct:_GimpColorSelectorPaletteClass
parent_class	widgets/gimpcomponenteditor.c	94;"	d	file:
parent_class	widgets/gimpcomponenteditor.h	/^  GimpImageEditorClass  parent_class;$/;"	m	struct:_GimpComponentEditorClass
parent_class	widgets/gimpcontainerbox.c	61;"	d	file:
parent_class	widgets/gimpcontainerbox.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpContainerBoxClass
parent_class	widgets/gimpcontainercombobox.c	98;"	d	file:
parent_class	widgets/gimpcontainercombobox.h	/^  GtkComboBoxClass  parent_class;$/;"	m	struct:_GimpContainerComboBoxClass
parent_class	widgets/gimpcontainereditor.c	81;"	d	file:
parent_class	widgets/gimpcontainereditor.h	/^  GtkVBoxClass  parent_class;$/;"	m	struct:_GimpContainerEditorClass
parent_class	widgets/gimpcontainerentry.c	82;"	d	file:
parent_class	widgets/gimpcontainerentry.h	/^  GtkEntryClass   parent_class;$/;"	m	struct:_GimpContainerEntryClass
parent_class	widgets/gimpcontainergridview.c	108;"	d	file:
parent_class	widgets/gimpcontainergridview.h	/^  GimpContainerBoxClass  parent_class;$/;"	m	struct:_GimpContainerGridViewClass
parent_class	widgets/gimpcontainerpopup.c	79;"	d	file:
parent_class	widgets/gimpcontainertreeview.c	110;"	d	file:
parent_class	widgets/gimpcontainertreeview.h	/^  GimpContainerBoxClass  parent_class;$/;"	m	struct:_GimpContainerTreeViewClass
parent_class	widgets/gimpcontrollereditor.c	112;"	d	file:
parent_class	widgets/gimpcontrollereditor.h	/^  GtkVBoxClass   parent_class;$/;"	m	struct:_GimpControllerEditorClass
parent_class	widgets/gimpcontrollerinfo.c	93;"	d	file:
parent_class	widgets/gimpcontrollerinfo.h	/^  GimpViewableClass  parent_class;$/;"	m	struct:_GimpControllerInfoClass
parent_class	widgets/gimpcontrollerkeyboard.c	63;"	d	file:
parent_class	widgets/gimpcontrollerkeyboard.h	/^  GimpControllerClass parent_class;$/;"	m	struct:_GimpControllerKeyboardClass
parent_class	widgets/gimpcontrollerlist.c	119;"	d	file:
parent_class	widgets/gimpcontrollerlist.h	/^  GtkVBoxClass   parent_class;$/;"	m	struct:_GimpControllerListClass
parent_class	widgets/gimpcontrollerwheel.c	62;"	d	file:
parent_class	widgets/gimpcontrollerwheel.h	/^  GimpControllerClass parent_class;$/;"	m	struct:_GimpControllerWheelClass
parent_class	widgets/gimpcursorview.c	79;"	d	file:
parent_class	widgets/gimpcursorview.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpCursorViewClass
parent_class	widgets/gimpdasheditor.c	83;"	d	file:
parent_class	widgets/gimpdasheditor.h	/^  GtkDrawingAreaClass  parent_class;$/;"	m	struct:_GimpDashEditorClass
parent_class	widgets/gimpdataeditor.c	114;"	d	file:
parent_class	widgets/gimpdataeditor.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpDataEditorClass
parent_class	widgets/gimpdatafactoryview.c	64;"	d	file:
parent_class	widgets/gimpdatafactoryview.h	/^  GimpContainerEditorClass  parent_class;$/;"	m	struct:_GimpDataFactoryViewClass
parent_class	widgets/gimpdbusservice.h	/^  GObjectClass  parent_class;$/;"	m	struct:_GimpDBusServiceClass
parent_class	widgets/gimpdeviceinfo.c	73;"	d	file:
parent_class	widgets/gimpdeviceinfo.h	/^  GimpContextClass  parent_class;$/;"	m	struct:_GimpDeviceInfoClass
parent_class	widgets/gimpdevicestatus.c	104;"	d	file:
parent_class	widgets/gimpdevicestatus.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpDeviceStatusClass
parent_class	widgets/gimpdialogfactory.c	98;"	d	file:
parent_class	widgets/gimpdialogfactory.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpDialogFactoryClass
parent_class	widgets/gimpdock.c	96;"	d	file:
parent_class	widgets/gimpdock.h	/^  GtkWindowClass parent_class;$/;"	m	struct:_GimpDockClass
parent_class	widgets/gimpdockable.c	95;"	d	file:
parent_class	widgets/gimpdockable.h	/^  GtkBinClass  parent_class;$/;"	m	struct:_GimpDockableClass
parent_class	widgets/gimpdockbook.c	100;"	d	file:
parent_class	widgets/gimpdockbook.h	/^  GtkNotebookClass parent_class;$/;"	m	struct:_GimpDockbookClass
parent_class	widgets/gimpdockseparator.c	68;"	d	file:
parent_class	widgets/gimpdockseparator.h	/^  GtkEventBoxClass  parent_class;$/;"	m	struct:_GimpDockSeparatorClass
parent_class	widgets/gimpdocumentview.c	54;"	d	file:
parent_class	widgets/gimpdocumentview.h	/^  GimpContainerEditorClass  parent_class;$/;"	m	struct:_GimpDocumentViewClass
parent_class	widgets/gimpdrawabletreeview.c	96;"	d	file:
parent_class	widgets/gimpdrawabletreeview.h	/^  GimpItemTreeViewClass  parent_class;$/;"	m	struct:_GimpDrawableTreeViewClass
parent_class	widgets/gimpeditor.c	89;"	d	file:
parent_class	widgets/gimpeditor.h	/^  GtkVBoxClass  parent_class;$/;"	m	struct:_GimpEditorClass
parent_class	widgets/gimpenumaction.c	61;"	d	file:
parent_class	widgets/gimpenumaction.h	/^  GimpActionClass parent_class;$/;"	m	struct:_GimpEnumActionClass
parent_class	widgets/gimperrorconsole.c	57;"	d	file:
parent_class	widgets/gimperrorconsole.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpErrorConsoleClass
parent_class	widgets/gimperrordialog.c	47;"	d	file:
parent_class	widgets/gimperrordialog.h	/^  GimpDialogClass  parent_class;$/;"	m	struct:_GimpErrorDialogClass
parent_class	widgets/gimpfgbgeditor.c	97;"	d	file:
parent_class	widgets/gimpfgbgeditor.h	/^  GtkDrawingAreaClass  parent_class;$/;"	m	struct:_GimpFgBgEditorClass
parent_class	widgets/gimpfgbgview.c	63;"	d	file:
parent_class	widgets/gimpfgbgview.h	/^  GtkWidgetClass  parent_class;$/;"	m	struct:_GimpFgBgViewClass
parent_class	widgets/gimpfiledialog.c	110;"	d	file:
parent_class	widgets/gimpfiledialog.h	/^  GtkFileChooserDialogClass  parent_class;$/;"	m	struct:_GimpFileDialogClass
parent_class	widgets/gimpfileprocview.c	64;"	d	file:
parent_class	widgets/gimpfileprocview.h	/^  GtkTreeViewClass   parent_class;$/;"	m	struct:_GimpFileProcViewClass
parent_class	widgets/gimpfontselect.c	54;"	d	file:
parent_class	widgets/gimpfontselect.h	/^  GimpPdbDialogClass  parent_class;$/;"	m	struct:_GimpFontSelectClass
parent_class	widgets/gimpfontview.c	48;"	d	file:
parent_class	widgets/gimpfontview.h	/^  GimpContainerEditorClass  parent_class;$/;"	m	struct:_GimpFontViewClass
parent_class	widgets/gimpgradienteditor.c	254;"	d	file:
parent_class	widgets/gimpgradienteditor.h	/^  GimpDataEditorClass  parent_class;$/;"	m	struct:_GimpGradientEditorClass
parent_class	widgets/gimpgradientselect.c	65;"	d	file:
parent_class	widgets/gimpgradientselect.h	/^  GimpPdbDialogClass  parent_class;$/;"	m	struct:_GimpGradientSelectClass
parent_class	widgets/gimpgrideditor.c	74;"	d	file:
parent_class	widgets/gimpgrideditor.h	/^  GtkVBoxClass  parent_class;$/;"	m	struct:_GimpGridEditorClass
parent_class	widgets/gimphistogrambox.h	/^  GtkVBoxClass  parent_class;$/;"	m	struct:_GimpHistogramBoxClass
parent_class	widgets/gimphistogrameditor.c	73;"	d	file:
parent_class	widgets/gimphistogrameditor.h	/^  GimpImageEditorClass  parent_class;$/;"	m	struct:_GimpHistogramEditorClass
parent_class	widgets/gimphistogramview.c	86;"	d	file:
parent_class	widgets/gimphistogramview.h	/^  GtkDrawingAreaClass  parent_class;$/;"	m	struct:_GimpHistogramViewClass
parent_class	widgets/gimpimagecommenteditor.h	/^  GimpImageParasiteViewClass  parent_class;$/;"	m	struct:_GimpImageCommentEditorClass
parent_class	widgets/gimpimagedock.c	60;"	d	file:
parent_class	widgets/gimpimagedock.h	/^  GimpDockClass  parent_class;$/;"	m	struct:_GimpImageDockClass
parent_class	widgets/gimpimageeditor.c	49;"	d	file:
parent_class	widgets/gimpimageeditor.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpImageEditorClass
parent_class	widgets/gimpimageparasiteview.c	74;"	d	file:
parent_class	widgets/gimpimageparasiteview.h	/^  GtkVBoxClass  parent_class;$/;"	m	struct:_GimpImageParasiteViewClass
parent_class	widgets/gimpimageprofileview.c	51;"	d	file:
parent_class	widgets/gimpimageprofileview.h	/^  GimpImageParasiteViewClass  parent_class;$/;"	m	struct:_GimpImageProfileViewClass
parent_class	widgets/gimpimagepropview.c	90;"	d	file:
parent_class	widgets/gimpimagepropview.h	/^  GtkTableClass  parent_class;$/;"	m	struct:_GimpImagePropViewClass
parent_class	widgets/gimpimageview.c	49;"	d	file:
parent_class	widgets/gimpimageview.h	/^  GimpContainerEditorClass  parent_class;$/;"	m	struct:_GimpImageViewClass
parent_class	widgets/gimpitemtreeview.c	156;"	d	file:
parent_class	widgets/gimpitemtreeview.h	/^  GimpContainerTreeViewClass  parent_class;$/;"	m	struct:_GimpItemTreeViewClass
parent_class	widgets/gimplayertreeview.c	169;"	d	file:
parent_class	widgets/gimplayertreeview.h	/^  GimpDrawableTreeViewClass  parent_class;$/;"	m	struct:_GimpLayerTreeViewClass
parent_class	widgets/gimpmenudock.c	92;"	d	file:
parent_class	widgets/gimpmenudock.h	/^  GimpImageDockClass  parent_class;$/;"	m	struct:_GimpMenuDockClass
parent_class	widgets/gimpmenufactory.c	44;"	d	file:
parent_class	widgets/gimpmenufactory.h	/^  GimpObjectClass  parent_class;$/;"	m	struct:_GimpMenuFactoryClass
parent_class	widgets/gimpmessagebox.c	74;"	d	file:
parent_class	widgets/gimpmessagebox.h	/^  GtkVBoxClass  parent_class;$/;"	m	struct:_GimpMessageBoxClass
parent_class	widgets/gimpmessagedialog.h	/^  GimpDialogClass  parent_class;$/;"	m	struct:_GimpMessageDialogClass
parent_class	widgets/gimpnavigationview.c	77;"	d	file:
parent_class	widgets/gimpnavigationview.h	/^  GimpViewClass  parent_class;$/;"	m	struct:_GimpNavigationViewClass
parent_class	widgets/gimppaletteeditor.c	135;"	d	file:
parent_class	widgets/gimppaletteeditor.h	/^  GimpDataEditorClass  parent_class;$/;"	m	struct:_GimpPaletteEditorClass
parent_class	widgets/gimppaletteselect.c	53;"	d	file:
parent_class	widgets/gimppaletteselect.h	/^  GimpPdbDialogClass  parent_class;$/;"	m	struct:_GimpPaletteSelectClass
parent_class	widgets/gimppaletteview.c	85;"	d	file:
parent_class	widgets/gimppaletteview.h	/^  GimpViewClass  parent_class;$/;"	m	struct:_GimpPaletteViewClass
parent_class	widgets/gimppatternfactoryview.h	/^  GimpDataFactoryViewClass  parent_class;$/;"	m	struct:_GimpPatternFactoryViewClass
parent_class	widgets/gimppatternselect.c	55;"	d	file:
parent_class	widgets/gimppatternselect.h	/^  GimpPdbDialogClass  parent_class;$/;"	m	struct:_GimpPatternSelectClass
parent_class	widgets/gimppdbdialog.c	/^static GimpDialogClass *parent_class = NULL;$/;"	v	file:
parent_class	widgets/gimppdbdialog.h	/^  GimpDialogClass  parent_class;$/;"	m	struct:_GimpPdbDialogClass
parent_class	widgets/gimppluginaction.c	65;"	d	file:
parent_class	widgets/gimppluginaction.h	/^  GimpActionClass parent_class;$/;"	m	struct:_GimpPlugInActionClass
parent_class	widgets/gimpprofilechooserdialog.c	72;"	d	file:
parent_class	widgets/gimpprofilechooserdialog.h	/^  GtkFileChooserDialogClass  parent_class;$/;"	m	struct:_GimpProfileChooserDialogClass
parent_class	widgets/gimpprogressbox.h	/^  GtkVBoxClass  parent_class;$/;"	m	struct:_GimpProgressBoxClass
parent_class	widgets/gimpprogressdialog.c	65;"	d	file:
parent_class	widgets/gimpprogressdialog.h	/^  GimpDialogClass  parent_class;$/;"	m	struct:_GimpProgressDialogClass
parent_class	widgets/gimpsamplepointeditor.c	93;"	d	file:
parent_class	widgets/gimpsamplepointeditor.h	/^  GimpImageEditorClass  parent_class;$/;"	m	struct:_GimpSamplePointEditorClass
parent_class	widgets/gimpselectioneditor.c	86;"	d	file:
parent_class	widgets/gimpselectioneditor.h	/^  GimpImageEditorClass  parent_class;$/;"	m	struct:_GimpSelectionEditorClass
parent_class	widgets/gimpsizebox.c	93;"	d	file:
parent_class	widgets/gimpsizebox.h	/^  GtkVBoxClass  parent_class;$/;"	m	struct:_GimpSizeBoxClass
parent_class	widgets/gimpstringaction.c	61;"	d	file:
parent_class	widgets/gimpstringaction.h	/^  GimpActionClass parent_class;$/;"	m	struct:_GimpStringActionClass
parent_class	widgets/gimpstrokeeditor.c	70;"	d	file:
parent_class	widgets/gimpstrokeeditor.h	/^  GtkVBoxClass       parent_class;$/;"	m	struct:_GimpStrokeEditorClass
parent_class	widgets/gimptemplateeditor.c	78;"	d	file:
parent_class	widgets/gimptemplateeditor.h	/^  GtkVBoxClass   parent_class;$/;"	m	struct:_GimpTemplateEditorClass
parent_class	widgets/gimptemplateview.c	61;"	d	file:
parent_class	widgets/gimptemplateview.h	/^  GimpContainerEditorClass  parent_class;$/;"	m	struct:_GimpTemplateViewClass
parent_class	widgets/gimptexteditor.c	58;"	d	file:
parent_class	widgets/gimptexteditor.h	/^  GimpDialogClass   parent_class;$/;"	m	struct:_GimpTextEditorClass
parent_class	widgets/gimpthumbbox.c	105;"	d	file:
parent_class	widgets/gimpthumbbox.h	/^  GtkFrameClass  parent_class;$/;"	m	struct:_GimpThumbBoxClass
parent_class	widgets/gimptoolbox.c	126;"	d	file:
parent_class	widgets/gimptoolbox.h	/^  GimpImageDockClass  parent_class;$/;"	m	struct:_GimpToolboxClass
parent_class	widgets/gimptooloptionseditor.c	92;"	d	file:
parent_class	widgets/gimptooloptionseditor.h	/^  GimpEditorClass  parent_class;$/;"	m	struct:_GimpToolOptionsEditorClass
parent_class	widgets/gimptoolview.c	69;"	d	file:
parent_class	widgets/gimptoolview.h	/^  GimpContainerEditorClass  parent_class;$/;"	m	struct:_GimpToolViewClass
parent_class	widgets/gimpuimanager.c	117;"	d	file:
parent_class	widgets/gimpuimanager.h	/^  GtkUIManagerClass  parent_class;$/;"	m	struct:_GimpUIManagerClass
parent_class	widgets/gimpundoeditor.c	87;"	d	file:
parent_class	widgets/gimpundoeditor.h	/^  GimpImageEditorClass  parent_class;$/;"	m	struct:_GimpUndoEditorClass
parent_class	widgets/gimpunitcombobox.c	34;"	d	file:
parent_class	widgets/gimpunitstore.c	88;"	d	file:
parent_class	widgets/gimpunitstore.h	/^  GObjectClass  parent_class;$/;"	m	struct:_GimpUnitStoreClass
parent_class	widgets/gimpvectorstreeview.c	72;"	d	file:
parent_class	widgets/gimpvectorstreeview.h	/^  GimpItemTreeViewClass  parent_class;$/;"	m	struct:_GimpVectorsTreeViewClass
parent_class	widgets/gimpview.c	92;"	d	file:
parent_class	widgets/gimpview.h	/^  GtkWidgetClass  parent_class;$/;"	m	struct:_GimpViewClass
parent_class	widgets/gimpviewablebutton.c	70;"	d	file:
parent_class	widgets/gimpviewablebutton.h	/^  GimpButtonClass  parent_class;$/;"	m	struct:_GimpViewableButtonClass
parent_class	widgets/gimpviewabledialog.c	70;"	d	file:
parent_class	widgets/gimpviewabledialog.h	/^  GimpDialogClass  parent_class;$/;"	m	struct:_GimpViewableDialogClass
parent_class	widgets/gimpviewrenderer.c	78;"	d	file:
parent_class	widgets/gimpviewrenderer.h	/^  GObjectClass   parent_class;$/;"	m	struct:_GimpViewRendererClass
parent_class	widgets/gimpviewrendererbrush.c	46;"	d	file:
parent_class	widgets/gimpviewrendererbrush.h	/^  GimpViewRendererClass  parent_class;$/;"	m	struct:_GimpViewRendererBrushClass
parent_class	widgets/gimpviewrendererbuffer.c	44;"	d	file:
parent_class	widgets/gimpviewrendererbuffer.h	/^  GimpViewRendererClass  parent_class;$/;"	m	struct:_GimpViewRendererBufferClass
parent_class	widgets/gimpviewrendererdrawable.c	47;"	d	file:
parent_class	widgets/gimpviewrendererdrawable.h	/^  GimpViewRendererClass  parent_class;$/;"	m	struct:_GimpViewRendererDrawableClass
parent_class	widgets/gimpviewrenderergradient.c	51;"	d	file:
parent_class	widgets/gimpviewrenderergradient.h	/^  GimpViewRendererClass  parent_class;$/;"	m	struct:_GimpViewRendererGradientClass
parent_class	widgets/gimpviewrendererimage.c	44;"	d	file:
parent_class	widgets/gimpviewrendererimage.h	/^  GimpViewRendererClass  parent_class;$/;"	m	struct:_GimpViewRendererImageClass
parent_class	widgets/gimpviewrendererimagefile.c	51;"	d	file:
parent_class	widgets/gimpviewrendererimagefile.h	/^  GimpViewRendererClass parent_class;$/;"	m	struct:_GimpViewRendererImagefileClass
parent_class	widgets/gimpviewrendererlayer.c	42;"	d	file:
parent_class	widgets/gimpviewrendererlayer.h	/^  GimpViewRendererDrawableClass  parent_class;$/;"	m	struct:_GimpViewRendererLayerClass
parent_class	widgets/gimpviewrendererpalette.c	50;"	d	file:
parent_class	widgets/gimpviewrendererpalette.h	/^  GimpViewRendererClass  parent_class;$/;"	m	struct:_GimpViewRendererPaletteClass
parent_class	widgets/gimpviewrenderervectors.c	51;"	d	file:
parent_class	widgets/gimpviewrenderervectors.h	/^  GimpViewRendererClass  parent_class;$/;"	m	struct:_GimpViewRendererVectorsClass
parent_class	widgets/gtkhwrapbox.c	/^static gpointer parent_class = NULL;$/;"	v	file:
parent_class	widgets/gtkhwrapbox.h	/^  GtkWrapBoxClass parent_class;$/;"	m	struct:_GtkHWrapBoxClass
parent_class	widgets/gtkvwrapbox.c	/^static gpointer parent_class = NULL;$/;"	v	file:
parent_class	widgets/gtkvwrapbox.h	/^  GtkWrapBoxClass parent_class;$/;"	m	struct:_GtkVWrapBoxClass
parent_class	widgets/gtkwrapbox.c	/^static gpointer parent_class = NULL;$/;"	v	file:
parent_class	widgets/gtkwrapbox.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkWrapBoxClass
parent_docked_iface	widgets/gimpbrusheditor.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimpbufferview.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimpcoloreditor.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimpcursorview.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimpdataeditor.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimpgradienteditor.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimphistogrameditor.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimppaletteeditor.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimpselectioneditor.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_docked_iface	widgets/gimpundoeditor.c	/^static GimpDockedInterface *parent_docked_iface = NULL;$/;"	v	file:
parent_instance	config/gimpbaseconfig.h	/^  GObject   parent_instance;$/;"	m	struct:_GimpBaseConfig
parent_instance	config/gimpcoreconfig.h	/^  GimpBaseConfig          parent_instance;$/;"	m	struct:_GimpCoreConfig
parent_instance	config/gimpdisplayconfig.h	/^  GimpCoreConfig      parent_instance;$/;"	m	struct:_GimpDisplayConfig
parent_instance	config/gimpguiconfig.h	/^  GimpDisplayConfig    parent_instance;$/;"	m	struct:_GimpGuiConfig
parent_instance	config/gimppluginconfig.h	/^  GimpGuiConfig       parent_instance;$/;"	m	struct:_GimpPluginConfig
parent_instance	config/gimprc.h	/^  GimpPluginConfig  parent_instance;$/;"	m	struct:_GimpRc
parent_instance	core/gimp.h	/^  GimpObject              parent_instance;$/;"	m	struct:_Gimp
parent_instance	core/gimpbrush.h	/^  GimpData      parent_instance;$/;"	m	struct:_GimpBrush
parent_instance	core/gimpbrushclipboard.h	/^  GimpBrush  parent_instance;$/;"	m	struct:_GimpBrushClipboard
parent_instance	core/gimpbrushgenerated.h	/^  GimpBrush               parent_instance;$/;"	m	struct:_GimpBrushGenerated
parent_instance	core/gimpbrushpipe.h	/^  GimpBrush         parent_instance;$/;"	m	struct:_GimpBrushPipe
parent_instance	core/gimpbuffer.h	/^  GimpViewable  parent_instance;$/;"	m	struct:_GimpBuffer
parent_instance	core/gimpchannel.h	/^  GimpDrawable  parent_instance;$/;"	m	struct:_GimpChannel
parent_instance	core/gimpchannelpropundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpChannelPropUndo
parent_instance	core/gimpchannelundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpChannelUndo
parent_instance	core/gimpcontainer.h	/^  GimpObject           parent_instance;$/;"	m	struct:_GimpContainer
parent_instance	core/gimpcontext.h	/^  GimpObject            parent_instance;$/;"	m	struct:_GimpContext
parent_instance	core/gimpdata.h	/^  GimpViewable  parent_instance;$/;"	m	struct:_GimpData
parent_instance	core/gimpdatafactory.h	/^  GimpObject                        parent_instance;$/;"	m	struct:_GimpDataFactory
parent_instance	core/gimpdocumentlist.h	/^  GimpList  parent_instance;$/;"	m	struct:_GimpDocumentList
parent_instance	core/gimpdrawable.h	/^  GimpItem       parent_instance;$/;"	m	struct:_GimpDrawable
parent_instance	core/gimpdrawablemodundo.h	/^  GimpItemUndo   parent_instance;$/;"	m	struct:_GimpDrawableModUndo
parent_instance	core/gimpdrawableundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpDrawableUndo
parent_instance	core/gimpfloatingselundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpFloatingSelUndo
parent_instance	core/gimpgradient.h	/^  GimpData             parent_instance;$/;"	m	struct:_GimpGradient
parent_instance	core/gimpgrid.h	/^  GimpObject     parent_instance;$/;"	m	struct:_GimpGrid
parent_instance	core/gimpguide.h	/^  GObject              parent_instance;$/;"	m	struct:_GimpGuide
parent_instance	core/gimpguideundo.h	/^  GimpUndo             parent_instance;$/;"	m	struct:_GimpGuideUndo
parent_instance	core/gimpimage.h	/^  GimpViewable       parent_instance;$/;"	m	struct:_GimpImage
parent_instance	core/gimpimagefile.h	/^  GimpViewable        parent_instance;$/;"	m	struct:_GimpImagefile
parent_instance	core/gimpimagemap.c	/^  GimpObject             parent_instance;$/;"	m	struct:_GimpImageMap	file:
parent_instance	core/gimpimageundo.h	/^  GimpUndo           parent_instance;$/;"	m	struct:_GimpImageUndo
parent_instance	core/gimpitem.h	/^  GimpViewable      parent_instance;$/;"	m	struct:_GimpItem
parent_instance	core/gimpitempropundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpItemPropUndo
parent_instance	core/gimpitemundo.h	/^  GimpUndo  parent_instance;$/;"	m	struct:_GimpItemUndo
parent_instance	core/gimplayer.h	/^  GimpDrawable          parent_instance;$/;"	m	struct:_GimpLayer
parent_instance	core/gimplayermask.h	/^  GimpChannel  parent_instance;$/;"	m	struct:_GimpLayerMask
parent_instance	core/gimplayermaskpropundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpLayerMaskPropUndo
parent_instance	core/gimplayermaskundo.h	/^  GimpItemUndo   parent_instance;$/;"	m	struct:_GimpLayerMaskUndo
parent_instance	core/gimplayerpropundo.h	/^  GimpItemUndo         parent_instance;$/;"	m	struct:_GimpLayerPropUndo
parent_instance	core/gimplayerundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpLayerUndo
parent_instance	core/gimplist.h	/^  GimpContainer  parent_instance;$/;"	m	struct:_GimpList
parent_instance	core/gimpmaskundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpMaskUndo
parent_instance	core/gimpobject.h	/^  GObject  parent_instance;$/;"	m	struct:_GimpObject
parent_instance	core/gimppaintinfo.h	/^  GimpViewable      parent_instance;$/;"	m	struct:_GimpPaintInfo
parent_instance	core/gimppalette.h	/^  GimpData  parent_instance;$/;"	m	struct:_GimpPalette
parent_instance	core/gimpparamspecs.h	/^  GParamSpecBoxed parent_instance;$/;"	m	struct:_GimpParamSpecArray
parent_instance	core/gimpparamspecs.h	/^  GParamSpecBoxed parent_instance;$/;"	m	struct:_GimpParamSpecStringArray
parent_instance	core/gimpparamspecs.h	/^  GParamSpecEnum  parent_instance;$/;"	m	struct:_GimpParamSpecEnum
parent_instance	core/gimpparamspecs.h	/^  GParamSpecInt  parent_instance;$/;"	m	struct:_GimpParamSpecDisplayID
parent_instance	core/gimpparamspecs.h	/^  GParamSpecInt  parent_instance;$/;"	m	struct:_GimpParamSpecImageID
parent_instance	core/gimpparamspecs.h	/^  GParamSpecInt  parent_instance;$/;"	m	struct:_GimpParamSpecItemID
parent_instance	core/gimpparamspecs.h	/^  GParamSpecInt parent_instance;$/;"	m	struct:_GimpParamSpecInt16
parent_instance	core/gimpparamspecs.h	/^  GParamSpecInt parent_instance;$/;"	m	struct:_GimpParamSpecInt32
parent_instance	core/gimpparamspecs.h	/^  GParamSpecString parent_instance;$/;"	m	struct:_GimpParamSpecString
parent_instance	core/gimpparamspecs.h	/^  GParamSpecUInt parent_instance;$/;"	m	struct:_GimpParamSpecInt8
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecArray parent_instance;$/;"	m	struct:_GimpParamSpecFloatArray
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecArray parent_instance;$/;"	m	struct:_GimpParamSpecInt16Array
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecArray parent_instance;$/;"	m	struct:_GimpParamSpecInt32Array
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecArray parent_instance;$/;"	m	struct:_GimpParamSpecInt8Array
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecChannelID parent_instance;$/;"	m	struct:_GimpParamSpecLayerMaskID
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecChannelID parent_instance;$/;"	m	struct:_GimpParamSpecSelectionID
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecDrawableID parent_instance;$/;"	m	struct:_GimpParamSpecChannelID
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecDrawableID parent_instance;$/;"	m	struct:_GimpParamSpecLayerID
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecItemID parent_instance;$/;"	m	struct:_GimpParamSpecDrawableID
parent_instance	core/gimpparamspecs.h	/^  GimpParamSpecItemID parent_instance;$/;"	m	struct:_GimpParamSpecVectorsID
parent_instance	core/gimppattern.h	/^  GimpData  parent_instance;$/;"	m	struct:_GimpPattern
parent_instance	core/gimppatternclipboard.h	/^  GimpPattern  parent_instance;$/;"	m	struct:_GimpPatternClipboard
parent_instance	core/gimpprojection.h	/^  GimpObject                parent_instance;$/;"	m	struct:_GimpProjection
parent_instance	core/gimpsamplepointundo.h	/^  GimpUndo         parent_instance;$/;"	m	struct:_GimpSamplePointUndo
parent_instance	core/gimpselection.h	/^  GimpChannel parent_instance;$/;"	m	struct:_GimpSelection
parent_instance	core/gimpstrokedesc.h	/^  GimpObject         parent_instance;$/;"	m	struct:_GimpStrokeDesc
parent_instance	core/gimpstrokeoptions.h	/^  GimpContext      parent_instance;$/;"	m	struct:_GimpStrokeOptions
parent_instance	core/gimpsubprogress.h	/^  GObject       parent_instance;$/;"	m	struct:_GimpSubProgress
parent_instance	core/gimptemplate.h	/^  GimpViewable       parent_instance;$/;"	m	struct:_GimpTemplate
parent_instance	core/gimptemplate.h	/^  GimpViewableClass  parent_instance;$/;"	m	struct:_GimpTemplateClass
parent_instance	core/gimptoolinfo.h	/^  GimpViewable         parent_instance;$/;"	m	struct:_GimpToolInfo
parent_instance	core/gimptooloptions.h	/^  GimpContext   parent_instance;$/;"	m	struct:_GimpToolOptions
parent_instance	core/gimptoolpresets.h	/^  GimpList      parent_instance;$/;"	m	struct:_GimpToolPresets
parent_instance	core/gimpundo.h	/^  GimpViewable      parent_instance;$/;"	m	struct:_GimpUndo
parent_instance	core/gimpundostack.h	/^  GimpUndo       parent_instance;$/;"	m	struct:_GimpUndoStack
parent_instance	core/gimpviewable.h	/^  GimpObject  parent_instance;$/;"	m	struct:_GimpViewable
parent_instance	display/gimpcanvas.h	/^  GtkDrawingArea  parent_instance;$/;"	m	struct:_GimpCanvas
parent_instance	display/gimpdisplay.h	/^  GimpObject  parent_instance;$/;"	m	struct:_GimpDisplay
parent_instance	display/gimpdisplayoptions.h	/^  GObject                parent_instance;$/;"	m	struct:_GimpDisplayOptions
parent_instance	display/gimpdisplayshell.h	/^  GtkWindow         parent_instance;$/;"	m	struct:_GimpDisplayShell
parent_instance	display/gimpnavigationeditor.h	/^  GimpEditor        parent_instance;$/;"	m	struct:_GimpNavigationEditor
parent_instance	display/gimpscalecombobox.h	/^  GtkComboBox       parent_instance;$/;"	m	struct:_GimpScaleComboBox
parent_instance	display/gimpscalecombobox.h	/^  GtkComboBoxClass  parent_instance;$/;"	m	struct:_GimpScaleComboBoxClass
parent_instance	display/gimpstatusbar.h	/^  GtkHBox           parent_instance;$/;"	m	struct:_GimpStatusbar
parent_instance	paint/gimpairbrush.h	/^  GimpPaintbrush    parent_instance;$/;"	m	struct:_GimpAirbrush
parent_instance	paint/gimpairbrushoptions.h	/^  GimpPaintOptions  parent_instance;$/;"	m	struct:_GimpAirbrushOptions
parent_instance	paint/gimpbrushcore.h	/^  GimpPaintCore  parent_instance;$/;"	m	struct:_GimpBrushCore
parent_instance	paint/gimpclone.h	/^  GimpSourceCore  parent_instance;$/;"	m	struct:_GimpClone
parent_instance	paint/gimpcloneoptions.h	/^  GimpSourceOptions  parent_instance;$/;"	m	struct:_GimpCloneOptions
parent_instance	paint/gimpconvolve.h	/^  GimpBrushCore  parent_instance;$/;"	m	struct:_GimpConvolve
parent_instance	paint/gimpconvolveoptions.h	/^  GimpPaintOptions  parent_instance;$/;"	m	struct:_GimpConvolveOptions
parent_instance	paint/gimpdodgeburn.h	/^  GimpBrushCore  parent_instance;$/;"	m	struct:_GimpDodgeBurn
parent_instance	paint/gimpdodgeburnoptions.h	/^  GimpPaintOptions   parent_instance;$/;"	m	struct:_GimpDodgeBurnOptions
parent_instance	paint/gimperaser.h	/^  GimpBrushCore  parent_instance;$/;"	m	struct:_GimpEraser
parent_instance	paint/gimperaseroptions.h	/^  GimpPaintOptions  parent_instance;$/;"	m	struct:_GimpEraserOptions
parent_instance	paint/gimpheal.h	/^  GimpSourceCore  parent_instance;$/;"	m	struct:_GimpHeal
parent_instance	paint/gimpink.h	/^  GimpPaintCore  parent_instance;$/;"	m	struct:_GimpInk
parent_instance	paint/gimpinkoptions.h	/^  GimpPaintOptions  parent_instance;$/;"	m	struct:_GimpInkOptions
parent_instance	paint/gimpinkoptions.h	/^  GimpPaintOptionsClass  parent_instance;$/;"	m	struct:_GimpInkOptionsClass
parent_instance	paint/gimpinkundo.h	/^  GimpPaintCoreUndo  parent_instance;$/;"	m	struct:_GimpInkUndo
parent_instance	paint/gimppaintbrush.h	/^  GimpBrushCore  parent_instance;$/;"	m	struct:_GimpPaintbrush
parent_instance	paint/gimppaintcore.h	/^  GimpObject   parent_instance;$/;"	m	struct:_GimpPaintCore
parent_instance	paint/gimppaintcoreundo.h	/^  GimpUndo       parent_instance;$/;"	m	struct:_GimpPaintCoreUndo
parent_instance	paint/gimppaintoptions.h	/^  GimpToolOptions           parent_instance;$/;"	m	struct:_GimpPaintOptions
parent_instance	paint/gimppaintoptions.h	/^  GimpToolOptionsClass  parent_instance;$/;"	m	struct:_GimpPaintOptionsClass
parent_instance	paint/gimppencil.h	/^  GimpPaintbrush  parent_instance;$/;"	m	struct:_GimpPencil
parent_instance	paint/gimppenciloptions.h	/^  GimpPaintOptions  parent_instance;$/;"	m	struct:_GimpPencilOptions
parent_instance	paint/gimpperspectiveclone.h	/^  GimpClone    parent_instance;$/;"	m	struct:_GimpPerspectiveClone
parent_instance	paint/gimpsmudge.h	/^  GimpBrushCore  parent_instance;$/;"	m	struct:_GimpSmudge
parent_instance	paint/gimpsmudgeoptions.h	/^  GimpPaintOptions  parent_instance;$/;"	m	struct:_GimpSmudgeOptions
parent_instance	paint/gimpsourcecore.h	/^  GimpBrushCore  parent_instance;$/;"	m	struct:_GimpSourceCore
parent_instance	paint/gimpsourceoptions.h	/^  GimpPaintOptions     parent_instance;$/;"	m	struct:_GimpSourceOptions
parent_instance	pdb/gimppdb.h	/^  GimpObject  parent_instance;$/;"	m	struct:_GimpPDB
parent_instance	pdb/gimpprocedure.h	/^  GimpObject        parent_instance;$/;"	m	struct:_GimpProcedure
parent_instance	plug-in/gimpenvirontable.h	/^  GObject      parent_instance;$/;"	m	struct:_GimpEnvironTable
parent_instance	plug-in/gimpinterpreterdb.h	/^  GObject     parent_instance;$/;"	m	struct:_GimpInterpreterDB
parent_instance	plug-in/gimpplugin.h	/^  GimpObject           parent_instance;$/;"	m	struct:_GimpPlugIn
parent_instance	plug-in/gimpplugindef.h	/^  GimpObject  parent_instance;$/;"	m	struct:_GimpPlugInDef
parent_instance	plug-in/gimppluginmanager.h	/^  GimpObject         parent_instance;$/;"	m	struct:_GimpPlugInManager
parent_instance	plug-in/gimppluginprocedure.h	/^  GimpProcedure        parent_instance;$/;"	m	struct:_GimpPlugInProcedure
parent_instance	plug-in/gimptemporaryprocedure.h	/^  GimpPlugInProcedure  parent_instance;$/;"	m	struct:_GimpTemporaryProcedure
parent_instance	text/gimpfont.c	/^  GimpViewable  parent_instance;$/;"	m	struct:_GimpFont	file:
parent_instance	text/gimpfontlist.h	/^  GimpList  parent_instance;$/;"	m	struct:_GimpFontList
parent_instance	text/gimptext.h	/^  GimpObject             parent_instance;$/;"	m	struct:_GimpText
parent_instance	text/gimptextundo.h	/^  GimpItemUndo      parent_instance;$/;"	m	struct:_GimpTextUndo
parent_instance	tools/gimpairbrushtool.h	/^  GimpPaintbrushTool parent_instance;$/;"	m	struct:_GimpAirbrushTool
parent_instance	tools/gimpaligntool.h	/^  GimpDrawTool           parent_instance;$/;"	m	struct:_GimpAlignTool
parent_instance	tools/gimpblendtool.h	/^  GimpDrawTool  parent_instance;$/;"	m	struct:_GimpBlendTool
parent_instance	tools/gimpbrightnesscontrasttool.h	/^  GimpImageMapTool  parent_instance;$/;"	m	struct:_GimpBrightnessContrastTool
parent_instance	tools/gimpbrushtool.h	/^  GimpPaintTool  parent_instance;$/;"	m	struct:_GimpBrushTool
parent_instance	tools/gimpbucketfilltool.h	/^  GimpTool  parent_instance;$/;"	m	struct:_GimpBucketFillTool
parent_instance	tools/gimpbycolorselecttool.h	/^  GimpRegionSelectTool  parent_instance;$/;"	m	struct:_GimpByColorSelectTool
parent_instance	tools/gimpclonetool.h	/^  GimpSourceTool parent_instance;$/;"	m	struct:_GimpCloneTool
parent_instance	tools/gimpcolorbalancetool.h	/^  GimpImageMapTool  parent_instance;$/;"	m	struct:_GimpColorBalanceTool
parent_instance	tools/gimpcolorizetool.h	/^  GimpImageMapTool  parent_instance;$/;"	m	struct:_GimpColorizeTool
parent_instance	tools/gimpcoloroptions.h	/^  GimpImageMapOptions  parent_instance;$/;"	m	struct:_GimpColorOptions
parent_instance	tools/gimpcolorpickeroptions.h	/^  GimpColorOptions   parent_instance;$/;"	m	struct:_GimpColorPickerOptions
parent_instance	tools/gimpcolorpickertool.h	/^  GimpColorTool  parent_instance;$/;"	m	struct:_GimpColorPickerTool
parent_instance	tools/gimpcolortool.h	/^  GimpDrawTool       parent_instance;$/;"	m	struct:_GimpColorTool
parent_instance	tools/gimpconvolvetool.h	/^  GimpBrushTool parent_instance;$/;"	m	struct:_GimpConvolveTool
parent_instance	tools/gimpcroptool.h	/^  GimpDrawTool  parent_instance;$/;"	m	struct:_GimpCropTool
parent_instance	tools/gimpcurvestool.h	/^  GimpImageMapTool      parent_instance;$/;"	m	struct:_GimpCurvesTool
parent_instance	tools/gimpdodgeburntool.h	/^  GimpBrushTool parent_instance;$/;"	m	struct:_GimpDodgeBurnTool
parent_instance	tools/gimpdrawtool.h	/^  GimpTool      parent_instance;$/;"	m	struct:_GimpDrawTool
parent_instance	tools/gimpeditselectiontool.h	/^  GimpDrawTool        parent_instance;$/;"	m	struct:_GimpEditSelectionTool
parent_instance	tools/gimpellipseselecttool.h	/^  GimpRectSelectTool  parent_instance;$/;"	m	struct:_GimpEllipseSelectTool
parent_instance	tools/gimperasertool.h	/^  GimpBrushTool parent_instance;$/;"	m	struct:_GimpEraserTool
parent_instance	tools/gimpflipoptions.h	/^  GimpTransformOptions  parent_instance;$/;"	m	struct:_GimpFlipOptions
parent_instance	tools/gimpfliptool.h	/^  GimpTransformTool  parent_instance;$/;"	m	struct:_GimpFlipTool
parent_instance	tools/gimpforegroundselectoptions.h	/^  GimpSelectionOptions  parent_instance;$/;"	m	struct:_GimpForegroundSelectOptions
parent_instance	tools/gimpforegroundselecttool.h	/^  GimpFreeSelectTool  parent_instance;$/;"	m	struct:_GimpForegroundSelectTool
parent_instance	tools/gimpforegroundselecttoolundo.h	/^  GimpUndo                  parent_instance;$/;"	m	struct:_GimpForegroundSelectToolUndo
parent_instance	tools/gimpfreeselecttool.h	/^  GimpSelectionTool  parent_instance;$/;"	m	struct:_GimpFreeSelectTool
parent_instance	tools/gimpfuzzyselecttool.h	/^  GimpRegionSelectTool  parent_instance;$/;"	m	struct:_GimpFuzzySelectTool
parent_instance	tools/gimphealtool.h	/^  GimpSourceTool  parent_instance;$/;"	m	struct:_GimpHealTool
parent_instance	tools/gimphistogramoptions.h	/^  GimpColorOptions    parent_instance;$/;"	m	struct:_GimpHistogramOptions
parent_instance	tools/gimphuesaturationtool.h	/^  GimpImageMapTool  parent_instance;$/;"	m	struct:_GimpHueSaturationTool
parent_instance	tools/gimpimagemapoptions.h	/^  GimpToolOptions  parent_instance;$/;"	m	struct:_GimpImageMapOptions
parent_instance	tools/gimpimagemaptool.h	/^  GimpColorTool  parent_instance;$/;"	m	struct:_GimpImageMapTool
parent_instance	tools/gimpinktool.h	/^  GimpPaintTool parent_instance;$/;"	m	struct:_GimpInkTool
parent_instance	tools/gimpiscissorstool.h	/^  GimpSelectionTool  parent_instance;$/;"	m	struct:_GimpIscissorsTool
parent_instance	tools/gimplevelstool.h	/^  GimpImageMapTool      parent_instance;$/;"	m	struct:_GimpLevelsTool
parent_instance	tools/gimpmagnifyoptions.h	/^  GimpToolOptions   parent_instance;$/;"	m	struct:_GimpMagnifyOptions
parent_instance	tools/gimpmagnifytool.h	/^  GimpDrawTool  parent_instance;$/;"	m	struct:_GimpMagnifyTool
parent_instance	tools/gimpmeasureoptions.h	/^  GimpToolOptions  parent_instance;$/;"	m	struct:_GimpMeasureOptions
parent_instance	tools/gimpmeasuretool.h	/^  GimpDrawTool     parent_instance;$/;"	m	struct:_GimpMeasureTool
parent_instance	tools/gimpmovetool.h	/^  GimpDrawTool         parent_instance;$/;"	m	struct:_GimpMoveTool
parent_instance	tools/gimppaintbrushtool.h	/^  GimpBrushTool parent_instance;$/;"	m	struct:_GimpPaintbrushTool
parent_instance	tools/gimppainttool.h	/^  GimpColorTool    parent_instance;$/;"	m	struct:_GimpPaintTool
parent_instance	tools/gimppenciltool.h	/^  GimpPaintbrushTool parent_instance;$/;"	m	struct:_GimpPencilTool
parent_instance	tools/gimpperspectiveclonetool.h	/^  GimpBrushTool   parent_instance;$/;"	m	struct:_GimpPerspectiveCloneTool
parent_instance	tools/gimpperspectivetool.h	/^  GimpTransformTool  parent_instance;$/;"	m	struct:_GimpPerspectiveTool
parent_instance	tools/gimpposterizetool.h	/^  GimpImageMapTool  parent_instance;$/;"	m	struct:_GimpPosterizeTool
parent_instance	tools/gimprectangleselecttool.h	/^  GimpSelectionTool  parent_instance;$/;"	m	struct:_GimpRectSelectTool
parent_instance	tools/gimpregionselecttool.h	/^  GimpSelectionTool  parent_instance;$/;"	m	struct:_GimpRegionSelectTool
parent_instance	tools/gimprotatetool.h	/^  GimpTransformTool  parent_instance;$/;"	m	struct:_GimpRotateTool
parent_instance	tools/gimpscaletool.h	/^  GimpTransformTool  parent_instance;$/;"	m	struct:_GimpScaleTool
parent_instance	tools/gimpselectionoptions.h	/^  GimpToolOptions     parent_instance;$/;"	m	struct:_GimpSelectionOptions
parent_instance	tools/gimpselectiontool.h	/^  GimpDrawTool   parent_instance;$/;"	m	struct:_GimpSelectionTool
parent_instance	tools/gimpsheartool.h	/^  GimpTransformTool  parent_instance;$/;"	m	struct:_GimpShearTool
parent_instance	tools/gimpsmudgetool.h	/^  GimpBrushTool parent_instance;$/;"	m	struct:_GimpSmudgeTool
parent_instance	tools/gimpsourcetool.h	/^  GimpBrushTool  parent_instance;$/;"	m	struct:_GimpSourceTool
parent_instance	tools/gimptexttool.h	/^  GimpTool       parent_instance;$/;"	m	struct:_GimpTextTool
parent_instance	tools/gimpthresholdtool.h	/^  GimpImageMapTool  parent_instance;$/;"	m	struct:_GimpThresholdTool
parent_instance	tools/gimptool.h	/^  GimpObject       parent_instance;$/;"	m	struct:_GimpTool
parent_instance	tools/gimptoolcontrol.h	/^  GimpObject         parent_instance;$/;"	m	struct:_GimpToolControl
parent_instance	tools/gimptransformoptions.h	/^  GimpToolOptions           parent_instance;$/;"	m	struct:_GimpTransformOptions
parent_instance	tools/gimptransformtool.h	/^  GimpDrawTool    parent_instance;$/;"	m	struct:_GimpTransformTool
parent_instance	tools/gimptransformtoolundo.h	/^  GimpUndo           parent_instance;$/;"	m	struct:_GimpTransformToolUndo
parent_instance	tools/gimpvectoroptions.h	/^  GimpToolOptions  parent_instance;$/;"	m	struct:_GimpVectorOptions
parent_instance	tools/gimpvectortool.h	/^  GimpDrawTool          parent_instance;$/;"	m	struct:_GimpVectorTool
parent_instance	vectors/gimpbezierstroke.h	/^  GimpStroke  parent_instance;$/;"	m	struct:_GimpBezierStroke
parent_instance	vectors/gimpstroke.h	/^  GimpObject  parent_instance;$/;"	m	struct:_GimpStroke
parent_instance	vectors/gimpvectors.h	/^  GimpItem  parent_instance;$/;"	m	struct:_GimpVectors
parent_instance	vectors/gimpvectorsmodundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpVectorsModUndo
parent_instance	vectors/gimpvectorspropundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpVectorsPropUndo
parent_instance	vectors/gimpvectorsundo.h	/^  GimpItemUndo  parent_instance;$/;"	m	struct:_GimpVectorsUndo
parent_instance	widgets/gimpaction.h	/^  GtkAction     parent_instance;$/;"	m	struct:_GimpAction
parent_instance	widgets/gimpactionfactory.h	/^  GimpObject  parent_instance;$/;"	m	struct:_GimpActionFactory
parent_instance	widgets/gimpactiongroup.h	/^  GtkActionGroup             parent_instance;$/;"	m	struct:_GimpActionGroup
parent_instance	widgets/gimpactionview.h	/^  GtkTreeView    parent_instance;$/;"	m	struct:_GimpActionView
parent_instance	widgets/gimpblobeditor.h	/^  GtkDrawingArea       parent_instance;$/;"	m	struct:_GimpBlobEditor
parent_instance	widgets/gimpbrusheditor.h	/^  GimpDataEditor  parent_instance;$/;"	m	struct:_GimpBrushEditor
parent_instance	widgets/gimpbrushfactoryview.h	/^  GimpDataFactoryView  parent_instance;$/;"	m	struct:_GimpBrushFactoryView
parent_instance	widgets/gimpbrushselect.h	/^  GimpPdbDialog         parent_instance;$/;"	m	struct:_GimpBrushSelect
parent_instance	widgets/gimpbufferview.h	/^  GimpContainerEditor  parent_instance;$/;"	m	struct:_GimpBufferView
parent_instance	widgets/gimpcellrendererdashes.h	/^  GtkCellRenderer   parent_instance;$/;"	m	struct:_GimpCellRendererDashes
parent_instance	widgets/gimpcellrendererviewable.h	/^  GtkCellRenderer   parent_instance;$/;"	m	struct:_GimpCellRendererViewable
parent_instance	widgets/gimpchanneltreeview.h	/^  GimpDrawableTreeView  parent_instance;$/;"	m	struct:_GimpChannelTreeView
parent_instance	widgets/gimpcolordialog.h	/^  GimpViewableDialog   parent_instance;$/;"	m	struct:_GimpColorDialog
parent_instance	widgets/gimpcolordisplayeditor.h	/^  GtkVBox                parent_instance;$/;"	m	struct:_GimpColorDisplayEditor
parent_instance	widgets/gimpcoloreditor.h	/^  GimpEditor   parent_instance;$/;"	m	struct:_GimpColorEditor
parent_instance	widgets/gimpcolorframe.h	/^  GimpFrame           parent_instance;$/;"	m	struct:_GimpColorFrame
parent_instance	widgets/gimpcolormapeditor.h	/^  GimpImageEditor  parent_instance;$/;"	m	struct:_GimpColormapEditor
parent_instance	widgets/gimpcolorpanel.h	/^  GimpColorButton  parent_instance;$/;"	m	struct:_GimpColorPanel
parent_instance	widgets/gimpcolorselectorpalette.h	/^  GimpColorSelector  parent_instance;$/;"	m	struct:_GimpColorSelectorPalette
parent_instance	widgets/gimpcomponenteditor.h	/^  GimpImageEditor    parent_instance;$/;"	m	struct:_GimpComponentEditor
parent_instance	widgets/gimpcontainerbox.h	/^  GimpEditor  parent_instance;$/;"	m	struct:_GimpContainerBox
parent_instance	widgets/gimpcontainercombobox.h	/^  GtkComboBox         parent_instance;$/;"	m	struct:_GimpContainerComboBox
parent_instance	widgets/gimpcontainereditor.h	/^  GtkVBox            parent_instance;$/;"	m	struct:_GimpContainerEditor
parent_instance	widgets/gimpcontainerentry.h	/^  GtkEntry        parent_instance;$/;"	m	struct:_GimpContainerEntry
parent_instance	widgets/gimpcontainergridview.h	/^  GimpContainerBox  parent_instance;$/;"	m	struct:_GimpContainerGridView
parent_instance	widgets/gimpcontainerpopup.h	/^  GtkWindow            parent_instance;$/;"	m	struct:_GimpContainerPopup
parent_instance	widgets/gimpcontainerpopup.h	/^  GtkWindowClass  parent_instance;$/;"	m	struct:_GimpContainerPopupClass
parent_instance	widgets/gimpcontainertreeview.h	/^  GimpContainerBox   parent_instance;$/;"	m	struct:_GimpContainerTreeView
parent_instance	widgets/gimpcontrollereditor.h	/^  GtkVBox             parent_instance;$/;"	m	struct:_GimpControllerEditor
parent_instance	widgets/gimpcontrollerinfo.h	/^  GimpViewable                parent_instance;$/;"	m	struct:_GimpControllerInfo
parent_instance	widgets/gimpcontrollerkeyboard.h	/^  GimpController parent_instance;$/;"	m	struct:_GimpControllerKeyboard
parent_instance	widgets/gimpcontrollerlist.h	/^  GtkVBox             parent_instance;$/;"	m	struct:_GimpControllerList
parent_instance	widgets/gimpcontrollerwheel.h	/^  GimpController parent_instance;$/;"	m	struct:_GimpControllerWheel
parent_instance	widgets/gimpcursorview.h	/^  GimpEditor   parent_instance;$/;"	m	struct:_GimpCursorView
parent_instance	widgets/gimpdasheditor.h	/^  GtkDrawingArea     parent_instance;$/;"	m	struct:_GimpDashEditor
parent_instance	widgets/gimpdataeditor.h	/^  GimpEditor       parent_instance;$/;"	m	struct:_GimpDataEditor
parent_instance	widgets/gimpdatafactoryview.h	/^  GimpContainerEditor  parent_instance;$/;"	m	struct:_GimpDataFactoryView
parent_instance	widgets/gimpdbusservice.h	/^  GObject  parent_instance;$/;"	m	struct:_GimpDBusService
parent_instance	widgets/gimpdeviceinfo.h	/^  GimpContext    parent_instance;$/;"	m	struct:_GimpDeviceInfo
parent_instance	widgets/gimpdevicestatus.h	/^  GimpEditor  parent_instance;$/;"	m	struct:_GimpDeviceStatus
parent_instance	widgets/gimpdialogfactory.h	/^  GimpObject             parent_instance;$/;"	m	struct:_GimpDialogFactory
parent_instance	widgets/gimpdock.h	/^  GtkWindow          parent_instance;$/;"	m	struct:_GimpDock
parent_instance	widgets/gimpdockable.h	/^  GtkBin        parent_instance;$/;"	m	struct:_GimpDockable
parent_instance	widgets/gimpdockbook.h	/^  GtkNotebook    parent_instance;$/;"	m	struct:_GimpDockbook
parent_instance	widgets/gimpdockseparator.h	/^  GtkEventBox  parent_instance;$/;"	m	struct:_GimpDockSeparator
parent_instance	widgets/gimpdocumentview.h	/^  GimpContainerEditor  parent_instance;$/;"	m	struct:_GimpDocumentView
parent_instance	widgets/gimpdrawabletreeview.h	/^  GimpItemTreeView  parent_instance;$/;"	m	struct:_GimpDrawableTreeView
parent_instance	widgets/gimpeditor.h	/^  GtkVBox          parent_instance;$/;"	m	struct:_GimpEditor
parent_instance	widgets/gimpenumaction.h	/^  GimpAction parent_instance;$/;"	m	struct:_GimpEnumAction
parent_instance	widgets/gimperrorconsole.h	/^  GimpEditor     parent_instance;$/;"	m	struct:_GimpErrorConsole
parent_instance	widgets/gimperrordialog.h	/^  GimpDialog       parent_instance;$/;"	m	struct:_GimpErrorDialog
parent_instance	widgets/gimpfgbgeditor.h	/^  GtkDrawingArea   parent_instance;$/;"	m	struct:_GimpFgBgEditor
parent_instance	widgets/gimpfgbgview.h	/^  GtkWidget    parent_instance;$/;"	m	struct:_GimpFgBgView
parent_instance	widgets/gimpfiledialog.h	/^  GtkFileChooserDialog  parent_instance;$/;"	m	struct:_GimpFileDialog
parent_instance	widgets/gimpfileprocview.h	/^  GtkTreeView        parent_instance;$/;"	m	struct:_GimpFileProcView
parent_instance	widgets/gimpfontselect.h	/^  GimpPdbDialog  parent_instance;$/;"	m	struct:_GimpFontSelect
parent_instance	widgets/gimpfontview.h	/^  GimpContainerEditor  parent_instance;$/;"	m	struct:_GimpFontView
parent_instance	widgets/gimpgradienteditor.h	/^  GimpDataEditor  parent_instance;$/;"	m	struct:_GimpGradientEditor
parent_instance	widgets/gimpgradientselect.h	/^  GimpPdbDialog  parent_instance;$/;"	m	struct:_GimpGradientSelect
parent_instance	widgets/gimpgrideditor.h	/^  GtkVBox       parent_instance;$/;"	m	struct:_GimpGridEditor
parent_instance	widgets/gimphistogrambox.h	/^  GtkVBox            parent_instance;$/;"	m	struct:_GimpHistogramBox
parent_instance	widgets/gimphistogrameditor.h	/^  GimpImageEditor       parent_instance;$/;"	m	struct:_GimpHistogramEditor
parent_instance	widgets/gimphistogramview.h	/^  GtkDrawingArea         parent_instance;$/;"	m	struct:_GimpHistogramView
parent_instance	widgets/gimpimagecommenteditor.h	/^  GimpImageParasiteView  parent_instance;$/;"	m	struct:_GimpImageCommentEditor
parent_instance	widgets/gimpimagedock.h	/^  GimpDock       parent_instance;$/;"	m	struct:_GimpImageDock
parent_instance	widgets/gimpimageeditor.h	/^  GimpEditor   parent_instance;$/;"	m	struct:_GimpImageEditor
parent_instance	widgets/gimpimageparasiteview.h	/^  GtkVBox    parent_instance;$/;"	m	struct:_GimpImageParasiteView
parent_instance	widgets/gimpimageprofileview.h	/^  GimpImageParasiteView  parent_instance;$/;"	m	struct:_GimpImageProfileView
parent_instance	widgets/gimpimagepropview.h	/^  GtkTable   parent_instance;$/;"	m	struct:_GimpImagePropView
parent_instance	widgets/gimpimageview.h	/^  GimpContainerEditor  parent_instance;$/;"	m	struct:_GimpImageView
parent_instance	widgets/gimpitemtreeview.h	/^  GimpContainerTreeView  parent_instance;$/;"	m	struct:_GimpItemTreeView
parent_instance	widgets/gimplayertreeview.h	/^  GimpDrawableTreeView  parent_instance;$/;"	m	struct:_GimpLayerTreeView
parent_instance	widgets/gimpmenudock.h	/^  GimpImageDock  parent_instance;$/;"	m	struct:_GimpMenuDock
parent_instance	widgets/gimpmenufactory.h	/^  GimpObject         parent_instance;$/;"	m	struct:_GimpMenuFactory
parent_instance	widgets/gimpmessagebox.h	/^  GtkVBox       parent_instance;$/;"	m	struct:_GimpMessageBox
parent_instance	widgets/gimpmessagedialog.h	/^  GimpDialog       parent_instance;$/;"	m	struct:_GimpMessageDialog
parent_instance	widgets/gimpnavigationview.h	/^  GimpView     parent_instance;$/;"	m	struct:_GimpNavigationView
parent_instance	widgets/gimppaletteeditor.h	/^  GimpDataEditor    parent_instance;$/;"	m	struct:_GimpPaletteEditor
parent_instance	widgets/gimppaletteselect.h	/^  GimpPdbDialog  parent_instance;$/;"	m	struct:_GimpPaletteSelect
parent_instance	widgets/gimppaletteview.h	/^  GimpView          parent_instance;$/;"	m	struct:_GimpPaletteView
parent_instance	widgets/gimppatternfactoryview.h	/^  GimpDataFactoryView  parent_instance;$/;"	m	struct:_GimpPatternFactoryView
parent_instance	widgets/gimppatternselect.h	/^  GimpPdbDialog  parent_instance;$/;"	m	struct:_GimpPatternSelect
parent_instance	widgets/gimppdbdialog.h	/^  GimpDialog       parent_instance;$/;"	m	struct:_GimpPdbDialog
parent_instance	widgets/gimppluginaction.h	/^  GimpAction           parent_instance;$/;"	m	struct:_GimpPlugInAction
parent_instance	widgets/gimpprofilechooserdialog.h	/^  GtkFileChooserDialog  parent_instance;$/;"	m	struct:_GimpProfileChooserDialog
parent_instance	widgets/gimpprogressbox.h	/^  GtkVBox     parent_instance;$/;"	m	struct:_GimpProgressBox
parent_instance	widgets/gimpprogressdialog.h	/^  GimpDialog  parent_instance;$/;"	m	struct:_GimpProgressDialog
parent_instance	widgets/gimpsamplepointeditor.h	/^  GimpImageEditor  parent_instance;$/;"	m	struct:_GimpSamplePointEditor
parent_instance	widgets/gimpselectioneditor.h	/^  GimpImageEditor  parent_instance;$/;"	m	struct:_GimpSelectionEditor
parent_instance	widgets/gimpsizebox.h	/^  GtkVBox       parent_instance;$/;"	m	struct:_GimpSizeBox
parent_instance	widgets/gimpstringaction.h	/^  GimpAction  parent_instance;$/;"	m	struct:_GimpStringAction
parent_instance	widgets/gimpstrokeeditor.h	/^  GtkVBox            parent_instance;$/;"	m	struct:_GimpStrokeEditor
parent_instance	widgets/gimptemplateeditor.h	/^  GtkVBox        parent_instance;$/;"	m	struct:_GimpTemplateEditor
parent_instance	widgets/gimptemplateview.h	/^  GimpContainerEditor  parent_instance;$/;"	m	struct:_GimpTemplateView
parent_instance	widgets/gimptexteditor.h	/^  GimpDialog         parent_instance;$/;"	m	struct:_GimpTextEditor
parent_instance	widgets/gimpthumbbox.h	/^  GtkFrame       parent_instance;$/;"	m	struct:_GimpThumbBox
parent_instance	widgets/gimptoolbox.h	/^  GimpImageDock  parent_instance;$/;"	m	struct:_GimpToolbox
parent_instance	widgets/gimptooldialog.h	/^  GimpViewableDialog  parent_instance;$/;"	m	struct:_GimpToolDialog
parent_instance	widgets/gimptooloptionseditor.h	/^  GimpEditor       parent_instance;$/;"	m	struct:_GimpToolOptionsEditor
parent_instance	widgets/gimptoolview.h	/^  GimpContainerEditor  parent_instance;$/;"	m	struct:_GimpToolView
parent_instance	widgets/gimpuimanager.h	/^  GtkUIManager  parent_instance;$/;"	m	struct:_GimpUIManager
parent_instance	widgets/gimpundoeditor.h	/^  GimpImageEditor  parent_instance;$/;"	m	struct:_GimpUndoEditor
parent_instance	widgets/gimpunitcombobox.h	/^  GtkComboBox       parent_instance;$/;"	m	struct:_GimpUnitComboBox
parent_instance	widgets/gimpunitcombobox.h	/^  GtkComboBoxClass  parent_instance;$/;"	m	struct:_GimpUnitComboBoxClass
parent_instance	widgets/gimpunitstore.h	/^  GObject       parent_instance;$/;"	m	struct:_GimpUnitStore
parent_instance	widgets/gimpvectorstreeview.h	/^  GimpItemTreeView  parent_instance;$/;"	m	struct:_GimpVectorsTreeView
parent_instance	widgets/gimpview.h	/^  GtkWidget         parent_instance;$/;"	m	struct:_GimpView
parent_instance	widgets/gimpviewablebutton.h	/^  GimpButton         parent_instance;$/;"	m	struct:_GimpViewableButton
parent_instance	widgets/gimpviewabledialog.h	/^  GimpDialog   parent_instance;$/;"	m	struct:_GimpViewableDialog
parent_instance	widgets/gimpviewrenderer.h	/^  GObject             parent_instance;$/;"	m	struct:_GimpViewRenderer
parent_instance	widgets/gimpviewrendererbrush.h	/^  GimpViewRenderer parent_instance;$/;"	m	struct:_GimpViewRendererBrush
parent_instance	widgets/gimpviewrendererbuffer.h	/^  GimpViewRenderer  parent_instance;$/;"	m	struct:_GimpViewRendererBuffer
parent_instance	widgets/gimpviewrendererdrawable.h	/^  GimpViewRenderer  parent_instance;$/;"	m	struct:_GimpViewRendererDrawable
parent_instance	widgets/gimpviewrenderergradient.h	/^  GimpViewRenderer  parent_instance;$/;"	m	struct:_GimpViewRendererGradient
parent_instance	widgets/gimpviewrendererimage.h	/^  GimpViewRenderer parent_instance;$/;"	m	struct:_GimpViewRendererImage
parent_instance	widgets/gimpviewrendererimagefile.h	/^  GimpViewRenderer parent_instance;$/;"	m	struct:_GimpViewRendererImagefile
parent_instance	widgets/gimpviewrendererlayer.h	/^  GimpViewRendererDrawable  parent_instance;$/;"	m	struct:_GimpViewRendererLayer
parent_instance	widgets/gimpviewrendererpalette.h	/^  GimpViewRenderer  parent_instance;$/;"	m	struct:_GimpViewRendererPalette
parent_instance	widgets/gimpviewrenderervectors.h	/^  GimpViewRenderer  parent_instance;$/;"	m	struct:_GimpViewRendererVectors
parent_instence	tools/gimpalignoptions.h	/^  GimpToolOptions    parent_instence;$/;"	m	struct:_GimpAlignOptions
parent_instence	tools/gimpcropoptions.h	/^  GimpToolOptions  parent_instence;$/;"	m	struct:_GimpCropOptions
parent_instence	tools/gimpmoveoptions.h	/^  GimpToolOptions    parent_instence;$/;"	m	struct:_GimpMoveOptions
parent_instence	tools/gimprectangleselectoptions.h	/^  GimpSelectionOptions  parent_instence;$/;"	m	struct:_GimpRectSelectOptions
parent_view_iface	widgets/gimpchanneltreeview.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_view_iface	widgets/gimpcontainercombobox.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_view_iface	widgets/gimpcontainerentry.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_view_iface	widgets/gimpcontainergridview.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_view_iface	widgets/gimpcontainertreeview.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_view_iface	widgets/gimpdrawabletreeview.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_view_iface	widgets/gimpitemtreeview.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_view_iface	widgets/gimplayertreeview.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_view_iface	widgets/gimpvectorstreeview.c	/^static GimpContainerViewInterface *parent_view_iface = NULL;$/;"	v	file:
parent_widget	widgets/gtkhwrapbox.h	/^  GtkWrapBox parent_widget;$/;"	m	struct:_GtkHWrapBox
parent_widget	widgets/gtkvwrapbox.h	/^  GtkWrapBox parent_widget;$/;"	m	struct:_GtkVWrapBox
parse_encoding	config/gimpxmlparser.c	/^parse_encoding (const gchar  *text,$/;"	f	file:
parse_info_free	file/gimprecentlist.c	/^parse_info_free (ParseInfo *info)$/;"	f	file:
parse_info_init	file/gimprecentlist.c	/^parse_info_init (ParseInfo *info)$/;"	f	file:
parse_path_data	vectors/gimpvectors-import.c	/^parse_path_data (const gchar *data)$/;"	f	file:
parse_path_default_xy	vectors/gimpvectors-import.c	/^parse_path_default_xy (ParsePathContext *ctx,$/;"	f	file:
parse_path_do_cmd	vectors/gimpvectors-import.c	/^parse_path_do_cmd (ParsePathContext *ctx,$/;"	f	file:
parse_svg_length	vectors/gimpvectors-import.c	/^parse_svg_length (const gchar *value,$/;"	f	file:
parse_svg_transform	vectors/gimpvectors-import.c	/^parse_svg_transform (const gchar *value,$/;"	f	file:
parse_svg_viewbox	vectors/gimpvectors-import.c	/^parse_svg_viewbox (const gchar *value,$/;"	f	file:
part	base/lut-funcs.c	/^  gint           part[5][257];$/;"	m	struct:__anon16	file:
paste_as_new_button	widgets/gimpbufferview.h	/^  GtkWidget           *paste_as_new_button;$/;"	m	struct:_GimpBufferView
paste_button	widgets/gimpbufferview.h	/^  GtkWidget           *paste_button;$/;"	m	struct:_GimpBufferView
paste_into_button	widgets/gimpbufferview.h	/^  GtkWidget           *paste_into_button;$/;"	m	struct:_GimpBufferView
path_button	widgets/gimpselectioneditor.h	/^  GtkWidget       *path_button;$/;"	m	struct:_GimpSelectionEditor
path_delete_invoker	pdb/paths_cmds.c	/^path_delete_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_get_current_invoker	pdb/paths_cmds.c	/^path_get_current_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_get_locked_invoker	pdb/paths_cmds.c	/^path_get_locked_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_get_point_at_dist_invoker	pdb/paths_cmds.c	/^path_get_point_at_dist_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_get_points_invoker	pdb/paths_cmds.c	/^path_get_points_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_get_tattoo_invoker	pdb/paths_cmds.c	/^path_get_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_import_invoker	pdb/paths_cmds.c	/^path_import_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_list_invoker	pdb/paths_cmds.c	/^path_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_property_name	core/gimpdatafactory.h	/^  gchar                            *path_property_name;$/;"	m	struct:_GimpDataFactory
path_set_current_invoker	pdb/paths_cmds.c	/^path_set_current_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_set_locked_invoker	pdb/paths_cmds.c	/^path_set_locked_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_set_points_invoker	pdb/paths_cmds.c	/^path_set_points_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_set_tattoo_invoker	pdb/paths_cmds.c	/^path_set_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_stroke_current_invoker	pdb/paths_cmds.c	/^path_stroke_current_invoker (GimpProcedure     *procedure,$/;"	f	file:
path_to_selection_invoker	pdb/paths_cmds.c	/^path_to_selection_invoker (GimpProcedure     *procedure,$/;"	f	file:
paths	vectors/gimpvectors-import.c	/^  GList        *paths;$/;"	m	struct:_SvgHandler	file:
pattern	core/gimpcontext.h	/^  GimpPattern          *pattern;$/;"	m	struct:_GimpContext
pattern	widgets/gimpdevicestatus.c	/^  GtkWidget      *pattern;$/;"	m	struct:_GimpDeviceStatusEntry	file:
pattern_box_new	widgets/gimpviewablebox.c	/^pattern_box_new (GimpContainer *container,$/;"	f	file:
pattern_changed	core/gimpcontext.h	/^  void (* pattern_changed)    (GimpContext          *context,$/;"	m	struct:_GimpContextClass
pattern_factory	core/gimp.h	/^  GimpDataFactory        *pattern_factory;$/;"	m	struct:_Gimp
pattern_get_info_invoker	pdb/pattern_cmds.c	/^pattern_get_info_invoker (GimpProcedure     *procedure,$/;"	f	file:
pattern_get_pixels_invoker	pdb/pattern_cmds.c	/^pattern_get_pixels_invoker (GimpProcedure     *procedure,$/;"	f	file:
pattern_name	core/gimpcontext.h	/^  gchar                *pattern_name;$/;"	m	struct:_GimpContext
pattern_path	config/gimpcoreconfig.h	/^  gchar                  *pattern_path;$/;"	m	struct:_GimpCoreConfig
pattern_path_writable	config/gimpcoreconfig.h	/^  gchar                  *pattern_path_writable;$/;"	m	struct:_GimpCoreConfig
pattern_pixels_mask	paint-funcs/paint-funcs-generic.h	/^pattern_pixels_mask (guchar       *dest,$/;"	f
pattern_preview_clicked	widgets/gimptoolbox-indicator-area.c	/^pattern_preview_clicked (GtkWidget       *widget,$/;"	f	file:
pattern_preview_drop_pattern	widgets/gimptoolbox-indicator-area.c	/^pattern_preview_drop_pattern (GtkWidget    *widget,$/;"	f	file:
pattern_region	paint-funcs/paint-funcs.c	/^pattern_region (PixelRegion  *dest,$/;"	f
pattern_view_size	paint/gimppaintoptions.h	/^  GimpViewSize              pattern_view_size;$/;"	m	struct:_GimpPaintOptions
pattern_view_type	paint/gimppaintoptions.h	/^  GimpViewType              pattern_view_type;$/;"	m	struct:_GimpPaintOptions
patterns_actions	actions/patterns-actions.c	/^static const GimpActionEntry patterns_actions[] =$/;"	v	file:
patterns_actions_setup	actions/patterns-actions.c	/^patterns_actions_setup (GimpActionGroup *group)$/;"	f
patterns_actions_update	actions/patterns-actions.c	/^patterns_actions_update (GimpActionGroup *group,$/;"	f
patterns_close_popup_invoker	pdb/pattern_select_cmds.c	/^patterns_close_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
patterns_edit_actions	actions/patterns-actions.c	/^static const GimpStringActionEntry patterns_edit_actions[] =$/;"	v	file:
patterns_get_list_invoker	pdb/patterns_cmds.c	/^patterns_get_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
patterns_get_pattern_data_invoker	pdb/patterns_cmds.c	/^patterns_get_pattern_data_invoker (GimpProcedure     *procedure,$/;"	f	file:
patterns_get_pattern_invoker	pdb/patterns_cmds.c	/^patterns_get_pattern_invoker (GimpProcedure     *procedure,$/;"	f	file:
patterns_popup_invoker	pdb/pattern_select_cmds.c	/^patterns_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
patterns_refresh_invoker	pdb/patterns_cmds.c	/^patterns_refresh_invoker (GimpProcedure     *procedure,$/;"	f	file:
patterns_set_popup_invoker	pdb/pattern_select_cmds.c	/^patterns_set_popup_invoker (GimpProcedure     *procedure,$/;"	f	file:
paused	display/gimpdisplayshell-selection.c	/^  gint              paused;           \/*  count of pause requests           *\/$/;"	m	struct:_Selection	file:
paused_count	display/gimpdisplayshell.h	/^  gint              paused_count;$/;"	m	struct:_GimpDisplayShell
paused_count	tools/gimpdrawtool.h	/^  gint          paused_count; \/*  count to keep track of multiple pauses *\/$/;"	m	struct:_GimpDrawTool
paused_count	tools/gimptoolcontrol.h	/^  gint               paused_count;       \/*  paused control count            *\/$/;"	m	struct:_GimpToolControl
pdb	core/gimp.h	/^  GimpPDB                *pdb;$/;"	m	struct:_Gimp
pdb	core/gimppdbprogress.h	/^  GimpPDB     *pdb;$/;"	m	struct:_GimpPdbProgress
pdb	pdb/gimppdb-query.c	/^  GimpPDB  *pdb;$/;"	m	struct:_PDBDump	file:
pdb	pdb/gimppdb-query.c	/^  GimpPDB  *pdb;$/;"	m	struct:_PDBQuery	file:
pdb	widgets/gimppdbdialog.h	/^  GimpPDB         *pdb;$/;"	m	struct:_GimpPdbDialog
pdb_compat_mode	core/gimp.h	/^  GimpPDBCompatMode       pdb_compat_mode;$/;"	m	struct:_Gimp
pdb_compat_mode	main.c	/^static GimpPDBCompatMode   pdb_compat_mode   = GIMP_PDB_COMPAT_ON;$/;"	v	file:
pdb_compat_mode	main.c	/^static GimpPDBCompatMode   pdb_compat_mode   = GIMP_PDB_COMPAT_WARN;$/;"	v	file:
pdb_dialog_close	core/gimp-gui.h	/^  gboolean       (* pdb_dialog_close)    (Gimp                *gimp,$/;"	m	struct:_GimpGui
pdb_dialog_new	core/gimp-gui.h	/^  gboolean       (* pdb_dialog_new)      (Gimp                *gimp,$/;"	m	struct:_GimpGui
pdb_dialog_set	core/gimp-gui.h	/^  gboolean       (* pdb_dialog_set)      (Gimp                *gimp,$/;"	m	struct:_GimpGui
pdivwX	composite/gimp-composite-x86.h	65;"	d
pdivwqX	composite/gimp-composite-x86.h	85;"	d
pdivwqX_clobber	composite/gimp-composite-x86.h	109;"	d
pdivwuqX	composite/gimp-composite-x86.h	115;"	d
pdivwuqX_clobber	composite/gimp-composite-x86.h	123;"	d
peek_state	file/gimprecentlist.c	/^peek_state (ParseInfo *info)$/;"	f	file:
pen_gc	display/gimpdisplayshell.h	/^  GdkGC            *pen_gc;            \/*  GC for felt pen drawing            *\/$/;"	m	struct:_GimpDisplayShell
pencil_invoker	pdb/paint_tools_cmds.c	/^pencil_invoker (GimpProcedure     *procedure,$/;"	f	file:
pending	tools/gimptexttool.h	/^  GList         *pending;$/;"	m	struct:_GimpTextTool
perfect_mouse	config/gimpdisplayconfig.h	/^  gboolean            perfect_mouse;$/;"	m	struct:_GimpDisplayConfig
perspective_invoker	pdb/transform_tools_cmds.c	/^perspective_invoker (GimpProcedure     *procedure,$/;"	f	file:
pick	tools/gimpcolortool.h	/^  gboolean (* pick)   (GimpColorTool      *tool,$/;"	m	struct:_GimpColorToolClass
pick_colors	tools/gimppainttool.h	/^  gboolean         pick_colors;  \/*  pick color if ctrl is pressed   *\/$/;"	m	struct:_GimpPaintTool
pick_mode	tools/gimpcolorpickeroptions.h	/^  GimpColorPickMode  pick_mode;$/;"	m	struct:_GimpColorPickerOptions
pick_mode	tools/gimpcolortool.h	/^  GimpColorPickMode  pick_mode;$/;"	m	struct:_GimpColorTool
picked	tools/gimpcolortool.h	/^  void     (* picked) (GimpColorTool      *tool,$/;"	m	struct:_GimpColorToolClass
pid	plug-in/gimpplugin.h	/^  GPid                 pid;             \/*  Plug-in's process id              *\/$/;"	m	struct:_GimpPlugIn
pipe	plug-in/gimpplugin.c	60;"	d	file:
pipe_animation_index	widgets/gimpviewrendererbrush.h	/^  gint             pipe_animation_index;$/;"	m	struct:_GimpViewRendererBrush
pipe_timeout_id	widgets/gimpviewrendererbrush.h	/^  guint            pipe_timeout_id;$/;"	m	struct:_GimpViewRendererBrush
pixbuf	widgets/gimpcursor.c	/^  GdkPixbuf    *pixbuf;$/;"	m	struct:_GimpCursor	file:
pixbuf	widgets/gimpviewrenderer.h	/^  GdkPixbuf          *pixbuf;$/;"	m	struct:_GimpViewRenderer
pixbuf_data	widgets/gimpcursor.c	/^  const guint8 *pixbuf_data;$/;"	m	struct:_GimpCursor	file:
pixbuf_formats	widgets/gimpclipboard.c	/^  GSList         *pixbuf_formats;$/;"	m	struct:_GimpClipboard	file:
pixel	core/gimpimage-colorhash.c	/^  gint       pixel;   \/*  R << 16 | G << 8 | B  *\/$/;"	m	struct:_ColorHash	file:
pixel_depth_name	composite/make-installer.py	/^def pixel_depth_name(pixel_format):$/;"	f
pixel_difference	core/gimpimage-contiguous-region.c	/^pixel_difference (const guchar        *col1,$/;"	f	file:
pixel_dist	paint/gimppaintcore.h	/^  gdouble      pixel_dist;       \/*  distance in pixels                  *\/$/;"	m	struct:_GimpPaintCore
pixel_label	widgets/gimpsizebox.c	/^  GtkWidget       *pixel_label;$/;"	m	struct:_GimpSizeBoxPrivate	file:
pixel_label	widgets/gimptemplateeditor.h	/^  GtkWidget     *pixel_label;$/;"	m	struct:_GimpTemplateEditor
pixel_processor_exit	base/pixel-processor.c	/^pixel_processor_exit (void)$/;"	f
pixel_processor_init	base/pixel-processor.c	/^pixel_processor_init (gint num_threads)$/;"	f
pixel_processor_set_num_threads	base/pixel-processor.c	/^pixel_processor_set_num_threads (gint num_threads)$/;"	f
pixel_region_configure	base/pixel-region.c	/^pixel_region_configure (PixelRegionHolder   *PRH,$/;"	f	file:
pixel_region_get_col	base/pixel-region.c	/^pixel_region_get_col (PixelRegion *PR,$/;"	f
pixel_region_get_row	base/pixel-region.c	/^pixel_region_get_row (PixelRegion *PR,$/;"	f
pixel_region_has_alpha	base/pixel-region.c	/^pixel_region_has_alpha (PixelRegion *PR)$/;"	f
pixel_region_init	base/pixel-region.c	/^pixel_region_init (PixelRegion *PR,$/;"	f
pixel_region_init_data	base/pixel-region.c	/^pixel_region_init_data (PixelRegion *PR,$/;"	f
pixel_region_init_temp_buf	base/pixel-region.c	/^pixel_region_init_temp_buf (PixelRegion *PR,$/;"	f
pixel_region_resize	base/pixel-region.c	/^pixel_region_resize (PixelRegion *PR,$/;"	f
pixel_region_set_col	base/pixel-region.c	/^pixel_region_set_col (PixelRegion  *PR,$/;"	f
pixel_region_set_row	base/pixel-region.c	/^pixel_region_set_row (PixelRegion  *PR,$/;"	f
pixel_regions	base/pixel-region.h	/^  GSList *pixel_regions;$/;"	m	struct:_PixelRegionIterator
pixel_regions_configure	base/pixel-region.c	/^pixel_regions_configure (PixelRegionIterator *PRI)$/;"	f	file:
pixel_regions_do_parallel	base/pixel-processor.c	/^pixel_regions_do_parallel (PixelProcessor             *processor,$/;"	f	file:
pixel_regions_process	base/pixel-region.c	/^pixel_regions_process (PixelRegionIterator *PRI)$/;"	f
pixel_regions_process_parallel	base/pixel-processor.c	/^pixel_regions_process_parallel (PixelProcessorFunc  func,$/;"	f
pixel_regions_process_parallel_progress	base/pixel-processor.c	/^pixel_regions_process_parallel_progress (PixelProcessorFunc          func,$/;"	f
pixel_regions_process_parallel_valist	base/pixel-processor.c	/^pixel_regions_process_parallel_valist (PixelProcessorFunc         func,$/;"	f	file:
pixel_regions_process_stop	base/pixel-region.c	/^pixel_regions_process_stop (PixelRegionIterator *PRI)$/;"	f
pixel_regions_register	base/pixel-region.c	/^pixel_regions_register (gint num_regions,$/;"	f
pixel_size_label	widgets/gimpimagepropview.h	/^  GtkWidget *pixel_size_label;$/;"	m	struct:_GimpImagePropView
pixel_surround_destroy	base/pixel-surround.c	/^pixel_surround_destroy (PixelSurround *surround)$/;"	f
pixel_surround_get_data	base/pixel-surround.c	/^pixel_surround_get_data (PixelSurround *surround,$/;"	f	file:
pixel_surround_lock	base/pixel-surround.c	/^pixel_surround_lock (PixelSurround *surround,$/;"	f
pixel_surround_new	base/pixel-surround.c	/^pixel_surround_new (TileManager  *tiles,$/;"	f
pixel_surround_release	base/pixel-surround.c	/^pixel_surround_release (PixelSurround *surround)$/;"	f
pixel_x_label	widgets/gimpcursorview.h	/^  GtkWidget   *pixel_x_label;$/;"	m	struct:_GimpCursorView
pixel_y_label	widgets/gimpcursorview.h	/^  GtkWidget   *pixel_y_label;$/;"	m	struct:_GimpCursorView
pixelformat_A	composite/gimp-composite.h	/^  GimpPixelFormat  pixelformat_A;$/;"	m	struct:__anon33
pixelformat_B	composite/gimp-composite.h	/^  GimpPixelFormat  pixelformat_B;$/;"	m	struct:__anon33
pixelformat_D	composite/gimp-composite.h	/^  GimpPixelFormat  pixelformat_D;$/;"	m	struct:__anon33
pixelformat_M	composite/gimp-composite.h	/^  GimpPixelFormat  pixelformat_M;$/;"	m	struct:__anon33
pixels	base/siox.c	/^  TileManager  *pixels;$/;"	m	struct:_SioxState	file:
pixels_label	widgets/gimpimagepropview.h	/^  GtkWidget *pixels_label;$/;"	m	struct:_GimpImagePropView
pixmap	core/gimpbrush.h	/^  TempBuf      *pixmap;     \/*  optional pixmap data           *\/$/;"	m	struct:_GimpBrush
plot_pixels	tools/gimpiscissorstool.c	/^plot_pixels (GimpIscissorsTool *iscissors,$/;"	f	file:
plug_in	plug-in/gimptemporaryprocedure.h	/^  GimpPlugIn          *plug_in;$/;"	m	struct:_GimpTemporaryProcedure
plug_in_actions	actions/plug-in-actions.c	/^static const GimpActionEntry plug_in_actions[] =$/;"	v	file:
plug_in_actions_add_proc	actions/plug-in-actions.c	/^plug_in_actions_add_proc (GimpActionGroup     *group,$/;"	f	file:
plug_in_actions_build_path	actions/plug-in-actions.c	/^plug_in_actions_build_path (GimpActionGroup *group,$/;"	f	file:
plug_in_actions_check_translation	actions/plug-in-actions.c	/^plug_in_actions_check_translation (const gchar *original,$/;"	f	file:
plug_in_actions_history_changed	actions/plug-in-actions.c	/^plug_in_actions_history_changed (GimpPlugInManager *manager,$/;"	f	file:
plug_in_actions_menu_branch_added	actions/plug-in-actions.c	/^plug_in_actions_menu_branch_added (GimpPlugInManager *manager,$/;"	f	file:
plug_in_actions_menu_path_added	actions/plug-in-actions.c	/^plug_in_actions_menu_path_added (GimpPlugInProcedure *plug_in_proc,$/;"	f	file:
plug_in_actions_register_procedure	actions/plug-in-actions.c	/^plug_in_actions_register_procedure (GimpPDB         *pdb,$/;"	f	file:
plug_in_actions_setup	actions/plug-in-actions.c	/^plug_in_actions_setup (GimpActionGroup *group)$/;"	f
plug_in_actions_unregister_procedure	actions/plug-in-actions.c	/^plug_in_actions_unregister_procedure (GimpPDB         *pdb,$/;"	f	file:
plug_in_actions_update	actions/plug-in-actions.c	/^plug_in_actions_update (GimpActionGroup *group,$/;"	f
plug_in_args_to_params	plug-in/plug-in-params.c	/^plug_in_args_to_params (GValueArray *args,$/;"	f
plug_in_closed	plug-in/gimppluginmanager.h	/^  void (* plug_in_closed)    (GimpPlugInManager *manager,$/;"	m	struct:_GimpPlugInManagerClass
plug_in_collect_data_args	actions/plug-in-commands.c	/^plug_in_collect_data_args (GtkAction    *action,$/;"	f	file:
plug_in_collect_display_args	actions/plug-in-commands.c	/^plug_in_collect_display_args (GtkAction    *action,$/;"	f	file:
plug_in_collect_image_args	actions/plug-in-commands.c	/^plug_in_collect_image_args (GtkAction    *action,$/;"	f	file:
plug_in_collect_item_args	actions/plug-in-commands.c	/^plug_in_collect_item_args (GtkAction    *action,$/;"	f	file:
plug_in_def	plug-in/gimpplugin.h	/^  GimpPlugInDef       *plug_in_def;     \/*  Valid during query() and init()   *\/$/;"	m	struct:_GimpPlugIn
plug_in_def_deserialize	plug-in/plug-in-rc.c	/^plug_in_def_deserialize (Gimp      *gimp,$/;"	f	file:
plug_in_defs	plug-in/gimppluginmanager.h	/^  GSList            *plug_in_defs;$/;"	m	struct:_GimpPlugInManager
plug_in_file_proc_deserialize	plug-in/plug-in-rc.c	/^plug_in_file_proc_deserialize (GScanner            *scanner,$/;"	f	file:
plug_in_has_init_deserialize	plug-in/plug-in-rc.c	/^plug_in_has_init_deserialize (GScanner      *scanner,$/;"	f	file:
plug_in_help_def_deserialize	plug-in/plug-in-rc.c	/^plug_in_help_def_deserialize (GScanner      *scanner,$/;"	f	file:
plug_in_history_cmd_callback	actions/plug-in-commands.c	/^plug_in_history_cmd_callback (GtkAction           *action,$/;"	f
plug_in_history_size	config/gimpcoreconfig.h	/^  gint                    plug_in_history_size;$/;"	m	struct:_GimpCoreConfig
plug_in_icc_profile_apply_rgb	plug-in/plug-in-icc-profile.c	/^plug_in_icc_profile_apply_rgb (GimpImage     *image,$/;"	f
plug_in_icc_profile_file_info	plug-in/plug-in-icc-profile.c	/^plug_in_icc_profile_file_info (Gimp          *gimp,$/;"	f
plug_in_icc_profile_info	plug-in/plug-in-icc-profile.c	/^plug_in_icc_profile_info (GimpImage     *image,$/;"	f
plug_in_icc_profile_info_return	plug-in/plug-in-icc-profile.c	/^plug_in_icc_profile_info_return (GValueArray  *return_vals,$/;"	f	file:
plug_in_icon_deserialize	plug-in/plug-in-rc.c	/^plug_in_icon_deserialize (GScanner            *scanner,$/;"	f	file:
plug_in_locale_def_deserialize	plug-in/plug-in-rc.c	/^plug_in_locale_def_deserialize (GScanner      *scanner,$/;"	f	file:
plug_in_manager	core/gimp.h	/^  GimpPlugInManager      *plug_in_manager;$/;"	m	struct:_Gimp
plug_in_menu_entry_free	menus/plug-in-menus.c	/^plug_in_menu_entry_free (PlugInMenuEntry *entry)$/;"	f	file:
plug_in_menu_path_deserialize	plug-in/plug-in-rc.c	/^plug_in_menu_path_deserialize (GScanner            *scanner,$/;"	f	file:
plug_in_menus_add_proc	menus/plug-in-menus.c	/^plug_in_menus_add_proc (GimpUIManager       *manager,$/;"	f	file:
plug_in_menus_build_path	menus/plug-in-menus.c	/^plug_in_menus_build_path (GimpUIManager *manager,$/;"	f	file:
plug_in_menus_menu_path_added	menus/plug-in-menus.c	/^plug_in_menus_menu_path_added (GimpPlugInProcedure *plug_in_proc,$/;"	f	file:
plug_in_menus_register_procedure	menus/plug-in-menus.c	/^plug_in_menus_register_procedure (GimpPDB       *pdb,$/;"	f	file:
plug_in_menus_setup	menus/plug-in-menus.c	/^plug_in_menus_setup (GimpUIManager *manager,$/;"	f
plug_in_menus_tree_insert	menus/plug-in-menus.c	/^plug_in_menus_tree_insert (GTree           *entries,$/;"	f	file:
plug_in_menus_tree_traverse	menus/plug-in-menus.c	/^plug_in_menus_tree_traverse (gpointer         key,$/;"	f	file:
plug_in_menus_unregister_procedure	menus/plug-in-menus.c	/^plug_in_menus_unregister_procedure (GimpPDB       *pdb,$/;"	f	file:
plug_in_opened	plug-in/gimppluginmanager.h	/^  void (* plug_in_opened)    (GimpPlugInManager *manager,$/;"	m	struct:_GimpPlugInManagerClass
plug_in_params_to_args	plug-in/plug-in-params.c	/^plug_in_params_to_args (GParamSpec **pspecs,$/;"	f
plug_in_path	config/gimpcoreconfig.h	/^  gchar                  *plug_in_path;$/;"	m	struct:_GimpCoreConfig
plug_in_proc_arg_deserialize	plug-in/plug-in-rc.c	/^plug_in_proc_arg_deserialize (GScanner      *scanner,$/;"	f	file:
plug_in_procedure_deserialize	plug-in/plug-in-rc.c	/^plug_in_procedure_deserialize (GScanner             *scanner,$/;"	f	file:
plug_in_procedure_execute	actions/plug-in-commands.c	/^plug_in_procedure_execute (GimpPlugInProcedure *procedure,$/;"	f	file:
plug_in_procedures	plug-in/gimppluginmanager.h	/^  GSList            *plug_in_procedures;$/;"	m	struct:_GimpPlugInManager
plug_in_rc_parse	plug-in/plug-in-rc.c	/^plug_in_rc_parse (Gimp         *gimp,$/;"	f
plug_in_rc_path	config/gimpcoreconfig.h	/^  gchar                  *plug_in_rc_path;$/;"	m	struct:_GimpCoreConfig
plug_in_rc_write	plug-in/plug-in-rc.c	/^plug_in_rc_write (GSList       *plug_in_defs,$/;"	f
plug_in_repeat_actions	actions/plug-in-actions.c	/^static const GimpEnumActionEntry plug_in_repeat_actions[] =$/;"	v	file:
plug_in_repeat_cmd_callback	actions/plug-in-commands.c	/^plug_in_repeat_cmd_callback (GtkAction *action,$/;"	f
plug_in_reset_all_cmd_callback	actions/plug-in-commands.c	/^plug_in_reset_all_cmd_callback (GtkAction *action,$/;"	f
plug_in_reset_all_response	actions/plug-in-commands.c	/^plug_in_reset_all_response (GtkWidget *dialog,$/;"	f	file:
plug_in_run_cmd_callback	actions/plug-in-commands.c	/^plug_in_run_cmd_callback (GtkAction           *action,$/;"	f
plug_in_stack	plug-in/gimppluginmanager.h	/^  GSList            *plug_in_stack;$/;"	m	struct:_GimpPlugInManager
plugin_domain_register_invoker	pdb/plug_in_cmds.c	/^plugin_domain_register_invoker (GimpProcedure     *procedure,$/;"	f	file:
plugin_help_register_invoker	pdb/plug_in_cmds.c	/^plugin_help_register_invoker (GimpProcedure     *procedure,$/;"	f	file:
plugin_icon_register_invoker	pdb/plug_in_cmds.c	/^plugin_icon_register_invoker (GimpProcedure     *procedure,$/;"	f	file:
plugin_menu_branch_register_invoker	pdb/plug_in_cmds.c	/^plugin_menu_branch_register_invoker (GimpProcedure     *procedure,$/;"	f	file:
plugin_menu_register_invoker	pdb/plug_in_cmds.c	/^plugin_menu_register_invoker (GimpProcedure     *procedure,$/;"	f	file:
plugins_query_invoker	pdb/plug_in_cmds.c	/^plugins_query_invoker (GimpProcedure     *procedure,$/;"	f	file:
plural	core/gimpunit.c	/^  gchar    *plural;$/;"	m	struct:__anon105	file:
pmaxub	composite/gimp-composite-mmx.c	43;"	d	file:
pmaxub	composite/gimp-composite-sse.c	45;"	d	file:
pminub	composite/gimp-composite-mmx.c	42;"	d	file:
pminub	composite/gimp-composite-sse.c	44;"	d	file:
pmulwX	composite/gimp-composite-x86.h	219;"	d
point	tools/gimpmeasuretool.h	/^  gint             point;       \/*  what are we manipulating?  *\/$/;"	m	struct:_GimpMeasureTool
point_is_movable	vectors/gimpstroke.h	/^  gboolean      (* point_is_movable)     (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
point_move_absolute	vectors/gimpstroke.h	/^  void          (* point_move_absolute)  (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
point_move_relative	vectors/gimpstroke.h	/^  void          (* point_move_relative)  (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
point_on_border	core/gimp-transform-resize.c	/^point_on_border (Point points[4],$/;"	f	file:
points	base/curves.h	/^  gint          points[5][CURVES_NUM_POINTS][2];$/;"	m	struct:_Curves
points	tools/gimpforegroundselecttool.c	/^  GimpVector2 *points;$/;"	m	struct:__anon286	file:
points	tools/gimpfreeselecttool.h	/^  GimpVector2       *points;$/;"	m	struct:_GimpFreeSelectTool
points	tools/gimpiscissorstool.c	/^  GPtrArray *points;$/;"	m	struct:_ICurve	file:
points_in	display/gimpdisplayshell-selection.c	/^  GdkPoint         *points_in[8];     \/*  points of segs_in for fast ants   *\/$/;"	m	struct:_Selection	file:
policy	core/gimpcontainer.h	/^  GimpContainerPolicy  policy;$/;"	m	struct:_GimpContainer
polygonal	tools/gimpvectoroptions.h	/^  gboolean         polygonal;$/;"	m	struct:_GimpVectorOptions
pool	base/pixel-processor.c	/^static GThreadPool *pool       = NULL;$/;"	v	file:
pool_cond	base/pixel-processor.c	/^static GCond       *pool_cond  = NULL;$/;"	v	file:
pool_mutex	base/pixel-processor.c	/^static GMutex      *pool_mutex = NULL;$/;"	v	file:
pop	core/gimpundo.h	/^  void (* pop)  (GimpUndo            *undo,$/;"	m	struct:_GimpUndoClass
pop_state	file/gimprecentlist.c	/^pop_state (ParseInfo *info)$/;"	f	file:
popup	widgets/gimpview-popup.c	/^  GtkWidget    *popup;$/;"	m	struct:_GimpViewPopup	file:
popup_data	widgets/gimpeditor.h	/^  gpointer         popup_data;$/;"	m	struct:_GimpEditor
popup_height	text/gimpfont.c	/^  gint          popup_height;$/;"	m	struct:_GimpFont	file:
popup_height	widgets/gimpview-popup.c	/^  gint          popup_height;$/;"	m	struct:_GimpViewPopup	file:
popup_layout	text/gimpfont.c	/^  PangoLayout  *popup_layout;$/;"	m	struct:_GimpFont	file:
popup_manager	display/gimpdisplayshell.h	/^  GimpUIManager    *popup_manager;$/;"	m	struct:_GimpDisplayShell
popup_signals	widgets/gimpcontainerpopup.c	/^static guint popup_signals[LAST_SIGNAL];$/;"	v	file:
popup_view_size	widgets/gimpviewablebutton.h	/^  gint               popup_view_size;$/;"	m	struct:_GimpViewableButton
popup_view_type	widgets/gimpviewablebutton.h	/^  GimpViewType       popup_view_type;$/;"	m	struct:_GimpViewableButton
popup_width	text/gimpfont.c	/^  gint          popup_width;$/;"	m	struct:_GimpFont	file:
popup_width	widgets/gimpview-popup.c	/^  gint          popup_width;$/;"	m	struct:_GimpViewPopup	file:
portion_height	base/pixel-region.h	/^  gint    portion_height;$/;"	m	struct:_PixelRegionIterator
portion_width	base/pixel-region.h	/^  gint    portion_width;$/;"	m	struct:_PixelRegionIterator
position	core/gimpchannelpropundo.h	/^  gint          position;$/;"	m	struct:_GimpChannelPropUndo
position	core/gimpguide.h	/^  gint                 position;$/;"	m	struct:_GimpGuide
position	core/gimpguideundo.h	/^  gint                 position;$/;"	m	struct:_GimpGuideUndo
position	core/gimplayerpropundo.h	/^  gint                 position;$/;"	m	struct:_GimpLayerPropUndo
position	core/gimppalette.h	/^  gint     position;$/;"	m	struct:_GimpPaletteEntry
position	vectors/gimpanchor.h	/^  GimpCoords        position;$/;"	m	struct:_GimpAnchor
position	vectors/gimpvectorspropundo.h	/^  gint          position;$/;"	m	struct:_GimpVectorsPropUndo
position	widgets/gimpsessioninfo-book.h	/^  gint       position;$/;"	m	struct:_GimpSessionInfoBook
post_paint	paint/gimppaintcore.h	/^  void       (* post_paint)     (GimpPaintCore    *core,$/;"	m	struct:_GimpPaintCoreClass
posterize_invoker	pdb/color_cmds.c	/^posterize_invoker (GimpProcedure     *procedure,$/;"	f	file:
posterize_levels_adjustment_update	tools/gimpposterizetool.c	/^posterize_levels_adjustment_update (GtkAdjustment     *adjustment,$/;"	f	file:
posterize_lut_func	base/lut-funcs.c	/^posterize_lut_func (gint   *ilevels,$/;"	f	file:
posterize_lut_new	base/lut-funcs.c	/^posterize_lut_new (gint levels,$/;"	f
posterize_lut_setup	base/lut-funcs.c	/^posterize_lut_setup (GimpLut *lut,$/;"	f
powtable	base/cpercep.c	/^static double powtable[256];$/;"	v	file:
pre_paint	paint/gimppaintcore.h	/^  gboolean   (* pre_paint)      (GimpPaintCore    *core,$/;"	m	struct:_GimpPaintCoreClass
precision	vectors/gimpvectors.h	/^  gdouble   precision;$/;"	m	struct:_GimpVectors
preferences_dialog_create	dialogs/preferences-dialog.c	/^preferences_dialog_create (Gimp *gimp)$/;"	f
prefixes	plug-in/gimppluginprocedure.h	/^  gchar               *prefixes;$/;"	m	struct:_GimpPlugInProcedure
prefixes_list	plug-in/gimppluginprocedure.h	/^  GSList              *prefixes_list;$/;"	m	struct:_GimpPlugInProcedure
prefs_boolean_combo_box_add	dialogs/preferences-dialog.c	/^prefs_boolean_combo_box_add (GObject      *config,$/;"	f	file:
prefs_button_add	dialogs/preferences-dialog.c	/^prefs_button_add (const gchar *stock_id,$/;"	f	file:
prefs_canvas_padding_color_changed	dialogs/preferences-dialog.c	/^prefs_canvas_padding_color_changed (GtkWidget *button,$/;"	f	file:
prefs_check_button_add	dialogs/preferences-dialog.c	/^prefs_check_button_add (GObject     *config,$/;"	f	file:
prefs_check_button_add_with_icon	dialogs/preferences-dialog.c	/^prefs_check_button_add_with_icon (GObject      *config,$/;"	f	file:
prefs_color_button_add	dialogs/preferences-dialog.c	/^prefs_color_button_add (GObject      *config,$/;"	f	file:
prefs_config_copy_notify	dialogs/preferences-dialog.c	/^prefs_config_copy_notify (GObject    *config_copy,$/;"	f	file:
prefs_config_notify	dialogs/preferences-dialog.c	/^prefs_config_notify (GObject    *config,$/;"	f	file:
prefs_devices_clear_callback	dialogs/preferences-dialog.c	/^prefs_devices_clear_callback (GtkWidget *widget,$/;"	f	file:
prefs_devices_save_callback	dialogs/preferences-dialog.c	/^prefs_devices_save_callback (GtkWidget *widget,$/;"	f	file:
prefs_dialog	dialogs/preferences-dialog.c	/^static GtkWidget *prefs_dialog = NULL;$/;"	v	file:
prefs_dialog_new	dialogs/preferences-dialog.c	/^prefs_dialog_new (Gimp       *gimp,$/;"	f	file:
prefs_display_options_frame_add	dialogs/preferences-dialog.c	/^prefs_display_options_frame_add (Gimp         *gimp,$/;"	f	file:
prefs_enum_combo_box_add	dialogs/preferences-dialog.c	/^prefs_enum_combo_box_add (GObject      *config,$/;"	f	file:
prefs_format_string_select_callback	dialogs/preferences-dialog.c	/^prefs_format_string_select_callback (GtkTreeSelection *sel,$/;"	f	file:
prefs_frame_new	dialogs/preferences-dialog.c	/^prefs_frame_new (const gchar  *label,$/;"	f	file:
prefs_help_func	dialogs/preferences-dialog.c	/^prefs_help_func (const gchar *help_id,$/;"	f	file:
prefs_input_devices_dialog	dialogs/preferences-dialog.c	/^prefs_input_devices_dialog (GtkWidget *widget,$/;"	f	file:
prefs_input_dialog_able_callback	dialogs/preferences-dialog.c	/^prefs_input_dialog_able_callback (GtkWidget *widget,$/;"	f	file:
prefs_keyboard_shortcuts_dialog	dialogs/preferences-dialog.c	/^prefs_keyboard_shortcuts_dialog (GtkWidget *widget,$/;"	f	file:
prefs_memsize_entry_add	dialogs/preferences-dialog.c	/^prefs_memsize_entry_add (GObject      *config,$/;"	f	file:
prefs_menus_clear_callback	dialogs/preferences-dialog.c	/^prefs_menus_clear_callback (GtkWidget *widget,$/;"	f	file:
prefs_menus_remove_callback	dialogs/preferences-dialog.c	/^prefs_menus_remove_callback (GtkWidget *widget,$/;"	f	file:
prefs_menus_save_callback	dialogs/preferences-dialog.c	/^prefs_menus_save_callback (GtkWidget *widget,$/;"	f	file:
prefs_message	dialogs/preferences-dialog.c	/^prefs_message (GtkMessageType  type,$/;"	f	file:
prefs_notebook_append_page	dialogs/preferences-dialog.c	/^prefs_notebook_append_page (Gimp          *gimp,$/;"	f	file:
prefs_notebook_page_callback	dialogs/preferences-dialog.c	/^prefs_notebook_page_callback (GtkNotebook      *notebook,$/;"	f	file:
prefs_profile_combo_add_tooltip	dialogs/preferences-dialog.c	/^prefs_profile_combo_add_tooltip (GtkWidget   *combo,$/;"	f	file:
prefs_profile_combo_box_new	dialogs/preferences-dialog.c	/^prefs_profile_combo_box_new (Gimp         *gimp,$/;"	f	file:
prefs_profile_combo_changed	dialogs/preferences-dialog.c	/^prefs_profile_combo_changed (GimpColorProfileComboBox *combo,$/;"	f	file:
prefs_profile_combo_dialog_response	dialogs/preferences-dialog.c	/^prefs_profile_combo_dialog_response (GimpProfileChooserDialog *dialog,$/;"	f	file:
prefs_resolution_calibrate_callback	dialogs/preferences-dialog.c	/^prefs_resolution_calibrate_callback (GtkWidget *widget,$/;"	f	file:
prefs_resolution_source_callback	dialogs/preferences-dialog.c	/^prefs_resolution_source_callback (GtkWidget *widget,$/;"	f	file:
prefs_response	dialogs/preferences-dialog.c	/^prefs_response (GtkWidget *widget,$/;"	f	file:
prefs_session_clear_callback	dialogs/preferences-dialog.c	/^prefs_session_clear_callback (GtkWidget *widget,$/;"	f	file:
prefs_session_save_callback	dialogs/preferences-dialog.c	/^prefs_session_save_callback (GtkWidget *widget,$/;"	f	file:
prefs_spin_button_add	dialogs/preferences-dialog.c	/^prefs_spin_button_add (GObject      *config,$/;"	f	file:
prefs_table_new	dialogs/preferences-dialog.c	/^prefs_table_new (gint          rows,$/;"	f	file:
prefs_template_select_callback	dialogs/preferences-dialog.c	/^prefs_template_select_callback (GimpContainerView *view,$/;"	f	file:
prefs_theme_reload_callback	dialogs/preferences-dialog.c	/^prefs_theme_reload_callback (GtkWidget *button,$/;"	f	file:
prefs_theme_select_callback	dialogs/preferences-dialog.c	/^prefs_theme_select_callback (GtkTreeSelection *sel,$/;"	f	file:
prefs_tool_options_clear_callback	dialogs/preferences-dialog.c	/^prefs_tool_options_clear_callback (GtkWidget *widget,$/;"	f	file:
prefs_tool_options_save_callback	dialogs/preferences-dialog.c	/^prefs_tool_options_save_callback (GtkWidget *widget,$/;"	f	file:
prefs_tree_select_callback	dialogs/preferences-dialog.c	/^prefs_tree_select_callback (GtkTreeSelection *sel,$/;"	f	file:
prefs_widget_add_aligned	dialogs/preferences-dialog.c	/^prefs_widget_add_aligned (GtkWidget    *widget,$/;"	f	file:
prepare	tools/gimptransformtool.h	/^  void          (* prepare)       (GimpTransformTool *tool,$/;"	m	struct:_GimpTransformToolClass
preserve	tools/gimptoolcontrol.h	/^  gboolean           preserve;           \/*  Preserve this tool across       *$/;"	m	struct:_GimpToolControl
preserve_luminosity	base/color-balance.h	/^  gboolean preserve_luminosity;$/;"	m	struct:_ColorBalance
preserve_toggle	tools/gimpcolorbalancetool.h	/^  GtkWidget        *preserve_toggle;$/;"	m	struct:_GimpColorBalanceTool
presets	core/gimptoolinfo.h	/^  GimpToolPresets     *presets;$/;"	m	struct:_GimpToolInfo
press_state	widgets/gimpview.h	/^  GdkModifierType   press_state;$/;"	m	struct:_GimpView
pressure	core/core-types.h	/^  gdouble pressure;$/;"	m	struct:_GimpCoords
pressure	paint/gimpairbrushoptions.h	/^  gdouble           pressure;$/;"	m	struct:_GimpAirbrushOptions
pressure_brush	paint/gimpbrushcore.h	/^  TempBuf       *pressure_brush;$/;"	m	struct:_GimpBrushCore
pressure_options	paint/gimppaintoptions.h	/^  GimpPressureOptions      *pressure_options;$/;"	m	struct:_GimpPaintOptions
pressure_options_gui	tools/gimppaintoptions-gui.c	/^pressure_options_gui (GimpPressureOptions *pressure,$/;"	f	file:
pressx	tools/gimprectangletool.c	/^  gint                    pressx;$/;"	m	struct:_GimpRectangleToolPrivate	file:
pressy	tools/gimprectangletool.c	/^  gint                    pressy;$/;"	m	struct:_GimpRectangleToolPrivate	file:
prev	base/tile-private.h	/^  Tile     *prev;       \/* List pointers for the tile cache lists *\/$/;"	m	struct:_Tile
prev	core/gimpgradient.h	/^  GimpGradientSegment     *prev;$/;"	m	struct:_GimpGradientSegment
prev	core/gimpscanconvert.c	/^  GimpVector2     prev;$/;"	m	struct:_GimpScanConvert	file:
prev_channel	core/gimpchannelundo.h	/^  GimpChannel  *prev_channel;    \/*  previous active channel  *\/$/;"	m	struct:_GimpChannelUndo
prev_layer	core/gimplayerundo.h	/^  GimpLayer    *prev_layer;      \/*  previous active layer    *\/$/;"	m	struct:_GimpLayerUndo
prev_position	core/gimpchannelundo.h	/^  gint          prev_position;   \/*  former position in list  *\/$/;"	m	struct:_GimpChannelUndo
prev_position	core/gimplayerundo.h	/^  gint          prev_position;   \/*  former position in list  *\/$/;"	m	struct:_GimpLayerUndo
prev_position	vectors/gimpvectorsundo.h	/^  gint          prev_position;   \/*  former position in list  *\/$/;"	m	struct:_GimpVectorsUndo
prev_vectors	vectors/gimpvectorsundo.h	/^  GimpVectors  *prev_vectors;    \/*  previous active vectors  *\/$/;"	m	struct:_GimpVectorsUndo
preview	core/gimpimage.h	/^  TempBuf           *preview;               \/*  the projection preview       *\/$/;"	m	struct:_GimpImage
preview	core/gimpundo.h	/^  TempBuf          *preview;$/;"	m	struct:_GimpUndo
preview	dialogs/palette-import-dialog.c	/^  GtkWidget     *preview;$/;"	m	struct:__anon178	file:
preview	tools/gimpimagemapoptions.h	/^  gboolean         preview;$/;"	m	struct:_GimpImageMapOptions
preview	widgets/gimpcolormapeditor.h	/^  GtkWidget       *preview;$/;"	m	struct:_GimpColormapEditor
preview	widgets/gimpthumbbox.h	/^  GtkWidget     *preview;$/;"	m	struct:_GimpThumbBox
preview_cache	core/gimpdrawable.h	/^  GSList        *preview_cache;      \/* preview caches of the channel  *\/$/;"	m	struct:_GimpDrawable
preview_cache_compare	core/gimppreviewcache.c	/^preview_cache_compare (gconstpointer  a,$/;"	f	file:
preview_cache_find_biggest	core/gimppreviewcache.c	/^preview_cache_find_biggest (gpointer data,$/;"	f	file:
preview_cache_find_exact	core/gimppreviewcache.c	/^preview_cache_find_exact (gpointer data,$/;"	f	file:
preview_cache_print	core/gimppreviewcache.c	/^preview_cache_print (GSList *plist)$/;"	f	file:
preview_cache_remove_smallest	core/gimppreviewcache.c	/^preview_cache_remove_smallest (GSList **plist)$/;"	f	file:
preview_idle_id	core/gimpundo.h	/^  guint             preview_idle_id;$/;"	m	struct:_GimpUndo
preview_invalidated	core/gimpimage.h	/^  gboolean preview_invalidated;$/;"	m	struct:_GimpImageFlushAccumulator
preview_type	tools/gimptransformoptions.h	/^  GimpTransformPreviewType  preview_type;$/;"	m	struct:_GimpTransformOptions
preview_valid	core/gimpdrawable.h	/^  gboolean       preview_valid;      \/* is the preview valid?          *\/$/;"	m	struct:_GimpDrawable
print	display/gimpdisplayshell-title.c	/^print (gchar       *buf,$/;"	f	file:
print_function_table	composite/make-installer.py	/^def print_function_table(fpout, name, function_table, requirements=[]):$/;"	f
print_function_table_name	composite/make-installer.py	/^def print_function_table_name(fpout, name, function_table):$/;"	f
print_kv	plug-in/gimpinterpreterdb.c	/^print_kv (gpointer key,$/;"	f	file:
print_size_dialog_free	dialogs/print-size-dialog.c	/^print_size_dialog_free (PrintSizeDialog *private)$/;"	f	file:
print_size_dialog_new	dialogs/print-size-dialog.c	/^print_size_dialog_new (GimpImage              *image,$/;"	f
print_size_dialog_reset	dialogs/print-size-dialog.c	/^print_size_dialog_reset (PrintSizeDialog *private)$/;"	f	file:
print_size_dialog_resolution_changed	dialogs/print-size-dialog.c	/^print_size_dialog_resolution_changed (GtkWidget       *widget,$/;"	f	file:
print_size_dialog_response	dialogs/print-size-dialog.c	/^print_size_dialog_response (GtkWidget       *dialog,$/;"	f	file:
print_size_dialog_set_resolution	dialogs/print-size-dialog.c	/^print_size_dialog_set_resolution (PrintSizeDialog *private,$/;"	f	file:
print_size_dialog_set_size	dialogs/print-size-dialog.c	/^print_size_dialog_set_size (PrintSizeDialog *private,$/;"	f	file:
print_size_dialog_size_changed	dialogs/print-size-dialog.c	/^print_size_dialog_size_changed (GtkWidget       *widget,$/;"	f	file:
print_size_label	widgets/gimpimagepropview.h	/^  GtkWidget *print_size_label;$/;"	m	struct:_GimpImagePropView
private_data	file/gimprecentitem.c	/^  gboolean  private_data;$/;"	m	struct:_GimpRecentItem	file:
proc	menus/plug-in-menus.c	/^  GimpPlugInProcedure *proc;$/;"	m	struct:_PlugInMenuEntry	file:
proc_expander	widgets/gimpfiledialog.h	/^  GtkWidget            *proc_expander;$/;"	m	struct:_GimpFileDialog
proc_type	pdb/gimpprocedure.h	/^  GimpPDBProcType   proc_type;      \/* Type of procedure              *\/$/;"	m	struct:_GimpProcedure
proc_type_regex	pdb/gimppdb-query.c	/^  regex_t   proc_type_regex;$/;"	m	struct:_PDBQuery	file:
proc_view	widgets/gimpfiledialog.h	/^  GtkWidget            *proc_view;$/;"	m	struct:_GimpFileDialog
procedural_db_dump_invoker	pdb/procedural_db_cmds.c	/^procedural_db_dump_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedural_db_get_data_invoker	pdb/procedural_db_cmds.c	/^procedural_db_get_data_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedural_db_get_data_size_invoker	pdb/procedural_db_cmds.c	/^procedural_db_get_data_size_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedural_db_proc_arg_invoker	pdb/procedural_db_cmds.c	/^procedural_db_proc_arg_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedural_db_proc_info_invoker	pdb/procedural_db_cmds.c	/^procedural_db_proc_info_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedural_db_proc_val_invoker	pdb/procedural_db_cmds.c	/^procedural_db_proc_val_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedural_db_query_invoker	pdb/procedural_db_cmds.c	/^procedural_db_query_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedural_db_set_data_invoker	pdb/procedural_db_cmds.c	/^procedural_db_set_data_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedural_db_temp_name_invoker	pdb/procedural_db_cmds.c	/^procedural_db_temp_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
procedure	plug-in/gimppluginprocframe.h	/^  GimpProcedure *procedure;$/;"	m	struct:_GimpPlugInProcFrame
procedure	widgets/gimpactiongroup.h	/^  GimpPlugInProcedure *procedure;$/;"	m	struct:_GimpPlugInActionEntry
procedure	widgets/gimppluginaction.h	/^  GimpPlugInProcedure *procedure;$/;"	m	struct:_GimpPlugInAction
procedures	pdb/gimppdb.h	/^  GHashTable *procedures;$/;"	m	struct:_GimpPDB
procedures	plug-in/gimpplugindef.h	/^  GSList     *procedures;$/;"	m	struct:_GimpPlugInDef
process_count	base/pixel-region.h	/^  gint         process_count;  \/*  used internally               *\/$/;"	m	struct:_PixelRegion
process_count	base/pixel-region.h	/^  gint    process_count;$/;"	m	struct:_PixelRegionIterator
process_event_queue_keys	tools/gimpeditselectiontool.c	/^process_event_queue_keys (GdkEventKey *kevent,$/;"	f	file:
process_horiz_seg	base/boundary.c	/^process_horiz_seg (Boundary *boundary,$/;"	f	file:
prog	plug-in/gimpplugin.h	/^  gchar               *prog;            \/*  Plug-in's full path name          *\/$/;"	m	struct:_GimpPlugIn
prog	plug-in/gimpplugindef.h	/^  gchar      *prog;$/;"	m	struct:_GimpPlugInDef
prog	plug-in/gimppluginprocedure.h	/^  gchar               *prog;$/;"	m	struct:_GimpPlugInProcedure
prog_name	plug-in/gimppluginmanager-help-domain.c	/^  gchar *prog_name;$/;"	m	struct:_GimpPlugInHelpDomain	file:
prog_name	plug-in/gimppluginmanager-locale-domain.c	/^  gchar *prog_name;$/;"	m	struct:_GimpPlugInLocaleDomain	file:
prog_name	plug-in/gimppluginmanager-menu-branch.h	/^  gchar *prog_name;$/;"	m	struct:_GimpPlugInMenuBranch
program	plug-in/gimpinterpreterdb.c	/^  gchar    *program;$/;"	m	struct:_GimpInterpreterMagic	file:
programs	plug-in/gimpinterpreterdb.h	/^  GHashTable *programs;$/;"	m	struct:_GimpInterpreterDB
progress	base/pixel-processor.c	/^  gulong               progress;$/;"	m	struct:_PixelProcessor	file:
progress	core/gimpimage-convert.c	/^  GimpProgress *progress;$/;"	m	struct:_QuantizeObj	file:
progress	core/gimpsubprogress.h	/^  GimpProgress *progress;$/;"	m	struct:_GimpSubProgress
progress	dialogs/convert-dialog.c	/^  GimpProgress           *progress;$/;"	m	struct:__anon171	file:
progress	gui/splash.c	/^  GtkWidget      *progress;$/;"	m	struct:__anon201	file:
progress	plug-in/gimppluginprocframe.h	/^  GimpProgress  *progress;$/;"	m	struct:_GimpPlugInProcFrame
progress	widgets/gimpfiledialog.h	/^  GtkWidget            *progress;$/;"	m	struct:_GimpFileDialog
progress	widgets/gimpprogressbox.h	/^  GtkWidget  *progress;$/;"	m	struct:_GimpProgressBox
progress	widgets/gimpthumbbox.h	/^  GtkWidget     *progress;$/;"	m	struct:_GimpThumbBox
progress	xcf/xcf-private.h	/^  GimpProgress       *progress;$/;"	m	struct:_XcfInfo
progress_active	display/gimpstatusbar.h	/^  gboolean          progress_active;$/;"	m	struct:_GimpStatusbar
progress_active	widgets/gimpthumbbox.h	/^  gboolean       progress_active;$/;"	m	struct:_GimpThumbBox
progress_cancel_id	plug-in/gimppluginprocframe.h	/^  gulong         progress_cancel_id;$/;"	m	struct:_GimpPlugInProcFrame
progress_cancel_invoker	pdb/progress_cmds.c	/^progress_cancel_invoker (GimpProcedure     *procedure,$/;"	f	file:
progress_created	plug-in/gimppluginprocframe.h	/^  gboolean       progress_created;$/;"	m	struct:_GimpPlugInProcFrame
progress_end_invoker	pdb/progress_cmds.c	/^progress_end_invoker (GimpProcedure     *procedure,$/;"	f	file:
progress_error_dialog	gui/gui-message.c	/^progress_error_dialog (GimpProgress *progress)$/;"	f	file:
progress_error_dialog_unset	gui/gui-message.c	/^progress_error_dialog_unset (GimpProgress *progress)$/;"	f	file:
progress_free	core/gimp-gui.h	/^  void           (* progress_free)       (Gimp                *gimp,$/;"	m	struct:_GimpGui
progress_get_window_handle_invoker	pdb/progress_cmds.c	/^progress_get_window_handle_invoker (GimpProcedure     *procedure,$/;"	f	file:
progress_init_invoker	pdb/progress_cmds.c	/^progress_init_invoker (GimpProcedure     *procedure,$/;"	f	file:
progress_install_invoker	pdb/progress_cmds.c	/^progress_install_invoker (GimpProcedure     *procedure,$/;"	f	file:
progress_new	core/gimp-gui.h	/^  GimpProgress * (* progress_new)        (Gimp                *gimp,$/;"	m	struct:_GimpGui
progress_pulse_invoker	pdb/progress_cmds.c	/^progress_pulse_invoker (GimpProcedure     *procedure,$/;"	f	file:
progress_set_text_invoker	pdb/progress_cmds.c	/^progress_set_text_invoker (GimpProcedure     *procedure,$/;"	f	file:
progress_shown	display/gimpstatusbar.h	/^  gboolean          progress_shown;$/;"	m	struct:_GimpStatusbar
progress_signals	core/gimpprogress.c	/^static guint progress_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
progress_text	tools/gimptransformtool.h	/^  const gchar    *progress_text;$/;"	m	struct:_GimpTransformTool
progress_uninstall_invoker	pdb/progress_cmds.c	/^progress_uninstall_invoker (GimpProcedure     *procedure,$/;"	f	file:
progress_update_invoker	pdb/progress_cmds.c	/^progress_update_invoker (GimpProcedure     *procedure,$/;"	f	file:
progressbar	display/gimpstatusbar.h	/^  GtkWidget        *progressbar;$/;"	m	struct:_GimpStatusbar
progresses	core/gimppdbprogress.h	/^  GList        *progresses;$/;"	m	struct:_GimpPdbProgressClass
project_channel	core/gimpprojection-construct.c	/^project_channel (GimpProjection *proj,$/;"	f	file:
project_indexed	core/gimpprojection-construct.c	/^project_indexed (GimpProjection *proj,$/;"	f	file:
project_indexed_alpha	core/gimpprojection-construct.c	/^project_indexed_alpha (GimpProjection *proj,$/;"	f	file:
project_intensity	core/gimpprojection-construct.c	/^project_intensity (GimpProjection *proj,$/;"	f	file:
project_intensity_alpha	core/gimpprojection-construct.c	/^project_intensity_alpha (GimpProjection *proj,$/;"	f	file:
projection	core/gimpimage.h	/^  GimpProjection    *projection;            \/*  projection layers & channels *\/$/;"	m	struct:_GimpImage
projection_signals	core/gimpprojection.c	/^static guint projection_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
propagate_release	tools/gimpeditselectiontool.h	/^  gboolean            propagate_release;$/;"	m	struct:_GimpEditSelectionTool
proximity	display/gimpdisplayshell.h	/^  gboolean          proximity;         \/*  is a device in proximity           *\/$/;"	m	struct:_GimpDisplayShell
proxy	tools/gimptexttool.h	/^  GimpText      *proxy;$/;"	m	struct:_GimpTextTool
pspec	text/gimptextundo.h	/^  const GParamSpec *pspec;$/;"	m	struct:_GimpTextUndo
pulse	core/gimpprogress.h	/^  void           (* pulse)      (GimpProgress        *progress);$/;"	m	struct:_GimpProgressInterface
push_state	file/gimprecentlist.c	/^push_state (ParseInfo  *info,$/;"	f	file:
push_undo	core/gimpdrawable.h	/^  void (* push_undo)             (GimpDrawable         *drawable,$/;"	m	struct:_GimpDrawableClass
push_undo	paint/gimppaintcore.h	/^  GimpUndo * (* push_undo)      (GimpPaintCore    *core,$/;"	m	struct:_GimpPaintCoreClass
pushing_undo_group	core/gimpimage.h	/^  GimpUndoType       pushing_undo_group;    \/*  undo group status flag       *\/$/;"	m	struct:_GimpImage
pxb	base/cpercep.c	/^static const double pxb = 0.15F;$/;"	v	file:
pxg	base/cpercep.c	/^static const double pxg = 0.30F;$/;"	v	file:
pxr	base/cpercep.c	/^static const double pxr = 0.64F;$/;"	v	file:
pyb	base/cpercep.c	/^static const double pyb = 0.06F;$/;"	v	file:
pyg	base/cpercep.c	/^static const double pyg = 0.60F;$/;"	v	file:
pyr	base/cpercep.c	/^static const double pyr = 0.33F;$/;"	v	file:
pyramid	core/gimpprojection.h	/^  TilePyramid              *pyramid;$/;"	m	struct:_GimpProjection
quark	core/gimpcontainer.c	/^  GQuark     quark;  \/*  used to attach the signal id's of child signals  *\/$/;"	m	struct:_GimpContainerHandler	file:
quark_preview_pixbuf	core/gimpviewable.c	/^static GQuark quark_preview_pixbuf          = 0;$/;"	v	file:
quark_preview_temp_buf	core/gimpviewable.c	/^static GQuark quark_preview_temp_buf        = 0;$/;"	v	file:
querying_compat	pdb/gimppdb-query.c	/^  gboolean  querying_compat;$/;"	m	struct:_PDBQuery	file:
quick_mask_actions	actions/quick-mask-actions.c	/^static const GimpActionEntry quick_mask_actions[] =$/;"	v	file:
quick_mask_actions_setup	actions/quick-mask-actions.c	/^quick_mask_actions_setup (GimpActionGroup *group)$/;"	f
quick_mask_actions_update	actions/quick-mask-actions.c	/^quick_mask_actions_update (GimpActionGroup *group,$/;"	f
quick_mask_button	display/gimpdisplayshell.h	/^  GtkWidget        *quick_mask_button; \/*  SW: quick mask button              *\/$/;"	m	struct:_GimpDisplayShell
quick_mask_changed	core/gimpimage.h	/^  void (* quick_mask_changed)           (GimpImage            *image);$/;"	m	struct:_GimpImageClass
quick_mask_changed	core/gimpundo.h	/^  gboolean quick_mask_changed;$/;"	m	struct:_GimpUndoAccumulator
quick_mask_color	core/gimpimage.h	/^  GimpRGB            quick_mask_color;      \/*  rgba triplet of the color      *\/$/;"	m	struct:_GimpImage
quick_mask_configure_cmd_callback	actions/quick-mask-commands.c	/^quick_mask_configure_cmd_callback (GtkAction *action,$/;"	f
quick_mask_configure_response	actions/quick-mask-commands.c	/^quick_mask_configure_response (GtkWidget            *widget,$/;"	f	file:
quick_mask_invert_actions	actions/quick-mask-actions.c	/^static const GimpRadioActionEntry quick_mask_invert_actions[] =$/;"	v	file:
quick_mask_invert_cmd_callback	actions/quick-mask-commands.c	/^quick_mask_invert_cmd_callback (GtkAction *action,$/;"	f
quick_mask_inverted	core/gimpimage.h	/^  gboolean           quick_mask_inverted;   \/*  TRUE if quick mask is inverted *\/$/;"	m	struct:_GimpImage
quick_mask_state	core/gimpimage.h	/^  gboolean           quick_mask_state;      \/*  TRUE if quick mask is on       *\/$/;"	m	struct:_GimpImage
quick_mask_toggle_actions	actions/quick-mask-actions.c	/^static const GimpToggleActionEntry quick_mask_toggle_actions[] =$/;"	v	file:
quick_mask_toggle_cmd_callback	actions/quick-mask-commands.c	/^quick_mask_toggle_cmd_callback (GtkAction *action,$/;"	f
quit_close_all_dialog_container_changed	dialogs/quit-dialog.c	/^quit_close_all_dialog_container_changed (GimpContainer  *images,$/;"	f	file:
quit_close_all_dialog_image_activated	dialogs/quit-dialog.c	/^quit_close_all_dialog_image_activated (GimpContainerView *view,$/;"	f	file:
quit_close_all_dialog_new	dialogs/quit-dialog.c	/^quit_close_all_dialog_new (Gimp     *gimp,$/;"	f	file:
quit_close_all_dialog_response	dialogs/quit-dialog.c	/^quit_close_all_dialog_response (GtkWidget *dialog,$/;"	f	file:
quit_dialog_new	dialogs/quit-dialog.c	/^quit_dialog_new (Gimp *gimp)$/;"	f
quit_invoker	pdb/misc_cmds.c	/^quit_invoker (GimpProcedure     *procedure,$/;"	f	file:
quote	plug-in/gimpinterpreterdb.c	/^quote (gchar *s,$/;"	f	file:
r	composite/gimp-composite-regression.h	/^  guint16  r;$/;"	m	struct:__anon25
r	composite/gimp-composite-regression.h	/^  guint16  r;$/;"	m	struct:__anon26
r	composite/gimp-composite-regression.h	/^  guint32  r;$/;"	m	struct:__anon29
r	composite/gimp-composite-regression.h	/^  guint32  r;$/;"	m	struct:__anon30
r	composite/gimp-composite-regression.h	/^  guint8  r;$/;"	m	struct:__anon21
r	composite/gimp-composite-regression.h	/^  guint8  r;$/;"	m	struct:__anon22
r	composite/gimp-composite-util.h	/^  guchar  r;$/;"	m	struct:__anon39
r	composite/gimp-composite-util.h	/^  guchar  r;$/;"	m	struct:__anon40
r	core/gimppalette-import.c	/^  guchar r;$/;"	m	struct:_ImgColors	file:
r_adj	core/gimppalette-import.c	/^  guint  r_adj;$/;"	m	struct:_ImgColors	file:
r_lookup	base/color-balance.h	/^  guchar   r_lookup[256];$/;"	m	struct:_ColorBalance
radius	core/gimpbrushgenerated.h	/^  gfloat                  radius;$/;"	m	struct:_GimpBrushGenerated
radius_data	widgets/gimpbrusheditor.h	/^  GtkAdjustment  *radius_data;$/;"	m	struct:_GimpBrushEditor
raise_action	widgets/gimpitemtreeview.h	/^  const gchar          *raise_action;$/;"	m	struct:_GimpItemTreeViewClass
raise_button	widgets/gimpimageview.h	/^  GtkWidget           *raise_button;$/;"	m	struct:_GimpImageView
raise_button	widgets/gimpitemtreeview.h	/^  GtkWidget             *raise_button;$/;"	m	struct:_GimpItemTreeView
raise_button	widgets/gimptoolview.h	/^  GtkWidget           *raise_button;$/;"	m	struct:_GimpToolView
raise_top_action	widgets/gimpitemtreeview.h	/^  const gchar          *raise_top_action;$/;"	m	struct:_GimpItemTreeViewClass
rand	paint/gimpbrushcore.h	/^  GRand         *rand;$/;"	m	struct:_GimpBrushCore
random_table	composite/gimp-composite-generic.c	/^static gint32  random_table[RANDOM_TABLE_SIZE];$/;"	v	file:
random_table	paint-funcs/paint-funcs-generic.h	/^static gint32  random_table[RANDOM_TABLE_SIZE];$/;"	v
range_array	core/gimpimage-convert-fsdither.h	/^static const guchar range_array[] = {$/;"	v
range_changed	widgets/gimphistogramview.h	/^  void (* range_changed) (GimpHistogramView *view,$/;"	m	struct:_GimpHistogramViewClass
rank	core/gimpbrushpipe.h	/^  gint             *rank;       \/* Size in each dimension *\/$/;"	m	struct:_GimpBrushPipe
rate	paint/gimpairbrushoptions.h	/^  gdouble           rate;$/;"	m	struct:_GimpAirbrushOptions
rate	paint/gimpconvolveoptions.h	/^  gdouble           rate;$/;"	m	struct:_GimpConvolveOptions
rate	paint/gimppaintoptions.h	/^  gboolean  rate;$/;"	m	struct:_GimpPressureOptions
rate	paint/gimpsmudgeoptions.h	/^  gdouble           rate;$/;"	m	struct:_GimpSmudgeOptions
ratio_xy	core/gimpscanconvert.c	/^  gdouble         ratio_xy;$/;"	m	struct:_GimpScanConvert	file:
read_err_msg	base/tile-swap.c	/^static gboolean       read_err_msg     = TRUE;$/;"	v	file:
read_pixel_data	base/tile-manager.c	/^read_pixel_data (TileManager *tm,$/;"	f
read_pixel_data_1	base/tile-manager.c	/^read_pixel_data_1 (TileManager *tm,$/;"	f
recalc	tools/gimptransformtool.h	/^  void          (* recalc)        (GimpTransformTool *tool,$/;"	m	struct:_GimpTransformToolClass
reconnect	display/gimpdisplayshell.h	/^  void (* reconnect) (GimpDisplayShell *shell);$/;"	m	struct:_GimpDisplayShellClass
recoursing	widgets/gimpcolorpanel.h	/^  gboolean         recoursing;$/;"	m	struct:_GimpColorPanel
recoursing	widgets/gimpimagecommenteditor.h	/^  gboolean               recoursing;$/;"	m	struct:_GimpImageCommentEditor
rect_height	widgets/gimpfgbgeditor.h	/^  gint             rect_height;$/;"	m	struct:_GimpFgBgEditor
rect_select_invoker	pdb/selection_tools_cmds.c	/^rect_select_invoker (GimpProcedure     *procedure,$/;"	f	file:
rect_width	widgets/gimpfgbgeditor.h	/^  gint             rect_width;$/;"	m	struct:_GimpFgBgEditor
rectangle_changed	tools/gimprectangletool.h	/^  gboolean (* rectangle_changed) (GimpRectangleTool *rect_tool);$/;"	m	struct:_GimpRectangleToolInterface
recursion_level	tools/gimptransformoptions.h	/^  gint                      recursion_level;$/;"	m	struct:_GimpTransformOptions
red	core/gimpimage-convert.c	/^  int red;$/;"	m	struct:_Color	file:
red_color	widgets/gimpviewrenderer.c	/^static GimpRGB  red_color;$/;"	v	file:
redo	tools/gimprectangleselecttool.h	/^  GimpUndo          *redo;$/;"	m	struct:_GimpRectSelectTool
redo_button	widgets/gimpundoeditor.h	/^  GtkWidget       *redo_button;$/;"	m	struct:_GimpUndoEditor
redo_label	widgets/gimpimagepropview.h	/^  GtkWidget *redo_label;$/;"	m	struct:_GimpImagePropView
redo_stack	core/gimpimage.h	/^  GimpUndoStack     *redo_stack;            \/*  stack for redo operations    *\/$/;"	m	struct:_GimpImage
reduce_bilinear	paint-funcs/reduce-region.c	/^reduce_bilinear (PixelRegion  *dstPR,$/;"	f	file:
reduce_bilinear_pr	paint-funcs/reduce-region.c	/^reduce_bilinear_pr (PixelRegion *dstPR,$/;"	f	file:
reduce_buffer	paint-funcs/reduce-region.c	/^reduce_buffer (const guchar *src,$/;"	f	file:
reduce_pixel_region	paint-funcs/reduce-region.c	/^reduce_pixel_region (PixelRegion *srcPR,$/;"	f	file:
reduce_region	paint-funcs/reduce-region.c	/^reduce_region (PixelRegion      *srcPR,$/;"	f
reduce_row	paint-funcs/reduce-region.c	/^reduce_row (const guchar *src,$/;"	f	file:
ref_count	base/tile-manager-private.h	/^  gint               ref_count;     \/*  reference counter                    *\/$/;"	m	struct:_TileManager
ref_count	base/tile-private.h	/^  gshort  ref_count;    \/* reference count. when the reference count is$/;"	m	struct:_Tile
ref_count	core/gimpsamplepoint.h	/^  gint     ref_count;$/;"	m	struct:_GimpSamplePoint
ref_count	plug-in/gimppluginprocframe.h	/^  gint           ref_count;$/;"	m	struct:_GimpPlugInProcFrame
ref_count	xcf/xcf-private.h	/^  gint               *ref_count;$/;"	m	struct:_XcfInfo
ref_tiles	core/gimpimage-contiguous-region.c	/^ref_tiles (TileManager  *src,$/;"	f	file:
refcount	file/gimprecentitem.c	/^  gint      refcount;$/;"	m	struct:_GimpRecentItem	file:
refinement	tools/gimpforegroundselecttool.h	/^  SioxRefinementType  refinement;$/;"	m	struct:_GimpForegroundSelectTool
refresh_button	widgets/gimpdatafactoryview.h	/^  GtkWidget           *refresh_button;$/;"	m	struct:_GimpDataFactoryView
refresh_button	widgets/gimpdocumentview.h	/^  GtkWidget           *refresh_button;$/;"	m	struct:_GimpDocumentView
refresh_button	widgets/gimpfontview.h	/^  GtkWidget           *refresh_button;$/;"	m	struct:_GimpFontView
region_height	base/pixel-region.h	/^  gint    region_height;$/;"	m	struct:_PixelRegionIterator
region_mask	tools/gimpregionselecttool.h	/^  GimpChannel       *region_mask;$/;"	m	struct:_GimpRegionSelectTool
region_width	base/pixel-region.h	/^  gint    region_width;$/;"	m	struct:_PixelRegionIterator
regions	base/pixel-processor.c	/^  PixelRegion         *regions[4];$/;"	m	struct:_PixelProcessor	file:
register_brush_procs	pdb/brush_cmds.c	/^register_brush_procs (GimpPDB *pdb)$/;"	f
register_brush_select_procs	pdb/brush_select_cmds.c	/^register_brush_select_procs (GimpPDB *pdb)$/;"	f
register_brushes_procs	pdb/brushes_cmds.c	/^register_brushes_procs (GimpPDB *pdb)$/;"	f
register_buffer_procs	pdb/buffer_cmds.c	/^register_buffer_procs (GimpPDB *pdb)$/;"	f
register_channel_procs	pdb/channel_cmds.c	/^register_channel_procs (GimpPDB *pdb)$/;"	f
register_color_procs	pdb/color_cmds.c	/^register_color_procs (GimpPDB *pdb)$/;"	f
register_context_procs	pdb/context_cmds.c	/^register_context_procs (GimpPDB *pdb)$/;"	f
register_convert_procs	pdb/convert_cmds.c	/^register_convert_procs (GimpPDB *pdb)$/;"	f
register_display_procs	pdb/display_cmds.c	/^register_display_procs (GimpPDB *pdb)$/;"	f
register_drawable_procs	pdb/drawable_cmds.c	/^register_drawable_procs (GimpPDB *pdb)$/;"	f
register_drawable_transform_procs	pdb/drawable_transform_cmds.c	/^register_drawable_transform_procs (GimpPDB *pdb)$/;"	f
register_edit_procs	pdb/edit_cmds.c	/^register_edit_procs (GimpPDB *pdb)$/;"	f
register_file_handler_mime_invoker	pdb/fileops_cmds.c	/^register_file_handler_mime_invoker (GimpProcedure     *procedure,$/;"	f	file:
register_fileops_procs	pdb/fileops_cmds.c	/^register_fileops_procs (GimpPDB *pdb)$/;"	f
register_floating_sel_procs	pdb/floating_sel_cmds.c	/^register_floating_sel_procs (GimpPDB *pdb)$/;"	f
register_font_select_procs	pdb/font_select_cmds.c	/^register_font_select_procs (GimpPDB *pdb)$/;"	f
register_fonts_procs	pdb/fonts_cmds.c	/^register_fonts_procs (GimpPDB *pdb)$/;"	f
register_gimprc_procs	pdb/gimprc_cmds.c	/^register_gimprc_procs (GimpPDB *pdb)$/;"	f
register_gradient_procs	pdb/gradient_cmds.c	/^register_gradient_procs (GimpPDB *pdb)$/;"	f
register_gradient_select_procs	pdb/gradient_select_cmds.c	/^register_gradient_select_procs (GimpPDB *pdb)$/;"	f
register_gradients_procs	pdb/gradients_cmds.c	/^register_gradients_procs (GimpPDB *pdb)$/;"	f
register_grid_procs	pdb/grid_cmds.c	/^register_grid_procs (GimpPDB *pdb)$/;"	f
register_guides_procs	pdb/guides_cmds.c	/^register_guides_procs (GimpPDB *pdb)$/;"	f
register_help_procs	pdb/help_cmds.c	/^register_help_procs (GimpPDB *pdb)$/;"	f
register_image_procs	pdb/image_cmds.c	/^register_image_procs (GimpPDB *pdb)$/;"	f
register_layer_procs	pdb/layer_cmds.c	/^register_layer_procs (GimpPDB *pdb)$/;"	f
register_load_handler_invoker	pdb/fileops_cmds.c	/^register_load_handler_invoker (GimpProcedure     *procedure,$/;"	f	file:
register_magic_load_handler_invoker	pdb/fileops_cmds.c	/^register_magic_load_handler_invoker (GimpProcedure     *procedure,$/;"	f	file:
register_message_procs	pdb/message_cmds.c	/^register_message_procs (GimpPDB *pdb)$/;"	f
register_misc_procs	pdb/misc_cmds.c	/^register_misc_procs (GimpPDB *pdb)$/;"	f
register_paint_tools_procs	pdb/paint_tools_cmds.c	/^register_paint_tools_procs (GimpPDB *pdb)$/;"	f
register_palette_procs	pdb/palette_cmds.c	/^register_palette_procs (GimpPDB *pdb)$/;"	f
register_palette_select_procs	pdb/palette_select_cmds.c	/^register_palette_select_procs (GimpPDB *pdb)$/;"	f
register_palettes_procs	pdb/palettes_cmds.c	/^register_palettes_procs (GimpPDB *pdb)$/;"	f
register_parasite_procs	pdb/parasite_cmds.c	/^register_parasite_procs (GimpPDB *pdb)$/;"	f
register_paths_procs	pdb/paths_cmds.c	/^register_paths_procs (GimpPDB *pdb)$/;"	f
register_pattern_procs	pdb/pattern_cmds.c	/^register_pattern_procs (GimpPDB *pdb)$/;"	f
register_pattern_select_procs	pdb/pattern_select_cmds.c	/^register_pattern_select_procs (GimpPDB *pdb)$/;"	f
register_patterns_procs	pdb/patterns_cmds.c	/^register_patterns_procs (GimpPDB *pdb)$/;"	f
register_plug_in_procs	pdb/plug_in_cmds.c	/^register_plug_in_procs (GimpPDB *pdb)$/;"	f
register_procedural_db_procs	pdb/procedural_db_cmds.c	/^register_procedural_db_procs (GimpPDB *pdb)$/;"	f
register_procedure	pdb/gimppdb.h	/^  void (* register_procedure)   (GimpPDB       *pdb,$/;"	m	struct:_GimpPDBClass
register_progress_procs	pdb/progress_cmds.c	/^register_progress_procs (GimpPDB *pdb)$/;"	f
register_save_handler_invoker	pdb/fileops_cmds.c	/^register_save_handler_invoker (GimpProcedure     *procedure,$/;"	f	file:
register_selection_procs	pdb/selection_cmds.c	/^register_selection_procs (GimpPDB *pdb)$/;"	f
register_selection_tools_procs	pdb/selection_tools_cmds.c	/^register_selection_tools_procs (GimpPDB *pdb)$/;"	f
register_text_tool_procs	pdb/text_tool_cmds.c	/^register_text_tool_procs (GimpPDB *pdb)$/;"	f
register_thumbnail_loader_invoker	pdb/fileops_cmds.c	/^register_thumbnail_loader_invoker (GimpProcedure     *procedure,$/;"	f	file:
register_transform_tools_procs	pdb/transform_tools_cmds.c	/^register_transform_tools_procs (GimpPDB *pdb)$/;"	f
register_undo_procs	pdb/undo_cmds.c	/^register_undo_procs (GimpPDB *pdb)$/;"	f
register_unit_procs	pdb/unit_cmds.c	/^register_unit_procs (GimpPDB *pdb)$/;"	f
register_vectors_procs	pdb/vectors_cmds.c	/^register_vectors_procs (GimpPDB *pdb)$/;"	f
registered_dialogs	widgets/gimpdialogfactory.h	/^  GList                 *registered_dialogs;$/;"	m	struct:_GimpDialogFactory
registered_groups	widgets/gimpactionfactory.h	/^  GList      *registered_groups;$/;"	m	struct:_GimpActionFactory
registered_menus	widgets/gimpmenufactory.h	/^  GList             *registered_menus;$/;"	m	struct:_GimpMenuFactory
registered_uis	widgets/gimpuimanager.h	/^  GList        *registered_uis;$/;"	m	struct:_GimpUIManager
rel	vectors/gimpvectors-import.c	/^  gboolean     rel;       \/* true if relative coords                     *\/$/;"	m	struct:__anon305	file:
remap_indexed_layer	core/gimpimage-convert.c	/^remap_indexed_layer (GimpLayer    *layer,$/;"	f	file:
remember_if_open	widgets/gimpdialogfactory.h	/^  gboolean           remember_if_open;$/;"	m	struct:_GimpDialogFactoryEntry
remember_size	widgets/gimpdialogfactory.h	/^  gboolean           remember_size;$/;"	m	struct:_GimpDialogFactoryEntry
remove	core/gimpcontainer.h	/^  void         (* remove)             (GimpContainer       *container,$/;"	m	struct:_GimpContainerClass
remove	core/gimpparasitelist.h	/^  void (* remove) (GimpParasiteList *list,$/;"	m	struct:_GimpParasiteListClass
remove_button	widgets/gimpcolordisplayeditor.h	/^  GtkWidget             *remove_button;$/;"	m	struct:_GimpColorDisplayEditor
remove_button	widgets/gimpcontrollerlist.h	/^  GtkWidget          *remove_button;$/;"	m	struct:_GimpControllerList
remove_button	widgets/gimpdocumentview.h	/^  GtkWidget           *remove_button;$/;"	m	struct:_GimpDocumentView
remove_dups	dialogs/convert-dialog.c	/^  gboolean                remove_dups;$/;"	m	struct:__anon171	file:
remove_item	widgets/gimpcontainerview.h	/^  void     (* remove_item)   (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
remove_item	widgets/gimpitemtreeview.h	/^  GimpRemoveItemFunc    remove_item;$/;"	m	struct:_GimpItemTreeViewClass
removed	core/gimpguide.h	/^  void (* removed)    (GimpGuide  *guide);$/;"	m	struct:_GimpGuideClass
removed	core/gimpitem.h	/^  gboolean          removed;            \/*  removed from the image?  *\/$/;"	m	struct:_GimpItem
removed	core/gimpitem.h	/^  void       (* removed)            (GimpItem      *item);$/;"	m	struct:_GimpItemClass
removed	vectors/gimpstroke.h	/^  void          (* removed)              (GimpStroke            *stroke);$/;"	m	struct:_GimpStrokeClass
rename	core/gimpitem.h	/^  gboolean   (* rename)       (GimpItem               *item,$/;"	m	struct:_GimpItemClass
rename_desc	core/gimpitem.h	/^  const gchar *rename_desc;$/;"	m	struct:_GimpItemClass
rename_item	widgets/gimpcontainerview.h	/^  void     (* rename_item)   (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
rename_toggle	dialogs/layer-options-dialog.h	/^  GtkWidget    *rename_toggle;$/;"	m	struct:_LayerOptionsDialog
render	widgets/gimpviewrenderer.h	/^  void (* render)      (GimpViewRenderer   *renderer,$/;"	m	struct:_GimpViewRendererClass
render_blob	paint/gimpink.c	/^render_blob (Blob        *blob,$/;"	f	file:
render_blob_line	paint/gimpink.c	/^render_blob_line (Blob   *blob,$/;"	f	file:
render_buf	display/gimpdisplayshell.h	/^  guchar           *render_buf;        \/*  buffer for rendering the image     *\/$/;"	m	struct:_GimpDisplayShell
render_buf	widgets/gimpfgbgeditor.h	/^  guchar          *render_buf;$/;"	m	struct:_GimpFgBgEditor
render_buf	widgets/gimpfgbgview.h	/^  guchar      *render_buf;$/;"	m	struct:_GimpFgBgView
render_buf_size	widgets/gimpfgbgeditor.h	/^  gint             render_buf_size;$/;"	m	struct:_GimpFgBgEditor
render_buf_size	widgets/gimpfgbgview.h	/^  gint         render_buf_size;$/;"	m	struct:_GimpFgBgView
render_funcs	display/gimpdisplayshell-render.c	/^static RenderFunc render_funcs[6] =$/;"	v	file:
render_image_gray	display/gimpdisplayshell-render.c	/^render_image_gray (RenderInfo *info)$/;"	f	file:
render_image_gray_a	display/gimpdisplayshell-render.c	/^render_image_gray_a (RenderInfo *info)$/;"	f	file:
render_image_indexed	display/gimpdisplayshell-render.c	/^render_image_indexed (RenderInfo *info)$/;"	f	file:
render_image_indexed_a	display/gimpdisplayshell-render.c	/^render_image_indexed_a (RenderInfo *info)$/;"	f	file:
render_image_init_alpha	display/gimpdisplayshell-render.c	/^render_image_init_alpha (gint mult)$/;"	f	file:
render_image_rgb	display/gimpdisplayshell-render.c	/^render_image_rgb (RenderInfo *info)$/;"	f	file:
render_image_rgb_a	display/gimpdisplayshell-render.c	/^render_image_rgb_a (RenderInfo *info)$/;"	f	file:
render_image_tile_fault	display/gimpdisplayshell-render.c	/^render_image_tile_fault (RenderInfo *info)$/;"	f	file:
render_image_tile_fault_nearest	display/gimpdisplayshell-render.c	/^render_image_tile_fault_nearest (RenderInfo *info)$/;"	f	file:
render_image_tile_fault_one_row	display/gimpdisplayshell-render.c	/^render_image_tile_fault_one_row (RenderInfo *info)$/;"	f	file:
renderer	widgets/gimpcellrendererviewable.h	/^  GimpViewRenderer *renderer;$/;"	m	struct:_GimpCellRendererViewable
renderer	widgets/gimpview.h	/^  GimpViewRenderer *renderer;$/;"	m	struct:_GimpView
renderer_cell	widgets/gimpcomponenteditor.h	/^  GtkCellRenderer   *renderer_cell;$/;"	m	struct:_GimpComponentEditor
renderer_cell	widgets/gimpcontainertreeview.h	/^  GtkCellRenderer   *renderer_cell;$/;"	m	struct:_GimpContainerTreeView
renderer_cells	widgets/gimpcontainertreeview.h	/^  GList             *renderer_cells;$/;"	m	struct:_GimpContainerTreeView
renderer_signals	widgets/gimpviewrenderer.c	/^static guint renderer_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
reorder	core/gimpcontainer.h	/^  void         (* reorder)            (GimpContainer       *container,$/;"	m	struct:_GimpContainerClass
reorder_desc	widgets/gimpitemtreeview.h	/^  const gchar          *reorder_desc;$/;"	m	struct:_GimpItemTreeViewClass
reorder_item	widgets/gimpcontainerview.h	/^  void     (* reorder_item)  (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
reorder_item	widgets/gimpitemtreeview.h	/^  GimpReorderItemFunc   reorder_item;$/;"	m	struct:_GimpItemTreeViewClass
reorderable	widgets/gimpcontainerview.c	/^  gboolean       reorderable;$/;"	m	struct:_GimpContainerViewPrivate	file:
repeat	core/gimpdrawable-blend.c	/^  GimpRepeatMode    repeat;$/;"	m	struct:__anon117	file:
repeat	widgets/gimpmessagebox.h	/^  gint          repeat;$/;"	m	struct:_GimpMessageBox
replace	composite/gimp-composite.h	/^  struct { gint opacity; gchar affect;   } replace;$/;"	m	struct:__anon33	typeref:struct:__anon33::__anon34
replace_indexed_pixels	paint-funcs/paint-funcs.c	/^replace_indexed_pixels (const guchar   *src1,$/;"	f	file:
replace_inten_pixels	paint-funcs/paint-funcs.c	/^replace_inten_pixels (const guchar   *src1,$/;"	f	file:
replace_pixels	paint-funcs/paint-funcs-generic.h	/^replace_pixels (const guchar   *src1,$/;"	f
replace_region	core/gimpdrawable.h	/^  void (* replace_region)        (GimpDrawable         *drawable,$/;"	m	struct:_GimpDrawableClass
replicate_times	widgets/gimpgradienteditor.h	/^  gint          replicate_times;$/;"	m	struct:_GimpGradientEditor
report_referenced	composite/ns.py	/^def report_referenced(objects):$/;"	f
report_unreferenced	composite/ns.py	/^def report_unreferenced(objects):$/;"	f
rerror	core/gimpimage-convert.c	/^  guint64 rerror;$/;"	m	struct:__anon108	file:
res_label	widgets/gimpsizebox.c	/^  GtkWidget       *res_label;$/;"	m	struct:_GimpSizeBoxPrivate	file:
reset	core/gimptooloptions.h	/^  void (* reset) (GimpToolOptions *tool_options);$/;"	m	struct:_GimpToolOptionsClass
reset	tools/gimpimagemaptool.h	/^  void     (* reset)         (GimpImageMapTool  *image_map_tool);$/;"	m	struct:_GimpImageMapToolClass
reset_button	widgets/gimpcolordisplayeditor.h	/^  GtkWidget             *reset_button;$/;"	m	struct:_GimpColorDisplayEditor
reset_button	widgets/gimptooloptionseditor.h	/^  GtkWidget       *reset_button;$/;"	m	struct:_GimpToolOptionsEditor
reset_button	widgets/gimptoolview.h	/^  GtkWidget           *reset_button;$/;"	m	struct:_GimpToolView
resize	core/gimpitem.h	/^  void       (* resize)       (GimpItem               *item,$/;"	m	struct:_GimpItemClass
resize_bound_off_x	dialogs/resize-dialog.c	/^resize_bound_off_x (ResizeDialog *private,$/;"	f	file:
resize_bound_off_y	dialogs/resize-dialog.c	/^resize_bound_off_y (ResizeDialog *private,$/;"	f	file:
resize_desc	core/gimpitem.h	/^  const gchar *resize_desc;$/;"	m	struct:_GimpItemClass
resize_dialog_free	dialogs/resize-dialog.c	/^resize_dialog_free (ResizeDialog *private)$/;"	f	file:
resize_dialog_new	dialogs/resize-dialog.c	/^resize_dialog_new (GimpViewable       *viewable,$/;"	f
resize_dialog_reset	dialogs/resize-dialog.c	/^resize_dialog_reset (ResizeDialog *private)$/;"	f	file:
resize_dialog_response	dialogs/resize-dialog.c	/^resize_dialog_response (GtkWidget    *dialog,$/;"	f	file:
resize_windows_on_resize	config/gimpdisplayconfig.h	/^  gboolean            resize_windows_on_resize;$/;"	m	struct:_GimpDisplayConfig
resize_windows_on_zoom	config/gimpdisplayconfig.h	/^  gboolean            resize_windows_on_zoom;$/;"	m	struct:_GimpDisplayConfig
resolution	widgets/gimpstrokeeditor.h	/^  gdouble            resolution;$/;"	m	struct:_GimpStrokeEditor
resolution_calibrate_dialog	dialogs/resolution-calibrate-dialog.c	/^resolution_calibrate_dialog (GtkWidget *resolution_entry,$/;"	f
resolution_changed	core/gimpimage.h	/^  void (* resolution_changed)           (GimpImage            *image);$/;"	m	struct:_GimpImageClass
resolution_changed	core/gimpundo.h	/^  gboolean resolution_changed;$/;"	m	struct:_GimpUndoAccumulator
resolution_entry	dialogs/print-size-dialog.c	/^  GimpSizeEntry          *resolution_entry;$/;"	m	struct:__anon183	file:
resolution_label	widgets/gimpimagepropview.h	/^  GtkWidget *resolution_label;$/;"	m	struct:_GimpImagePropView
resolution_se	widgets/gimptemplateeditor.h	/^  GtkWidget     *resolution_se;$/;"	m	struct:_GimpTemplateEditor
resolution_unit	core/gimpimage.h	/^  GimpUnit           resolution_unit;       \/*  resolution unit              *\/$/;"	m	struct:_GimpImage
resolution_unit	core/gimpimageundo.h	/^  GimpUnit           resolution_unit;$/;"	m	struct:_GimpImageUndo
resolution_unit	core/gimptemplate.h	/^  GimpUnit           resolution_unit;$/;"	m	struct:_GimpTemplate
resolution_unit	dialogs/image-scale-dialog.c	/^  GimpUnit               resolution_unit;$/;"	m	struct:__anon167	file:
resolution_unit	widgets/gimpsizebox.h	/^  GimpUnit      resolution_unit;$/;"	m	struct:_GimpSizeBox
resolutions	widgets/gimpunitstore.h	/^  gdouble      *resolutions;$/;"	m	struct:_GimpUnitStore
resolve	composite/ns.py	/^def resolve(objects):$/;"	f
resolve_	composite/ns.py	/^def resolve_(objects, obj):$/;"	f
resolve_extension	plug-in/gimpinterpreterdb.c	/^resolve_extension (GimpInterpreterDB *db,$/;"	f	file:
resolve_magic	plug-in/gimpinterpreterdb.c	/^resolve_magic (GimpInterpreterDB *db,$/;"	f	file:
resolve_program	plug-in/gimpinterpreterdb.c	/^resolve_program (gpointer key,$/;"	f	file:
resolve_sh_bang	plug-in/gimpinterpreterdb.c	/^resolve_sh_bang (GimpInterpreterDB  *db,$/;"	f	file:
restore	core/gimp.h	/^  void     (* restore)        (Gimp               *gimp,$/;"	m	struct:_GimpClass
restore_accels	config/gimpguiconfig.h	/^  gboolean             restore_accels;$/;"	m	struct:_GimpGuiConfig
restore_button	widgets/gimptooloptionseditor.h	/^  GtkWidget       *restore_button;$/;"	m	struct:_GimpToolOptionsEditor
restore_session	config/gimpguiconfig.h	/^  gboolean             restore_session;$/;"	m	struct:_GimpGuiConfig
restriction	tools/gimpvectortool.h	/^  GimpAnchorFeatureType restriction;    \/* movement restriction              *\/$/;"	m	struct:_GimpVectorTool
return_if_no_channel	actions/actions.h	94;"	d
return_if_no_context	actions/actions.h	61;"	d
return_if_no_display	actions/actions.h	71;"	d
return_if_no_drawable	actions/actions.h	82;"	d
return_if_no_gimp	actions/actions.h	56;"	d
return_if_no_image	actions/actions.h	66;"	d
return_if_no_layer	actions/actions.h	88;"	d
return_if_no_vectors	actions/actions.h	100;"	d
return_if_no_widget	actions/actions.h	76;"	d
return_vals	plug-in/gimppluginprocframe.h	/^  GValueArray   *return_vals;$/;"	m	struct:_GimpPlugInProcFrame
reverse	core/gimpdrawable-blend.c	/^  gboolean          reverse;$/;"	m	struct:__anon117	file:
reverse	widgets/gimpviewrenderergradient.h	/^  gboolean          reverse;$/;"	m	struct:_GimpViewRendererGradient
reverse_list_col_children	widgets/gtkvwrapbox.c	/^reverse_list_col_children (GtkWrapBox       *wbox,$/;"	f	file:
reverse_list_row_children	widgets/gtkhwrapbox.c	/^reverse_list_row_children (GtkWrapBox       *wbox,$/;"	f	file:
revert_bg	widgets/gimptoolbox-color-area.c	/^static GimpRGB          revert_bg;$/;"	v	file:
revert_button	widgets/gimpdataeditor.h	/^  GtkWidget       *revert_button;$/;"	m	struct:_GimpDataEditor
revert_fg	widgets/gimptoolbox-color-area.c	/^static GimpRGB          revert_fg;$/;"	v	file:
rgb8_t	composite/gimp-composite-util.h	/^} rgb8_t;$/;"	t	typeref:struct:__anon40
rgb_to_lin	core/gimpimage-convert.c	/^void rgb_to_lin(const unsigned char r,$/;"	f	file:
rgb_to_unshifted_lin	core/gimpimage-convert.c	/^void rgb_to_unshifted_lin(const unsigned char r,$/;"	f	file:
rgb_to_xyz	base/cpercep.c	/^rgb_to_xyz (double *inr_outx,$/;"	f	file:
rgba8_alpha_mask_128	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_alpha_mask_128[4] = { 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000 };$/;"	v	file:
rgba8_alpha_mask_64	composite/gimp-composite-mmx.c	/^const guint32 rgba8_alpha_mask_64[2] = { 0xFF000000, 0xFF000000 };$/;"	v
rgba8_alpha_mask_64	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_alpha_mask_64[2] = { 0xFF000000, 0xFF000000 };$/;"	v	file:
rgba8_b1_128	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_b1_128[4] =         { 0x01010101, 0x01010101, 0x01010101, 0x01010101 };$/;"	v	file:
rgba8_b1_64	composite/gimp-composite-mmx.c	/^const guint32 rgba8_b1_64[2] =         { 0x01010101, 0x01010101 };$/;"	v
rgba8_b1_64	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_b1_64[2] =         { 0x01010101, 0x01010101 };$/;"	v	file:
rgba8_b255_128	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_b255_128[4] =       { 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF };$/;"	v	file:
rgba8_b255_64	composite/gimp-composite-mmx.c	/^const guint32 rgba8_b255_64[2] =       { 0xFFFFFFFF, 0xFFFFFFFF };$/;"	v
rgba8_b255_64	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_b255_64[2] =       { 0xFFFFFFFF, 0xFFFFFFFF };$/;"	v	file:
rgba8_t	composite/gimp-composite-util.h	/^} rgba8_t;$/;"	t	typeref:struct:__anon39
rgba8_w128_128	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w128_128[4] =       { 0x00800080, 0x00800080, 0x00800080, 0x00800080 };$/;"	v	file:
rgba8_w128_64	composite/gimp-composite-mmx.c	/^const guint32 rgba8_w128_64[2] =       { 0x00800080, 0x00800080 };$/;"	v
rgba8_w128_64	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w128_64[2] =       { 0x00800080, 0x00800080 };$/;"	v	file:
rgba8_w1_128	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w1_128[4] =         { 0x00010001, 0x00010001, 0x00010001, 0x00010001 };$/;"	v	file:
rgba8_w1_64	composite/gimp-composite-mmx.c	/^const guint32 rgba8_w1_64[2] =         { 0x00010001, 0x00010001 };$/;"	v
rgba8_w1_64	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w1_64[2] =         { 0x00010001, 0x00010001 };$/;"	v	file:
rgba8_w255_128	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w255_128[4] =       { 0X00FF00FF, 0X00FF00FF, 0X00FF00FF, 0X00FF00FF };$/;"	v	file:
rgba8_w255_64	composite/gimp-composite-mmx.c	/^const guint32 rgba8_w255_64[2] =       { 0X00FF00FF, 0X00FF00FF };$/;"	v
rgba8_w255_64	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w255_64[2] =       { 0X00FF00FF, 0X00FF00FF };$/;"	v	file:
rgba8_w256_128	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w256_128[4] =       { 0x01000100, 0x01000100, 0x01000100, 0x01000100 };$/;"	v	file:
rgba8_w256_64	composite/gimp-composite-mmx.c	/^const guint32 rgba8_w256_64[2] =       { 0x01000100, 0x01000100 };$/;"	v
rgba8_w256_64	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w256_64[2] =       { 0x01000100, 0x01000100 };$/;"	v	file:
rgba8_w2_128	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w2_128[4] =         { 0x00020002, 0x00020002, 0x00020002, 0x00020002 };$/;"	v	file:
rgba8_w2_64	composite/gimp-composite-mmx.c	/^const guint32 rgba8_w2_64[2] =         { 0x00020002, 0x00020002 };$/;"	v
rgba8_w2_64	composite/gimp-composite-sse2.c	/^static const guint32 rgba8_w2_64[2] =         { 0x00020002, 0x00020002 };$/;"	v	file:
rgbxyzrgb_init	base/cpercep.c	/^rgbxyzrgb_init(void)$/;"	f	file:
right	core/gimpgradient.h	/^  gdouble                  left, middle, right;$/;"	m	struct:_GimpGradientSegment
right	paint/gimpink-blob.h	/^  gint right;$/;"	m	struct:_BlobSpan
right	widgets/gimpviewrenderergradient.h	/^  gdouble           right;$/;"	m	struct:_GimpViewRendererGradient
right_color	core/gimpgradient.h	/^  GimpRGB                  right_color;$/;"	m	struct:_GimpGradientSegment
right_color_type	core/gimpgradient.h	/^  GimpGradientColor        right_color_type;$/;"	m	struct:_GimpGradientSegment
right_number_property	widgets/gimppropwidgets.c	/^  const gchar *right_number_property;$/;"	m	struct:__anon382	file:
right_saved_dirty	widgets/gimpgradienteditor.h	/^  gboolean             right_saved_dirty;$/;"	m	struct:_GimpGradientEditor
right_saved_segments	widgets/gimpgradienteditor.h	/^  GimpGradientSegment *right_saved_segments;$/;"	m	struct:_GimpGradientEditor
rightmost	tools/gimpcurvestool.h	/^  gint                  rightmost;$/;"	m	struct:_GimpCurvesTool
rlist_line_children	widgets/gtkwrapbox.h	/^  GSList* (*rlist_line_children) (GtkWrapBox       *wbox,$/;"	m	struct:_GtkWrapBoxClass
rotate	core/gimpitem.h	/^  void       (* rotate)       (GimpItem               *item,$/;"	m	struct:_GimpItemClass
rotate	vectors/gimpstroke.h	/^  void          (* rotate)               (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
rotate_angle_changed	tools/gimprotatetool.c	/^rotate_angle_changed (GtkAdjustment     *adj,$/;"	f	file:
rotate_center_changed	tools/gimprotatetool.c	/^rotate_center_changed (GtkWidget         *widget,$/;"	f	file:
rotate_desc	core/gimpitem.h	/^  const gchar *rotate_desc;$/;"	m	struct:_GimpItemClass
rotate_invoker	pdb/transform_tools_cmds.c	/^rotate_invoker (GimpProcedure     *procedure,$/;"	f	file:
rotate_pointers	paint-funcs/paint-funcs.c	/^rotate_pointers (guchar  **p,$/;"	f	file:
rotate_pointers	paint-funcs/scale-region.c	/^rotate_pointers (guchar  **p,$/;"	f	file:
rotate_pointers	paint/gimpbrushcore.c	/^rotate_pointers (gulong  **p,$/;"	f	file:
round_corners	tools/gimprectangleselectoptions.h	/^  gboolean              round_corners;$/;"	m	struct:_GimpRectSelectOptions
round_corners	tools/gimprectangleselecttool.h	/^  gboolean           round_corners;$/;"	m	struct:_GimpRectSelectTool
round_rect_select_invoker	pdb/selection_tools_cmds.c	/^round_rect_select_invoker (GimpProcedure     *procedure,$/;"	f	file:
row_data	core/gimpdrawable-blend.c	/^  guchar      *row_data;$/;"	m	struct:__anon118	file:
rowhint	base/tile-private.h	/^  TileRowHint *rowhint; \/* An array of hints for rendering purposes *\/$/;"	m	struct:_Tile
rows	widgets/gimpcontainergridview.h	/^  gint              rows;$/;"	m	struct:_GimpContainerGridView
rows	widgets/gimpviewrendererpalette.h	/^  gint              rows;$/;"	m	struct:_GimpViewRendererPalette
rowstride	base/pixel-region.h	/^  gint         rowstride;      \/*  bytes per pixel row           *\/$/;"	m	struct:_PixelRegion
rowstride	base/pixel-surround.c	/^  gint         rowstride;  \/*  rowstride of buffers                 *\/$/;"	m	struct:_PixelSurround	file:
rowstride	core/gimpscanconvert.c	/^  gint            rowstride;$/;"	m	struct:_GimpScanConvert	file:
rowstride	widgets/gimpviewrenderer.h	/^  gint                rowstride;$/;"	m	struct:_GimpViewRenderer
rpx	vectors/gimpvectors-import.c	/^  gdouble      rpx, rpy;  \/* reflection point (for 's' and 't' commands) *\/$/;"	m	struct:__anon305	file:
rpy	vectors/gimpvectors-import.c	/^  gdouble      rpx, rpy;  \/* reflection point (for 's' and 't' commands) *\/$/;"	m	struct:__anon305	file:
ruler_height	dialogs/resolution-calibrate-dialog.c	/^static gint       ruler_height    = 1;$/;"	v	file:
ruler_width	dialogs/resolution-calibrate-dialog.c	/^static gint       ruler_width     = 1;$/;"	v	file:
run_callback	widgets/gimppdbdialog.h	/^  GValueArray * (* run_callback) (GimpPdbDialog *dialog,$/;"	m	struct:_GimpPdbDialogClass
run_length_encode	paint-funcs/paint-funcs.c	/^run_length_encode (const guchar *src,$/;"	f	file:
sample_adapt	core/gimp-transform-region.c	/^sample_adapt (TileManager  *tm,$/;"	f	file:
sample_average	tools/gimpcoloroptions.h	/^  gboolean             sample_average;$/;"	m	struct:_GimpColorOptions
sample_bi	core/gimp-transform-region.c	/^sample_bi (TileManager  *tm,$/;"	f	file:
sample_cubic	core/gimp-transform-region.c	/^sample_cubic (PixelSurround *surround,$/;"	f	file:
sample_lanczos	core/gimp-transform-region.c	/^sample_lanczos (PixelSurround *surround,$/;"	f	file:
sample_linear	core/gimp-transform-region.c	/^sample_linear (PixelSurround *surround,$/;"	f	file:
sample_merged	core/gimpimage-contiguous-region.c	/^  gboolean             sample_merged;$/;"	m	struct:__anon100	file:
sample_merged	paint/gimpsourceoptions.h	/^  gboolean             sample_merged;$/;"	m	struct:_GimpSourceOptions
sample_merged	tools/gimpbucketfilloptions.h	/^  gboolean            sample_merged;$/;"	m	struct:_GimpBucketFillOptions
sample_merged	tools/gimpcoloroptions.h	/^  gboolean             sample_merged;$/;"	m	struct:_GimpColorOptions
sample_merged	tools/gimpselectionoptions.h	/^  gboolean            sample_merged;$/;"	m	struct:_GimpSelectionOptions
sample_merged	widgets/gimpcursorview.h	/^  gboolean     sample_merged;$/;"	m	struct:_GimpCursorView
sample_merged	widgets/gimpsamplepointeditor.h	/^  gboolean         sample_merged;$/;"	m	struct:_GimpSamplePointEditor
sample_merged_toggle	dialogs/palette-import-dialog.c	/^  GtkWidget     *sample_merged_toggle;$/;"	m	struct:__anon178	file:
sample_point	core/gimpsamplepointundo.h	/^  GimpSamplePoint *sample_point;$/;"	m	struct:_GimpSamplePointUndo
sample_point	tools/gimpcolortool.h	/^  GimpSamplePoint   *sample_point;$/;"	m	struct:_GimpColorTool
sample_point_ID	core/gimpsamplepoint.h	/^  guint32  sample_point_ID;$/;"	m	struct:_GimpSamplePoint
sample_point_added	core/gimpimage.h	/^  void (* sample_point_added)           (GimpImage            *image,$/;"	m	struct:_GimpImageClass
sample_point_removed	core/gimpimage.h	/^  void (* sample_point_removed)         (GimpImage            *image,$/;"	m	struct:_GimpImageClass
sample_point_x	tools/gimpcolortool.h	/^  gint               sample_point_x;$/;"	m	struct:_GimpColorTool
sample_point_y	tools/gimpcolortool.h	/^  gint               sample_point_y;$/;"	m	struct:_GimpColorTool
sample_points	core/gimpimage.h	/^  GList             *sample_points;         \/*  color sample points          *\/$/;"	m	struct:_GimpImage
sample_points_actions	actions/sample-points-actions.c	/^static const GimpActionEntry sample_points_actions[] =$/;"	v	file:
sample_points_actions_setup	actions/sample-points-actions.c	/^sample_points_actions_setup (GimpActionGroup *group)$/;"	f
sample_points_actions_update	actions/sample-points-actions.c	/^sample_points_actions_update (GimpActionGroup *group,$/;"	f
sample_points_sample_merged_cmd_callback	actions/sample-points-commands.c	/^sample_points_sample_merged_cmd_callback (GtkAction *action,$/;"	f
sample_points_toggle_actions	actions/sample-points-actions.c	/^static const GimpToggleActionEntry sample_points_toggle_actions[] =$/;"	v	file:
sample_size	widgets/gimpgradientselect.h	/^  gint           sample_size;$/;"	m	struct:_GimpGradientSelect
sample_type	widgets/gimpcolorframe.h	/^  GimpImageType       sample_type;$/;"	m	struct:_GimpColorFrame
sample_valid	widgets/gimpcolorframe.h	/^  gboolean            sample_valid;$/;"	m	struct:_GimpColorFrame
sanitize_filename	composite/make-installer.py	/^def sanitize_filename(filename):$/;"	f
sanity_check	sanity.c	/^sanity_check (void)$/;"	f
sanity_check_filename_encoding	sanity.c	/^sanity_check_filename_encoding (void)$/;"	f	file:
sanity_check_fontconfig	sanity.c	/^sanity_check_fontconfig (void)$/;"	f	file:
sanity_check_freetype	sanity.c	/^sanity_check_freetype (void)$/;"	f	file:
sanity_check_gimp	sanity.c	/^sanity_check_gimp (void)$/;"	f	file:
sanity_check_glib	sanity.c	/^sanity_check_glib (void)$/;"	f	file:
saturation	base/colorize.h	/^  gdouble saturation;$/;"	m	struct:_Colorize
saturation	base/hue-saturation.h	/^  gdouble saturation[7];$/;"	m	struct:_HueSaturation
saturation_data	tools/gimpcolorizetool.h	/^  GtkAdjustment    *saturation_data;$/;"	m	struct:_GimpColorizeTool
saturation_data	tools/gimphuesaturationtool.h	/^  GtkAdjustment    *saturation_data;$/;"	m	struct:_GimpHueSaturationTool
saturation_only_pixels	paint-funcs/paint-funcs-generic.h	/^saturation_only_pixels (const guchar *src1,$/;"	f
saturation_transfer	base/hue-saturation.h	/^  gint    saturation_transfer[6][256];$/;"	m	struct:_HueSaturation
save	core/gimpdata.h	/^  gboolean   (* save)          (GimpData  *data,$/;"	m	struct:_GimpDataClass
save_a_copy	widgets/gimpfiledialog.h	/^  gboolean              save_a_copy;$/;"	m	struct:_GimpFileDialog
save_accels	config/gimpguiconfig.h	/^  gboolean             save_accels;$/;"	m	struct:_GimpGuiConfig
save_button	tools/gimpimagemaptool.h	/^  GtkWidget     *save_button;$/;"	m	struct:_GimpImageMapTool
save_button	widgets/gimpdataeditor.h	/^  GtkWidget       *save_button;$/;"	m	struct:_GimpDataEditor
save_button	widgets/gimpdevicestatus.h	/^  GtkWidget  *save_button;$/;"	m	struct:_GimpDeviceStatus
save_button	widgets/gimperrorconsole.h	/^  GtkWidget     *save_button;$/;"	m	struct:_GimpErrorConsole
save_button	widgets/gimpselectioneditor.h	/^  GtkWidget       *save_button;$/;"	m	struct:_GimpSelectionEditor
save_button	widgets/gimptooloptionseditor.h	/^  GtkWidget       *save_button;$/;"	m	struct:_GimpToolOptionsEditor
save_button_tip	tools/gimpimagemaptool.h	/^  const gchar        *save_button_tip;$/;"	m	struct:_GimpImageMapToolClass
save_device_status	config/gimpguiconfig.h	/^  gboolean             save_device_status;$/;"	m	struct:_GimpGuiConfig
save_dialog_title	tools/gimpimagemaptool.h	/^  const gchar        *save_dialog_title;$/;"	m	struct:_GimpImageMapToolClass
save_document_history	config/gimpcoreconfig.h	/^  gboolean                save_document_history;$/;"	m	struct:_GimpCoreConfig
save_idle_id	config/gimprc.h	/^  guint             save_idle_id;$/;"	m	struct:_GimpRc
save_idle_id	widgets/gimptooloptionseditor.h	/^  guint            save_idle_id;$/;"	m	struct:_GimpToolOptionsEditor
save_proc	core/gimpimage.h	/^  GimpPlugInProcedure *save_proc;           \/*  last PDB save proc used      *\/$/;"	m	struct:_GimpImage
save_procs	plug-in/gimppluginmanager.h	/^  GSList            *save_procs;$/;"	m	struct:_GimpPlugInManager
save_queue	widgets/gimptooloptionseditor.h	/^  GList           *save_queue;$/;"	m	struct:_GimpToolOptionsEditor
save_sel_checkbutton	dialogs/channel-options-dialog.h	/^  GtkWidget   *save_sel_checkbutton;$/;"	m	struct:_ChannelOptionsDialog
save_selection	widgets/gimperrorconsole.h	/^  gboolean       save_selection;$/;"	m	struct:_GimpErrorConsole
save_session_info	config/gimpguiconfig.h	/^  gboolean             save_session_info;$/;"	m	struct:_GimpGuiConfig
save_tool_options	config/gimpguiconfig.h	/^  gboolean             save_tool_options;$/;"	m	struct:_GimpGuiConfig
saved	core/gimpimage.h	/^  void (* saved)                        (GimpImage            *image,$/;"	m	struct:_GimpImageClass
saved_alpha_dither	dialogs/convert-dialog.c	/^static gboolean                saved_alpha_dither = FALSE;$/;"	v	file:
saved_center_x	tools/gimprectangletool.c	/^  gdouble                 saved_center_x;$/;"	m	struct:_GimpRectangleToolPrivate	file:
saved_center_y	tools/gimprectangletool.c	/^  gdouble                 saved_center_y;$/;"	m	struct:_GimpRectangleToolPrivate	file:
saved_colors	widgets/gimpgradienteditor.h	/^  GimpRGB       saved_colors[GRAD_NUM_COLORS];$/;"	m	struct:_GimpGradientEditor
saved_dither_type	dialogs/convert-dialog.c	/^static GimpConvertDitherType   saved_dither_type  = GIMP_NO_DITHER;$/;"	v	file:
saved_mode	tools/gimpvectortool.h	/^  GimpVectorMode        saved_mode;     \/* used by modifier_key()            *\/$/;"	m	struct:_GimpVectorTool
saved_num_colors	dialogs/convert-dialog.c	/^static gint                    saved_num_colors   = 256;$/;"	v	file:
saved_operation	tools/gimpselectiontool.h	/^  GimpChannelOps saved_operation;  \/*  saved tool options state  *\/$/;"	m	struct:_GimpSelectionTool
saved_palette	dialogs/convert-dialog.c	/^static GimpPalette            *saved_palette      = NULL;$/;"	v	file:
saved_palette_type	dialogs/convert-dialog.c	/^static GimpConvertPaletteType  saved_palette_type = GIMP_MAKE_PALETTE;$/;"	v	file:
saved_proj_tiles	paint/gimppaintcore.h	/^  TileManager *saved_proj_tiles; \/*  proj tiles which have been modified *\/$/;"	m	struct:_GimpPaintCore
saved_remove_dups	dialogs/convert-dialog.c	/^static gboolean                saved_remove_dups  = TRUE;$/;"	v	file:
saved_show_selection	tools/gimprectangleselecttool.h	/^  gboolean           saved_show_selection; \/* used to remember existing value   *\/$/;"	m	struct:_GimpRectSelectTool
saved_state	tools/gimpvectortool.h	/^  GdkModifierType       saved_state;    \/* modifier state at button_press    *\/$/;"	m	struct:_GimpVectorTool
saved_threshold	tools/gimpregionselecttool.h	/^  gdouble            saved_threshold;$/;"	m	struct:_GimpRegionSelectTool
saved_type	tools/gimpmovetool.h	/^  GimpTransformType    saved_type;$/;"	m	struct:_GimpMoveTool
saved_x1	tools/gimprectangletool.c	/^  gint                    saved_x1;$/;"	m	struct:_GimpRectangleToolPrivate	file:
saved_x2	tools/gimprectangletool.c	/^  gint                    saved_x2;$/;"	m	struct:_GimpRectangleToolPrivate	file:
saved_y1	tools/gimprectangletool.c	/^  gint                    saved_y1;$/;"	m	struct:_GimpRectangleToolPrivate	file:
saved_y2	tools/gimprectangletool.c	/^  gint                    saved_y2;$/;"	m	struct:_GimpRectangleToolPrivate	file:
scale	composite/gimp-composite.h	/^  struct { gint scale;                   } scale;$/;"	m	struct:__anon33	typeref:struct:__anon33::__anon35
scale	composite/gimp-composite.h	/^  struct { gint scale;                   } scale;$/;"	m	struct:__anon33::__anon35
scale	core/gimpitem.h	/^  void       (* scale)        (GimpItem               *item,$/;"	m	struct:_GimpItemClass
scale	paint/gimpbrushcore.h	/^  gdouble        scale;$/;"	m	struct:_GimpBrushCore
scale	tools/gimphistogramoptions.h	/^  GimpHistogramScale  scale;$/;"	m	struct:_GimpHistogramOptions
scale	vectors/gimpstroke.h	/^  void          (* scale)                (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
scale	vectors/gimpvectors-import.c	/^  gboolean      scale;$/;"	m	struct:__anon303	file:
scale	widgets/gimphistogramview.h	/^  GimpHistogramScale     scale;$/;"	m	struct:_GimpHistogramView
scale_adj	display/gimpdisplayshell-scale.c	/^  GtkObject        *scale_adj;$/;"	m	struct:__anon190	file:
scale_brush	paint/gimpbrushcore.h	/^  TempBuf       *scale_brush;$/;"	m	struct:_GimpBrushCore
scale_combo	display/gimpstatusbar.h	/^  GtkWidget        *scale_combo;$/;"	m	struct:_GimpStatusbar
scale_desc	core/gimpitem.h	/^  const gchar *scale_desc;$/;"	m	struct:_GimpItemClass
scale_dialog	display/gimpdisplayshell.h	/^  GtkWidget        *scale_dialog;      \/*  scale (zoom) dialog                *\/$/;"	m	struct:_GimpDisplayShell
scale_dialog_free	dialogs/scale-dialog.c	/^scale_dialog_free (ScaleDialog *private)$/;"	f	file:
scale_dialog_new	dialogs/scale-dialog.c	/^scale_dialog_new (GimpViewable          *viewable,$/;"	f
scale_dialog_reset	dialogs/scale-dialog.c	/^scale_dialog_reset (ScaleDialog *private)$/;"	f	file:
scale_dialog_response	dialogs/scale-dialog.c	/^scale_dialog_response (GtkWidget   *dialog,$/;"	f	file:
scale_invoker	pdb/transform_tools_cmds.c	/^scale_invoker (GimpProcedure     *procedure,$/;"	f	file:
scale_mask	core/gimpbrush.h	/^  TempBuf   * (* scale_mask)       (GimpBrush  *brush,$/;"	m	struct:_GimpBrushClass
scale_pixels	paint-funcs/paint-funcs-generic.h	/^scale_pixels (const guchar *src,$/;"	f
scale_pixmap	core/gimpbrush.h	/^  TempBuf   * (* scale_pixmap)     (GimpBrush  *brush,$/;"	m	struct:_GimpBrushClass
scale_pixmap	paint/gimpbrushcore.h	/^  TempBuf       *scale_pixmap;$/;"	m	struct:_GimpBrushCore
scale_region	paint-funcs/scale-region.c	/^scale_region (PixelRegion           *srcPR,$/;"	f
scale_region_lanczos	paint-funcs/scale-region.c	/^scale_region_lanczos (PixelRegion      *srcPR,$/;"	f	file:
scale_region_no_resample	paint-funcs/scale-region.c	/^scale_region_no_resample (PixelRegion *srcPR,$/;"	f	file:
scale_size	core/gimpbrush.h	/^  void        (* scale_size)       (GimpBrush  *brush,$/;"	m	struct:_GimpBrushClass
scale_vectors	dialogs/vectors-import-dialog.h	/^  gboolean    scale_vectors;$/;"	m	struct:_VectorsImportDialog
scale_x	display/gimpdisplayshell.h	/^  gdouble           scale_x;           \/*  horizontal scale factor            *\/$/;"	m	struct:_GimpDisplayShell
scale_x_used_for_handle_size_calculations	tools/gimprectangletool.c	/^  gdouble                 scale_x_used_for_handle_size_calculations;$/;"	m	struct:_GimpRectangleToolPrivate	file:
scale_y	display/gimpdisplayshell.h	/^  gdouble           scale_y;           \/*  vertical scale factor              *\/$/;"	m	struct:_GimpDisplayShell
scale_y_used_for_handle_size_calculations	tools/gimprectangletool.c	/^  gdouble                 scale_y_used_for_handle_size_calculations;$/;"	m	struct:_GimpRectangleToolPrivate	file:
scaled	display/gimpdisplayshell.h	/^  void (* scaled)    (GimpDisplayShell *shell);$/;"	m	struct:_GimpDisplayShellClass
scalex	display/gimpdisplayshell-render.c	/^  gdouble           scalex;$/;"	m	struct:_RenderInfo	file:
scaley	display/gimpdisplayshell-render.c	/^  gdouble           scaley;$/;"	m	struct:_RenderInfo	file:
scanarg	plug-in/gimpinterpreterdb.c	/^scanarg (const gchar *s)$/;"	f	file:
screen	widgets/gimpsessioninfo.h	/^  gint                    screen;$/;"	m	struct:_GimpSessionInfo
screen_pixels	paint-funcs/paint-funcs-generic.h	/^screen_pixels (const guchar *src1,$/;"	f
script_fu_path	config/gimppluginconfig.h	/^  gchar              *script_fu_path;$/;"	m	struct:_GimpPluginConfig
scroll	widgets/gimpnavigationview.h	/^  void (* scroll)         (GimpNavigationView *view,$/;"	m	struct:_GimpNavigationViewClass
scroll_data	widgets/gimpgradienteditor.h	/^  GtkObject      *scroll_data;$/;"	m	struct:_GimpGradientEditor
scroll_dir	widgets/gimpcontainertreeview.h	/^  GdkScrollDirection scroll_dir;$/;"	m	struct:_GimpContainerTreeView
scroll_info	display/gimpdisplayshell.h	/^  gpointer          scroll_info;$/;"	m	struct:_GimpDisplayShell
scroll_lock	tools/gimptoolcontrol.h	/^  gboolean           scroll_lock;        \/*  allow scrolling or not          *\/$/;"	m	struct:_GimpToolControl
scroll_start_x	display/gimpdisplayshell.h	/^  gint              scroll_start_x;$/;"	m	struct:_GimpDisplayShell
scroll_start_y	display/gimpdisplayshell.h	/^  gint              scroll_start_y;$/;"	m	struct:_GimpDisplayShell
scroll_timeout_id	widgets/gimpcontainertreeview.h	/^  guint              scroll_timeout_id;$/;"	m	struct:_GimpContainerTreeView
scroll_timeout_interval	widgets/gimpcontainertreeview.h	/^  guint              scroll_timeout_interval;$/;"	m	struct:_GimpContainerTreeView
scrollbar	widgets/gimpgradienteditor.h	/^  GtkWidget      *scrollbar;$/;"	m	struct:_GimpGradientEditor
scrolled	display/gimpdisplayshell.h	/^  void (* scrolled)  (GimpDisplayShell *shell);$/;"	m	struct:_GimpDisplayShellClass
scrolled_win	widgets/gimpcontainerbox.h	/^  GtkWidget  *scrolled_win;$/;"	m	struct:_GimpContainerBox
scrolled_window	widgets/gimptooloptionseditor.h	/^  GtkWidget       *scrolled_window;$/;"	m	struct:_GimpToolOptionsEditor
scrolling	display/gimpdisplayshell.h	/^  gboolean          scrolling;$/;"	m	struct:_GimpDisplayShell
second_pass	core/gimpimage-convert.c	/^  Pass2_Func second_pass;           \/* second pass maps from image data to colormap *\/$/;"	m	struct:_QuantizeObj	file:
second_pass_init	core/gimpimage-convert.c	/^  Pass2i_Func second_pass_init;     \/* Initialize data which persists over invocations *\/$/;"	m	struct:_QuantizeObj	file:
second_row_hbox	tools/gimprectangleoptions.h	/^  GtkWidget                  *second_row_hbox;$/;"	m	struct:_GimpRectangleOptionsPrivate
seed	core/gimpdrawable-blend.c	/^  GRand            *seed;$/;"	m	struct:__anon117	file:
seedx	base/siox.c	/^  gint     seedx;$/;"	m	struct:blob	file:
seedy	base/siox.c	/^  gint     seedy;$/;"	m	struct:blob	file:
seek_err_msg	base/tile-swap.c	/^static gboolean       seek_err_msg     = TRUE;$/;"	v	file:
seg_get_closest_handle	widgets/gimpgradienteditor.c	/^seg_get_closest_handle (GimpGradient            *grad,$/;"	f	file:
seg_in_selection	widgets/gimpgradienteditor.c	/^seg_in_selection (GimpGradient         *grad,$/;"	f	file:
segments	core/gimpgradient.h	/^  GimpGradientSegment *segments;$/;"	m	struct:_GimpGradient
segments	widgets/gimpcellrendererdashes.h	/^  gboolean         *segments;$/;"	m	struct:_GimpCellRendererDashes
segments	widgets/gimpdasheditor.h	/^  gboolean          *segments;$/;"	m	struct:_GimpDashEditor
segs	base/boundary.c	/^  BoundSeg *segs;$/;"	m	struct:_Boundary	file:
segs	core/gimplayer.h	/^    BoundSeg     *segs;               \/*  boundary of floating sel       *\/$/;"	m	struct:_GimpLayer::__anon125
segs	tools/gimpregionselecttool.h	/^  GdkSegment        *segs;$/;"	m	struct:_GimpRegionSelectTool
segs_in	core/gimpchannel.h	/^  BoundSeg     *segs_in;           \/*  outline of selected region     *\/$/;"	m	struct:_GimpChannel
segs_in	display/gimpdisplayshell-selection.c	/^  GdkSegment       *segs_in;          \/*  gdk segments of area boundary     *\/$/;"	m	struct:_Selection	file:
segs_in	tools/gimpeditselectiontool.h	/^  BoundSeg           *segs_in;         \/*  Pointer to the channel sel. segs  *\/$/;"	m	struct:_GimpEditSelectionTool
segs_layer	display/gimpdisplayshell-selection.c	/^  GdkSegment       *segs_layer;       \/*  gdk segments of layer boundary    *\/$/;"	m	struct:_Selection	file:
segs_out	core/gimpchannel.h	/^  BoundSeg     *segs_out;          \/*  outline of selected region     *\/$/;"	m	struct:_GimpChannel
segs_out	display/gimpdisplayshell-selection.c	/^  GdkSegment       *segs_out;         \/*  gdk segments of area boundary     *\/$/;"	m	struct:_Selection	file:
segs_out	tools/gimpeditselectiontool.h	/^  BoundSeg           *segs_out;        \/*  Pointer to the channel sel. segs  *\/$/;"	m	struct:_GimpEditSelectionTool
sel	widgets/gimpcontrollereditor.h	/^  GtkTreeSelection   *sel;$/;"	m	struct:_GimpControllerEditor
sel_anchor	tools/gimpvectortool.h	/^  GimpAnchor           *sel_anchor;     \/* currently selected anchor, NULL   *\/$/;"	m	struct:_GimpVectorTool
sel_count	tools/gimpvectortool.h	/^  gint                  sel_count;      \/* number of selected anchors        *\/$/;"	m	struct:_GimpVectorTool
sel_stroke	tools/gimpvectortool.h	/^  GimpStroke           *sel_stroke;     \/* selected stroke                   *\/$/;"	m	struct:_GimpVectorTool
select	core/gimpbrushpipe.h	/^  PipeSelectModes  *select;     \/* One mode per dimension *\/$/;"	m	struct:_GimpBrushPipe
select	tools/gimpfreeselecttool.h	/^  void (* select) (GimpFreeSelectTool *free_select_tool,$/;"	m	struct:_GimpFreeSelectToolClass
select	tools/gimprectangleselecttool.h	/^  void (* select) (GimpRectSelectTool *rect_select,$/;"	m	struct:_GimpRectSelectToolClass
select_actions	actions/select-actions.c	/^static const GimpActionEntry select_actions[] =$/;"	v	file:
select_actions_setup	actions/select-actions.c	/^select_actions_setup (GimpActionGroup *group)$/;"	f
select_actions_update	actions/select-actions.c	/^select_actions_update (GimpActionGroup *group,$/;"	f
select_all_cmd_callback	actions/select-commands.c	/^select_all_cmd_callback (GtkAction *action,$/;"	f
select_border_callback	actions/select-commands.c	/^select_border_callback (GtkWidget *widget,$/;"	f	file:
select_border_cmd_callback	actions/select-commands.c	/^select_border_cmd_callback (GtkAction *action,$/;"	f
select_border_edge_lock	actions/select-commands.c	/^static gboolean  select_border_edge_lock  = FALSE;$/;"	v	file:
select_border_feather	actions/select-commands.c	/^static gboolean  select_border_feather    = FALSE;$/;"	v	file:
select_border_radius	actions/select-commands.c	/^static gint      select_border_radius     = 5;$/;"	v	file:
select_brush	core/gimpbrush.h	/^  GimpBrush * (* select_brush)     (GimpBrush  *brush,$/;"	m	struct:_GimpBrushClass
select_colors_gray	core/gimpimage-convert.c	/^select_colors_gray (QuantizeObj *quantobj,$/;"	f	file:
select_colors_rgb	core/gimpimage-convert.c	/^select_colors_rgb (QuantizeObj *quantobj,$/;"	f	file:
select_criterion	core/gimpimage-contiguous-region.c	/^  GimpSelectCriterion  select_criterion;$/;"	m	struct:__anon100	file:
select_criterion	tools/gimpselectionoptions.h	/^  GimpSelectCriterion select_criterion;$/;"	m	struct:_GimpSelectionOptions
select_feather_callback	actions/select-commands.c	/^select_feather_callback (GtkWidget *widget,$/;"	f	file:
select_feather_cmd_callback	actions/select-commands.c	/^select_feather_cmd_callback (GtkAction *action,$/;"	f
select_feather_radius	actions/select-commands.c	/^static gdouble   select_feather_radius    = 5.0;$/;"	v	file:
select_float_cmd_callback	actions/select-commands.c	/^select_float_cmd_callback (GtkAction *action,$/;"	f
select_grow_callback	actions/select-commands.c	/^select_grow_callback (GtkWidget *widget,$/;"	f	file:
select_grow_cmd_callback	actions/select-commands.c	/^select_grow_cmd_callback (GtkAction *action,$/;"	f
select_grow_pixels	actions/select-commands.c	/^static gint      select_grow_pixels       = 1;$/;"	v	file:
select_invert_cmd_callback	actions/select-commands.c	/^select_invert_cmd_callback (GtkAction *action,$/;"	f
select_item	widgets/gimpcontainereditor.h	/^  void (* select_item)   (GimpContainerEditor *editor,$/;"	m	struct:_GimpContainerEditorClass
select_item	widgets/gimpcontainerview.h	/^  gboolean (* select_item)   (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
select_layer_by_coords	tools/gimpaligntool.c	/^select_layer_by_coords (GimpImage *image,$/;"	f	file:
select_none_cmd_callback	actions/select-commands.c	/^select_none_cmd_callback (GtkAction *action,$/;"	f
select_save_cmd_callback	actions/select-commands.c	/^select_save_cmd_callback (GtkAction *action,$/;"	f
select_sharpen_cmd_callback	actions/select-commands.c	/^select_sharpen_cmd_callback (GtkAction *action,$/;"	f
select_shrink_callback	actions/select-commands.c	/^select_shrink_callback (GtkWidget *widget,$/;"	f	file:
select_shrink_cmd_callback	actions/select-commands.c	/^select_shrink_cmd_callback (GtkAction *action,$/;"	f
select_shrink_edge_lock	actions/select-commands.c	/^static gboolean  select_shrink_edge_lock  = FALSE;$/;"	v	file:
select_shrink_pixels	actions/select-commands.c	/^static gint      select_shrink_pixels     = 1;$/;"	v	file:
select_stroke_cmd_callback	actions/select-commands.c	/^select_stroke_cmd_callback (GtkAction *action,$/;"	f
select_stroke_last_vals_cmd_callback	actions/select-commands.c	/^select_stroke_last_vals_cmd_callback (GtkAction *action,$/;"	f
select_transparent	core/gimpimage-contiguous-region.c	/^  gboolean             select_transparent;$/;"	m	struct:__anon100	file:
select_transparent	tools/gimpselectionoptions.h	/^  gboolean            select_transparent;$/;"	m	struct:_GimpSelectionOptions
select_type	widgets/gimppdbdialog.h	/^  GType            select_type;$/;"	m	struct:_GimpPdbDialog
selected	tools/gimpcurvestool.h	/^  gint                  selected;$/;"	m	struct:_GimpCurvesTool
selected	vectors/gimpanchor.h	/^  gboolean          selected;$/;"	m	struct:_GimpAnchor
selected	widgets/gimpcolordisplayeditor.h	/^  GimpColorDisplay      *selected;$/;"	m	struct:_GimpColorDisplayEditor
selected	widgets/gimpcolormapeditor.h	/^  void (* selected) (GimpColormapEditor *editor,$/;"	m	struct:_GimpColormapEditorClass
selected	widgets/gimpenumaction.h	/^  void (* selected) (GimpEnumAction *action,$/;"	m	struct:_GimpEnumActionClass
selected	widgets/gimppaletteview.h	/^  GimpPaletteEntry *selected;$/;"	m	struct:_GimpPaletteView
selected	widgets/gimppluginaction.h	/^  void (* selected) (GimpPlugInAction    *action,$/;"	m	struct:_GimpPlugInActionClass
selected	widgets/gimpstringaction.h	/^  void (* selected) (GimpStringAction *action,$/;"	m	struct:_GimpStringActionClass
selected_item	widgets/gimpcontainergridview.h	/^  GimpView         *selected_item;$/;"	m	struct:_GimpContainerGridView
selected_objects	tools/gimpaligntool.h	/^  GList                 *selected_objects;$/;"	m	struct:_GimpAlignTool
selection	display/gimpdisplayshell.h	/^  Selection        *selection;         \/*  Selection (marching ants)          *\/$/;"	m	struct:_GimpDisplayShell
selection	widgets/gimpcolordialog.h	/^  GtkWidget           *selection;$/;"	m	struct:_GimpColorDialog
selection	widgets/gimpcomponenteditor.h	/^  GtkTreeSelection  *selection;$/;"	m	struct:_GimpComponentEditor
selection	widgets/gimpcontainertreeview.h	/^  GtkTreeSelection  *selection;$/;"	m	struct:_GimpContainerTreeView
selection_add_point	display/gimpdisplayshell-selection.c	/^selection_add_point (GdkPoint *points[8],$/;"	f	file:
selection_all_invoker	pdb/selection_cmds.c	/^selection_all_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_border_invoker	pdb/selection_cmds.c	/^selection_border_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_bounds_invoker	pdb/selection_cmds.c	/^selection_bounds_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_combine_invoker	pdb/selection_cmds.c	/^selection_combine_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_control	core/gimpimage.h	/^  void (* selection_control)            (GimpImage            *image,$/;"	m	struct:_GimpImageClass
selection_draw	display/gimpdisplayshell-selection.c	/^selection_draw (Selection *selection)$/;"	f	file:
selection_feather_invoker	pdb/selection_cmds.c	/^selection_feather_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_float_invoker	pdb/selection_cmds.c	/^selection_float_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_free_segs	display/gimpdisplayshell-selection.c	/^selection_free_segs (Selection *selection)$/;"	f	file:
selection_generate_segs	display/gimpdisplayshell-selection.c	/^selection_generate_segs (Selection *selection)$/;"	f	file:
selection_grow_invoker	pdb/selection_cmds.c	/^selection_grow_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_invert_invoker	pdb/selection_cmds.c	/^selection_invert_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_is_empty_invoker	pdb/selection_cmds.c	/^selection_is_empty_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_layer_alpha_invoker	pdb/selection_cmds.c	/^selection_layer_alpha_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_layer_draw	display/gimpdisplayshell-selection.c	/^selection_layer_draw (Selection *selection)$/;"	f	file:
selection_layer_undraw	display/gimpdisplayshell-selection.c	/^selection_layer_undraw (Selection *selection)$/;"	f	file:
selection_load_invoker	pdb/selection_cmds.c	/^selection_load_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_mask	core/gimpimage.h	/^  GimpChannel       *selection_mask;        \/*  the selection mask channel   *\/$/;"	m	struct:_GimpImage
selection_none_invoker	pdb/selection_cmds.c	/^selection_none_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_only_toggle	dialogs/palette-import-dialog.c	/^  GtkWidget     *selection_only_toggle;$/;"	m	struct:__anon178	file:
selection_pause	display/gimpdisplayshell-selection.c	/^selection_pause (Selection *selection)$/;"	f	file:
selection_render_points	display/gimpdisplayshell-selection.c	/^selection_render_points (Selection *selection)$/;"	f	file:
selection_resume	display/gimpdisplayshell-selection.c	/^selection_resume (Selection *selection)$/;"	f	file:
selection_save_invoker	pdb/selection_cmds.c	/^selection_save_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_set_visible	display/gimpdisplayshell-selection.c	/^selection_set_visible (Selection *selection,$/;"	f	file:
selection_sharpen_invoker	pdb/selection_cmds.c	/^selection_sharpen_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_shrink_invoker	pdb/selection_cmds.c	/^selection_shrink_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_start	display/gimpdisplayshell-selection.c	/^selection_start (Selection *selection)$/;"	f	file:
selection_start_timeout	display/gimpdisplayshell-selection.c	/^selection_start_timeout (Selection *selection)$/;"	f	file:
selection_stop	display/gimpdisplayshell-selection.c	/^selection_stop (Selection *selection)$/;"	f	file:
selection_timeout	display/gimpdisplayshell-selection.c	/^selection_timeout (Selection *selection)$/;"	f	file:
selection_transform_segs	display/gimpdisplayshell-selection.c	/^selection_transform_segs (Selection      *selection,$/;"	f	file:
selection_translate_invoker	pdb/selection_cmds.c	/^selection_translate_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_undraw	display/gimpdisplayshell-selection.c	/^selection_undraw (Selection *selection)$/;"	f	file:
selection_value_invoker	pdb/selection_cmds.c	/^selection_value_invoker (GimpProcedure     *procedure,$/;"	f	file:
selection_visibility_notify_event	display/gimpdisplayshell-selection.c	/^selection_visibility_notify_event (GtkWidget          *shell,$/;"	f	file:
selection_window_state_event	display/gimpdisplayshell-selection.c	/^selection_window_state_event (GtkWidget           *shell,$/;"	f	file:
sensitivity	tools/gimpforegroundselectoptions.h	/^  gdouble               sensitivity[3];$/;"	m	struct:_GimpForegroundSelectOptions
separate_alpha_region	paint-funcs/paint-funcs.c	/^separate_alpha_region (PixelRegion *srcR)$/;"	f
separator	plug-in/gimpenvirontable.c	/^  gchar *separator;$/;"	m	struct:_GimpEnvironValue	file:
seq_context_id	display/gimpstatusbar.h	/^  guint             seq_context_id;$/;"	m	struct:_GimpStatusbar
serialize_props	core/gimpcontext.h	/^  guint32               serialize_props;$/;"	m	struct:_GimpContext
serialize_unknown_token	config/gimprc-serialize.c	/^serialize_unknown_token (const gchar *key,$/;"	f	file:
session_clear	gui/session.c	/^session_clear (Gimp    *gimp,$/;"	f
session_exit	gui/session.c	/^session_exit (Gimp *gimp)$/;"	f
session_filename	gui/session.c	/^session_filename (Gimp *gimp)$/;"	f	file:
session_infos	widgets/gimpdialogfactory.h	/^  GList                 *session_infos;$/;"	m	struct:_GimpDialogFactory
session_init	gui/session.c	/^session_init (Gimp *gimp)$/;"	f
session_managed	widgets/gimpdialogfactory.h	/^  gboolean           session_managed;$/;"	m	struct:_GimpDialogFactoryEntry
session_name	core/gimp.h	/^  gchar                  *session_name;$/;"	m	struct:_Gimp
session_name	main.c	/^static const gchar        *session_name      = NULL;$/;"	v	file:
session_restore	gui/session.c	/^session_restore (Gimp *gimp)$/;"	f
session_save	gui/session.c	/^session_save (Gimp     *gimp,$/;"	f
sessionrc_deleted	gui/session.c	/^static gboolean   sessionrc_deleted = FALSE;$/;"	v	file:
set_active_item	widgets/gimpitemtreeview.h	/^  GimpSetItemFunc       set_active_item;$/;"	m	struct:_GimpItemTreeViewClass
set_aux_info	widgets/gimpdock.h	/^  void    (* set_aux_info) (GimpDock       *dock,$/;"	m	struct:_GimpDockClass
set_aux_info	widgets/gimpdocked.h	/^  void            (* set_aux_info)        (GimpDocked   *docked,$/;"	m	struct:_GimpDockedInterface
set_brush	paint/gimpbrushcore.h	/^  void (* set_brush) (GimpBrushCore *core,$/;"	m	struct:_GimpBrushCoreClass
set_busy	core/gimp-gui.h	/^  void           (* set_busy)            (Gimp                *gimp);$/;"	m	struct:_GimpGui
set_container	widgets/gimpcontainerview.h	/^  void     (* set_container) (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
set_context	widgets/gimpcontainerview.h	/^  void     (* set_context)   (GimpContainerView *view,$/;"	m	struct:_GimpContainerViewInterface
set_context	widgets/gimpdocked.h	/^  void            (* set_context)         (GimpDocked   *docked,$/;"	m	struct:_GimpDockedInterface
set_context	widgets/gimpviewrenderer.h	/^  void (* set_context) (GimpViewRenderer   *renderer,$/;"	m	struct:_GimpViewRendererClass
set_data	widgets/gimpdataeditor.h	/^  void (* set_data) (GimpDataEditor *editor,$/;"	m	struct:_GimpDataEditorClass
set_data_data_name	widgets/gimpdnd.c	/^  const gchar         *set_data_data_name;$/;"	m	struct:_GimpDndDataDef	file:
set_data_func	widgets/gimpdnd.c	/^  GimpDndDropDataFunc  set_data_func;$/;"	m	struct:_GimpDndDataDef	file:
set_data_func_name	widgets/gimpdnd.c	/^  const gchar         *set_data_func_name;$/;"	m	struct:_GimpDndDataDef	file:
set_image	widgets/gimpimageeditor.h	/^  void (* set_image) (GimpImageEditor *editor,$/;"	m	struct:_GimpImageEditorClass
set_image	widgets/gimpitemtreeview.h	/^  void (* set_image) (GimpItemTreeView *view,$/;"	m	struct:_GimpItemTreeViewClass
set_param_spec	widgets/gimppropwidgets.c	/^set_param_spec (GObject     *object,$/;"	f	file:
set_reference	tools/gimpaligntool.h	/^  gboolean               set_reference;$/;"	m	struct:_GimpAlignTool
set_show_button_bar	widgets/gimpdocked.h	/^  void            (* set_show_button_bar) (GimpDocked   *docked,$/;"	m	struct:_GimpDockedInterface
set_source	paint/gimpsourcecore.h	/^  gboolean       set_source;$/;"	m	struct:_GimpSourceCore
set_text	core/gimpprogress.h	/^  void           (* set_text)   (GimpProgress        *progress,$/;"	m	struct:_GimpProgressInterface
set_tiles	core/gimpdrawable.h	/^  void (* set_tiles)             (GimpDrawable         *drawable,$/;"	m	struct:_GimpDrawableClass
set_value	core/gimpprogress.h	/^  void           (* set_value)  (GimpProgress        *progress,$/;"	m	struct:_GimpProgressInterface
set_view_size	widgets/gimpcontainerview.h	/^  void     (* set_view_size) (GimpContainerView *view);$/;"	m	struct:_GimpContainerViewInterface
set_viewable	widgets/gimpview.h	/^  void        (* set_viewable)   (GimpView        *view,$/;"	m	struct:_GimpViewClass
settings	tools/gimpimagemapoptions.h	/^  gchar           *settings;$/;"	m	struct:_GimpImageMapOptions
settings_dialog	tools/gimpimagemaptool.h	/^  GtkWidget     *settings_dialog;$/;"	m	struct:_GimpImageMapTool
settings_dialog_response	tools/gimpimagemaptool.c	/^settings_dialog_response (GtkWidget        *dialog,$/;"	f	file:
settings_load	tools/gimpimagemaptool.h	/^  gboolean (* settings_load) (GimpImageMapTool  *image_map_tool,$/;"	m	struct:_GimpImageMapToolClass
settings_name	tools/gimpimagemaptool.h	/^  const gchar        *settings_name;$/;"	m	struct:_GimpImageMapToolClass
settings_save	tools/gimpimagemaptool.h	/^  gboolean (* settings_save) (GimpImageMapTool  *image_map_tool,$/;"	m	struct:_GimpImageMapToolClass
setup	widgets/gimpdock.h	/^  void    (* setup)        (GimpDock       *dock,$/;"	m	struct:_GimpDockClass
setup_func	widgets/gimpactionfactory.h	/^  GimpActionGroupSetupFunc   setup_func;$/;"	m	struct:_GimpActionFactoryEntry
setup_func	widgets/gimpuimanager.h	/^  GimpUIManagerSetupFunc  setup_func;$/;"	m	struct:_GimpUIManagerUIEntry
shade_pixels	paint-funcs/paint-funcs-generic.h	/^shade_pixels (const guchar *src,$/;"	f
shade_region	paint-funcs/paint-funcs.c	/^shade_region (PixelRegion *src,$/;"	f
shadow	core/gimpimage.h	/^  TileManager       *shadow;                \/*  shadow buffer tiles          *\/$/;"	m	struct:_GimpImage
shadows_add	base/color-balance.c	/^static gdouble  shadows_add[256]    = { 0 };$/;"	v	file:
shadows_sub	base/color-balance.c	/^static gdouble  shadows_sub[256]    = { 0 };$/;"	v	file:
shape	core/gimpbrushgenerated.h	/^  GimpBrushGeneratedShape shape;$/;"	m	struct:_GimpBrushGenerated
shape_group	widgets/gimpbrusheditor.h	/^  GtkWidget      *shape_group;$/;"	m	struct:_GimpBrushEditor
shapeburst_region	paint-funcs/paint-funcs.c	/^shapeburst_region (PixelRegion      *srcPR,$/;"	f
share_count	base/tile-private.h	/^  gshort  share_count;  \/* share count: number of tile managers that$/;"	m	struct:_Tile
sharpen	core/gimpchannel.h	/^  void     (* sharpen)       (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
sharpen_desc	core/gimpchannel.h	/^  const gchar *sharpen_desc;$/;"	m	struct:_GimpChannelClass
shear_invoker	pdb/transform_tools_cmds.c	/^shear_invoker (GimpProcedure     *procedure,$/;"	f	file:
shear_x_mag_changed	tools/gimpsheartool.c	/^shear_x_mag_changed (GtkAdjustment     *adj,$/;"	f	file:
shear_y_mag_changed	tools/gimpsheartool.c	/^shear_y_mag_changed (GtkAdjustment     *adj,$/;"	f	file:
shell	display/gimpdisplay.h	/^  GtkWidget  *shell;            \/*  shell widget for this display          *\/$/;"	m	struct:_GimpDisplay
shell	display/gimpdisplayshell-filter-dialog.c	/^  GimpDisplayShell      *shell;$/;"	m	struct:__anon184	file:
shell	display/gimpdisplayshell-layer-select.c	/^  GtkWidget *shell;$/;"	m	struct:__anon192	file:
shell	display/gimpdisplayshell-render.c	/^  GimpDisplayShell *shell;$/;"	m	struct:_RenderInfo	file:
shell	display/gimpdisplayshell-scale.c	/^  GimpDisplayShell *shell;$/;"	m	struct:__anon190	file:
shell	display/gimpdisplayshell-selection.c	/^  GimpDisplayShell *shell;            \/*  shell that owns the selection     *\/$/;"	m	struct:_Selection	file:
shell	display/gimpnavigationeditor.h	/^  GimpDisplayShell *shell;$/;"	m	struct:_GimpNavigationEditor
shell	display/gimpstatusbar.h	/^  GimpDisplayShell *shell;$/;"	m	struct:_GimpStatusbar
shell	tools/gimpimagemaptool.h	/^  GtkWidget     *shell;$/;"	m	struct:_GimpImageMapTool
shell_desc	tools/gimpimagemaptool.h	/^  const gchar        *shell_desc;$/;"	m	struct:_GimpImageMapToolClass
shm	plug-in/gimppluginmanager.h	/^  GimpPlugInShm     *shm;$/;"	m	struct:_GimpPlugInManager
shm_ID	plug-in/gimppluginshm.c	/^  gint    shm_ID;$/;"	m	struct:_GimpPlugInShm	file:
shm_addr	plug-in/gimppluginshm.c	/^  guchar *shm_addr;$/;"	m	struct:_GimpPlugInShm	file:
shm_handle	plug-in/gimppluginshm.c	/^  HANDLE  shm_handle;$/;"	m	struct:_GimpPlugInShm	file:
show	core/gimplayermaskpropundo.h	/^  gboolean      show;$/;"	m	struct:_GimpLayerMaskPropUndo
show_brush_outline	config/gimpdisplayconfig.h	/^  gboolean            show_brush_outline;$/;"	m	struct:_GimpDisplayConfig
show_button_bar	widgets/gimpeditor.h	/^  gboolean         show_button_bar;$/;"	m	struct:_GimpEditor
show_changed	core/gimplayermask.h	/^  void (* show_changed)  (GimpLayerMask *layer_mask);$/;"	m	struct:_GimpLayerMaskClass
show_cursor	tools/gimpbrushtool.h	/^  gboolean       show_cursor;$/;"	m	struct:_GimpBrushTool
show_grid	display/gimpdisplayoptions.h	/^  gboolean               show_grid;$/;"	m	struct:_GimpDisplayOptions
show_guides	display/gimpdisplayoptions.h	/^  gboolean               show_guides;$/;"	m	struct:_GimpDisplayOptions
show_help_button	config/gimpguiconfig.h	/^  gboolean             show_help_button;$/;"	m	struct:_GimpGuiConfig
show_image_menu	widgets/gimpmenudock.h	/^  gboolean       show_image_menu;$/;"	m	struct:_GimpMenuDock
show_layer_boundary	display/gimpdisplayoptions.h	/^  gboolean               show_layer_boundary;$/;"	m	struct:_GimpDisplayOptions
show_mask	core/gimplayermask.h	/^  gboolean     show_mask;     \/*  show mask or layer?        *\/$/;"	m	struct:_GimpLayerMask
show_masked	core/gimpchannel.h	/^  gboolean      show_masked;       \/*  Show masked areas--as          *\/$/;"	m	struct:_GimpChannel
show_menubar	display/gimpdisplayoptions.h	/^  gboolean               show_menubar;$/;"	m	struct:_GimpDisplayOptions
show_message	core/gimp-gui.h	/^  void           (* show_message)        (Gimp                *gimp,$/;"	m	struct:_GimpGui
show_paint_tool_cursor	config/gimpdisplayconfig.h	/^  gboolean            show_paint_tool_cursor;$/;"	m	struct:_GimpDisplayConfig
show_popup	widgets/gimpview.h	/^  guint             show_popup : 1;$/;"	m	struct:_GimpView
show_rulers	display/gimpdisplayoptions.h	/^  gboolean               show_rulers;$/;"	m	struct:_GimpDisplayOptions
show_sample_points	display/gimpdisplayoptions.h	/^  gboolean               show_sample_points;$/;"	m	struct:_GimpDisplayOptions
show_scrollbars	display/gimpdisplayoptions.h	/^  gboolean               show_scrollbars;$/;"	m	struct:_GimpDisplayOptions
show_selection	display/gimpdisplayoptions.h	/^  gboolean               show_selection;$/;"	m	struct:_GimpDisplayOptions
show_shortcuts	widgets/gimpactionview.h	/^  gboolean       show_shortcuts;$/;"	m	struct:_GimpActionView
show_statusbar	display/gimpdisplayoptions.h	/^  gboolean               show_statusbar;$/;"	m	struct:_GimpDisplayOptions
show_tips	config/gimpguiconfig.h	/^  gboolean             show_tips;$/;"	m	struct:_GimpGuiConfig
show_tooltip	widgets/gimpuimanager.h	/^  void (* show_tooltip) (GimpUIManager *manager,$/;"	m	struct:_GimpUIManagerClass
show_tooltips	config/gimpguiconfig.h	/^  gboolean             show_tooltips;$/;"	m	struct:_GimpGuiConfig
show_transform_preview	display/gimpdisplayshell.h	/^  gboolean          show_transform_preview;$/;"	m	struct:_GimpDisplayShell
shrink	core/gimpchannel.h	/^  void     (* shrink)        (GimpChannel     *channel,$/;"	m	struct:_GimpChannelClass
shrink_desc	core/gimpchannel.h	/^  const gchar *shrink_desc;$/;"	m	struct:_GimpChannelClass
shrink_line	paint-funcs/scale-region.c	/^shrink_line (gdouble               *dest,$/;"	f	file:
shrink_merged	tools/gimprectangleoptions.h	/^  gboolean                    shrink_merged;$/;"	m	struct:_GimpRectangleOptionsPrivate
shrink_merged	tools/gimpselectionoptions.h	/^  gboolean            shrink_merged;$/;"	m	struct:_GimpSelectionOptions
shrink_wrap_button	display/gimpnavigationeditor.h	/^  GtkWidget        *shrink_wrap_button;$/;"	m	struct:_GimpNavigationEditor
shuffle	dialogs/about-dialog.c	/^  gint          shuffle[G_N_ELEMENTS (authors) - 1];  \/* NULL terminated *\/$/;"	m	struct:__anon168	file:
signal_name	widgets/gimpitemtreeview.h	/^  const gchar          *signal_name;$/;"	m	struct:_GimpItemTreeViewClass
signame	core/gimpcontainer.c	/^  gchar     *signame;$/;"	m	struct:_GimpContainerHandler	file:
simplify_subdivide	base/boundary.c	/^simplify_subdivide (const BoundSeg *segs,$/;"	f	file:
sinc	paint-funcs/scale-region.c	/^sinc (gdouble x)$/;"	f	file:
singleton	widgets/gimpdialogfactory.h	/^  gboolean           singleton;$/;"	m	struct:_GimpDialogFactoryEntry
singular	core/gimpunit.c	/^  gchar    *singular;$/;"	m	struct:__anon105	file:
siox_cache_entry_free	base/siox.c	/^siox_cache_entry_free (gpointer entry)$/;"	f	file:
siox_cache_remove_bg	base/siox.c	/^siox_cache_remove_bg (gpointer key,$/;"	f	file:
siox_cache_remove_fg	base/siox.c	/^siox_cache_remove_fg (gpointer key,$/;"	f	file:
siox_done	base/siox.c	/^siox_done (SioxState *state)$/;"	f
siox_drb	base/siox.c	/^siox_drb (SioxState   *state,$/;"	f
siox_foreground_extract	base/siox.c	/^siox_foreground_extract (SioxState          *state,$/;"	f
siox_init	base/siox.c	/^siox_init (TileManager  *pixels,$/;"	f
siox_progress_update	base/siox.c	/^siox_progress_update (SioxProgressFunc  progress_callback,$/;"	f	file:
size	base/siox.c	/^  gint     size;$/;"	m	struct:blob	file:
size	base/tile-private.h	/^  gint    size;         \/* size of the tile data (ewidth * eheight * bpp) *\/$/;"	m	struct:_Tile
size	core/gimpbrush-load.c	/^  gint32 size;$/;"	m	struct:_AbrBrushHeader	file:
size	paint/gimpinkoptions.h	/^  gdouble           size;$/;"	m	struct:_GimpInkOptions
size	paint/gimppaintoptions.h	/^  gboolean  size;$/;"	m	struct:_GimpPressureOptions
size	plug-in/gimpinterpreterdb.c	/^  guint     size;$/;"	m	struct:_GimpInterpreterMagic	file:
size	widgets/gimpviewrenderer.h	/^  gint                size;$/;"	m	struct:_GimpViewRenderer
size_button_box	tools/gimprectangleoptions.h	/^  GtkWidget                  *size_button_box;$/;"	m	struct:_GimpRectangleOptionsPrivate
size_chain	widgets/gimpsizebox.c	/^  GimpChainButton *size_chain;$/;"	m	struct:_GimpSizeBoxPrivate	file:
size_changed	core/gimpundo.h	/^  gboolean size_changed;$/;"	m	struct:_GimpUndoAccumulator
size_changed	core/gimpviewable.h	/^  void        (* size_changed)       (GimpViewable  *viewable);$/;"	m	struct:_GimpViewableClass
size_entry	dialogs/print-size-dialog.c	/^  GimpSizeEntry          *size_entry;$/;"	m	struct:__anon183	file:
size_entry	tools/gimptextoptions.h	/^  GtkWidget             *size_entry;$/;"	m	struct:_GimpTextOptions
size_entry	widgets/gimpsizebox.c	/^  GimpSizeEntry   *size_entry;$/;"	m	struct:_GimpSizeBoxPrivate	file:
size_group	widgets/gimpsizebox.h	/^  GtkSizeGroup *size_group;$/;"	m	struct:_GimpSizeBox
size_history	tools/gimprectangleoptions.h	/^  GtkListStore               *size_history;$/;"	m	struct:_GimpRectangleOptionsPrivate
size_notify	dialogs/resize-dialog.c	/^size_notify (GimpSizeBox  *box,$/;"	f	file:
size_se	dialogs/layer-options-dialog.h	/^  GtkWidget    *size_se;$/;"	m	struct:_LayerOptionsDialog
size_se	widgets/gimptemplateeditor.h	/^  GtkWidget     *size_se;$/;"	m	struct:_GimpTemplateEditor
size_sensitivity	paint/gimpinkoptions.h	/^  gdouble           size_sensitivity;$/;"	m	struct:_GimpInkOptions
sizeentry	tools/gimprotatetool.h	/^  GtkWidget         *sizeentry;$/;"	m	struct:_GimpRotateTool
slider_area	widgets/gimphistogrambox.h	/^  GtkWidget         *slider_area;$/;"	m	struct:_GimpHistogramBox
slider_pos	tools/gimplevelstool.h	/^  gint                  slider_pos[5];$/;"	m	struct:_GimpLevelsTool
slider_pos	widgets/gimphistogrambox.h	/^  gint              slider_pos[2];$/;"	m	struct:_GimpHistogramBox
slots	base/gimphistogram.c	/^  gchar          slots[NUM_SLOTS];$/;"	m	struct:_GimpHistogram	file:
smooth_mask	base/siox.c	/^smooth_mask (TileManager *mask,$/;"	f	file:
smooth_region	paint-funcs/paint-funcs.c	/^smooth_region (PixelRegion *region)$/;"	f
smoothness	tools/gimpforegroundselectoptions.h	/^  gint                  smoothness;$/;"	m	struct:_GimpForegroundSelectOptions
smudge_default_invoker	pdb/paint_tools_cmds.c	/^smudge_default_invoker (GimpProcedure     *procedure,$/;"	f	file:
smudge_invoker	pdb/paint_tools_cmds.c	/^smudge_invoker (GimpProcedure     *procedure,$/;"	f	file:
snap_distance	config/gimpdisplayconfig.h	/^  gint                snap_distance;$/;"	m	struct:_GimpDisplayConfig
snap_height	tools/gimptoolcontrol.h	/^  gint               snap_height;$/;"	m	struct:_GimpToolControl
snap_offset_x	tools/gimptoolcontrol.h	/^  gint               snap_offset_x;$/;"	m	struct:_GimpToolControl
snap_offset_y	tools/gimptoolcontrol.h	/^  gint               snap_offset_y;$/;"	m	struct:_GimpToolControl
snap_to_canvas	display/gimpdisplayshell.h	/^  gboolean          snap_to_canvas;    \/*  should the canvas be snapped to?   *\/$/;"	m	struct:_GimpDisplayShell
snap_to_grid	display/gimpdisplayshell.h	/^  gboolean          snap_to_grid;      \/*  should the grid be snapped to?     *\/$/;"	m	struct:_GimpDisplayShell
snap_to_guides	display/gimpdisplayshell.h	/^  gboolean          snap_to_guides;    \/*  should the guides be snapped to?   *\/$/;"	m	struct:_GimpDisplayShell
snap_to_vectors	display/gimpdisplayshell.h	/^  gboolean          snap_to_vectors;   \/*  should the active path be snapped  *\/$/;"	m	struct:_GimpDisplayShell
snap_width	tools/gimptoolcontrol.h	/^  gint               snap_width;$/;"	m	struct:_GimpToolControl
snooper	widgets/gimpcontrollerinfo.h	/^  GimpControllerEventSnooper  snooper;$/;"	m	struct:_GimpControllerInfo
snooper_data	widgets/gimpcontrollerinfo.h	/^  gpointer                    snooper_data;$/;"	m	struct:_GimpControllerInfo
softlight_pixels	paint-funcs/paint-funcs-generic.h	/^softlight_pixels (const guchar *src1,$/;"	f
solid_brushes	paint/gimpbrushcore.h	/^  TempBuf       *solid_brushes[BRUSH_CORE_SOLID_SUBSAMPLE][BRUSH_CORE_SOLID_SUBSAMPLE];$/;"	m	struct:_GimpBrushCore
solid_cache_invalid	paint/gimpbrushcore.h	/^  gboolean       solid_cache_invalid;$/;"	m	struct:_GimpBrushCore
sort_by_offset	core/gimpimage-arrange.c	/^sort_by_offset (GList *list)$/;"	f	file:
sort_func	core/gimplist.h	/^  GCompareFunc   sort_func;$/;"	m	struct:_GimpList
space_bar_action	config/gimpdisplayconfig.h	/^  GimpSpaceBarAction  space_bar_action;$/;"	m	struct:_GimpDisplayConfig
space_pressed	display/gimpdisplayshell.h	/^  gboolean          space_pressed;$/;"	m	struct:_GimpDisplayShell
space_release_pending	display/gimpdisplayshell.h	/^  gboolean          space_release_pending;$/;"	m	struct:_GimpDisplayShell
space_shaded_tool	display/gimpdisplayshell.h	/^  const gchar      *space_shaded_tool;$/;"	m	struct:_GimpDisplayShell
spacing	core/gimpbrush-header.h	/^  guint32   spacing;      \/*  brush spacing  *\/$/;"	m	struct:_BrushHeader
spacing	core/gimpbrush-load.c	/^  gint16   spacing;$/;"	m	struct:_AbrSampledBrushHeader	file:
spacing	core/gimpbrush.h	/^  gint          spacing;    \/*  brush's spacing                *\/$/;"	m	struct:_GimpBrush
spacing	paint/gimpbrushcore.h	/^  gdouble        spacing;$/;"	m	struct:_GimpBrushCore
spacing	widgets/gimpbrushselect.h	/^  gint                  spacing;$/;"	m	struct:_GimpBrushSelect
spacing_adjustment	widgets/gimpbrushfactoryview.h	/^  GtkAdjustment       *spacing_adjustment;$/;"	m	struct:_GimpBrushFactoryView
spacing_changed	core/gimpbrush.h	/^  void        (* spacing_changed)  (GimpBrush  *brush);$/;"	m	struct:_GimpBrushClass
spacing_changed_handler_id	widgets/gimpbrushfactoryview.h	/^  GQuark               spacing_changed_handler_id;$/;"	m	struct:_GimpBrushFactoryView
spacing_data	widgets/gimpbrusheditor.h	/^  GtkAdjustment  *spacing_data;$/;"	m	struct:_GimpBrushEditor
spacing_scale	widgets/gimpbrushfactoryview.h	/^  GtkWidget           *spacing_scale;$/;"	m	struct:_GimpBrushFactoryView
spacing_unit	core/gimpgrid.h	/^  GimpUnit       spacing_unit;$/;"	m	struct:_GimpGrid
sparse	core/gimpdrawableundo.h	/^  gboolean      sparse;$/;"	m	struct:_GimpDrawableUndo
spikes	core/gimpbrushgenerated.h	/^  gint                    spikes;       \/* 2 - 20     *\/$/;"	m	struct:_GimpBrushGenerated
spikes_data	widgets/gimpbrusheditor.h	/^  GtkAdjustment  *spikes_data;$/;"	m	struct:_GimpBrushEditor
splash	gui/splash.c	/^static GimpSplash *splash = NULL;$/;"	v	file:
splash_area_expose	gui/splash.c	/^splash_area_expose (GtkWidget      *widget,$/;"	f	file:
splash_average_text_area	gui/splash.c	/^splash_average_text_area (GimpSplash *splash,$/;"	f	file:
splash_create	gui/splash.c	/^splash_create (gboolean be_verbose)$/;"	f
splash_destroy	gui/splash.c	/^splash_destroy (void)$/;"	f
splash_image_load	gui/splash.c	/^splash_image_load (gboolean be_verbose)$/;"	f	file:
splash_image_pick_from_dir	gui/splash.c	/^splash_image_pick_from_dir (const gchar *dirname,$/;"	f	file:
splash_map	gui/splash.c	/^splash_map (void)$/;"	f	file:
splash_position_layouts	gui/splash.c	/^splash_position_layouts (GimpSplash   *splash,$/;"	f	file:
splash_rectangle_union	gui/splash.c	/^splash_rectangle_union (GdkRectangle   *dest,$/;"	f	file:
splash_timer_elapsed	gui/splash.c	/^splash_timer_elapsed (const gchar *text1,$/;"	f	file:
splash_update	gui/splash.c	/^splash_update (const gchar *text1,$/;"	f
split_	composite/ns.py	/^    def split_(self, line):$/;"	m	class:nmx
split_parts	widgets/gimpgradienteditor.h	/^  gint          split_parts;$/;"	m	struct:_GimpGradientEditor
src	display/gimpdisplayshell-render.c	/^  const guchar     *src;$/;"	m	struct:_RenderInfo	file:
src	widgets/gimpcolordisplayeditor.h	/^  GtkListStore          *src;$/;"	m	struct:_GimpColorDisplayEditor
src	widgets/gimpcontrollerlist.h	/^  GtkListStore       *src;$/;"	m	struct:_GimpControllerList
src1	paint-funcs/paint-funcs-generic.h	/^  guchar            *src1;$/;"	m	struct:apply_layer_mode_struct
src2	paint-funcs/paint-funcs-generic.h	/^  guchar            *src2;$/;"	m	struct:apply_layer_mode_struct
src2_tiles	core/gimpdrawableundo.h	/^  TileManager          *src2_tiles;$/;"	m	struct:_GimpDrawableUndo
srcPR	core/gimpimagemap.c	/^  PixelRegion            srcPR;$/;"	m	struct:_GimpImageMap	file:
src_area	paint/gimpperspectiveclone.h	/^  TempBuf     *src_area;$/;"	m	struct:_GimpPerspectiveClone
src_display	tools/gimpperspectiveclonetool.h	/^  GimpDisplay    *src_display;$/;"	m	struct:_GimpPerspectiveCloneTool
src_display	tools/gimpsourcetool.h	/^  GimpDisplay   *src_display;$/;"	m	struct:_GimpSourceTool
src_drawable	paint/gimpsourcecore.h	/^  GimpDrawable  *src_drawable;$/;"	m	struct:_GimpSourceCore
src_gtype	widgets/gimpcontrollerlist.h	/^  GType               src_gtype;$/;"	m	struct:_GimpControllerList
src_sel	widgets/gimpcolordisplayeditor.h	/^  GtkTreeSelection      *src_sel;$/;"	m	struct:_GimpColorDisplayEditor
src_sel	widgets/gimpcontrollerlist.h	/^  GtkTreeSelection   *src_sel;$/;"	m	struct:_GimpControllerList
src_tiles	display/gimpdisplayshell-render.c	/^  TileManager      *src_tiles;$/;"	m	struct:_RenderInfo	file:
src_x	display/gimpdisplayshell-render.c	/^  gint              src_x;$/;"	m	struct:_RenderInfo	file:
src_x	paint/gimpsourcecore.h	/^  gdouble        src_x;$/;"	m	struct:_GimpSourceCore
src_x	tools/gimpperspectiveclonetool.h	/^  gint            src_x;$/;"	m	struct:_GimpPerspectiveCloneTool
src_x	tools/gimpsourcetool.h	/^  gint           src_x;$/;"	m	struct:_GimpSourceTool
src_x_fv	paint/gimpperspectiveclone.h	/^  gdouble      src_x_fv;     \/* source coords in front_view perspective *\/$/;"	m	struct:_GimpPerspectiveClone
src_y	display/gimpdisplayshell-render.c	/^  gint              src_y;$/;"	m	struct:_RenderInfo	file:
src_y	paint/gimpsourcecore.h	/^  gdouble        src_y;$/;"	m	struct:_GimpSourceCore
src_y	tools/gimpperspectiveclonetool.h	/^  gint            src_y;$/;"	m	struct:_GimpPerspectiveCloneTool
src_y	tools/gimpsourcetool.h	/^  gint           src_y;$/;"	m	struct:_GimpSourceTool
src_y_fv	paint/gimpperspectiveclone.h	/^  gdouble      src_y_fv;$/;"	m	struct:_GimpPerspectiveClone
sse2_int_mult	composite/gimp-composite-x86.h	52;"	d
stack	vectors/gimpvectors-import.c	/^  GQueue       *stack;$/;"	m	struct:__anon303	file:
stack	widgets/gimpcolordisplayeditor.h	/^  GimpColorDisplayStack *stack;$/;"	m	struct:_GimpColorDisplayEditor
stack_trace_mode	core/gimp.h	/^  GimpStackTraceMode      stack_trace_mode;$/;"	m	struct:_Gimp
stack_trace_mode	errors.c	/^static GimpStackTraceMode   stack_trace_mode  = GIMP_STACK_TRACE_QUERY;$/;"	v	file:
stack_trace_mode	main.c	/^static GimpStackTraceMode  stack_trace_mode  = GIMP_STACK_TRACE_NEVER;$/;"	v	file:
stack_trace_mode	main.c	/^static GimpStackTraceMode  stack_trace_mode  = GIMP_STACK_TRACE_QUERY;$/;"	v	file:
stageone	base/siox.c	/^stageone (lab          *points,$/;"	f	file:
stagetwo	base/siox.c	/^stagetwo (lab           *points,$/;"	f	file:
standard_brush	core/gimpcontext.c	/^static GimpBrush     *standard_brush      = NULL;$/;"	v	file:
standard_font	core/gimpcontext.c	/^static GimpFont      *standard_font       = NULL;$/;"	v	file:
standard_gradient	core/gimpcontext.c	/^static GimpGradient  *standard_gradient   = NULL;$/;"	v	file:
standard_paint_info	core/gimp.h	/^  GimpPaintInfo          *standard_paint_info;$/;"	m	struct:_Gimp
standard_paint_info	core/gimpcontext.c	/^static GimpPaintInfo *standard_paint_info = NULL;$/;"	v	file:
standard_palette	core/gimpcontext.c	/^static GimpPalette   *standard_palette    = NULL;$/;"	v	file:
standard_pattern	core/gimpcontext.c	/^static GimpPattern   *standard_pattern    = NULL;$/;"	v	file:
standard_tool_info	core/gimp.h	/^  GimpToolInfo           *standard_tool_info;$/;"	m	struct:_Gimp
standard_tool_info	core/gimpcontext.c	/^static GimpToolInfo  *standard_tool_info  = NULL;$/;"	v	file:
start	base/tile-swap.c	/^  gint64 start;$/;"	m	struct:_SwapFileGap	file:
start	core/gimpprogress.h	/^  GimpProgress * (* start)      (GimpProgress        *progress,$/;"	m	struct:_GimpProgressInterface
start	core/gimpsubprogress.h	/^  gdouble       start;$/;"	m	struct:_GimpSubProgress
start	paint/gimppaintcore.h	/^  gboolean   (* start)          (GimpPaintCore    *core,$/;"	m	struct:_GimpPaintCoreClass
start	vectors/gimpvectors-import.c	/^  void (* start) (SvgHandler   *handler,$/;"	m	struct:_SvgHandler	file:
start	widgets/gimphistogramview.h	/^  gint                   start;$/;"	m	struct:_GimpHistogramView
start_blob	paint/gimpink.h	/^  Blob          *start_blob;   \/*  starting blob (for undo)       *\/$/;"	m	struct:_GimpInk
start_coords	paint/gimppaintcore.h	/^  GimpCoords   start_coords;     \/*  starting coords (for undo only)     *\/$/;"	m	struct:_GimpPaintCore
start_element_handler	file/gimprecentlist.c	/^start_element_handler (GMarkupParseContext  *context,$/;"	f	file:
start_x	tools/gimpblendtool.h	/^  gdouble       start_x;    \/*  starting x coord  *\/$/;"	m	struct:_GimpBlendTool
start_y	tools/gimpblendtool.h	/^  gdouble       start_y;    \/*  starting y coord  *\/$/;"	m	struct:_GimpBlendTool
startx	base/pixel-region.h	/^  gint         startx;$/;"	m	struct:_PixelRegionHolder
startx	tools/gimpperspectiveclonetool.h	/^  gdouble         startx;         \/*  starting x coord                 *\/$/;"	m	struct:_GimpPerspectiveCloneTool
startx	tools/gimptransformtool.h	/^  gdouble         startx;          \/*  starting x coord                  *\/$/;"	m	struct:_GimpTransformTool
starty	base/pixel-region.h	/^  gint         starty;$/;"	m	struct:_PixelRegionHolder
starty	tools/gimpperspectiveclonetool.h	/^  gdouble         starty;         \/*  starting y coord                 *\/$/;"	m	struct:_GimpPerspectiveCloneTool
starty	tools/gimptransformtool.h	/^  gdouble         starty;          \/*  starting y coord                  *\/$/;"	m	struct:_GimpTransformTool
state	dialogs/about-dialog.c	/^  gint          state;$/;"	m	struct:__anon168	file:
state	dialogs/tips-parser.c	/^  TipsParserState        state;$/;"	m	struct:__anon176	file:
state	display/gimpdisplayshell-autoscroll.c	/^  GdkModifierType  state;$/;"	m	struct:__anon189	file:
state	tools/gimpforegroundselecttool.h	/^  SioxState          *state;$/;"	m	struct:_GimpForegroundSelectTool
state	tools/gimpiscissorstool.h	/^  IscissorsState  state;        \/*  state of iscissors                    *\/$/;"	m	struct:_GimpIscissorsTool
state	tools/gimpperspectiveclonetool.h	/^  GdkModifierType state;          \/*  state of buttons and keys        *\/$/;"	m	struct:_GimpPerspectiveCloneTool
state	tools/gimptransformtool.h	/^  GdkModifierType state;           \/*  state of buttons and keys         *\/$/;"	m	struct:_GimpTransformTool
states	file/gimprecentlist.c	/^  GSList         *states;$/;"	m	struct:__anon198	file:
static_data	core/gimpparamspecs.h	/^  gboolean  static_data;$/;"	m	struct:_GimpArray
static_desc	core/gimpimagefile.h	/^  gboolean            static_desc;$/;"	m	struct:_GimpImagefile
static_name	core/gimpobject.h	/^  guint    static_name  : 1;$/;"	m	struct:_GimpObject
static_strings	pdb/gimpprocedure.h	/^  gboolean          static_strings; \/* Are the strings allocated?     *\/$/;"	m	struct:_GimpProcedure
status	tools/gimppainttool.h	/^  const gchar     *status;       \/* status message *\/$/;"	m	struct:_GimpPaintTool
status_ctrl	tools/gimppainttool.h	/^  const gchar     *status_ctrl;  \/* additional message for the ctrl modifier *\/$/;"	m	struct:_GimpPaintTool
status_displays	tools/gimptool.h	/^  GList           *status_displays;$/;"	m	struct:_GimpTool
status_help	tools/gimpmeasuretool.h	/^  gboolean         status_help; \/*  help is currently in s.bar *\/$/;"	m	struct:_GimpMeasureTool
status_line	tools/gimppainttool.h	/^  const gchar     *status_line;  \/* status message when drawing a line *\/$/;"	m	struct:_GimpPaintTool
status_paint	tools/gimpsourcetool.h	/^  const gchar   *status_paint;$/;"	m	struct:_GimpSourceTool
status_set_source	tools/gimpsourcetool.h	/^  const gchar   *status_set_source;$/;"	m	struct:_GimpSourceTool
status_set_source_ctrl	tools/gimpsourcetool.h	/^  const gchar   *status_set_source_ctrl;$/;"	m	struct:_GimpSourceTool
statusbar	display/gimpdisplayshell.h	/^  GtkWidget        *statusbar;         \/*  statusbar                          *\/$/;"	m	struct:_GimpDisplayShell
stipple	display/gimpcanvas.h	/^  GdkBitmap      *stipple[GIMP_CANVAS_NUM_STIPPLES];$/;"	m	struct:_GimpCanvas
stipples	display/gimpcanvas.c	/^static const guchar stipples[GIMP_CANVAS_NUM_STIPPLES][8] =$/;"	v	file:
stock_id	core/gimpviewable.h	/^  gchar      *stock_id;$/;"	m	struct:_GimpViewable
stock_id	display/gimpstatusbar.c	/^  gchar *stock_id;$/;"	m	struct:_GimpStatusbarMsg	file:
stock_id	widgets/gimpactionfactory.h	/^  gchar                     *stock_id;$/;"	m	struct:_GimpActionFactoryEntry
stock_id	widgets/gimpactiongroup.h	/^  const gchar         *stock_id;$/;"	m	struct:_GimpPlugInActionEntry
stock_id	widgets/gimpactiongroup.h	/^  const gchar *stock_id;$/;"	m	struct:_GimpActionEntry
stock_id	widgets/gimpactiongroup.h	/^  const gchar *stock_id;$/;"	m	struct:_GimpEnumActionEntry
stock_id	widgets/gimpactiongroup.h	/^  const gchar *stock_id;$/;"	m	struct:_GimpRadioActionEntry
stock_id	widgets/gimpactiongroup.h	/^  const gchar *stock_id;$/;"	m	struct:_GimpStringActionEntry
stock_id	widgets/gimpactiongroup.h	/^  const gchar *stock_id;$/;"	m	struct:_GimpToggleActionEntry
stock_id	widgets/gimpactiongroup.h	/^  gchar                     *stock_id;$/;"	m	struct:_GimpActionGroup
stock_id	widgets/gimpdialogfactory.h	/^  gchar             *stock_id;$/;"	m	struct:_GimpDialogFactoryEntry
stock_id	widgets/gimpdockable.h	/^  gchar        *stock_id;$/;"	m	struct:_GimpDockable
stock_id	widgets/gimpmessagebox.h	/^  gchar        *stock_id;$/;"	m	struct:_GimpMessageBox
stock_id_container	widgets/gimptemplateeditor.h	/^  GimpContainer *stock_id_container;$/;"	m	struct:_GimpTemplateEditor
stock_id_context	widgets/gimptemplateeditor.h	/^  GimpContext   *stock_id_context;$/;"	m	struct:_GimpTemplateEditor
stops	core/gimpgradient-load.c	/^  GList        *stops;$/;"	m	struct:__anon151	file:
stretch_frame_image	widgets/gimpviewrenderer-frame.c	/^stretch_frame_image (GdkPixbuf *frame_image,$/;"	f	file:
stride	core/gimpbrushpipe.h	/^  gint             *stride;     \/* Aux for indexing *\/$/;"	m	struct:_GimpBrushPipe
stroke	core/gimpitem.h	/^  gboolean   (* stroke)       (GimpItem               *item,$/;"	m	struct:_GimpItemClass
stroke	text/gimptext-vectors.c	/^  GimpStroke   *stroke;$/;"	m	struct:_RenderContext	file:
stroke	tools/gimpforegroundselecttool.h	/^  GArray             *stroke;$/;"	m	struct:_GimpForegroundSelectTool
stroke	vectors/gimpvectors-import.c	/^  GimpStroke  *stroke;$/;"	m	struct:__anon305	file:
stroke_add	vectors/gimpvectors.h	/^  void          (* stroke_add)        (GimpVectors       *vectors,$/;"	m	struct:_GimpVectorsClass
stroke_button	tools/gimpvectoroptions.h	/^  GtkWidget       *stroke_button;$/;"	m	struct:_GimpVectorOptions
stroke_button	widgets/gimpselectioneditor.h	/^  GtkWidget       *stroke_button;$/;"	m	struct:_GimpSelectionEditor
stroke_button	widgets/gimpvectorstreeview.h	/^  GtkWidget        *stroke_button;$/;"	m	struct:_GimpVectorsTreeView
stroke_desc	core/gimpitem.h	/^  const gchar *stroke_desc;$/;"	m	struct:_GimpItemClass
stroke_dialog_new	dialogs/stroke-dialog.c	/^stroke_dialog_new (GimpItem    *item,$/;"	f
stroke_dialog_paint_info_selected	dialogs/stroke-dialog.c	/^stroke_dialog_paint_info_selected (GimpContainerView *view,$/;"	f	file:
stroke_dialog_response	dialogs/stroke-dialog.c	/^stroke_dialog_response (GtkWidget  *widget,$/;"	f	file:
stroke_get	vectors/gimpvectors.h	/^  GimpStroke  * (* stroke_get)        (const GimpVectors *vectors,$/;"	m	struct:_GimpVectorsClass
stroke_get_length	vectors/gimpvectors.h	/^  gdouble       (* stroke_get_length) (const GimpVectors *vectors,$/;"	m	struct:_GimpVectorsClass
stroke_get_next	vectors/gimpvectors.h	/^  GimpStroke  * (* stroke_get_next)   (const GimpVectors *vectors,$/;"	m	struct:_GimpVectorsClass
stroke_options	core/gimpstrokedesc.h	/^  GimpStrokeOptions *stroke_options;$/;"	m	struct:_GimpStrokeDesc
stroke_options	widgets/gimpdasheditor.h	/^  GimpStrokeOptions *stroke_options;$/;"	m	struct:_GimpDashEditor
stroke_options_signals	core/gimpstrokeoptions.c	/^static guint stroke_options_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
stroke_remove	vectors/gimpvectors.h	/^  void          (* stroke_remove)     (GimpVectors       *vectors,$/;"	m	struct:_GimpVectorsClass
stroke_width	tools/gimpforegroundselectoptions.h	/^  gint                  stroke_width;$/;"	m	struct:_GimpForegroundSelectOptions
strokes	tools/gimpforegroundselecttool.h	/^  GList              *strokes;$/;"	m	struct:_GimpForegroundSelectTool
strokes	vectors/gimpvectors-import.c	/^  GList        *strokes;$/;"	m	struct:__anon304	file:
strokes	vectors/gimpvectors-import.c	/^  GList       *strokes;$/;"	m	struct:__anon305	file:
strokes	vectors/gimpvectors.h	/^  GList    *strokes;            \/* The List of GimpStrokes        *\/$/;"	m	struct:_GimpVectors
stroking	core/gimpselection.h	/^  gboolean    stroking;$/;"	m	struct:_GimpSelection
style	core/gimpgrid.h	/^  GimpGridStyle  style;$/;"	m	struct:_GimpGrid
style	core/gimpstrokeoptions.h	/^  GimpStrokeStyle  style;$/;"	m	struct:_GimpStrokeOptions
subdivisions	widgets/gimphistogramview.h	/^  gint                   subdivisions;$/;"	m	struct:_GimpHistogramView
subsample	paint/gimpbrushcore-kernels.h	/^static const int subsample[5][5][9] =$/;"	v
subsample_indexed_region	paint-funcs/subsample-region.c	/^subsample_indexed_region (PixelRegion  *srcPR,$/;"	f
subsample_region	paint-funcs/subsample-region.c	/^subsample_region (PixelRegion *srcPR,$/;"	f
subtract_pixels	paint-funcs/paint-funcs-generic.h	/^subtract_pixels (const guchar *src1,$/;"	f
success	core/gimpcontainer.c	/^  gboolean          success;$/;"	m	struct:__anon58	file:
supersample	tools/gimpblendoptions.h	/^  gboolean          supersample;$/;"	m	struct:_GimpBlendOptions
supersample	tools/gimptransformoptions.h	/^  gboolean                  supersample;$/;"	m	struct:_GimpTransformOptions
supersample_depth	tools/gimpblendoptions.h	/^  gint              supersample_depth;$/;"	m	struct:_GimpBlendOptions
supersample_dtest	core/gimp-transform-region.c	/^supersample_dtest (gdouble x0, gdouble y0,$/;"	f	file:
supersample_test	core/gimp-transform-region.c	/^supersample_test (gint x0, gint y0,$/;"	f	file:
supersample_threshold	tools/gimpblendoptions.h	/^  gdouble           supersample_threshold;$/;"	m	struct:_GimpBlendOptions
suppress_updates	tools/gimprectangletool.c	/^  gint                    suppress_updates;$/;"	m	struct:_GimpRectangleToolPrivate	file:
svg	widgets/gimpclipboard.c	/^  gchar          *svg;$/;"	m	struct:_GimpClipboard	file:
svg_depth	vectors/gimpvectors-import.c	/^  gint          svg_depth;$/;"	m	struct:__anon303	file:
svg_handler_ellipse_start	vectors/gimpvectors-import.c	/^svg_handler_ellipse_start (SvgHandler   *handler,$/;"	f	file:
svg_handler_group_start	vectors/gimpvectors-import.c	/^svg_handler_group_start (SvgHandler   *handler,$/;"	f	file:
svg_handler_line_start	vectors/gimpvectors-import.c	/^svg_handler_line_start (SvgHandler   *handler,$/;"	f	file:
svg_handler_path_start	vectors/gimpvectors-import.c	/^svg_handler_path_start (SvgHandler   *handler,$/;"	f	file:
svg_handler_poly_start	vectors/gimpvectors-import.c	/^svg_handler_poly_start (SvgHandler   *handler,$/;"	f	file:
svg_handler_rect_start	vectors/gimpvectors-import.c	/^svg_handler_rect_start (SvgHandler   *handler,$/;"	f	file:
svg_handler_svg_end	vectors/gimpvectors-import.c	/^svg_handler_svg_end (SvgHandler   *handler,$/;"	f	file:
svg_handler_svg_start	vectors/gimpvectors-import.c	/^svg_handler_svg_start (SvgHandler   *handler,$/;"	f	file:
svg_handlers	vectors/gimpvectors-import.c	/^static const SvgHandler svg_handlers[] =$/;"	v	file:
svg_parse_gradient_stop	core/gimpgradient-load.c	/^svg_parse_gradient_stop (const gchar **names,$/;"	f	file:
svg_parse_gradient_stop_style	core/gimpgradient-load.c	/^svg_parse_gradient_stop_style (SvgStop     *stop,$/;"	f	file:
svg_parse_gradient_stop_style_prop	core/gimpgradient-load.c	/^svg_parse_gradient_stop_style_prop (SvgStop     *stop,$/;"	f	file:
svg_parser_end_element	core/gimpgradient-load.c	/^svg_parser_end_element (GMarkupParseContext  *context,$/;"	f	file:
svg_parser_end_element	vectors/gimpvectors-import.c	/^svg_parser_end_element (GMarkupParseContext  *context,$/;"	f	file:
svg_parser_gradient_segments	core/gimpgradient-load.c	/^svg_parser_gradient_segments (GList *stops)$/;"	f	file:
svg_parser_start_element	core/gimpgradient-load.c	/^svg_parser_start_element (GMarkupParseContext  *context,$/;"	f	file:
svg_parser_start_element	vectors/gimpvectors-import.c	/^svg_parser_start_element (GMarkupParseContext  *context,$/;"	f	file:
svg_target_entries	widgets/gimpclipboard.c	/^  GtkTargetEntry *svg_target_entries;$/;"	m	struct:_GimpClipboard	file:
svp	core/gimpscanconvert.c	/^  ArtSVP         *svp;      \/* Sorted vector path$/;"	m	struct:_GimpScanConvert	file:
swap_file_end	base/tile-swap.c	/^  gint64   swap_file_end;$/;"	m	struct:_SwapFile	file:
swap_file_grow	base/tile-swap.c	/^static const gint64   swap_file_grow   = 1024 * TILE_WIDTH * TILE_HEIGHT * 4;$/;"	v	file:
swap_icon	widgets/gimpfgbgeditor.h	/^  GdkPixbuf       *swap_icon;$/;"	m	struct:_GimpFgBgEditor
swap_ints	tools/gimprectangletool.c	/^static void swap_ints (gint *i,$/;"	f	file:
swap_num	xcf/xcf-private.h	/^  gint                swap_num;$/;"	m	struct:_XcfInfo
swap_offset	base/tile-private.h	/^  gint64  swap_offset;  \/* the offset within the swap file of the tile data.$/;"	m	struct:_Tile
swap_path	config/gimpbaseconfig.h	/^  gchar    *swap_path;$/;"	m	struct:_GimpBaseConfig
swap_pixels	core/gimpdrawable.h	/^  void (* swap_pixels)           (GimpDrawable         *drawable,$/;"	m	struct:_GimpDrawableClass
swap_pixels	paint-funcs/paint-funcs-generic.h	/^swap_pixels (guchar *src,$/;"	f
swap_region	paint-funcs/paint-funcs.c	/^swap_region (PixelRegion *src,$/;"	f
sx	core/gimpdrawable-blend.c	/^  gdouble           sx, sy;$/;"	m	struct:__anon117	file:
sy	core/gimpdrawable-blend.c	/^  gdouble           sx, sy;$/;"	m	struct:__anon117	file:
symbol	core/gimpunit.c	/^  gchar    *symbol;$/;"	m	struct:__anon105	file:
system_gimprc	config/gimprc.h	/^  gchar            *system_gimprc;$/;"	m	struct:_GimpRc
system_gimprc	main.c	/^static const gchar        *system_gimprc     = NULL;$/;"	v	file:
system_gimprc_header	config/gimpconfig-dump.c	/^static const gchar system_gimprc_header[] =$/;"	v	file:
tab_style	widgets/gimpdockable.h	/^  GimpTabStyle  tab_style;$/;"	m	struct:_GimpDockable
tab_style	widgets/gimpsessioninfo-dockable.h	/^  GimpTabStyle  tab_style;$/;"	m	struct:_GimpSessionInfoDockable
table	core/gimpparasitelist.h	/^  GHashTable *table;$/;"	m	struct:_GimpParasiteList
table	dialogs/module-dialog.c	/^  GtkWidget    *table;$/;"	m	struct:__anon182	file:
table	widgets/gimpdevicestatus.c	/^  GtkWidget      *table;$/;"	m	struct:_GimpDeviceStatusEntry	file:
table	widgets/gimpsamplepointeditor.h	/^  GtkWidget       *table;$/;"	m	struct:_GimpSamplePointEditor
target_entries	widgets/gimpclipboard.c	/^  GtkTargetEntry *target_entries;$/;"	m	struct:_GimpClipboard	file:
target_entry	widgets/gimpdnd.c	/^  GtkTargetEntry       target_entry;$/;"	m	struct:_GimpDndDataDef	file:
tattoo	core/gimpitem.h	/^  guint32           tattoo;             \/*  provides a permanent ID  *\/$/;"	m	struct:_GimpItem
tattoo_state	core/gimpimage.h	/^  GimpTattoo         tattoo_state;          \/*  the last used tattoo         *\/$/;"	m	struct:_GimpImage
tattoo_state	xcf/xcf-private.h	/^  GimpTattoo          tattoo_state;$/;"	m	struct:_XcfInfo
tcx	tools/gimpperspectiveclonetool.h	/^  gdouble         tcx, tcy;$/;"	m	struct:_GimpPerspectiveCloneTool
tcx	tools/gimptransformtool.h	/^  gdouble         tcx, tcy;$/;"	m	struct:_GimpTransformTool
tcy	tools/gimpperspectiveclonetool.h	/^  gdouble         tcx, tcy;$/;"	m	struct:_GimpPerspectiveCloneTool
tcy	tools/gimptransformtool.h	/^  gdouble         tcx, tcy;$/;"	m	struct:_GimpTransformTool
tearoff_menus	config/gimpguiconfig.h	/^  gboolean             tearoff_menus;$/;"	m	struct:_GimpGuiConfig
temp_buf_copy	base/temp-buf.c	/^temp_buf_copy (TempBuf *src,$/;"	f
temp_buf_copy_area	base/temp-buf.c	/^temp_buf_copy_area (TempBuf *src,$/;"	f
temp_buf_data	base/temp-buf.c	/^temp_buf_data (TempBuf *temp_buf)$/;"	f
temp_buf_data_clear	base/temp-buf.c	/^temp_buf_data_clear (TempBuf *temp_buf)$/;"	f
temp_buf_free	base/temp-buf.c	/^temp_buf_free (TempBuf *temp_buf)$/;"	f
temp_buf_get_memsize	base/temp-buf.c	/^temp_buf_get_memsize (TempBuf *temp_buf)$/;"	f
temp_buf_new	base/temp-buf.c	/^temp_buf_new (gint          width,$/;"	f
temp_buf_new_check	base/temp-buf.c	/^temp_buf_new_check (gint           width,$/;"	f
temp_buf_resize	base/temp-buf.c	/^temp_buf_resize (TempBuf *buf,$/;"	f
temp_buf_scale	base/temp-buf.c	/^temp_buf_scale (TempBuf *src,$/;"	f
temp_buf_to_color	base/temp-buf.c	/^temp_buf_to_color (TempBuf *src_buf,$/;"	f	file:
temp_buf_to_gray	base/temp-buf.c	/^temp_buf_to_gray (TempBuf *src_buf,$/;"	f	file:
temp_context_id	display/gimpstatusbar.h	/^  guint             temp_context_id;$/;"	m	struct:_GimpStatusbar
temp_name_invoker	pdb/fileops_cmds.c	/^temp_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
temp_path	config/gimpbaseconfig.h	/^  gchar    *temp_path;$/;"	m	struct:_GimpBaseConfig
temp_proc_frames	plug-in/gimpplugin.h	/^  GList               *temp_proc_frames;$/;"	m	struct:_GimpPlugIn
temp_procedures	plug-in/gimpplugin.h	/^  GSList              *temp_procedures; \/*  Temporary procedures              *\/$/;"	m	struct:_GimpPlugIn
temp_spaces	display/gimpstatusbar.h	/^  gchar            *temp_spaces;$/;"	m	struct:_GimpStatusbar
temp_timeout_id	display/gimpstatusbar.h	/^  guint             temp_timeout_id;$/;"	m	struct:_GimpStatusbar
template	actions/templates-commands.c	/^  GimpTemplate  *template;$/;"	m	struct:__anon1	file:
template	dialogs/image-new-dialog.c	/^  GimpTemplate *template;$/;"	m	struct:__anon179	file:
template_changed	core/gimpcontext.h	/^  void (* template_changed)   (GimpContext          *context,$/;"	m	struct:_GimpContextClass
template_name	core/gimpcontext.h	/^  gchar                *template_name;$/;"	m	struct:_GimpContext
template_options_dialog_free	dialogs/template-options-dialog.c	/^template_options_dialog_free (TemplateOptionsDialog *dialog)$/;"	f	file:
template_options_dialog_new	dialogs/template-options-dialog.c	/^template_options_dialog_new (GimpTemplate *template,$/;"	f
templates	core/gimp.h	/^  GimpContainer          *templates;$/;"	m	struct:_Gimp
templates_actions	actions/templates-actions.c	/^static const GimpActionEntry templates_actions[] =$/;"	v	file:
templates_actions_setup	actions/templates-actions.c	/^templates_actions_setup (GimpActionGroup *group)$/;"	f
templates_actions_update	actions/templates-actions.c	/^templates_actions_update (GimpActionGroup *group,$/;"	f
templates_create_image_cmd_callback	actions/templates-commands.c	/^templates_create_image_cmd_callback (GtkAction *action,$/;"	f
templates_delete_cmd_callback	actions/templates-commands.c	/^templates_delete_cmd_callback (GtkAction *action,$/;"	f
templates_delete_data_free	actions/templates-commands.c	/^templates_delete_data_free (TemplateDeleteData *delete_data)$/;"	f	file:
templates_delete_response	actions/templates-commands.c	/^templates_delete_response (GtkWidget          *dialog,$/;"	f	file:
templates_duplicate_cmd_callback	actions/templates-commands.c	/^templates_duplicate_cmd_callback (GtkAction *action,$/;"	f
templates_edit_cmd_callback	actions/templates-commands.c	/^templates_edit_cmd_callback (GtkAction *action,$/;"	f
templates_edit_response	actions/templates-commands.c	/^templates_edit_response (GtkWidget             *dialog,$/;"	f	file:
templates_new_cmd_callback	actions/templates-commands.c	/^templates_new_cmd_callback (GtkAction *action,$/;"	f
templates_new_response	actions/templates-commands.c	/^templates_new_response (GtkWidget             *dialog,$/;"	f	file:
text	display/gimpstatusbar.c	/^  gchar *text;$/;"	m	struct:_GimpStatusbarMsg	file:
text	text/gimptext-private.h	/^  GimpText       *text;$/;"	m	struct:_GimpTextLayout
text	text/gimptext.h	/^  gchar                 *text;$/;"	m	struct:_GimpText
text	text/gimptextlayer.h	/^  GimpText     *text;$/;"	m	struct:_GimpTextLayer
text	text/gimptextundo.h	/^  GimpText         *text;$/;"	m	struct:_GimpTextUndo
text	tools/gimptexttool.h	/^  GimpText      *text;$/;"	m	struct:_GimpTextTool
text1	gui/splash.c	/^  gchar          *text1;$/;"	m	struct:__anon201	file:
text2	gui/splash.c	/^  gchar          *text2;$/;"	m	struct:__anon201	file:
text_buffer	widgets/gimperrorconsole.h	/^  GtkTextBuffer *text_buffer;$/;"	m	struct:_GimpErrorConsole
text_changed	widgets/gimptexteditor.h	/^  void (* text_changed) (GimpTextEditor *editor);$/;"	m	struct:_GimpTextEditorClass
text_editor_actions	actions/text-editor-actions.c	/^static const GimpActionEntry text_editor_actions[] =$/;"	v	file:
text_editor_actions_setup	actions/text-editor-actions.c	/^text_editor_actions_setup (GimpActionGroup *group)$/;"	f
text_editor_actions_update	actions/text-editor-actions.c	/^text_editor_actions_update (GimpActionGroup *group,$/;"	f
text_editor_clear_cmd_callback	actions/text-editor-commands.c	/^text_editor_clear_cmd_callback (GtkAction *action,$/;"	f
text_editor_direction_actions	actions/text-editor-actions.c	/^static const GimpRadioActionEntry text_editor_direction_actions[] =$/;"	v	file:
text_editor_direction_cmd_callback	actions/text-editor-commands.c	/^text_editor_direction_cmd_callback (GtkAction *action,$/;"	f
text_editor_load_cmd_callback	actions/text-editor-commands.c	/^text_editor_load_cmd_callback (GtkAction *action,$/;"	f
text_editor_load_response	actions/text-editor-commands.c	/^text_editor_load_response (GtkWidget      *dialog,$/;"	f	file:
text_editor_signals	widgets/gimptexteditor.c	/^static guint text_editor_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
text_fontname_invoker	pdb/text_tool_cmds.c	/^text_fontname_invoker (GimpProcedure     *procedure,$/;"	f	file:
text_get_extents	text/gimptext-compat.c	/^text_get_extents (const gchar *fontname,$/;"	f
text_get_extents_fontname_invoker	pdb/text_tool_cmds.c	/^text_get_extents_fontname_invoker (GimpProcedure     *procedure,$/;"	f	file:
text_get_extents_invoker	pdb/text_tool_cmds.c	/^text_get_extents_invoker (GimpProcedure     *procedure,$/;"	f	file:
text_handler	file/gimprecentlist.c	/^text_handler (GMarkupParseContext  *context,$/;"	f	file:
text_invoker	pdb/text_tool_cmds.c	/^text_invoker (GimpProcedure     *procedure,$/;"	f	file:
text_parasite	text/gimptextlayer.h	/^  const gchar  *text_parasite;  \/*  parasite name that this text was set from,$/;"	m	struct:_GimpTextLayer
text_render	text/gimptext-compat.c	/^text_render (GimpImage    *image,$/;"	f
text_renderer	widgets/gimpcontainercombobox.h	/^  GtkCellRenderer    *text_renderer;$/;"	m	struct:_GimpContainerComboBox
text_view	widgets/gimperrorconsole.h	/^  GtkWidget     *text_view;$/;"	m	struct:_GimpErrorConsole
textrange	dialogs/about-dialog.c	/^  gint          textrange[2];$/;"	m	struct:__anon168	file:
tgrid_coords	tools/gimptransformtool.h	/^  gdouble        *tgrid_coords;    \/*  transformed grid_coords           *\/$/;"	m	struct:_GimpTransformTool
thaw	core/gimpcontainer.h	/^  void         (* thaw)               (GimpContainer       *container);$/;"	m	struct:_GimpContainerClass
thaw	vectors/gimpvectors.h	/^  void          (* thaw)              (GimpVectors       *vectors);$/;"	m	struct:_GimpVectorsClass
theCustomPalette	core/gimpimage-convert.c	/^static GimpPalette *theCustomPalette = NULL;$/;"	v	file:
the_dnd_gimp	widgets/gimpdnd.c	/^static Gimp *the_dnd_gimp = NULL;$/;"	v	file:
the_errors_gimp	errors.c	/^static Gimp                *the_errors_gimp   = NULL;$/;"	v	file:
the_gui_gimp	gui/gui.c	/^static Gimp            *the_gui_gimp     = NULL;$/;"	v	file:
the_unit_gimp	units.c	/^static Gimp *the_unit_gimp = NULL;$/;"	v	file:
theme	config/gimpguiconfig.h	/^  gchar               *theme;$/;"	m	struct:_GimpGuiConfig
theme_path	config/gimpguiconfig.h	/^  gchar               *theme_path;$/;"	m	struct:_GimpGuiConfig
themes_apply_theme	gui/themes.c	/^themes_apply_theme (Gimp        *gimp,$/;"	f
themes_directories_foreach	gui/themes.c	/^themes_directories_foreach (const GimpDatafileData *file_data,$/;"	f	file:
themes_exit	gui/themes.c	/^themes_exit (Gimp *gimp)$/;"	f
themes_get_theme_dir	gui/themes.c	/^themes_get_theme_dir (Gimp        *gimp,$/;"	f
themes_get_theme_file	gui/themes.c	/^themes_get_theme_file (Gimp        *gimp,$/;"	f
themes_hash	gui/themes.c	/^static GHashTable *themes_hash = NULL;$/;"	v	file:
themes_init	gui/themes.c	/^themes_init (Gimp *gimp)$/;"	f
themes_list_themes	gui/themes.c	/^themes_list_themes (Gimp *gimp,$/;"	f
themes_list_themes_foreach	gui/themes.c	/^themes_list_themes_foreach (gpointer key,$/;"	f	file:
themes_theme_change_notify	gui/themes.c	/^themes_theme_change_notify (GimpGuiConfig *config,$/;"	f	file:
thetip	dialogs/tips-parser.h	/^  gchar *thetip;$/;"	m	struct:_GimpTip
thetip_label	dialogs/tips-dialog.c	/^static GtkWidget *thetip_label  = NULL;$/;"	v	file:
thin_region	paint-funcs/paint-funcs.c	/^thin_region (PixelRegion *region,$/;"	f
threads	base/pixel-processor.c	/^  gint                 threads;$/;"	m	struct:_PixelProcessor	file:
threads_enter	core/gimp-gui.h	/^  void           (* threads_enter)       (Gimp                *gimp);$/;"	m	struct:_GimpGui
threads_leave	core/gimp-gui.h	/^  void           (* threads_leave)       (Gimp                *gimp);$/;"	m	struct:_GimpGui
threshold	base/threshold.c	/^threshold (Threshold   *tr,$/;"	f
threshold	core/gimpimage-contiguous-region.c	/^  gint                 threshold;$/;"	m	struct:__anon100	file:
threshold	dialogs/palette-import-dialog.c	/^  GtkAdjustment *threshold;$/;"	m	struct:__anon178	file:
threshold	tools/gimpbucketfilloptions.h	/^  gdouble             threshold;$/;"	m	struct:_GimpBucketFillOptions
threshold	tools/gimpselectionoptions.h	/^  gdouble             threshold;$/;"	m	struct:_GimpSelectionOptions
threshold	tools/gimpthresholdtool.h	/^  Threshold        *threshold;$/;"	m	struct:_GimpThresholdTool
threshold_invoker	pdb/color_cmds.c	/^threshold_invoker (GimpProcedure     *procedure,$/;"	f	file:
threshold_lut_func	base/lut-funcs.c	/^threshold_lut_func (gdouble *min,$/;"	f	file:
threshold_lut_new	base/lut-funcs.c	/^threshold_lut_new (gdouble value,$/;"	f
threshold_lut_setup	base/lut-funcs.c	/^threshold_lut_setup (GimpLut *lut,$/;"	f	file:
threshold_mask	base/siox.c	/^threshold_mask (TileManager *mask,$/;"	f	file:
thumb_box	widgets/gimpfiledialog.h	/^  GtkWidget            *thumb_box;$/;"	m	struct:_GimpFileDialog
thumb_loader	plug-in/gimppluginprocedure.h	/^  gchar               *thumb_loader;$/;"	m	struct:_GimpPlugInProcedure
thumbnail	core/gimpimagefile.h	/^  GimpThumbnail      *thumbnail;$/;"	m	struct:_GimpImagefile
thumbnail_filesize_limit	config/gimpcoreconfig.h	/^  guint64                 thumbnail_filesize_limit;$/;"	m	struct:_GimpCoreConfig
thumbnail_size	config/gimpcoreconfig.h	/^  GimpThumbnailSize       thumbnail_size;$/;"	m	struct:_GimpCoreConfig
tile	base/pixel-surround.c	/^  Tile        *tile;       \/*  locked tile (may be NULL)            *\/$/;"	m	struct:_PixelSurround	file:
tile_active_count	base/tile.c	/^static gint tile_active_count = 0;$/;"	v	file:
tile_alloc	base/tile.c	/^tile_alloc (Tile *tile)$/;"	f
tile_allocate_rowhints	base/tile.c	/^tile_allocate_rowhints (Tile *tile)$/;"	f
tile_attach	base/tile.c	/^tile_attach (Tile *tile,$/;"	f
tile_bpp	base/tile.c	/^tile_bpp (Tile *tile)$/;"	f
tile_buf	display/gimpdisplayshell-render.c	/^static guchar *tile_buf    = NULL;$/;"	v	file:
tile_cache_exit	base/tile-cache.c	/^tile_cache_exit (void)$/;"	f
tile_cache_flush	base/tile-cache.c	/^tile_cache_flush (Tile *tile)$/;"	f
tile_cache_flush_internal	base/tile-cache.c	/^tile_cache_flush_internal (Tile *tile)$/;"	f	file:
tile_cache_init	base/tile-cache.c	/^tile_cache_init (gulong tile_cache_size)$/;"	f
tile_cache_insert	base/tile-cache.c	/^tile_cache_insert (Tile *tile)$/;"	f
tile_cache_mutex	base/tile-cache.c	/^static GStaticMutex   tile_cache_mutex = G_STATIC_MUTEX_INIT;$/;"	v	file:
tile_cache_set_size	base/tile-cache.c	/^tile_cache_set_size (gulong cache_size)$/;"	f
tile_cache_size	config/gimpbaseconfig.h	/^  guint64   tile_cache_size;$/;"	m	struct:_GimpBaseConfig
tile_cache_zorch_next	base/tile-cache.c	/^tile_cache_zorch_next (void)$/;"	f	file:
tile_count	base/tile.c	/^static gint tile_count        = 0;$/;"	v	file:
tile_data_pointer	base/tile.c	/^tile_data_pointer (Tile *tile,$/;"	f
tile_destroy	base/tile.c	/^tile_destroy (Tile *tile)$/;"	f	file:
tile_detach	base/tile.c	/^tile_detach (Tile *tile,$/;"	f
tile_eheight	base/tile.c	/^tile_eheight (Tile *tile)$/;"	f
tile_ewidth	base/tile.c	/^tile_ewidth (Tile *tile)$/;"	f
tile_exist_count	base/tile.c	/^static gint tile_exist_count  = 0;$/;"	v	file:
tile_exist_peak	base/tile.c	/^static gint tile_exist_peak   = 0;$/;"	v	file:
tile_get_rowhint	base/tile.c	/^tile_get_rowhint (Tile *tile,$/;"	f
tile_global_refcount	base/tile.c	/^tile_global_refcount (void)$/;"	f
tile_h	base/pixel-surround.c	/^  gint         tile_h;     \/*  height of locked tile                *\/$/;"	m	struct:_PixelSurround	file:
tile_idle_preswap	base/tile-cache.c	/^tile_idle_preswap (gpointer data)$/;"	f	file:
tile_is_valid	base/tile.c	/^tile_is_valid (Tile *tile)$/;"	f
tile_lock	base/tile.c	/^tile_lock (Tile *tile)$/;"	f
tile_manager_bpp	base/tile-manager.c	/^tile_manager_bpp (const TileManager *tm)$/;"	f
tile_manager_create_preview	base/tile-manager-preview.c	/^tile_manager_create_preview (TileManager *tiles,$/;"	f	file:
tile_manager_crop	base/tile-manager-crop.c	/^tile_manager_crop (TileManager *tiles,$/;"	f
tile_manager_get	base/tile-manager.c	/^tile_manager_get (TileManager *tm,$/;"	f
tile_manager_get_at	base/tile-manager.c	/^tile_manager_get_at (TileManager *tm,$/;"	f
tile_manager_get_memsize	base/tile-manager.c	/^tile_manager_get_memsize (const TileManager *tm,$/;"	f
tile_manager_get_offsets	base/tile-manager.c	/^tile_manager_get_offsets (const TileManager *tm,$/;"	f
tile_manager_get_preview	base/tile-manager-preview.c	/^tile_manager_get_preview (TileManager *tiles,$/;"	f
tile_manager_get_sub_preview	base/tile-manager-preview.c	/^tile_manager_get_sub_preview (TileManager *tiles,$/;"	f
tile_manager_get_tile	base/tile-manager.c	/^tile_manager_get_tile (TileManager *tm,$/;"	f
tile_manager_get_tile_col_row	base/tile-manager.c	/^tile_manager_get_tile_col_row (TileManager *tm,$/;"	f
tile_manager_get_tile_coordinates	base/tile-manager.c	/^tile_manager_get_tile_coordinates (TileManager *tm,$/;"	f
tile_manager_get_tile_num	base/tile-manager.c	/^tile_manager_get_tile_num (TileManager *tm,$/;"	f	file:
tile_manager_height	base/tile-manager.c	/^tile_manager_height (const TileManager *tm)$/;"	f
tile_manager_invalidate_area	base/tile-manager.c	/^tile_manager_invalidate_area (TileManager *tm,$/;"	f
tile_manager_invalidate_pixel	base/tile-manager.c	/^tile_manager_invalidate_pixel (TileManager  *tm,$/;"	f	file:
tile_manager_invalidate_tile	base/tile-manager.c	/^tile_manager_invalidate_tile (TileManager  *tm,$/;"	f	file:
tile_manager_map	base/tile-manager.c	/^tile_manager_map (TileManager *tm,$/;"	f
tile_manager_map_over_tile	base/tile-manager.c	/^tile_manager_map_over_tile (TileManager *tm,$/;"	f
tile_manager_map_tile	base/tile-manager.c	/^tile_manager_map_tile (TileManager *tm,$/;"	f
tile_manager_new	base/tile-manager.c	/^tile_manager_new (gint width,$/;"	f
tile_manager_ref	base/tile-manager.c	/^tile_manager_ref (TileManager *tm)$/;"	f
tile_manager_set_offsets	base/tile-manager.c	/^tile_manager_set_offsets (TileManager *tm,$/;"	f
tile_manager_set_validate_proc	base/tile-manager.c	/^tile_manager_set_validate_proc (TileManager      *tm,$/;"	f
tile_manager_tiles_per_col	base/tile-manager.c	/^tile_manager_tiles_per_col (const TileManager *tm)$/;"	f
tile_manager_tiles_per_row	base/tile-manager.c	/^tile_manager_tiles_per_row (const TileManager *tm)$/;"	f
tile_manager_unref	base/tile-manager.c	/^tile_manager_unref (TileManager *tm)$/;"	f
tile_manager_validate	base/tile-manager.c	/^tile_manager_validate (TileManager *tm,$/;"	f
tile_manager_width	base/tile-manager.c	/^tile_manager_width (const TileManager *tm)$/;"	f
tile_new	base/tile.c	/^tile_new (gint bpp)$/;"	f
tile_num	base/tile-private.h	/^  gint         tile_num; \/* the number of this tile within the drawable *\/$/;"	m	struct:_TileLink
tile_pyramid_alloc_levels	base/tile-pyramid.c	/^tile_pyramid_alloc_levels (TilePyramid *pyramid,$/;"	f	file:
tile_pyramid_destroy	base/tile-pyramid.c	/^tile_pyramid_destroy (TilePyramid *pyramid)$/;"	f
tile_pyramid_get_bpp	base/tile-pyramid.c	/^tile_pyramid_get_bpp (const TilePyramid *pyramid)$/;"	f
tile_pyramid_get_height	base/tile-pyramid.c	/^tile_pyramid_get_height (const TilePyramid *pyramid)$/;"	f
tile_pyramid_get_level	base/tile-pyramid.c	/^tile_pyramid_get_level (gint     width,$/;"	f
tile_pyramid_get_memsize	base/tile-pyramid.c	/^tile_pyramid_get_memsize (const TilePyramid *pyramid)$/;"	f
tile_pyramid_get_tiles	base/tile-pyramid.c	/^tile_pyramid_get_tiles (TilePyramid *pyramid,$/;"	f
tile_pyramid_get_width	base/tile-pyramid.c	/^tile_pyramid_get_width (const TilePyramid *pyramid)$/;"	f
tile_pyramid_invalidate_area	base/tile-pyramid.c	/^tile_pyramid_invalidate_area (TilePyramid *pyramid,$/;"	f
tile_pyramid_new	base/tile-pyramid.c	/^tile_pyramid_new (GimpImageType  type,$/;"	f
tile_pyramid_set_validate_proc	base/tile-pyramid.c	/^tile_pyramid_set_validate_proc (TilePyramid      *pyramid,$/;"	f
tile_pyramid_validate_tile	base/tile-pyramid.c	/^tile_pyramid_validate_tile (TileManager *tm,$/;"	f	file:
tile_pyramid_write_quarter	base/tile-pyramid.c	/^tile_pyramid_write_quarter (Tile *dest,$/;"	f	file:
tile_ref_count	base/tile.c	/^static gint tile_ref_count    = 0;$/;"	v	file:
tile_release	base/tile.c	/^tile_release (Tile     *tile,$/;"	f
tile_set_rowhint	base/tile.c	/^tile_set_rowhint (Tile        *tile,$/;"	f
tile_share_count	base/tile.c	/^static gint tile_share_count  = 0;$/;"	v	file:
tile_size	base/tile.c	/^tile_size (Tile *tile)$/;"	f
tile_swap_command	base/tile-swap.c	/^tile_swap_command (Tile *tile,$/;"	f	file:
tile_swap_default_delete	base/tile-swap.c	/^tile_swap_default_delete (SwapFile *swap_file,$/;"	f	file:
tile_swap_default_in	base/tile-swap.c	/^tile_swap_default_in (SwapFile *swap_file,$/;"	f	file:
tile_swap_default_out	base/tile-swap.c	/^tile_swap_default_out (SwapFile *swap_file,$/;"	f	file:
tile_swap_delete	base/tile-swap.c	/^tile_swap_delete (Tile *tile)$/;"	f
tile_swap_exit	base/tile-swap.c	/^tile_swap_exit (void)$/;"	f
tile_swap_find_offset	base/tile-swap.c	/^tile_swap_find_offset (SwapFile *swap_file,$/;"	f	file:
tile_swap_gap_destroy	base/tile-swap.c	/^tile_swap_gap_destroy (SwapFileGap *gap)$/;"	f	file:
tile_swap_gap_new	base/tile-swap.c	/^tile_swap_gap_new (gint64 start,$/;"	f	file:
tile_swap_in	base/tile-swap.c	/^tile_swap_in (Tile *tile)$/;"	f
tile_swap_init	base/tile-swap.c	/^tile_swap_init (const gchar *path)$/;"	f
tile_swap_open	base/tile-swap.c	/^tile_swap_open (SwapFile *swap_file)$/;"	f	file:
tile_swap_out	base/tile-swap.c	/^tile_swap_out (Tile *tile)$/;"	f
tile_swap_print_gaps	base/tile-swap.c	/^tile_swap_print_gaps (SwapFile *swap_file)$/;"	f	file:
tile_swap_resize	base/tile-swap.c	/^tile_swap_resize (SwapFile *swap_file,$/;"	f	file:
tile_swap_test	base/tile-swap.c	/^tile_swap_test (void)$/;"	f
tile_w	base/pixel-surround.c	/^  gint         tile_w;     \/*  width of locked tile                 *\/$/;"	m	struct:_PixelSurround	file:
tile_x	base/pixel-surround.c	/^  gint         tile_x;     \/*  origin of locked tile                *\/$/;"	m	struct:_PixelSurround	file:
tile_y	base/pixel-surround.c	/^  gint         tile_y;     \/*  origin of locked tile                *\/$/;"	m	struct:_PixelSurround	file:
tiles	base/pixel-region.h	/^  TileManager *tiles;          \/*  pointer to tiles              *\/$/;"	m	struct:_PixelRegion
tiles	base/tile-manager-private.h	/^  Tile             **tiles;         \/*  the tiles for this level             *\/$/;"	m	struct:_TileManager
tiles	base/tile-pyramid.c	/^  TileManager   *tiles[PYRAMID_MAX_LEVELS];$/;"	m	struct:_TilePyramid	file:
tiles	core/gimpbuffer.h	/^  TileManager  *tiles;$/;"	m	struct:_GimpBuffer
tiles	core/gimpdrawable.h	/^  TileManager   *tiles;              \/* tiles for drawable data        *\/$/;"	m	struct:_GimpDrawable
tiles	core/gimpdrawablemodundo.h	/^  TileManager   *tiles;$/;"	m	struct:_GimpDrawableModUndo
tiles	core/gimpdrawableundo.h	/^  TileManager  *tiles;$/;"	m	struct:_GimpDrawableUndo
tiles	core/gimpmaskundo.h	/^  TileManager  *tiles;$/;"	m	struct:_GimpMaskUndo
tilt_angle	paint/gimpinkoptions.h	/^  gdouble           tilt_angle;$/;"	m	struct:_GimpInkOptions
tilt_sensitivity	paint/gimpinkoptions.h	/^  gdouble           tilt_sensitivity;$/;"	m	struct:_GimpInkOptions
time	core/gimpundo.h	/^  guint             time;           \/* time of undo step construction     *\/$/;"	m	struct:_GimpUndo
time	display/gimpdisplayshell-autoscroll.c	/^  guint32          time;$/;"	m	struct:__anon189	file:
time_smoother_add	paint/gimpink.c	/^time_smoother_add (GimpInk *ink,$/;"	f	file:
time_smoother_init	paint/gimpink.c	/^time_smoother_init (GimpInk *ink,$/;"	f	file:
time_smoother_result	paint/gimpink.c	/^time_smoother_result (GimpInk *ink)$/;"	f	file:
timeout	display/gimpdisplayshell-selection.c	/^  guint             timeout;          \/*  timer for successive draws        *\/$/;"	m	struct:_Selection	file:
timeout_id	display/gimpdisplayshell-autoscroll.c	/^  guint            timeout_id;$/;"	m	struct:__anon189	file:
timeout_id	paint/gimpairbrush.h	/^  guint             timeout_id;$/;"	m	struct:_GimpAirbrush
timeout_id	widgets/gimpview-popup.c	/^  guint         timeout_id;$/;"	m	struct:_GimpViewPopup	file:
timer	dialogs/about-dialog.c	/^  guint         timer;$/;"	m	struct:__anon168	file:
timer	gui/splash.c	/^  GTimer         *timer;$/;"	m	struct:__anon201	file:
timer_report	composite/gimp-composite-regression.c	419;"	d	file:
timersub	composite/gimp-composite-regression.c	35;"	d	file:
timestamp	file/gimprecentitem.c	/^  time_t    timestamp;$/;"	m	struct:_GimpRecentItem	file:
tips	dialogs/tips-dialog.c	/^static GList     *tips          = NULL;$/;"	v	file:
tips	dialogs/tips-parser.c	/^  GList                 *tips;$/;"	m	struct:__anon176	file:
tips_dialog	dialogs/tips-dialog.c	/^static GtkWidget *tips_dialog   = NULL;$/;"	v	file:
tips_dialog_create	dialogs/tips-dialog.c	/^tips_dialog_create (Gimp *gimp)$/;"	f
tips_dialog_destroy	dialogs/tips-dialog.c	/^tips_dialog_destroy (GtkWidget *widget,$/;"	f	file:
tips_dialog_response	dialogs/tips-dialog.c	/^tips_dialog_response (GtkWidget *dialog,$/;"	f	file:
tips_parser_characters	dialogs/tips-parser.c	/^tips_parser_characters (GMarkupParseContext *context,$/;"	f	file:
tips_parser_end_element	dialogs/tips-parser.c	/^tips_parser_end_element (GMarkupParseContext *context,$/;"	f	file:
tips_parser_end_markup	dialogs/tips-parser.c	/^tips_parser_end_markup (TipsParser  *parser,$/;"	f	file:
tips_parser_end_unknown	dialogs/tips-parser.c	/^tips_parser_end_unknown (TipsParser *parser)$/;"	f	file:
tips_parser_parse_locale	dialogs/tips-parser.c	/^tips_parser_parse_locale (TipsParser   *parser,$/;"	f	file:
tips_parser_set_by_locale	dialogs/tips-parser.c	/^tips_parser_set_by_locale (TipsParser  *parser,$/;"	f	file:
tips_parser_start_element	dialogs/tips-parser.c	/^tips_parser_start_element (GMarkupParseContext *context,$/;"	f	file:
tips_parser_start_markup	dialogs/tips-parser.c	/^tips_parser_start_markup (TipsParser  *parser,$/;"	f	file:
tips_parser_start_unknown	dialogs/tips-parser.c	/^tips_parser_start_unknown (TipsParser *parser)$/;"	f	file:
tips_set_labels	dialogs/tips-dialog.c	/^tips_set_labels (GimpTip *tip)$/;"	f	file:
title	widgets/gimpdataeditor.h	/^  const gchar *title;$/;"	m	struct:_GimpDataEditorClass
title_changed	widgets/gimpdocked.h	/^  void            (* title_changed)       (GimpDocked   *docked);$/;"	m	struct:_GimpDockedInterface
title_idle_id	display/gimpdisplayshell.h	/^  guint             title_idle_id;     \/*  title update idle ID               *\/$/;"	m	struct:_GimpDisplayShell
title_layout	widgets/gimpdockable.h	/^  PangoLayout  *title_layout;$/;"	m	struct:_GimpDockable
title_window	widgets/gimpdockable.h	/^  GdkWindow    *title_window;$/;"	m	struct:_GimpDockable
tlink	base/tile-private.h	/^  TileLink *tlink;$/;"	m	struct:_Tile
tm	base/tile-private.h	/^  TileManager *tm;       \/* A pointer to the tile manager for this tile.$/;"	m	struct:_TileLink
to_selection_button	tools/gimpvectoroptions.h	/^  GtkWidget       *to_selection_button;$/;"	m	struct:_GimpVectorOptions
to_vectors_button	tools/gimptextoptions.h	/^  GtkWidget             *to_vectors_button;$/;"	m	struct:_GimpTextOptions
toggle_cells	widgets/gimpcontainertreeview.h	/^  GList             *toggle_cells;$/;"	m	struct:_GimpContainerTreeView
toggle_cursor	tools/gimptoolcontrol.h	/^  GimpCursorType     toggle_cursor;$/;"	m	struct:_GimpToolControl
toggle_cursor_modifier	tools/gimptoolcontrol.h	/^  GimpCursorModifier toggle_cursor_modifier;$/;"	m	struct:_GimpToolControl
toggle_tool_cursor	tools/gimptoolcontrol.h	/^  GimpToolCursorType toggle_tool_cursor;$/;"	m	struct:_GimpToolControl
toggled	tools/gimptoolcontrol.h	/^  gboolean           toggled;$/;"	m	struct:_GimpToolControl
tool	widgets/gimpdevicestatus.c	/^  GtkWidget      *tool;$/;"	m	struct:_GimpDeviceStatusEntry	file:
tool_changed	core/gimpcontext.h	/^  void (* tool_changed)       (GimpContext          *context,$/;"	m	struct:_GimpContextClass
tool_columns	widgets/gimptoolbox.h	/^  gint           tool_columns;$/;"	m	struct:_GimpToolbox
tool_cursor	display/gimpdisplayshell.h	/^  GimpToolCursorType  tool_cursor;     \/*  Current Tool cursor                *\/$/;"	m	struct:_GimpDisplayShell
tool_cursor	tools/gimptoolcontrol.h	/^  GimpToolCursorType tool_cursor;$/;"	m	struct:_GimpToolControl
tool_info	core/gimpcontext.h	/^  GimpToolInfo         *tool_info;$/;"	m	struct:_GimpContext
tool_info	core/gimptooloptions.h	/^  GimpToolInfo *tool_info;$/;"	m	struct:_GimpToolOptions
tool_info	core/gimptoolpresets.h	/^  GimpToolInfo *tool_info;$/;"	m	struct:_GimpToolPresets
tool_info	tools/gimptool.h	/^  GimpToolInfo    *tool_info;$/;"	m	struct:_GimpTool
tool_info_list	core/gimp.h	/^  GimpContainer          *tool_info_list;$/;"	m	struct:_Gimp
tool_manager_active_modifier_state_active	tools/tool_manager.c	/^tool_manager_active_modifier_state_active (Gimp            *gimp,$/;"	f
tool_manager_button_press_active	tools/tool_manager.c	/^tool_manager_button_press_active (Gimp            *gimp,$/;"	f
tool_manager_button_release_active	tools/tool_manager.c	/^tool_manager_button_release_active (Gimp            *gimp,$/;"	f
tool_manager_control_active	tools/tool_manager.c	/^tool_manager_control_active (Gimp           *gimp,$/;"	f
tool_manager_cursor_update_active	tools/tool_manager.c	/^tool_manager_cursor_update_active (Gimp            *gimp,$/;"	f
tool_manager_exit	tools/tool_manager.c	/^tool_manager_exit (Gimp *gimp)$/;"	f
tool_manager_focus_display_active	tools/tool_manager.c	/^tool_manager_focus_display_active (Gimp        *gimp,$/;"	f
tool_manager_get	tools/tool_manager.c	/^tool_manager_get (Gimp *gimp)$/;"	f	file:
tool_manager_get_active	tools/tool_manager.c	/^tool_manager_get_active (Gimp *gimp)$/;"	f
tool_manager_image_clean_dirty	tools/tool_manager.c	/^tool_manager_image_clean_dirty (GimpImage       *image,$/;"	f	file:
tool_manager_init	tools/tool_manager.c	/^tool_manager_init (Gimp *gimp)$/;"	f
tool_manager_initialize_active	tools/tool_manager.c	/^tool_manager_initialize_active (Gimp        *gimp,$/;"	f
tool_manager_key_press_active	tools/tool_manager.c	/^tool_manager_key_press_active (Gimp        *gimp,$/;"	f
tool_manager_modifier_state_active	tools/tool_manager.c	/^tool_manager_modifier_state_active (Gimp            *gimp,$/;"	f
tool_manager_motion_active	tools/tool_manager.c	/^tool_manager_motion_active (Gimp            *gimp,$/;"	f
tool_manager_oper_update_active	tools/tool_manager.c	/^tool_manager_oper_update_active (Gimp            *gimp,$/;"	f
tool_manager_pop_tool	tools/tool_manager.c	/^tool_manager_pop_tool (Gimp *gimp)$/;"	f
tool_manager_push_tool	tools/tool_manager.c	/^tool_manager_push_tool (Gimp     *gimp,$/;"	f
tool_manager_quark	tools/tool_manager.c	/^static GQuark tool_manager_quark = 0;$/;"	v	file:
tool_manager_select_tool	tools/tool_manager.c	/^tool_manager_select_tool (Gimp     *gimp,$/;"	f
tool_manager_set	tools/tool_manager.c	/^tool_manager_set (Gimp            *gimp,$/;"	f	file:
tool_manager_tool_changed	tools/tool_manager.c	/^tool_manager_tool_changed (GimpContext  *user_context,$/;"	f	file:
tool_name	core/gimpcontext.h	/^  gchar                *tool_name;$/;"	m	struct:_GimpContext
tool_options	core/gimptoolinfo.h	/^  GimpToolOptions     *tool_options;$/;"	m	struct:_GimpToolInfo
tool_options	tools/gimptextoptions.h	/^  GimpToolOptions        tool_options;$/;"	m	struct:_GimpTextOptions
tool_options_actions	actions/tool-options-actions.c	/^static const GimpActionEntry tool_options_actions[] =$/;"	v	file:
tool_options_actions_setup	actions/tool-options-actions.c	/^tool_options_actions_setup (GimpActionGroup *group)$/;"	f
tool_options_actions_update	actions/tool-options-actions.c	/^tool_options_actions_update (GimpActionGroup *group,$/;"	f
tool_options_actions_update_presets	actions/tool-options-actions.c	/^tool_options_actions_update_presets (GimpActionGroup *group,$/;"	f	file:
tool_options_delete_saved_cmd_callback	actions/tool-options-commands.c	/^tool_options_delete_saved_cmd_callback (GtkAction *action,$/;"	f
tool_options_deleted	tools/gimp-tools.c	/^static gboolean   tool_options_deleted = FALSE;$/;"	v	file:
tool_options_menu_setup	menus/tool-options-menu.c	/^tool_options_menu_setup (GimpUIManager *manager,$/;"	f
tool_options_menu_update	menus/tool-options-menu.c	/^tool_options_menu_update (GimpUIManager *manager,$/;"	f	file:
tool_options_menu_update_after	menus/tool-options-menu.c	/^tool_options_menu_update_after (GimpUIManager *manager,$/;"	f	file:
tool_options_menu_update_presets	menus/tool-options-menu.c	/^tool_options_menu_update_presets (GimpUIManager *manager,$/;"	f	file:
tool_options_rename_callback	actions/tool-options-commands.c	/^tool_options_rename_callback (GtkWidget   *widget,$/;"	f	file:
tool_options_rename_saved_cmd_callback	actions/tool-options-commands.c	/^tool_options_rename_saved_cmd_callback (GtkAction *action,$/;"	f
tool_options_reset_all_cmd_callback	actions/tool-options-commands.c	/^tool_options_reset_all_cmd_callback (GtkAction *action,$/;"	f
tool_options_reset_cmd_callback	actions/tool-options-commands.c	/^tool_options_reset_cmd_callback (GtkAction *action,$/;"	f
tool_options_restore_from_cmd_callback	actions/tool-options-commands.c	/^tool_options_restore_from_cmd_callback (GtkAction *action,$/;"	f
tool_options_save_callback	actions/tool-options-commands.c	/^tool_options_save_callback (GtkWidget   *widget,$/;"	f	file:
tool_options_save_new_cmd_callback	actions/tool-options-commands.c	/^tool_options_save_new_cmd_callback (GtkAction *action,$/;"	f
tool_options_save_to_cmd_callback	actions/tool-options-commands.c	/^tool_options_save_to_cmd_callback (GtkAction *action,$/;"	f
tool_options_type	core/gimptoolinfo.h	/^  GType                tool_options_type;$/;"	m	struct:_GimpToolInfo
tool_rows	widgets/gimptoolbox.h	/^  gint           tool_rows;$/;"	m	struct:_GimpToolbox
tool_stack	tools/tool_manager.c	/^  GSList   *tool_stack;$/;"	m	struct:_GimpToolManager	file:
tool_type	core/gimptoolinfo.h	/^  GType                tool_type;$/;"	m	struct:_GimpToolInfo
tool_wbox	widgets/gimptoolbox.h	/^  GtkWidget     *tool_wbox;$/;"	m	struct:_GimpToolbox
toolbox_area_notify	widgets/gimptoolbox.c	/^toolbox_area_notify (GimpGuiConfig *config,$/;"	f	file:
toolbox_check_device	widgets/gimptoolbox.c	/^toolbox_check_device (GtkWidget *widget,$/;"	f	file:
toolbox_color_area	config/gimpguiconfig.h	/^  gboolean             toolbox_color_area;$/;"	m	struct:_GimpGuiConfig
toolbox_create_color_area	widgets/gimptoolbox.c	/^toolbox_create_color_area (GimpToolbox *toolbox,$/;"	f	file:
toolbox_create_foo_area	widgets/gimptoolbox.c	/^toolbox_create_foo_area (GimpToolbox *toolbox,$/;"	f	file:
toolbox_create_image_area	widgets/gimptoolbox.c	/^toolbox_create_image_area (GimpToolbox *toolbox,$/;"	f	file:
toolbox_create_tools	widgets/gimptoolbox.c	/^toolbox_create_tools (GimpToolbox *toolbox,$/;"	f	file:
toolbox_foo_area	config/gimpguiconfig.h	/^  gboolean             toolbox_foo_area;$/;"	m	struct:_GimpGuiConfig
toolbox_image_area	config/gimpguiconfig.h	/^  gboolean             toolbox_image_area;$/;"	m	struct:_GimpGuiConfig
toolbox_menu_setup	menus/toolbox-menu.c	/^toolbox_menu_setup (GimpUIManager *manager,$/;"	f
toolbox_paste_received	widgets/gimptoolbox.c	/^toolbox_paste_received (GtkClipboard *clipboard,$/;"	f	file:
toolbox_separator_collapse	widgets/gimptoolbox.c	/^toolbox_separator_collapse (GimpToolbox *toolbox)$/;"	f	file:
toolbox_separator_expand	widgets/gimptoolbox.c	/^toolbox_separator_expand (GimpToolbox *toolbox)$/;"	f	file:
toolbox_tool_button_press	widgets/gimptoolbox.c	/^toolbox_tool_button_press (GtkWidget      *widget,$/;"	f	file:
toolbox_tool_button_toggled	widgets/gimptoolbox.c	/^toolbox_tool_button_toggled (GtkWidget    *widget,$/;"	f	file:
toolbox_tool_changed	widgets/gimptoolbox.c	/^toolbox_tool_changed (GimpContext  *context,$/;"	f	file:
toolbox_tool_reorder	widgets/gimptoolbox.c	/^toolbox_tool_reorder (GimpContainer *container,$/;"	f	file:
toolbox_tool_visible_notify	widgets/gimptoolbox.c	/^toolbox_tool_visible_notify (GimpToolInfo *tool_info,$/;"	f	file:
toolbox_window_hint	config/gimpguiconfig.h	/^  GimpWindowHint       toolbox_window_hint;$/;"	m	struct:_GimpGuiConfig
tools_actions	actions/tools-actions.c	/^static const GimpActionEntry tools_actions[] =$/;"	v	file:
tools_actions_setup	actions/tools-actions.c	/^tools_actions_setup (GimpActionGroup *group)$/;"	f
tools_actions_update	actions/tools-actions.c	/^tools_actions_update (GimpActionGroup *group,$/;"	f
tools_activate_enum_action	actions/tools-commands.c	/^tools_activate_enum_action (const gchar *action_desc,$/;"	f	file:
tools_alternative_actions	actions/tools-actions.c	/^static const GimpStringActionEntry tools_alternative_actions[] =$/;"	v	file:
tools_color_average_radius_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_color_average_radius_actions[] =$/;"	v	file:
tools_color_average_radius_cmd_callback	actions/tools-commands.c	/^tools_color_average_radius_cmd_callback (GtkAction *action,$/;"	f
tools_fg_select_brush_size_cmd_callback	actions/tools-commands.c	/^tools_fg_select_brush_size_cmd_callback (GtkAction *action,$/;"	f
tools_foreground_select_brush_size_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_foreground_select_brush_size_actions[] =$/;"	v	file:
tools_ink_blob_angle_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_ink_blob_angle_actions[] =$/;"	v	file:
tools_ink_blob_angle_cmd_callback	actions/tools-commands.c	/^tools_ink_blob_angle_cmd_callback (GtkAction *action,$/;"	f
tools_ink_blob_aspect_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_ink_blob_aspect_actions[] =$/;"	v	file:
tools_ink_blob_aspect_cmd_callback	actions/tools-commands.c	/^tools_ink_blob_aspect_cmd_callback (GtkAction *action,$/;"	f
tools_ink_blob_size_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_ink_blob_size_actions[] =$/;"	v	file:
tools_ink_blob_size_cmd_callback	actions/tools-commands.c	/^tools_ink_blob_size_cmd_callback (GtkAction *action,$/;"	f
tools_lower_cmd_callback	actions/tools-commands.c	/^tools_lower_cmd_callback (GtkAction *action,$/;"	f
tools_lower_to_bottom_cmd_callback	actions/tools-commands.c	/^tools_lower_to_bottom_cmd_callback (GtkAction *action,$/;"	f
tools_object_1_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_object_1_actions[] =$/;"	v	file:
tools_object_1_cmd_callback	actions/tools-commands.c	/^tools_object_1_cmd_callback (GtkAction *action,$/;"	f
tools_object_2_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_object_2_actions[] =$/;"	v	file:
tools_object_2_cmd_callback	actions/tools-commands.c	/^tools_object_2_cmd_callback (GtkAction *action,$/;"	f
tools_paint_brush_scale_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_paint_brush_scale_actions[] =$/;"	v	file:
tools_paint_brush_scale_cmd_callback	actions/tools-commands.c	/^tools_paint_brush_scale_cmd_callback (GtkAction *action,$/;"	f
tools_raise_cmd_callback	actions/tools-commands.c	/^tools_raise_cmd_callback (GtkAction *action,$/;"	f
tools_raise_to_top_cmd_callback	actions/tools-commands.c	/^tools_raise_to_top_cmd_callback (GtkAction *action,$/;"	f
tools_reset_cmd_callback	actions/tools-commands.c	/^tools_reset_cmd_callback (GtkAction *action,$/;"	f
tools_select_cmd_callback	actions/tools-commands.c	/^tools_select_cmd_callback (GtkAction   *action,$/;"	f
tools_toggle_actions	actions/tools-actions.c	/^static const GimpToggleActionEntry tools_toggle_actions[] =$/;"	v	file:
tools_toggle_visibility_cmd_callback	actions/tools-commands.c	/^tools_toggle_visibility_cmd_callback (GtkAction *action,$/;"	f
tools_value_1_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_value_1_actions[] =$/;"	v	file:
tools_value_1_cmd_callback	actions/tools-commands.c	/^tools_value_1_cmd_callback (GtkAction *action,$/;"	f
tools_value_2_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_value_2_actions[] =$/;"	v	file:
tools_value_2_cmd_callback	actions/tools-commands.c	/^tools_value_2_cmd_callback (GtkAction *action,$/;"	f
tools_value_3_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_value_3_actions[] =$/;"	v	file:
tools_value_3_cmd_callback	actions/tools-commands.c	/^tools_value_3_cmd_callback (GtkAction *action,$/;"	f
tools_value_4_actions	actions/tools-actions.c	/^static const GimpEnumActionEntry tools_value_4_actions[] =$/;"	v	file:
tools_value_4_cmd_callback	actions/tools-commands.c	/^tools_value_4_cmd_callback (GtkAction *action,$/;"	f
tooltip	widgets/gimpactiongroup.h	/^  const gchar         *tooltip;$/;"	m	struct:_GimpPlugInActionEntry
tooltip	widgets/gimpactiongroup.h	/^  const gchar *tooltip;$/;"	m	struct:_GimpActionEntry
tooltip	widgets/gimpactiongroup.h	/^  const gchar *tooltip;$/;"	m	struct:_GimpEnumActionEntry
tooltip	widgets/gimpactiongroup.h	/^  const gchar *tooltip;$/;"	m	struct:_GimpRadioActionEntry
tooltip	widgets/gimpactiongroup.h	/^  const gchar *tooltip;$/;"	m	struct:_GimpStringActionEntry
tooltip	widgets/gimpactiongroup.h	/^  const gchar *tooltip;$/;"	m	struct:_GimpToggleActionEntry
top_and_bottom_handle_w	tools/gimprectangletool.c	/^  gint                    top_and_bottom_handle_w;$/;"	m	struct:_GimpRectangleToolPrivate	file:
top_level	base/tile-pyramid.c	/^  gint           top_level;$/;"	m	struct:_TilePyramid	file:
toplevel_entries	dialogs/dialogs.c	/^static const GimpDialogFactoryEntry toplevel_entries[] =$/;"	v	file:
toplevel_entry	widgets/gimpsessioninfo.h	/^  GimpDialogFactoryEntry *toplevel_entry;$/;"	m	struct:_GimpSessionInfo
toselection_button	widgets/gimpchanneltreeview.h	/^  GtkWidget            *toselection_button;$/;"	m	struct:_GimpChannelTreeView
toselection_button	widgets/gimpvectorstreeview.h	/^  GtkWidget        *toselection_button;$/;"	m	struct:_GimpVectorsTreeView
tovectors_button	widgets/gimpvectorstreeview.h	/^  GtkWidget        *tovectors_button;$/;"	m	struct:_GimpVectorsTreeView
trans_info	tools/gimpperspectiveclonetool.h	/^  TransInfo       trans_info;     \/*  transformation info              *\/$/;"	m	struct:_GimpPerspectiveCloneTool
trans_info	tools/gimptransformtool.h	/^  TransInfo       trans_info;      \/*  transformation info               *\/$/;"	m	struct:_GimpTransformTool
trans_info	tools/gimptransformtoolundo.h	/^  TransInfo          trans_info;$/;"	m	struct:_GimpTransformToolUndo
transfer_initialized	base/color-balance.c	/^static gboolean transfer_initialized = FALSE;$/;"	v	file:
transfer_mode	tools/gimpcolorbalancetool.h	/^  GimpTransferMode  transfer_mode;$/;"	m	struct:_GimpColorBalanceTool
transform	core/gimpitem.h	/^  void       (* transform)    (GimpItem               *item,$/;"	m	struct:_GimpItemClass
transform	paint/gimpperspectiveclone.h	/^  GimpMatrix3  transform;$/;"	m	struct:_GimpPerspectiveClone
transform	tools/gimpdrawtool.h	/^  GimpMatrix3  *transform;    \/*  Transformation matrix of the vectors   *\/$/;"	m	struct:_GimpDrawTool
transform	tools/gimpperspectiveclonetool.h	/^  GimpMatrix3     transform;      \/*  transformation matrix            *\/$/;"	m	struct:_GimpPerspectiveCloneTool
transform	tools/gimptransformtool.h	/^  GimpMatrix3     transform;       \/*  transformation matrix             *\/$/;"	m	struct:_GimpTransformTool
transform	tools/gimptransformtool.h	/^  TileManager * (* transform)     (GimpTransformTool *tool,$/;"	m	struct:_GimpTransformToolClass
transform	vectors/gimpstroke.h	/^  void          (* transform)            (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
transform	vectors/gimpvectors-import.c	/^  GimpMatrix3  *transform;$/;"	m	struct:_SvgHandler	file:
transform_2d_invoker	pdb/transform_tools_cmds.c	/^transform_2d_invoker (GimpProcedure     *procedure,$/;"	f	file:
transform_desc	core/gimpitem.h	/^  const gchar *transform_desc;$/;"	m	struct:_GimpItemClass
transform_inv	paint/gimpperspectiveclone.h	/^  GimpMatrix3  transform_inv;$/;"	m	struct:_GimpPerspectiveClone
transform_tool	tools/gimptransformtoolundo.h	/^  GimpTransformTool *transform_tool;$/;"	m	struct:_GimpTransformToolUndo
transformation	text/gimptext.h	/^  GimpMatrix2            transformation;$/;"	m	struct:_GimpText
transient_docks	config/gimpguiconfig.h	/^  gboolean             transient_docks;$/;"	m	struct:_GimpGuiConfig
translate	core/gimpitem.h	/^  void       (* translate)    (GimpItem               *item,$/;"	m	struct:_GimpItemClass
translate	vectors/gimpstroke.h	/^  void          (* translate)            (GimpStroke            *stroke,$/;"	m	struct:_GimpStrokeClass
translate_desc	core/gimpitem.h	/^  const gchar *translate_desc;$/;"	m	struct:_GimpItemClass
transparency_quickskip_possible	paint-funcs/paint-funcs.c	/^  gboolean              transparency_quickskip_possible;$/;"	m	struct:combine_regions_struct	file:
transparency_size	config/gimpdisplayconfig.h	/^  GimpCheckSize       transparency_size;$/;"	m	struct:_GimpDisplayConfig
transparency_type	config/gimpdisplayconfig.h	/^  GimpCheckType       transparency_type;$/;"	m	struct:_GimpDisplayConfig
trig_initialized	paint/gimpink-blob.c	/^static gboolean trig_initialized = FALSE;$/;"	v	file:
trig_table	paint/gimpink-blob.c	/^static gint     trig_table[TABLE_SIZE];$/;"	v	file:
trust_dirty_flag	config/gimpguiconfig.h	/^  gboolean             trust_dirty_flag;$/;"	m	struct:_GimpGuiConfig
ts_buffer	paint/gimpink.h	/^  guint32        ts_buffer[TIME_SMOOTHER_BUFFER];$/;"	m	struct:_GimpInk
ts_buffer	paint/gimpinkundo.h	/^  guint32            ts_buffer[TIME_SMOOTHER_BUFFER];$/;"	m	struct:_GimpInkUndo
ts_index	paint/gimpink.h	/^  gint           ts_index;$/;"	m	struct:_GimpInk
ts_index	paint/gimpinkundo.h	/^  gint               ts_index;$/;"	m	struct:_GimpInkUndo
tv_to_secs	composite/gimp-composite-regression.c	417;"	d	file:
tx1	tools/gimpperspectiveclonetool.h	/^  gdouble         tx1, ty1;       \/*  transformed coords               *\/$/;"	m	struct:_GimpPerspectiveCloneTool
tx1	tools/gimptransformtool.h	/^  gdouble         tx1, ty1;        \/*  transformed coords                *\/$/;"	m	struct:_GimpTransformTool
tx2	tools/gimpperspectiveclonetool.h	/^  gdouble         tx2, ty2;$/;"	m	struct:_GimpPerspectiveCloneTool
tx2	tools/gimptransformtool.h	/^  gdouble         tx2, ty2;$/;"	m	struct:_GimpTransformTool
tx3	tools/gimpperspectiveclonetool.h	/^  gdouble         tx3, ty3;$/;"	m	struct:_GimpPerspectiveCloneTool
tx3	tools/gimptransformtool.h	/^  gdouble         tx3, ty3;$/;"	m	struct:_GimpTransformTool
tx4	tools/gimpperspectiveclonetool.h	/^  gdouble         tx4, ty4;$/;"	m	struct:_GimpPerspectiveCloneTool
tx4	tools/gimptransformtool.h	/^  gdouble         tx4, ty4;$/;"	m	struct:_GimpTransformTool
ty1	tools/gimpperspectiveclonetool.h	/^  gdouble         tx1, ty1;       \/*  transformed coords               *\/$/;"	m	struct:_GimpPerspectiveCloneTool
ty1	tools/gimptransformtool.h	/^  gdouble         tx1, ty1;        \/*  transformed coords                *\/$/;"	m	struct:_GimpTransformTool
ty2	tools/gimpperspectiveclonetool.h	/^  gdouble         tx2, ty2;$/;"	m	struct:_GimpPerspectiveCloneTool
ty2	tools/gimptransformtool.h	/^  gdouble         tx2, ty2;$/;"	m	struct:_GimpTransformTool
ty3	tools/gimpperspectiveclonetool.h	/^  gdouble         tx3, ty3;$/;"	m	struct:_GimpPerspectiveCloneTool
ty3	tools/gimptransformtool.h	/^  gdouble         tx3, ty3;$/;"	m	struct:_GimpTransformTool
ty4	tools/gimpperspectiveclonetool.h	/^  gdouble         tx4, ty4;$/;"	m	struct:_GimpPerspectiveCloneTool
ty4	tools/gimptransformtool.h	/^  gdouble         tx4, ty4;$/;"	m	struct:_GimpTransformTool
type	base/tile-pyramid.c	/^  GimpImageType  type;$/;"	m	struct:_TilePyramid	file:
type	core/gimpbrush-load.c	/^  gint16 type;$/;"	m	struct:_AbrBrushHeader	file:
type	core/gimpdrawable.h	/^  GimpImageType  type;               \/* type of drawable               *\/$/;"	m	struct:_GimpDrawable
type	core/gimpdrawablemodundo.h	/^  GimpImageType  type;$/;"	m	struct:_GimpDrawableModUndo
type	core/gimpgradient.h	/^  GimpGradientSegmentType  type;          \/*  Segment's blending function  *\/$/;"	m	struct:_GimpGradientSegment
type	core/gimpimage-contiguous-region.c	/^  GimpImageType        type;$/;"	m	struct:__anon100	file:
type	paint-funcs/paint-funcs.c	/^  CombinationMode       type;$/;"	m	struct:combine_regions_struct	file:
type	paint-funcs/paint-funcs.c	/^  InitialMode           type;$/;"	m	struct:initial_regions_struct	file:
type	paint/gimpconvolveoptions.h	/^  GimpConvolveType  type;$/;"	m	struct:_GimpConvolveOptions
type	paint/gimpdodgeburnoptions.h	/^  GimpDodgeBurnType  type;$/;"	m	struct:_GimpDodgeBurnOptions
type	tools/gimptransformoptions.h	/^  GimpTransformType         type;$/;"	m	struct:_GimpTransformOptions
type	tools/gimptransformtool.h	/^  GimpTransformType       type;$/;"	m	struct:_GimpTransformTool
type	vectors/gimpanchor.h	/^  GimpAnchorType    type;   \/* Interpretation dependant on GimpStroke type *\/$/;"	m	struct:_GimpAnchor
type	vectors/gimpvectors-compat.h	/^  guint32 type;$/;"	m	struct:_GimpVectorsCompatPoint
type	widgets/gimpblobeditor.h	/^  GimpInkBlobType      type;$/;"	m	struct:_GimpBlobEditor
ui_manager	widgets/gimpcontrollers.c	/^  GimpUIManager  *ui_manager;$/;"	m	struct:_GimpControllerManager	file:
ui_manager	widgets/gimpdockbook.h	/^  GimpUIManager *ui_manager;$/;"	m	struct:_GimpDockbook
ui_manager	widgets/gimpeditor.h	/^  GimpUIManager   *ui_manager;$/;"	m	struct:_GimpEditor
ui_manager	widgets/gimpimagedock.h	/^  GimpUIManager *ui_manager;$/;"	m	struct:_GimpImageDock
ui_manager	widgets/gimptexteditor.h	/^  GimpUIManager     *ui_manager;$/;"	m	struct:_GimpTextEditor
ui_manager_name	widgets/gimpimagedock.h	/^  const gchar   *ui_manager_name;$/;"	m	struct:_GimpImageDockClass
ui_path	widgets/gimpeditor.h	/^  gchar           *ui_path;$/;"	m	struct:_GimpEditor
ui_path	widgets/gimpuimanager.h	/^  gchar                  *ui_path;$/;"	m	struct:_GimpUIManagerUIEntry
uint128	composite/gimp-composite-x86.h	/^typedef struct { uint64 __uint64[2]; } uint128;$/;"	t	typeref:struct:__anon38
uint16	composite/gimp-composite-x86.h	/^typedef unsigned short uint16;$/;"	t
uint32	composite/gimp-composite-x86.h	/^typedef unsigned long  uint32;$/;"	t
uint64	composite/gimp-composite-x86.h	/^typedef unsigned long long uint64;$/;"	t
uint8	composite/gimp-composite-x86.h	/^typedef unsigned char  uint8;$/;"	t
undo	core/gimpundo.c	/^  GimpUndo    *undo;$/;"	m	struct:_GimpUndoIdle	file:
undo	tools/gimprectangleselecttool.h	/^  GimpUndo          *undo;$/;"	m	struct:_GimpRectSelectTool
undo_button	widgets/gimpundoeditor.h	/^  GtkWidget       *undo_button;$/;"	m	struct:_GimpUndoEditor
undo_desc	core/gimpimagemap.c	/^  gchar                 *undo_desc;$/;"	m	struct:_GimpImageMap	file:
undo_desc	paint/gimppaintcore.h	/^  gchar       *undo_desc;        \/*  undo description                    *\/$/;"	m	struct:_GimpPaintCore
undo_desc	tools/gimpregionselecttool.h	/^  const gchar * undo_desc;$/;"	m	struct:_GimpRegionSelectToolClass
undo_desc	tools/gimptransformtool.h	/^  const gchar    *undo_desc;$/;"	m	struct:_GimpTransformTool
undo_event	core/gimpimage.h	/^  void (* undo_event)                   (GimpImage            *image,$/;"	m	struct:_GimpImageClass
undo_freeze_count	core/gimpimage.h	/^  gint               undo_freeze_count;     \/*  counts the _freeze's         *\/$/;"	m	struct:_GimpImage
undo_group_count	plug-in/gimpplugin-cleanup.c	/^  gint       undo_group_count;$/;"	m	struct:_GimpPlugInCleanupImage	file:
undo_label	widgets/gimpimagepropview.h	/^  GtkWidget *undo_label;$/;"	m	struct:_GimpImagePropView
undo_motion	tools/gimpvectortool.h	/^  gboolean              undo_motion;    \/* we need a motion to have an undo  *\/$/;"	m	struct:_GimpVectorTool
undo_offset_x	core/gimpimagemap.c	/^  gint                   undo_offset_x;$/;"	m	struct:_GimpImageMap	file:
undo_offset_y	core/gimpimagemap.c	/^  gint                   undo_offset_y;$/;"	m	struct:_GimpImageMap	file:
undo_pop_cantundo	core/gimpimage-undo-push.c	/^undo_pop_cantundo (GimpUndo            *undo,$/;"	f	file:
undo_preview_size	config/gimpcoreconfig.h	/^  GimpViewSize            undo_preview_size;$/;"	m	struct:_GimpCoreConfig
undo_signals	core/gimpundo.c	/^static guint undo_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
undo_size	config/gimpcoreconfig.h	/^  guint64                 undo_size;$/;"	m	struct:_GimpCoreConfig
undo_stack	core/gimpimage.h	/^  GimpUndoStack     *undo_stack;            \/*  stack for undo operations    *\/$/;"	m	struct:_GimpImage
undo_tiles	core/gimpimagemap.c	/^  TileManager           *undo_tiles;$/;"	m	struct:_GimpImageMap	file:
undo_tiles	paint/gimppaintcore.h	/^  TileManager *undo_tiles;       \/*  tiles which have been modified      *\/$/;"	m	struct:_GimpPaintCore
undo_type	core/gimpundo.h	/^  GimpUndoType      undo_type;      \/* undo type                          *\/$/;"	m	struct:_GimpUndo
undos	core/gimpundostack.h	/^  GimpContainer *undos;$/;"	m	struct:_GimpUndoStack
unescape_character	file/file-utils.c	/^unescape_character (const gchar *scanner)$/;"	f	file:
unescape_character	widgets/gimpselectiondata.c	/^unescape_character (const char *scanner)$/;"	f	file:
ungrab	core/gimp-gui.h	/^  void           (* ungrab)              (Gimp                *gimp);$/;"	m	struct:_GimpGui
unique_names	core/gimplist.h	/^  gboolean       unique_names;$/;"	m	struct:_GimpList
unit	core/gimpstrokeoptions.h	/^  GimpUnit         unit;$/;"	m	struct:_GimpStrokeOptions
unit	core/gimptemplate.h	/^  GimpUnit           unit;$/;"	m	struct:_GimpTemplate
unit	dialogs/image-scale-dialog.c	/^  GimpUnit               unit;$/;"	m	struct:__anon167	file:
unit	dialogs/scale-dialog.c	/^  GimpUnit               unit;$/;"	m	struct:__anon173	file:
unit	display/gimpdisplayshell.h	/^  GimpUnit          unit;$/;"	m	struct:_GimpDisplayShell
unit	text/gimptext.h	/^  GimpUnit               unit;$/;"	m	struct:_GimpText
unit	tools/gimprectangleoptions.h	/^  GimpUnit                    unit;$/;"	m	struct:_GimpRectangleOptionsPrivate
unit	tools/gimptextoptions.h	/^  GimpUnit               unit;$/;"	m	struct:_GimpTextOptions
unit	widgets/gimpsizebox.h	/^  GimpUnit      unit;$/;"	m	struct:_GimpSizeBox
unit_changed	core/gimpimage.h	/^  void (* unit_changed)                 (GimpImage            *image);$/;"	m	struct:_GimpImageClass
unit_changed	core/gimpundo.h	/^  gboolean unit_changed;$/;"	m	struct:_GimpUndoAccumulator
unit_combo	display/gimpstatusbar.h	/^  GtkWidget        *unit_combo;$/;"	m	struct:_GimpStatusbar
unit_get_abbreviation_invoker	pdb/unit_cmds.c	/^unit_get_abbreviation_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_deletion_flag_invoker	pdb/unit_cmds.c	/^unit_get_deletion_flag_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_digits_invoker	pdb/unit_cmds.c	/^unit_get_digits_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_factor_invoker	pdb/unit_cmds.c	/^unit_get_factor_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_identifier_invoker	pdb/unit_cmds.c	/^unit_get_identifier_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_number_of_built_in_units_invoker	pdb/unit_cmds.c	/^unit_get_number_of_built_in_units_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_number_of_units_invoker	pdb/unit_cmds.c	/^unit_get_number_of_units_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_plural_invoker	pdb/unit_cmds.c	/^unit_get_plural_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_singular_invoker	pdb/unit_cmds.c	/^unit_get_singular_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_get_symbol_invoker	pdb/unit_cmds.c	/^unit_get_symbol_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_label	tools/gimpmeasuretool.h	/^  GtkWidget       *unit_label[4];$/;"	m	struct:_GimpMeasureTool
unit_new_invoker	pdb/unit_cmds.c	/^unit_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_set_deletion_flag_invoker	pdb/unit_cmds.c	/^unit_set_deletion_flag_invoker (GimpProcedure     *procedure,$/;"	f	file:
unit_x_label	widgets/gimpcursorview.h	/^  GtkWidget   *unit_x_label;$/;"	m	struct:_GimpCursorView
unit_y_label	widgets/gimpcursorview.h	/^  GtkWidget   *unit_y_label;$/;"	m	struct:_GimpCursorView
units_get_number_of_built_in_units	units.c	/^units_get_number_of_built_in_units (void)$/;"	f	file:
units_get_number_of_units	units.c	/^units_get_number_of_units (void)$/;"	f	file:
units_init	units.c	/^units_init (Gimp *gimp)$/;"	f
units_unit_get_abbreviation	units.c	/^units_unit_get_abbreviation (GimpUnit unit)$/;"	f	file:
units_unit_get_deletion_flag	units.c	/^units_unit_get_deletion_flag (GimpUnit unit)$/;"	f	file:
units_unit_get_digits	units.c	/^units_unit_get_digits (GimpUnit unit)$/;"	f	file:
units_unit_get_factor	units.c	/^units_unit_get_factor (GimpUnit unit)$/;"	f	file:
units_unit_get_identifier	units.c	/^units_unit_get_identifier (GimpUnit unit)$/;"	f	file:
units_unit_get_plural	units.c	/^units_unit_get_plural (GimpUnit unit)$/;"	f	file:
units_unit_get_singular	units.c	/^units_unit_get_singular (GimpUnit unit)$/;"	f	file:
units_unit_get_symbol	units.c	/^units_unit_get_symbol (GimpUnit unit)$/;"	f	file:
units_unit_new	units.c	/^units_unit_new (gchar   *identifier,$/;"	f	file:
units_unit_set_deletion_flag	units.c	/^units_unit_set_deletion_flag (GimpUnit unit,$/;"	f	file:
unknown_depth	dialogs/tips-parser.c	/^  gint                   unknown_depth;$/;"	m	struct:__anon176	file:
unquote	plug-in/gimpinterpreterdb.c	/^unquote (gchar *from)$/;"	f	file:
unregister_procedure	pdb/gimppdb.h	/^  void (* unregister_procedure) (GimpPDB       *pdb,$/;"	m	struct:_GimpPDBClass
unset_busy	core/gimp-gui.h	/^  void           (* unset_busy)          (Gimp                *gimp);$/;"	m	struct:_GimpGui
untransform_coords	core/gimp-transform-region.c	/^untransform_coords (const GimpMatrix3 *m,$/;"	f	file:
up_button	widgets/gimpcolordisplayeditor.h	/^  GtkWidget             *up_button;$/;"	m	struct:_GimpColorDisplayEditor
up_button	widgets/gimpcontrollerlist.h	/^  GtkWidget          *up_button;$/;"	m	struct:_GimpControllerList
update	composite/ns.py	/^    def update(self, objfile):$/;"	m	class:nmx
update	core/gimpdrawable.h	/^  void (* update)                (GimpDrawable         *drawable,$/;"	m	struct:_GimpDrawableClass
update	core/gimpimage.h	/^  void (* update)                       (GimpImage            *image,$/;"	m	struct:_GimpImageClass
update	core/gimpprojection.h	/^  void (* update) (GimpProjection *image,$/;"	m	struct:_GimpProjectionClass
update	widgets/gimpcolordialog.h	/^  void (* update) (GimpColorDialog      *dialog,$/;"	m	struct:_GimpColorDialogClass
update	widgets/gimpimageparasiteview.h	/^  void (* update) (GimpImageParasiteView *view);$/;"	m	struct:_GimpImageParasiteViewClass
update	widgets/gimpuimanager.h	/^  void (* update)       (GimpUIManager *manager,$/;"	m	struct:_GimpUIManagerClass
update	widgets/gimpviewrenderer.h	/^  void (* update)      (GimpViewRenderer   *renderer);$/;"	m	struct:_GimpViewRendererClass
update_areas	core/gimpprojection.h	/^  GSList                   *update_areas;$/;"	m	struct:_GimpProjection
update_areas	core/gimpprojection.h	/^  GSList *update_areas;   \/*  flushed update areas *\/$/;"	m	struct:_GimpProjectionIdleRender
update_areas	display/gimpdisplay.h	/^  GSList     *update_areas;     \/*  Update areas list                      *\/$/;"	m	struct:_GimpDisplay
update_blocksize	widgets/gimpdasheditor.c	/^update_blocksize (GimpDashEditor *editor)$/;"	f	file:
update_box_gray	core/gimpimage-convert.c	/^update_box_gray (const CFHistogram histogram,$/;"	f	file:
update_box_rgb	core/gimpimage-convert.c	/^update_box_rgb (const CFHistogram histogram,$/;"	f	file:
update_func	widgets/gimpactionfactory.h	/^  GimpActionGroupUpdateFunc  update_func;$/;"	m	struct:_GimpActionFactoryEntry
update_func	widgets/gimpactiongroup.h	/^  GimpActionGroupUpdateFunc  update_func;$/;"	m	struct:_GimpActionGroup
update_guide	core/gimpimage.h	/^  void (* update_guide)                 (GimpImage            *image,$/;"	m	struct:_GimpImageClass
update_options_from_segments	widgets/gimpdasheditor.c	/^update_options_from_segments (GimpDashEditor *editor)$/;"	f	file:
update_sample_point	core/gimpimage.h	/^  void (* update_sample_point)          (GimpImage            *image,$/;"	m	struct:_GimpImageClass
update_segments_from_options	widgets/gimpdasheditor.c	/^update_segments_from_options (GimpDashEditor *editor)$/;"	f	file:
update_tile_rowhints	paint-funcs/paint-funcs.c	/^update_tile_rowhints (Tile *tile,$/;"	f	file:
update_title_idle_id	widgets/gimpmenudock.h	/^  guint          update_title_idle_id;$/;"	m	struct:_GimpMenuDock
update_zoom_values	display/gimpdisplayshell-scale.c	/^update_zoom_values (GtkAdjustment   *adj,$/;"	f	file:
upper	gui/splash.c	/^  PangoLayout    *upper;$/;"	m	struct:__anon201	file:
upper_x	gui/splash.c	/^  gint            upper_x;$/;"	m	struct:__anon201	file:
upper_y	gui/splash.c	/^  gint            upper_y;$/;"	m	struct:__anon201	file:
uri	file/gimprecentitem.c	/^  gchar    *uri;$/;"	m	struct:_GimpRecentItem	file:
uris	widgets/gimpthumbbox.h	/^  GSList        *uris;$/;"	m	struct:_GimpThumbBox
use_center	tools/gimptransformtool.h	/^  gboolean        use_center;      \/*  uses the center handle            *\/$/;"	m	struct:_GimpTransformTool
use_cpu_accel	main.c	/^static gboolean            use_cpu_accel     = TRUE;$/;"	v	file:
use_debug_handler	errors.c	/^static gboolean             use_debug_handler = FALSE;$/;"	v	file:
use_debug_handler	main.c	/^static gboolean            use_debug_handler = FALSE;$/;"	v	file:
use_fade	paint/gimppaintoptions.h	/^  gboolean  use_fade;$/;"	m	struct:_GimpFadeOptions
use_gradient	paint/gimppaintoptions.h	/^  gboolean        use_gradient;$/;"	m	struct:_GimpGradientOptions
use_grid	tools/gimpperspectiveclonetool.h	/^  gboolean        use_grid;       \/*  does the tool use the grid       *\/$/;"	m	struct:_GimpPerspectiveCloneTool
use_grid	tools/gimptransformtool.h	/^  gboolean        use_grid;        \/*  does the tool use the grid        *\/$/;"	m	struct:_GimpTransformTool
use_handles	tools/gimpperspectiveclonetool.h	/^  gboolean        use_handles;    \/*  uses the corner handles          *\/$/;"	m	struct:_GimpPerspectiveCloneTool
use_handles	tools/gimptransformtool.h	/^  gboolean        use_handles;     \/*  uses the corner handles           *\/$/;"	m	struct:_GimpTransformTool
use_help	config/gimpguiconfig.h	/^  gboolean             use_help;$/;"	m	struct:_GimpGuiConfig
use_info_window	tools/gimpcolorpickeroptions.h	/^  gboolean           use_info_window;$/;"	m	struct:_GimpColorPickerOptions
use_info_window	tools/gimpmeasureoptions.h	/^  gboolean         use_info_window;$/;"	m	struct:_GimpMeasureOptions
use_jitter	paint/gimppaintoptions.h	/^  gboolean  use_jitter;$/;"	m	struct:_GimpJitterOptions
use_mid_handles	tools/gimptransformtool.h	/^  gboolean        use_mid_handles; \/*  use handles at midpoints of edges *\/$/;"	m	struct:_GimpTransformTool
use_pressure	paint/gimppaintcore.h	/^  gboolean     use_pressure;     \/*  look at coords->pressure            *\/$/;"	m	struct:_GimpPaintCore
use_saved_op	tools/gimprectangleselecttool.h	/^  gboolean           use_saved_op;         \/* use operation or get from options *\/$/;"	m	struct:_GimpRectSelectTool
use_saved_proj	paint/gimppaintcore.h	/^  gboolean     use_saved_proj;   \/*  keep the unmodified proj around     *\/$/;"	m	struct:_GimpPaintCore
use_scale	paint/gimpbrushcore.h	/^  gboolean            use_scale;$/;"	m	struct:_GimpBrushCoreClass
use_shm	core/gimp.h	/^  gboolean                use_shm;$/;"	m	struct:_Gimp
use_shm	main.c	/^static gboolean            use_shm           = FALSE;$/;"	v	file:
use_shm	main.c	/^static gboolean            use_shm           = TRUE;$/;"	v	file:
use_source	paint/gimpsourceoptions.h	/^  gboolean             use_source; \/* not a property *\/$/;"	m	struct:_GimpSourceOptions
used_count	core/gimpimage-convert.c	/^  signed long used_count;$/;"	m	struct:__anon109	file:
user_context	core/gimp.h	/^  GimpContext            *user_context;$/;"	m	struct:_Gimp
user_data	base/tile-manager-private.h	/^  gpointer           user_data;     \/*  data to pass to the validate_proc    *\/$/;"	m	struct:_TileManager
user_data	core/gimpcontainer-filter.c	/^  gpointer               user_data;$/;"	m	struct:__anon59	file:
user_data	core/gimpimagemap.c	/^  gpointer               user_data;$/;"	m	struct:_GimpImageMap	file:
user_data	dialogs/image-scale-dialog.c	/^  gpointer               user_data;$/;"	m	struct:__anon167	file:
user_data	dialogs/print-size-dialog.c	/^  gpointer                user_data;$/;"	m	struct:__anon183	file:
user_data	dialogs/resize-dialog.c	/^  gpointer            user_data;$/;"	m	struct:__anon170	file:
user_data	dialogs/scale-dialog.c	/^  gpointer               user_data;$/;"	m	struct:__anon173	file:
user_data	widgets/gimpactiongroup.h	/^  gpointer                   user_data;$/;"	m	struct:_GimpActionGroup
user_gimprc	config/gimprc.h	/^  gchar            *user_gimprc;$/;"	m	struct:_GimpRc
user_gimprc	main.c	/^static const gchar        *user_gimprc       = NULL;$/;"	v	file:
user_install_create_files	core/gimp-user-install.c	/^user_install_create_files (GimpUserInstall *install)$/;"	f	file:
user_install_dialog_log	dialogs/user-install-dialog.c	/^user_install_dialog_log (const gchar *message,$/;"	f	file:
user_install_dialog_new	dialogs/user-install-dialog.c	/^user_install_dialog_new (GimpUserInstall *install)$/;"	f	file:
user_install_dialog_run	dialogs/user-install-dialog.c	/^user_install_dialog_run (GimpUserInstall *install)$/;"	f
user_install_dir_copy	core/gimp-user-install.c	/^user_install_dir_copy (GimpUserInstall *install,$/;"	f	file:
user_install_file_copy	core/gimp-user-install.c	/^user_install_file_copy (GimpUserInstall *install,$/;"	f	file:
user_install_log	core/gimp-user-install.c	/^user_install_log (GimpUserInstall *install,$/;"	f	file:
user_install_log_error	core/gimp-user-install.c	/^user_install_log_error (GimpUserInstall  *install,$/;"	f	file:
user_install_log_newline	core/gimp-user-install.c	/^user_install_log_newline (GimpUserInstall *install)$/;"	f	file:
user_install_migrate_files	core/gimp-user-install.c	/^user_install_migrate_files (GimpUserInstall *install)$/;"	f	file:
user_install_mkdir	core/gimp-user-install.c	/^user_install_mkdir (GimpUserInstall *install,$/;"	f	file:
user_install_mkdir_with_parents	core/gimp-user-install.c	/^user_install_mkdir_with_parents (GimpUserInstall *install,$/;"	f	file:
user_override_property	widgets/gimppropwidgets.c	/^  const gchar *user_override_property;$/;"	m	struct:__anon382	file:
user_units	core/gimp.h	/^  GList                  *user_units;$/;"	m	struct:_Gimp
using_override_cursor	display/gimpdisplayshell.h	/^  gboolean          using_override_cursor; \/*  is the cursor overridden?      *\/$/;"	m	struct:_GimpDisplayShell
v	composite/gimp-composite-regression.h	/^  guint16  v;$/;"	m	struct:__anon23
v	composite/gimp-composite-regression.h	/^  guint16  v;$/;"	m	struct:__anon24
v	composite/gimp-composite-regression.h	/^  guint32  v;$/;"	m	struct:__anon27
v	composite/gimp-composite-regression.h	/^  guint32  v;$/;"	m	struct:__anon28
v	composite/gimp-composite-regression.h	/^  guint8  v;$/;"	m	struct:__anon19
v	composite/gimp-composite-regression.h	/^  guint8  v;$/;"	m	struct:__anon20
v	composite/gimp-composite-util.h	/^  guchar  v;$/;"	m	struct:__anon41
v	composite/gimp-composite-util.h	/^  guchar  v;$/;"	m	struct:__anon42
v8_t	composite/gimp-composite-util.h	/^} v8_t;$/;"	t	typeref:struct:__anon41
va8_alpha_mask_128	composite/gimp-composite-sse2.c	/^static const guint32 va8_alpha_mask_128[4] =   { 0xFF00FF00, 0xFF00FF00, 0xFF00FF00, 0xFF00FF00 };$/;"	v	file:
va8_alpha_mask_64	composite/gimp-composite-mmx.c	/^const guint32 va8_alpha_mask_64[2] =   { 0xFF00FF00, 0xFF00FF00 };$/;"	v
va8_alpha_mask_64	composite/gimp-composite-sse2.c	/^static const guint32 va8_alpha_mask_64[2] =   { 0xFF00FF00, 0xFF00FF00 };$/;"	v	file:
va8_b255_128	composite/gimp-composite-sse2.c	/^static const guint32 va8_b255_128[4] =         { 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF };$/;"	v	file:
va8_b255_64	composite/gimp-composite-mmx.c	/^const guint32 va8_b255_64[2] =         { 0xFFFFFFFF, 0xFFFFFFFF };$/;"	v
va8_b255_64	composite/gimp-composite-sse2.c	/^static const guint32 va8_b255_64[2] =         { 0xFFFFFFFF, 0xFFFFFFFF };$/;"	v	file:
va8_t	composite/gimp-composite-util.h	/^} va8_t;$/;"	t	typeref:struct:__anon42
va8_w128_64	composite/gimp-composite-mmx.c	/^const guint32 va8_w128_64[2] =         { 0x00800080, 0x00800080 };$/;"	v
va8_w1_128	composite/gimp-composite-sse2.c	/^static const guint32 va8_w1_128[4] =           { 0x00010001, 0x00010001, 0x00010001, 0x00010001 };$/;"	v	file:
va8_w1_64	composite/gimp-composite-mmx.c	/^const guint32 va8_w1_64[2] =           { 0x00010001, 0x00010001 };$/;"	v
va8_w1_64	composite/gimp-composite-sse2.c	/^static const guint32 va8_w1_64[2] =           { 0x00010001, 0x00010001 };$/;"	v	file:
va8_w255_128	composite/gimp-composite-sse2.c	/^static const guint32 va8_w255_128[4] =         { 0x00FF00FF, 0x00FF00FF, 0x00FF00FF, 0x00FF00FF };$/;"	v	file:
va8_w255_64	composite/gimp-composite-mmx.c	/^const guint32 va8_w255_64[2] =         { 0x00FF00FF, 0x00FF00FF };$/;"	v
va8_w255_64	composite/gimp-composite-sse2.c	/^static const guint32 va8_w255_64[2] =         { 0x00FF00FF, 0x00FF00FF };$/;"	v	file:
valid	base/tile-private.h	/^  guint   valid : 1;    \/* is the tile valid? *\/$/;"	m	struct:_Tile
valid	widgets/gimphistogrameditor.h	/^  gboolean              valid;$/;"	m	struct:_GimpHistogramEditor
valid_combinations	core/gimpimage.c	/^static const gint valid_combinations[][MAX_CHANNELS + 1] =$/;"	v	file:
validate_proc	base/tile-manager-private.h	/^  TileValidateProc   validate_proc; \/*  this proc is called when an attempt  *$/;"	m	struct:_TileManager
value	config/gimprc-unknown.c	/^  gchar *value;$/;"	m	struct:__anon43	file:
value	core/gimppdbprogress.h	/^  gdouble      value;$/;"	m	struct:_GimpPdbProgress
value	core/gimpscanconvert.c	/^  gboolean        value;$/;"	m	struct:_GimpScanConvert	file:
value	dialogs/tips-parser.c	/^  GString               *value;$/;"	m	struct:__anon176	file:
value	plug-in/gimpenvirontable.c	/^  gchar *value;$/;"	m	struct:_GimpEnvironValue	file:
value	text/gimptextundo.h	/^  GValue           *value;$/;"	m	struct:_GimpTextUndo
value	widgets/gimpactiongroup.h	/^  const gchar *value;$/;"	m	struct:_GimpStringActionEntry
value	widgets/gimpactiongroup.h	/^  gint         value;$/;"	m	struct:_GimpEnumActionEntry
value	widgets/gimpactiongroup.h	/^  gint         value;$/;"	m	struct:_GimpRadioActionEntry
value	widgets/gimpenumaction.h	/^  gint       value;$/;"	m	struct:_GimpEnumAction
value	widgets/gimpsessioninfo-aux.h	/^  gchar *value;$/;"	m	struct:_GimpSessionInfoAux
value	widgets/gimpstringaction.h	/^  gchar      *value;$/;"	m	struct:_GimpStringAction
value_labels	widgets/gimpcolorframe.h	/^  GtkWidget          *value_labels[GIMP_COLOR_FRAME_ROWS];$/;"	m	struct:_GimpColorFrame
value_only_pixels	paint-funcs/paint-funcs-generic.h	/^value_only_pixels (const guchar *src1,$/;"	f
value_variable	widgets/gimpactiongroup.h	/^  gboolean     value_variable;$/;"	m	struct:_GimpEnumActionEntry
value_variable	widgets/gimpenumaction.h	/^  gboolean   value_variable;$/;"	m	struct:_GimpEnumAction
values	base/gimphistogram.c	/^  gdouble       *values[NUM_SLOTS];$/;"	m	struct:_GimpHistogram	file:
values	pdb/gimpprocedure.h	/^  GParamSpec      **values;         \/* Array of return values         *\/$/;"	m	struct:_GimpProcedure
values	widgets/gimpunitstore.h	/^  gdouble      *values;$/;"	m	struct:_GimpUnitStore
vars	plug-in/gimpenvirontable.h	/^  GHashTable  *vars;$/;"	m	struct:_GimpEnvironTable
vbox	widgets/gimpdevicestatus.h	/^  GtkWidget  *vbox;$/;"	m	struct:_GimpDeviceStatus
vbox	widgets/gimpdock.h	/^  GtkWidget         *vbox;$/;"	m	struct:_GimpDock
vbox	widgets/gimperrordialog.h	/^  GtkWidget       *vbox;$/;"	m	struct:_GimpErrorDialog
vec	core/gimpdrawable-blend.c	/^  gdouble           vec[2];$/;"	m	struct:__anon117	file:
vectors	core/gimpimage.h	/^  GimpContainer     *vectors;               \/*  the list of vectors          *\/$/;"	m	struct:_GimpImage
vectors	dialogs/vectors-options-dialog.h	/^  GimpVectors *vectors;$/;"	m	struct:_VectorsOptionsDialog
vectors	text/gimptext-vectors.c	/^  GimpVectors  *vectors;$/;"	m	struct:_RenderContext	file:
vectors	tools/gimpdrawtool.h	/^  GList        *vectors;      \/*  GimpVectors to render                  *\/$/;"	m	struct:_GimpDrawTool
vectors	tools/gimpvectortool.h	/^  GimpVectors          *vectors;        \/* the current Vector data           *\/$/;"	m	struct:_GimpVectorTool
vectors	vectors/gimpvectorsmodundo.h	/^  GimpVectors  *vectors;$/;"	m	struct:_GimpVectorsModUndo
vectors_actions	actions/vectors-actions.c	/^static const GimpActionEntry vectors_actions[] =$/;"	v	file:
vectors_actions_setup	actions/vectors-actions.c	/^vectors_actions_setup (GimpActionGroup *group)$/;"	f
vectors_actions_update	actions/vectors-actions.c	/^vectors_actions_update (GimpActionGroup *group,$/;"	f
vectors_bezier_stroke_conicto_invoker	pdb/vectors_cmds.c	/^vectors_bezier_stroke_conicto_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_bezier_stroke_cubicto_invoker	pdb/vectors_cmds.c	/^vectors_bezier_stroke_cubicto_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_bezier_stroke_lineto_invoker	pdb/vectors_cmds.c	/^vectors_bezier_stroke_lineto_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_bezier_stroke_new_ellipse_invoker	pdb/vectors_cmds.c	/^vectors_bezier_stroke_new_ellipse_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_bezier_stroke_new_moveto_invoker	pdb/vectors_cmds.c	/^vectors_bezier_stroke_new_moveto_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_copy_cmd_callback	actions/vectors-commands.c	/^vectors_copy_cmd_callback (GtkAction *action,$/;"	f
vectors_delete_cmd_callback	actions/vectors-commands.c	/^vectors_delete_cmd_callback (GtkAction *action,$/;"	f
vectors_duplicate_cmd_callback	actions/vectors-commands.c	/^vectors_duplicate_cmd_callback (GtkAction *action,$/;"	f
vectors_edit_attributes_cmd_callback	actions/vectors-commands.c	/^vectors_edit_attributes_cmd_callback (GtkAction *action,$/;"	f
vectors_edit_vectors_response	actions/vectors-commands.c	/^vectors_edit_vectors_response (GtkWidget            *widget,$/;"	f	file:
vectors_export_active_only	actions/vectors-commands.c	/^static gboolean  vectors_export_active_only = TRUE;$/;"	v	file:
vectors_export_cmd_callback	actions/vectors-commands.c	/^vectors_export_cmd_callback (GtkAction *action,$/;"	f
vectors_export_dialog_free	dialogs/vectors-export-dialog.c	/^vectors_export_dialog_free (VectorsExportDialog *dialog)$/;"	f	file:
vectors_export_dialog_new	dialogs/vectors-export-dialog.c	/^vectors_export_dialog_new (GimpImage *image,$/;"	f
vectors_export_response	actions/vectors-commands.c	/^vectors_export_response (GtkWidget           *widget,$/;"	f	file:
vectors_freeze_handler	display/gimpdisplayshell.h	/^  GQuark            vectors_freeze_handler;$/;"	m	struct:_GimpDisplayShell
vectors_get_image_invoker	pdb/vectors_cmds.c	/^vectors_get_image_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_get_linked_invoker	pdb/vectors_cmds.c	/^vectors_get_linked_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_get_name_invoker	pdb/vectors_cmds.c	/^vectors_get_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_get_strokes_invoker	pdb/vectors_cmds.c	/^vectors_get_strokes_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_get_tattoo_invoker	pdb/vectors_cmds.c	/^vectors_get_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_get_visible_invoker	pdb/vectors_cmds.c	/^vectors_get_visible_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_import_cmd_callback	actions/vectors-commands.c	/^vectors_import_cmd_callback (GtkAction *action,$/;"	f
vectors_import_dialog_free	dialogs/vectors-import-dialog.c	/^vectors_import_dialog_free (VectorsImportDialog *dialog)$/;"	f	file:
vectors_import_dialog_new	dialogs/vectors-import-dialog.c	/^vectors_import_dialog_new (GimpImage *image,$/;"	f
vectors_import_from_file_invoker	pdb/vectors_cmds.c	/^vectors_import_from_file_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_import_from_string_invoker	pdb/vectors_cmds.c	/^vectors_import_from_string_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_import_merge	actions/vectors-commands.c	/^static gboolean  vectors_import_merge       = FALSE;$/;"	v	file:
vectors_import_response	actions/vectors-commands.c	/^vectors_import_response (GtkWidget           *widget,$/;"	f	file:
vectors_import_scale	actions/vectors-commands.c	/^static gboolean  vectors_import_scale       = FALSE;$/;"	v	file:
vectors_is_valid_invoker	pdb/vectors_cmds.c	/^vectors_is_valid_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_label	widgets/gimpimagepropview.h	/^  GtkWidget *vectors_label;$/;"	m	struct:_GimpImagePropView
vectors_linked_cmd_callback	actions/vectors-commands.c	/^vectors_linked_cmd_callback (GtkAction *action,$/;"	f
vectors_lower_cmd_callback	actions/vectors-commands.c	/^vectors_lower_cmd_callback (GtkAction *action,$/;"	f
vectors_lower_to_bottom_cmd_callback	actions/vectors-commands.c	/^vectors_lower_to_bottom_cmd_callback (GtkAction *action,$/;"	f
vectors_merge_visible_cmd_callback	actions/vectors-commands.c	/^vectors_merge_visible_cmd_callback (GtkAction *action,$/;"	f
vectors_name	actions/vectors-commands.c	/^static gchar    *vectors_name               = NULL;$/;"	v	file:
vectors_new_cmd_callback	actions/vectors-commands.c	/^vectors_new_cmd_callback (GtkAction *action,$/;"	f
vectors_new_invoker	pdb/vectors_cmds.c	/^vectors_new_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_new_last_vals_cmd_callback	actions/vectors-commands.c	/^vectors_new_last_vals_cmd_callback (GtkAction *action,$/;"	f
vectors_new_vectors_response	actions/vectors-commands.c	/^vectors_new_vectors_response (GtkWidget            *widget,$/;"	f	file:
vectors_options_dialog_free	dialogs/vectors-options-dialog.c	/^vectors_options_dialog_free (VectorsOptionsDialog *dialog)$/;"	f	file:
vectors_options_dialog_new	dialogs/vectors-options-dialog.c	/^vectors_options_dialog_new (GimpImage   *image,$/;"	f
vectors_parasite_attach_invoker	pdb/parasite_cmds.c	/^vectors_parasite_attach_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_parasite_detach_invoker	pdb/parasite_cmds.c	/^vectors_parasite_detach_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_parasite_find_invoker	pdb/parasite_cmds.c	/^vectors_parasite_find_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_parasite_list_invoker	pdb/parasite_cmds.c	/^vectors_parasite_list_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_paste_cmd_callback	actions/vectors-commands.c	/^vectors_paste_cmd_callback (GtkAction *action,$/;"	f
vectors_raise_cmd_callback	actions/vectors-commands.c	/^vectors_raise_cmd_callback (GtkAction *action,$/;"	f
vectors_raise_to_top_cmd_callback	actions/vectors-commands.c	/^vectors_raise_to_top_cmd_callback (GtkAction *action,$/;"	f
vectors_remove_stroke_invoker	pdb/vectors_cmds.c	/^vectors_remove_stroke_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_selection_to_vectors_actions	actions/vectors-actions.c	/^static const GimpEnumActionEntry vectors_selection_to_vectors_actions[] =$/;"	v	file:
vectors_selection_to_vectors_cmd_callback	actions/vectors-commands.c	/^vectors_selection_to_vectors_cmd_callback (GtkAction *action,$/;"	f
vectors_set_linked_invoker	pdb/vectors_cmds.c	/^vectors_set_linked_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_set_name_invoker	pdb/vectors_cmds.c	/^vectors_set_name_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_set_tattoo_invoker	pdb/vectors_cmds.c	/^vectors_set_tattoo_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_set_visible_invoker	pdb/vectors_cmds.c	/^vectors_set_visible_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_close_invoker	pdb/vectors_cmds.c	/^vectors_stroke_close_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_cmd_callback	actions/vectors-commands.c	/^vectors_stroke_cmd_callback (GtkAction *action,$/;"	f
vectors_stroke_flip_free_invoker	pdb/vectors_cmds.c	/^vectors_stroke_flip_free_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_flip_invoker	pdb/vectors_cmds.c	/^vectors_stroke_flip_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_get_length_invoker	pdb/vectors_cmds.c	/^vectors_stroke_get_length_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_get_point_at_dist_invoker	pdb/vectors_cmds.c	/^vectors_stroke_get_point_at_dist_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_get_points_invoker	pdb/vectors_cmds.c	/^vectors_stroke_get_points_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_interpolate_invoker	pdb/vectors_cmds.c	/^vectors_stroke_interpolate_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_last_vals_cmd_callback	actions/vectors-commands.c	/^vectors_stroke_last_vals_cmd_callback (GtkAction *action,$/;"	f
vectors_stroke_new_from_points_invoker	pdb/vectors_cmds.c	/^vectors_stroke_new_from_points_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_rotate_invoker	pdb/vectors_cmds.c	/^vectors_stroke_rotate_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_scale_invoker	pdb/vectors_cmds.c	/^vectors_stroke_scale_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_stroke_translate_invoker	pdb/vectors_cmds.c	/^vectors_stroke_translate_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_thaw_handler	display/gimpdisplayshell.h	/^  GQuark            vectors_thaw_handler;$/;"	m	struct:_GimpDisplayShell
vectors_to_selection_actions	actions/vectors-actions.c	/^static const GimpEnumActionEntry vectors_to_selection_actions[] =$/;"	v	file:
vectors_to_selection_cmd_callback	actions/vectors-commands.c	/^vectors_to_selection_cmd_callback (GtkAction *action,$/;"	f
vectors_to_selection_invoker	pdb/vectors_cmds.c	/^vectors_to_selection_invoker (GimpProcedure     *procedure,$/;"	f	file:
vectors_toggle_actions	actions/vectors-actions.c	/^static const GimpToggleActionEntry vectors_toggle_actions[] =$/;"	v	file:
vectors_vectors_tool_cmd_callback	actions/vectors-commands.c	/^vectors_vectors_tool_cmd_callback (GtkAction *action,$/;"	f
vectors_visible_cmd_callback	actions/vectors-commands.c	/^vectors_visible_cmd_callback (GtkAction *action,$/;"	f
vectors_visible_handler	display/gimpdisplayshell.h	/^  GQuark            vectors_visible_handler;$/;"	m	struct:_GimpDisplayShell
vel_sensitivity	paint/gimpinkoptions.h	/^  gdouble           vel_sensitivity;$/;"	m	struct:_GimpInkOptions
verbose	config/gimprc.h	/^  gboolean          verbose;$/;"	m	struct:_GimpRc
verbose	core/gimp-user-install.c	/^  gboolean                verbose;$/;"	m	struct:_GimpUserInstall	file:
version	core/gimpbrush-header.h	/^  guint32   version;      \/*  brush file version #  *\/$/;"	m	struct:_BrushHeader
version	core/gimpbrush-load.c	/^  gint16 version;$/;"	m	struct:_AbrHeader	file:
version	core/gimppattern-header.h	/^  guint32   version;      \/*  pattern file version #  *\/$/;"	m	struct:_PatternHeader
version_invoker	pdb/misc_cmds.c	/^version_invoker (GimpProcedure     *procedure,$/;"	f	file:
vert_deriv	tools/gimpiscissorstool.c	/^static const gfloat vert_deriv[9] =$/;"	v	file:
vert_offset	tools/gimpaligntool.h	/^  gdouble                vert_offset;$/;"	m	struct:_GimpAlignTool
vert_offset_adjustment	tools/gimpaligntool.h	/^  GtkObject             *vert_offset_adjustment;$/;"	m	struct:_GimpAlignTool
vert_segs	base/boundary.c	/^  gint     *vert_segs;$/;"	m	struct:_Boundary	file:
vexpand	widgets/gtkwrapbox.h	/^  guint      vexpand : 1;$/;"	m	struct:_GtkWrapBoxChild
vfill	widgets/gtkwrapbox.h	/^  guint      vfill : 1;$/;"	m	struct:_GtkWrapBoxChild
view	actions/data-commands.c	/^  GimpDataFactoryView *view;$/;"	m	struct:_GimpDataDeleteData	file:
view	display/gimpdisplayshell-layer-select.c	/^  GtkWidget *view;$/;"	m	struct:__anon192	file:
view	display/gimpnavigationeditor.h	/^  GtkWidget        *view;$/;"	m	struct:_GimpNavigationEditor
view	widgets/gimpcolorselectorpalette.h	/^  GtkWidget         *view;$/;"	m	struct:_GimpColorSelectorPalette
view	widgets/gimpcomponenteditor.h	/^  GtkTreeView       *view;$/;"	m	struct:_GimpComponentEditor
view	widgets/gimpcontainereditor.h	/^  GimpContainerView *view;$/;"	m	struct:_GimpContainerEditor
view	widgets/gimpcontainertreeview.h	/^  GtkTreeView       *view;$/;"	m	struct:_GimpContainerTreeView
view	widgets/gimpdataeditor.h	/^  GtkWidget       *view; \/* filled by subclasses *\/$/;"	m	struct:_GimpDataEditor
view	widgets/gimphistogrambox.h	/^  GimpHistogramView *view;$/;"	m	struct:_GimpHistogramBox
view	widgets/gimppaletteeditor.h	/^  GtkWidget        *view;$/;"	m	struct:_GimpPaletteEditor
view	widgets/gimppdbdialog.h	/^  GtkWidget       *view;$/;"	m	struct:_GimpPdbDialog
view	widgets/gimpselectioneditor.h	/^  GtkWidget       *view;$/;"	m	struct:_GimpSelectionEditor
view	widgets/gimptexteditor.h	/^  GtkWidget         *view;$/;"	m	struct:_GimpTextEditor
view	widgets/gimpundoeditor.h	/^  GtkWidget       *view;$/;"	m	struct:_GimpUndoEditor
view	widgets/gimpviewablebutton.h	/^  GtkWidget         *view;$/;"	m	struct:_GimpViewableButton
view	widgets/gimpviewabledialog.h	/^  GtkWidget   *view;$/;"	m	struct:_GimpViewableDialog
view_actions	actions/view-actions.c	/^static const GimpActionEntry view_actions[] =$/;"	v	file:
view_actions_check_type_notify	actions/view-actions.c	/^view_actions_check_type_notify (GimpDisplayConfig *config,$/;"	f	file:
view_actions_set_zoom	actions/view-actions.c	/^view_actions_set_zoom (GimpActionGroup  *group,$/;"	f	file:
view_actions_setup	actions/view-actions.c	/^view_actions_setup (GimpActionGroup *group)$/;"	f
view_actions_update	actions/view-actions.c	/^view_actions_update (GimpActionGroup *group,$/;"	f
view_border_width	widgets/gimpcontainerpopup.h	/^  gint                 view_border_width;$/;"	m	struct:_GimpContainerPopup
view_border_width	widgets/gimpcontainerview.c	/^  gint           view_border_width;$/;"	m	struct:_GimpContainerViewPrivate	file:
view_border_width	widgets/gimpviewablebutton.h	/^  gint               view_border_width;$/;"	m	struct:_GimpViewableButton
view_button_down	widgets/gimpgradienteditor.h	/^  gboolean        view_button_down;$/;"	m	struct:_GimpGradientEditor
view_display_filters_cmd_callback	actions/view-commands.c	/^view_display_filters_cmd_callback (GtkAction *action,$/;"	f
view_dot_for_dot_cmd_callback	actions/view-commands.c	/^view_dot_for_dot_cmd_callback (GtkAction *action,$/;"	f
view_events	widgets/gimpgradienteditor.c	/^view_events (GtkWidget          *widget,$/;"	f	file:
view_fullscreen_cmd_callback	actions/view-commands.c	/^view_fullscreen_cmd_callback (GtkAction *action,$/;"	f
view_last_x	widgets/gimpgradienteditor.h	/^  gint            view_last_x;$/;"	m	struct:_GimpGradientEditor
view_navigation_window_cmd_callback	actions/view-commands.c	/^view_navigation_window_cmd_callback (GtkAction *action,$/;"	f
view_new_cmd_callback	actions/view-commands.c	/^view_new_cmd_callback (GtkAction *action,$/;"	f
view_padding_color_actions	actions/view-actions.c	/^static const GimpEnumActionEntry view_padding_color_actions[] =$/;"	v	file:
view_padding_color_cmd_callback	actions/view-commands.c	/^view_padding_color_cmd_callback (GtkAction *action,$/;"	f
view_padding_color_dialog_update	actions/view-commands.c	/^view_padding_color_dialog_update (GimpColorDialog      *dialog,$/;"	f	file:
view_pick_color	widgets/gimpgradienteditor.c	/^view_pick_color (GimpGradientEditor *editor,$/;"	f	file:
view_props_connect	widgets/gimpviewablebox.c	/^view_props_connect (GtkWidget   *box,$/;"	f	file:
view_scroll_horizontal_actions	actions/view-actions.c	/^static const GimpEnumActionEntry view_scroll_horizontal_actions[] =$/;"	v	file:
view_scroll_horizontal_cmd_callback	actions/view-commands.c	/^view_scroll_horizontal_cmd_callback (GtkAction *action,$/;"	f
view_scroll_vertical_actions	actions/view-actions.c	/^static const GimpEnumActionEntry view_scroll_vertical_actions[] =$/;"	v	file:
view_scroll_vertical_cmd_callback	actions/view-commands.c	/^view_scroll_vertical_cmd_callback (GtkAction *action,$/;"	f
view_set_hint	widgets/gimpgradienteditor.c	/^view_set_hint (GimpGradientEditor *editor,$/;"	f	file:
view_shrink_wrap_cmd_callback	actions/view-commands.c	/^view_shrink_wrap_cmd_callback (GtkAction *action,$/;"	f
view_signals	widgets/gimpcontainerview.c	/^static guint view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
view_signals	widgets/gimpfileprocview.c	/^static guint view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
view_signals	widgets/gimpimageparasiteview.c	/^static guint view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
view_signals	widgets/gimpitemtreeview.c	/^static guint view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
view_signals	widgets/gimpnavigationview.c	/^static guint view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
view_signals	widgets/gimppaletteview.c	/^static guint view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
view_signals	widgets/gimpview.c	/^static guint view_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
view_size	widgets/gimpcomponenteditor.h	/^  gint               view_size;$/;"	m	struct:_GimpComponentEditor
view_size	widgets/gimpcontainerpopup.h	/^  gint                 view_size;$/;"	m	struct:_GimpContainerPopup
view_size	widgets/gimpcontainerview.c	/^  gint           view_size;$/;"	m	struct:_GimpContainerViewPrivate	file:
view_size	widgets/gimpdialogfactory.h	/^  gint               view_size;$/;"	m	struct:_GimpDialogFactoryEntry
view_size	widgets/gimpsessioninfo-dockable.h	/^  gint          view_size;$/;"	m	struct:_GimpSessionInfoDockable
view_size	widgets/gimpundoeditor.h	/^  GimpViewSize     view_size;$/;"	m	struct:_GimpUndoEditor
view_snap_to_canvas_cmd_callback	actions/view-commands.c	/^view_snap_to_canvas_cmd_callback (GtkAction *action,$/;"	f
view_snap_to_grid_cmd_callback	actions/view-commands.c	/^view_snap_to_grid_cmd_callback (GtkAction *action,$/;"	f
view_snap_to_guides_cmd_callback	actions/view-commands.c	/^view_snap_to_guides_cmd_callback (GtkAction *action,$/;"	f
view_snap_to_vectors_cmd_callback	actions/view-commands.c	/^view_snap_to_vectors_cmd_callback (GtkAction *action,$/;"	f
view_toggle_actions	actions/view-actions.c	/^static const GimpToggleActionEntry view_toggle_actions[] =$/;"	v	file:
view_toggle_grid_cmd_callback	actions/view-commands.c	/^view_toggle_grid_cmd_callback (GtkAction *action,$/;"	f
view_toggle_guides_cmd_callback	actions/view-commands.c	/^view_toggle_guides_cmd_callback (GtkAction *action,$/;"	f
view_toggle_layer_boundary_cmd_callback	actions/view-commands.c	/^view_toggle_layer_boundary_cmd_callback (GtkAction *action,$/;"	f
view_toggle_menubar_cmd_callback	actions/view-commands.c	/^view_toggle_menubar_cmd_callback (GtkAction *action,$/;"	f
view_toggle_rulers_cmd_callback	actions/view-commands.c	/^view_toggle_rulers_cmd_callback (GtkAction *action,$/;"	f
view_toggle_sample_points_cmd_callback	actions/view-commands.c	/^view_toggle_sample_points_cmd_callback (GtkAction *action,$/;"	f
view_toggle_scrollbars_cmd_callback	actions/view-commands.c	/^view_toggle_scrollbars_cmd_callback (GtkAction *action,$/;"	f
view_toggle_selection_cmd_callback	actions/view-commands.c	/^view_toggle_selection_cmd_callback (GtkAction *action,$/;"	f
view_toggle_statusbar_cmd_callback	actions/view-commands.c	/^view_toggle_statusbar_cmd_callback (GtkAction *action,$/;"	f
view_type	widgets/gimpcontainerpopup.h	/^  GimpViewType         view_type;$/;"	m	struct:_GimpContainerPopup
view_zoom_actions	actions/view-actions.c	/^static const GimpEnumActionEntry view_zoom_actions[] =$/;"	v	file:
view_zoom_cmd_callback	actions/view-commands.c	/^view_zoom_cmd_callback (GtkAction *action,$/;"	f
view_zoom_explicit_actions	actions/view-actions.c	/^static const GimpRadioActionEntry view_zoom_explicit_actions[] =$/;"	v	file:
view_zoom_explicit_cmd_callback	actions/view-commands.c	/^view_zoom_explicit_cmd_callback (GtkAction *action,$/;"	f
view_zoom_fit_in_cmd_callback	actions/view-commands.c	/^view_zoom_fit_in_cmd_callback (GtkAction *action,$/;"	f
view_zoom_fit_to_cmd_callback	actions/view-commands.c	/^view_zoom_fit_to_cmd_callback (GtkAction *action,$/;"	f
view_zoom_other_cmd_callback	actions/view-commands.c	/^view_zoom_other_cmd_callback (GtkAction *action,$/;"	f
view_zoom_revert_cmd_callback	actions/view-commands.c	/^view_zoom_revert_cmd_callback (GtkAction *action,$/;"	f
viewable	dialogs/resize-dialog.c	/^  GimpViewable       *viewable;$/;"	m	struct:__anon170	file:
viewable	dialogs/scale-dialog.c	/^  GimpViewable          *viewable;$/;"	m	struct:__anon173	file:
viewable	widgets/gimpaction.h	/^  GimpViewable *viewable;$/;"	m	struct:_GimpAction
viewable	widgets/gimpview-popup.c	/^  GimpViewable *viewable;$/;"	m	struct:_GimpViewPopup	file:
viewable	widgets/gimpview.h	/^  GimpViewable     *viewable;$/;"	m	struct:_GimpView
viewable	widgets/gimpviewrenderer.h	/^  GimpViewable       *viewable;$/;"	m	struct:_GimpViewRenderer
viewable_cell_signals	widgets/gimpcellrendererviewable.c	/^static guint viewable_cell_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
viewable_label	widgets/gimpviewabledialog.h	/^  GtkWidget   *viewable_label;$/;"	m	struct:_GimpViewableDialog
viewable_renderer	widgets/gimpcontainercombobox.h	/^  GtkCellRenderer    *viewable_renderer;$/;"	m	struct:_GimpContainerComboBox
viewable_signals	core/gimpviewable.c	/^static guint  viewable_signals[LAST_SIGNAL] = { 0 };$/;"	v	file:
viewable_type	widgets/gimpviewrenderer.h	/^  GType               viewable_type;$/;"	m	struct:_GimpViewRenderer
visibility_changed	core/gimpitem.h	/^  void       (* visibility_changed) (GimpItem      *item);$/;"	m	struct:_GimpItemClass
visible	core/gimpimage.h	/^  gboolean           visible[MAX_CHANNELS]; \/*  visible channels             *\/$/;"	m	struct:_GimpImage
visible	core/gimpitem.h	/^  gboolean          visible;            \/*  control visibility       *\/$/;"	m	struct:_GimpItem
visible	core/gimpitempropundo.h	/^  gboolean      visible;$/;"	m	struct:_GimpItemPropUndo
visible	core/gimptoolinfo.h	/^  gboolean             visible;$/;"	m	struct:_GimpToolInfo
visible	dialogs/about-dialog.c	/^  gboolean      visible;$/;"	m	struct:__anon168	file:
visible	display/gimpdisplayshell-selection.c	/^  gboolean          visible;          \/*  visility of the display shell     *\/$/;"	m	struct:_Selection	file:
visible_changed_handler_id	widgets/gimpitemtreeview.h	/^  GQuark                 visible_changed_handler_id;$/;"	m	struct:_GimpItemTreeView
visible_handler_id	widgets/gimptoolview.h	/^  GQuark               visible_handler_id;$/;"	m	struct:_GimpToolView
visible_rows	widgets/gimpcontainergridview.h	/^  gint              visible_rows;$/;"	m	struct:_GimpContainerGridView
visible_tool_options	widgets/gimptooloptionseditor.h	/^  GimpToolOptions *visible_tool_options;$/;"	m	struct:_GimpToolOptionsEditor
visited	base/boundary.h	/^  guint  visited : 1;$/;"	m	struct:_BoundSeg
volume	core/gimpimage-convert.c	/^  int   volume;$/;"	m	struct:__anon108	file:
vpath	core/gimpscanconvert.c	/^  ArtVpath       *vpath;$/;"	m	struct:_GimpScanConvert	file:
vrule	display/gimpdisplayshell.h	/^  GtkWidget        *vrule;$/;"	m	struct:_GimpDisplayShell
vsb	display/gimpdisplayshell.h	/^  GtkWidget        *vsb;$/;"	m	struct:_GimpDisplayShell
vsbdata	display/gimpdisplayshell.h	/^  GtkAdjustment    *vsbdata;$/;"	m	struct:_GimpDisplayShell
vspacing	widgets/gtkwrapbox.h	/^  guint8           vspacing;$/;"	m	struct:_GtkWrapBox
w	base/pixel-region.h	/^  gint         w;              \/*  width of region               *\/$/;"	m	struct:_PixelRegion
w	base/pixel-surround.c	/^  gint         w;          \/*  width of pixel surround area         *\/$/;"	m	struct:_PixelSurround	file:
w	display/gimpdisplayshell-render.c	/^  gint              w, h;$/;"	m	struct:_RenderInfo	file:
w	tools/gimpmagnifytool.h	/^  gdouble       w, h;  \/*  width and height            *\/$/;"	m	struct:_GimpMagnifyTool
wait_console_window	main.c	/^wait_console_window (void)$/;"	f	file:
want_alpha_dither	core/gimpimage-convert.c	/^  gboolean want_alpha_dither;$/;"	m	struct:_QuantizeObj	file:
want_null_motion	core/gimpbrush.h	/^  gboolean    (* want_null_motion) (GimpBrush  *brush,$/;"	m	struct:_GimpBrushClass
wants_click	tools/gimptoolcontrol.h	/^  gboolean           wants_click;        \/*  wants click detection           *\/$/;"	m	struct:_GimpToolControl
wants_updates	widgets/gimpcolordialog.h	/^  gboolean             wants_updates;$/;"	m	struct:_GimpColorDialog
web_browser	config/gimpguiconfig.h	/^  gchar               *web_browser;$/;"	m	struct:_GimpGuiConfig
webpal	core/gimpimage-convert-data.h	/^static const guchar webpal[] =$/;"	v
webpal_pass1	core/gimpimage-convert.c	/^webpal_pass1 (QuantizeObj *quantobj)$/;"	f	file:
welcome	dialogs/tips-parser.h	/^  gchar *welcome;$/;"	m	struct:_GimpTip
welcome_label	dialogs/tips-dialog.c	/^static GtkWidget *welcome_label = NULL;$/;"	v	file:
wheel	core/core-types.h	/^  gdouble wheel;$/;"	m	struct:_GimpCoords
wheel	widgets/gimpcontrollers.c	/^  GimpController *wheel;$/;"	m	struct:_GimpControllerManager	file:
wheel_events	widgets/gimpcontrollerwheel.c	/^static WheelEvent wheel_events[] =$/;"	v	file:
white_color	widgets/gimpcontainergridview.c	/^static GimpRGB  white_color;$/;"	v	file:
white_color	widgets/gimpviewrenderer.c	/^static GimpRGB  white_color;$/;"	v	file:
wide	core/gimpbrush-load.c	/^  gboolean wide;$/;"	m	struct:_AbrSampledBrushHeader	file:
widget	widgets/gimpsessioninfo-book.h	/^  GtkWidget *widget;$/;"	m	struct:_GimpSessionInfoBook
widget	widgets/gimpsessioninfo.h	/^  GtkWidget              *widget;$/;"	m	struct:_GimpSessionInfo
widget	widgets/gimpuimanager.h	/^  GtkWidget              *widget;$/;"	m	struct:_GimpUIManagerUIEntry
widget	widgets/gimpview-popup.c	/^  GtkWidget    *widget;$/;"	m	struct:_GimpViewPopup	file:
widget	widgets/gtkwrapbox.h	/^  GtkWidget *widget;$/;"	m	struct:_GtkWrapBoxChild
width	base/siox.c	/^  gint          width;$/;"	m	struct:_SioxState	file:
width	base/temp-buf.h	/^  gint    width;$/;"	m	struct:_TempBuf
width	base/tile-manager-private.h	/^  gint               width;         \/*  the width of the tiled area          *\/$/;"	m	struct:_TileManager
width	base/tile-pyramid.c	/^  guint          width;$/;"	m	struct:_TilePyramid	file:
width	core/gimpbrush-header.h	/^  guint32   width;        \/*  width of brush  *\/$/;"	m	struct:_BrushHeader
width	core/gimpdrawable-blend.c	/^  gint         width;$/;"	m	struct:__anon118	file:
width	core/gimpdrawableundo.h	/^  gint          width;$/;"	m	struct:_GimpDrawableUndo
width	core/gimpimage.h	/^  gint               width, height;         \/*  width and height attributes  *\/$/;"	m	struct:_GimpImage
width	core/gimpimageundo.h	/^  gint               width;$/;"	m	struct:_GimpImageUndo
width	core/gimpitem.h	/^  gint              width, height;      \/*  size in pixels           *\/$/;"	m	struct:_GimpItem
width	core/gimppattern-header.h	/^  guint32   width;        \/*  width of pattern  *\/$/;"	m	struct:_PatternHeader
width	core/gimppreviewcache.c	/^  gint     width;$/;"	m	struct:__anon110	file:
width	core/gimpprojection.h	/^  gint    width;$/;"	m	struct:_GimpProjectionIdleRender
width	core/gimpstrokeoptions.h	/^  gdouble          width;$/;"	m	struct:_GimpStrokeOptions
width	core/gimptemplate.h	/^  gint               width;$/;"	m	struct:_GimpTemplate
width	dialogs/image-scale-dialog.c	/^  gint                   width;$/;"	m	struct:__anon167	file:
width	gui/splash.c	/^  gint            width;$/;"	m	struct:__anon201	file:
width	tools/gimpforegroundselecttool.c	/^  gint         width;$/;"	m	struct:__anon286	file:
width	tools/gimprectangleoptions.h	/^  gdouble                     width;$/;"	m	struct:_GimpRectangleOptionsPrivate
width	vectors/gimpvectors-import.c	/^  gdouble       width;$/;"	m	struct:_SvgHandler	file:
width	widgets/gimpcursor.c	/^  const gint    width, height;$/;"	m	struct:_GimpCursor	file:
width	widgets/gimpnavigationview.h	/^  gdouble      width;$/;"	m	struct:_GimpNavigationView
width	widgets/gimpsessioninfo.h	/^  gint                    width;$/;"	m	struct:_GimpSessionInfo
width	widgets/gimpsizebox.h	/^  gint          width;$/;"	m	struct:_GimpSizeBox
width	widgets/gimpviewrenderer.h	/^  gint                width;$/;"	m	struct:_GimpViewRenderer
width	widgets/gimpviewrenderergradient.h	/^  gint              width;$/;"	m	struct:_GimpViewRendererGradient
width_entry	tools/gimprectangleoptions.h	/^  GtkWidget                  *width_entry;$/;"	m	struct:_GimpRectangleOptionsPrivate
width_label	tools/gimpmeasuretool.h	/^  GtkWidget       *width_label[2];$/;"	m	struct:_GimpMeasureTool
window	gui/splash.c	/^  GtkWidget      *window;$/;"	m	struct:__anon201	file:
window_actions_display_closed	actions/window-actions.c	/^window_actions_display_closed (GdkDisplay      *display,$/;"	f	file:
window_actions_display_opened	actions/window-actions.c	/^window_actions_display_opened (GdkDisplayManager *manager,$/;"	f	file:
window_actions_setup	actions/window-actions.c	/^window_actions_setup (GimpActionGroup *group,$/;"	f
window_actions_update	actions/window-actions.c	/^window_actions_update (GimpActionGroup *group,$/;"	f
window_close_cmd_callback	actions/window-commands.c	/^window_close_cmd_callback (GtkAction *action,$/;"	f
window_menu_display_closed	menus/window-menu.c	/^window_menu_display_closed (GdkDisplay    *display,$/;"	f	file:
window_menu_display_opened	menus/window-menu.c	/^window_menu_display_opened (GdkDisplayManager *disp_manager,$/;"	f	file:
window_menu_setup	menus/window-menu.c	/^window_menu_setup (GimpUIManager *manager,$/;"	f
window_move_to_screen_cmd_callback	actions/window-commands.c	/^window_move_to_screen_cmd_callback (GtkAction *action,$/;"	f
window_open_display_cmd_callback	actions/window-commands.c	/^window_open_display_cmd_callback (GtkAction *action,$/;"	f
window_state	display/gimpdisplayshell.h	/^  GdkWindowState    window_state;      \/* for fullscreen display              *\/$/;"	m	struct:_GimpDisplayShell
wrap_box	widgets/gimpcontainergridview.h	/^  GtkWidget        *wrap_box;$/;"	m	struct:_GimpContainerGridView
wrapped	widgets/gtkwrapbox.h	/^  guint      wrapped : 1;$/;"	m	struct:_GtkWrapBoxChild
writable	core/gimpdata.h	/^  guint         writable  : 1;$/;"	m	struct:_GimpData
writable	core/gimpdatafactory.h	/^  gboolean          writable;$/;"	m	struct:_GimpDataFactoryLoaderEntry
writable_property_name	core/gimpdatafactory.h	/^  gchar                            *writable_property_name;$/;"	m	struct:_GimpDataFactory
write_buffer	plug-in/gimpplugin.h	/^  gchar                write_buffer[WRITE_BUFFER_SIZE]; \/* Buffer for writing *\/$/;"	m	struct:_GimpPlugIn
write_buffer_index	plug-in/gimpplugin.h	/^  gint                 write_buffer_index;              \/* Buffer index       *\/$/;"	m	struct:_GimpPlugIn
write_count	base/tile-private.h	/^  gshort  write_count;  \/* write count: number of references that are$/;"	m	struct:_Tile
write_err_msg	base/tile-swap.c	/^static gboolean       write_err_msg    = TRUE;$/;"	v	file:
write_modulerc	core/gimp.h	/^  gboolean                write_modulerc;$/;"	m	struct:_Gimp
write_pixel_data	base/tile-manager.c	/^write_pixel_data (TileManager  *tm,$/;"	f
write_pixel_data_1	base/tile-manager.c	/^write_pixel_data_1 (TileManager  *tm,$/;"	f
write_pluginrc	plug-in/gimppluginmanager.h	/^  gboolean           write_pluginrc;$/;"	m	struct:_GimpPlugInManager
writer	core/gimpcontainer.c	/^  GimpConfigWriter *writer;$/;"	m	struct:__anon58	file:
x	base/pixel-region.h	/^  gint         x;              \/*  origin                        *\/$/;"	m	struct:_PixelRegion
x	base/siox.c	/^  gint          x;$/;"	m	struct:_SioxState	file:
x	base/temp-buf.h	/^  gint    x, y;       \/*  origin of data source                          *\/$/;"	m	struct:_TempBuf
x	base/tile-manager-private.h	/^  gint               x, y;          \/*  tile manager offsets                 *\/$/;"	m	struct:_TileManager
x	composite/gimp-composite.h	/^  struct { gint x; gint y; gint opacity; } dissolve;$/;"	m	struct:__anon33::__anon37
x	core/core-types.h	/^  gdouble x;$/;"	m	struct:_GimpCoords
x	core/gimp-transform-resize.c	/^  gdouble  x, y;$/;"	m	struct:__anon163	file:
x	core/gimpdrawableundo.h	/^  gint          x;$/;"	m	struct:_GimpDrawableUndo
x	core/gimpmaskundo.h	/^  gint          x;$/;"	m	struct:_GimpMaskUndo
x	core/gimpprojection.h	/^  gint    x;$/;"	m	struct:_GimpProjectionIdleRender
x	core/gimpsamplepoint.h	/^  gint     x;$/;"	m	struct:_GimpSamplePoint
x	core/gimpsamplepointundo.h	/^  gint             x;$/;"	m	struct:_GimpSamplePointUndo
x	display/gimpdisplayshell-render.c	/^  gint              x, y;$/;"	m	struct:_RenderInfo	file:
x	paint-funcs/paint-funcs-generic.h	/^  gint               x;$/;"	m	struct:apply_layer_mode_struct
x	paint/gimpink-blob.h	/^  gint x;$/;"	m	struct:_BlobPoint
x	tools/gimpbrightnesscontrasttool.h	/^  gdouble           x, y;$/;"	m	struct:_GimpBrightnessContrastTool
x	tools/gimpeditselectiontool.h	/^  gint                x, y;            \/*  Current x and y coords            *\/$/;"	m	struct:_GimpEditSelectionTool
x	tools/gimpiscissorstool.h	/^  gint            x, y;         \/*  upper left hand coordinate            *\/$/;"	m	struct:_GimpIscissorsTool
x	tools/gimpmagnifytool.h	/^  gdouble       x, y;  \/*  upper left hand coordinate  *\/$/;"	m	struct:_GimpMagnifyTool
x	tools/gimpmeasuretool.h	/^  gint             x[3];        \/*  three x coordinates        *\/$/;"	m	struct:_GimpMeasureTool
x	tools/gimpregionselecttool.h	/^  gint               x, y;$/;"	m	struct:_GimpRegionSelectTool
x	vectors/gimpvectors-compat.h	/^  gdouble x;$/;"	m	struct:_GimpVectorsCompatPoint
x	widgets/gimpnavigationview.h	/^  gdouble      x;$/;"	m	struct:_GimpNavigationView
x	widgets/gimpsessioninfo.h	/^  gint                    x;$/;"	m	struct:_GimpSessionInfo
x	widgets/gimpuimanager.c	/^  guint x;$/;"	m	struct:__anon322	file:
x0	core/gimpscanconvert.c	/^  gint            x0, x1;$/;"	m	struct:_GimpScanConvert	file:
x0	tools/gimpaligntool.h	/^  gint                   x0, y0, x1, y1;   \/* rubber-band rectangle *\/$/;"	m	struct:_GimpAlignTool
x0	tools/gimprectangleoptions.h	/^  gdouble                     x0;$/;"	m	struct:_GimpRectangleOptionsPrivate
x0	widgets/gimpdasheditor.h	/^  gint               x0;$/;"	m	struct:_GimpDashEditor
x1	base/boundary.h	/^  gint   x1;$/;"	m	struct:_BoundSeg
x1	core/gimparea.h	/^  gint x1, y1, x2, y2;   \/*  area bounds  *\/$/;"	m	struct:_GimpArea
x1	core/gimpchannel.h	/^  gint          x1, y1;            \/*  coordinates for bounding box   *\/$/;"	m	struct:_GimpChannel
x1	core/gimpscanconvert.c	/^  gint            x0, x1;$/;"	m	struct:_GimpScanConvert	file:
x1	paint/gimppaintcore.h	/^  gint         x1, y1;           \/*  undo extents in image coords        *\/$/;"	m	struct:_GimpPaintCore
x1	tools/gimpaligntool.h	/^  gint                   x0, y0, x1, y1;   \/* rubber-band rectangle *\/$/;"	m	struct:_GimpAlignTool
x1	tools/gimpeditselectiontool.h	/^  gint                x1, y1;          \/*  Bounding box of selection mask    *\/$/;"	m	struct:_GimpEditSelectionTool
x1	tools/gimpiscissorstool.c	/^  gint       x1, y1;$/;"	m	struct:_ICurve	file:
x1	tools/gimpperspectiveclonetool.h	/^  gint            x1, y1;         \/*  upper left hand coordinate       *\/$/;"	m	struct:_GimpPerspectiveCloneTool
x1	tools/gimprectangletool.c	/^  gint                    x1, y1;$/;"	m	struct:_GimpRectangleToolPrivate	file:
x1	tools/gimptexttool.h	/^  gint           x1, y1;$/;"	m	struct:_GimpTextTool
x1	tools/gimptransformtool.h	/^  gint            x1, y1;          \/*  upper left hand coordinate        *\/$/;"	m	struct:_GimpTransformTool
x2	base/boundary.h	/^  gint   x2;$/;"	m	struct:_BoundSeg
x2	core/gimparea.h	/^  gint x1, y1, x2, y2;   \/*  area bounds  *\/$/;"	m	struct:_GimpArea
x2	core/gimpchannel.h	/^  gint          x2, y2;            \/*  lower right hand coordinate    *\/$/;"	m	struct:_GimpChannel
x2	paint/gimppaintcore.h	/^  gint         x2, y2;           \/*  undo extents in image coords        *\/$/;"	m	struct:_GimpPaintCore
x2	tools/gimpeditselectiontool.h	/^  gint                x2, y2;$/;"	m	struct:_GimpEditSelectionTool
x2	tools/gimpiscissorstool.c	/^  gint       x2, y2;$/;"	m	struct:_ICurve	file:
x2	tools/gimpperspectiveclonetool.h	/^  gint            x2, y2;         \/*  lower right hand coords          *\/$/;"	m	struct:_GimpPerspectiveCloneTool
x2	tools/gimprectangletool.c	/^  gint                    x2, y2;$/;"	m	struct:_GimpRectangleToolPrivate	file:
x2	tools/gimptexttool.h	/^  gint           x2, y2;$/;"	m	struct:_GimpTextTool
x2	tools/gimptransformtool.h	/^  gint            x2, y2;          \/*  lower right hand coords           *\/$/;"	m	struct:_GimpTransformTool
x_adj	tools/gimpsheartool.h	/^  GtkObject         *x_adj;$/;"	m	struct:_GimpShearTool
x_axis	core/gimpbrush.h	/^  GimpVector2   x_axis;     \/*  for calculating brush spacing  *\/$/;"	m	struct:_GimpBrush
x_hot	widgets/gimpcursor.c	/^  const gint    x_hot, y_hot;$/;"	m	struct:_GimpCursor	file:
xcf_calc_levels	xcf/xcf-save.c	/^xcf_calc_levels (gint size,$/;"	f	file:
xcf_check_error	xcf/xcf-save.c	217;"	d	file:
xcf_exit	xcf/xcf.c	/^xcf_exit (Gimp *gimp)$/;"	f
xcf_init	xcf/xcf.c	/^xcf_init (Gimp *gimp)$/;"	f
xcf_load_channel	xcf/xcf-load.c	/^xcf_load_channel (XcfInfo   *info,$/;"	f	file:
xcf_load_channel_props	xcf/xcf-load.c	/^xcf_load_channel_props (XcfInfo      *info,$/;"	f	file:
xcf_load_hierarchy	xcf/xcf-load.c	/^xcf_load_hierarchy (XcfInfo     *info,$/;"	f	file:
xcf_load_image	xcf/xcf-load.c	/^xcf_load_image (Gimp    *gimp,$/;"	f
xcf_load_image_props	xcf/xcf-load.c	/^xcf_load_image_props (XcfInfo   *info,$/;"	f	file:
xcf_load_invoker	xcf/xcf.c	/^xcf_load_invoker (GimpProcedure     *procedure,$/;"	f	file:
xcf_load_layer	xcf/xcf-load.c	/^xcf_load_layer (XcfInfo   *info,$/;"	f	file:
xcf_load_layer_mask	xcf/xcf-load.c	/^xcf_load_layer_mask (XcfInfo   *info,$/;"	f	file:
xcf_load_layer_props	xcf/xcf-load.c	/^xcf_load_layer_props (XcfInfo   *info,$/;"	f	file:
xcf_load_level	xcf/xcf-load.c	/^xcf_load_level (XcfInfo     *info,$/;"	f	file:
xcf_load_old_path	xcf/xcf-load.c	/^xcf_load_old_path (XcfInfo   *info,$/;"	f	file:
xcf_load_old_paths	xcf/xcf-load.c	/^xcf_load_old_paths (XcfInfo   *info,$/;"	f	file:
xcf_load_parasite	xcf/xcf-load.c	/^xcf_load_parasite (XcfInfo *info)$/;"	f	file:
xcf_load_prop	xcf/xcf-load.c	/^xcf_load_prop (XcfInfo  *info,$/;"	f	file:
xcf_load_tile	xcf/xcf-load.c	/^xcf_load_tile (XcfInfo *info,$/;"	f	file:
xcf_load_tile_rle	xcf/xcf-load.c	/^xcf_load_tile_rle (XcfInfo *info,$/;"	f	file:
xcf_load_vector	xcf/xcf-load.c	/^xcf_load_vector (XcfInfo   *info,$/;"	f	file:
xcf_load_vectors	xcf/xcf-load.c	/^xcf_load_vectors (XcfInfo   *info,$/;"	f	file:
xcf_loaders	xcf/xcf.c	/^static GimpXcfLoaderFunc * const xcf_loaders[] =$/;"	v	file:
xcf_print_error	xcf/xcf-save.c	222;"	d	file:
xcf_progress_update	xcf/xcf-load.c	114;"	d	file:
xcf_progress_update	xcf/xcf-save.c	233;"	d	file:
xcf_read_float	xcf/xcf-read.c	/^xcf_read_float (FILE   *fp,$/;"	f
xcf_read_int32	xcf/xcf-read.c	/^xcf_read_int32 (FILE    *fp,$/;"	f
xcf_read_int8	xcf/xcf-read.c	/^xcf_read_int8 (FILE   *fp,$/;"	f
xcf_read_string	xcf/xcf-read.c	/^xcf_read_string (FILE   *fp,$/;"	f
xcf_save_channel	xcf/xcf-save.c	/^xcf_save_channel (XcfInfo      *info,$/;"	f	file:
xcf_save_channel_props	xcf/xcf-save.c	/^xcf_save_channel_props (XcfInfo      *info,$/;"	f	file:
xcf_save_choose_format	xcf/xcf-save.c	/^xcf_save_choose_format (XcfInfo   *info,$/;"	f
xcf_save_hierarchy	xcf/xcf-save.c	/^xcf_save_hierarchy (XcfInfo      *info,$/;"	f	file:
xcf_save_image	xcf/xcf-save.c	/^xcf_save_image (XcfInfo   *info,$/;"	f
xcf_save_image_props	xcf/xcf-save.c	/^xcf_save_image_props (XcfInfo    *info,$/;"	f	file:
xcf_save_invoker	xcf/xcf.c	/^xcf_save_invoker (GimpProcedure     *procedure,$/;"	f	file:
xcf_save_layer	xcf/xcf-save.c	/^xcf_save_layer (XcfInfo    *info,$/;"	f	file:
xcf_save_layer_props	xcf/xcf-save.c	/^xcf_save_layer_props (XcfInfo    *info,$/;"	f	file:
xcf_save_level	xcf/xcf-save.c	/^xcf_save_level (XcfInfo      *info,$/;"	f	file:
xcf_save_old_paths	xcf/xcf-save.c	/^xcf_save_old_paths (XcfInfo    *info,$/;"	f	file:
xcf_save_parasite	xcf/xcf-save.c	/^xcf_save_parasite (XcfInfo       *info,$/;"	f	file:
xcf_save_parasite_func	xcf/xcf-save.c	/^xcf_save_parasite_func (gchar           *key,$/;"	f	file:
xcf_save_parasite_list	xcf/xcf-save.c	/^xcf_save_parasite_list (XcfInfo           *info,$/;"	f	file:
xcf_save_prop	xcf/xcf-save.c	/^xcf_save_prop (XcfInfo    *info,$/;"	f	file:
xcf_save_tile	xcf/xcf-save.c	/^xcf_save_tile (XcfInfo  *info,$/;"	f	file:
xcf_save_tile_rle	xcf/xcf-save.c	/^xcf_save_tile_rle (XcfInfo  *info,$/;"	f	file:
xcf_save_vectors	xcf/xcf-save.c	/^xcf_save_vectors (XcfInfo    *info,$/;"	f	file:
xcf_seek_end	xcf/xcf-seek.c	/^xcf_seek_end (XcfInfo  *info,$/;"	f
xcf_seek_pos	xcf/xcf-seek.c	/^xcf_seek_pos (XcfInfo  *info,$/;"	f
xcf_write_float	xcf/xcf-write.c	/^xcf_write_float (FILE           *fp,$/;"	f
xcf_write_float_check_error	xcf/xcf-save.c	141;"	d	file:
xcf_write_float_print_error	xcf/xcf-save.c	183;"	d	file:
xcf_write_int32	xcf/xcf-write.c	/^xcf_write_int32 (FILE           *fp,$/;"	f
xcf_write_int32_check_error	xcf/xcf-save.c	123;"	d	file:
xcf_write_int32_print_error	xcf/xcf-save.c	159;"	d	file:
xcf_write_int8	xcf/xcf-write.c	/^xcf_write_int8 (FILE           *fp,$/;"	f
xcf_write_int8_check_error	xcf/xcf-save.c	132;"	d	file:
xcf_write_int8_print_error	xcf/xcf-save.c	171;"	d	file:
xcf_write_prop_type_check_error	xcf/xcf-save.c	207;"	d	file:
xcf_write_prop_type_print_error	xcf/xcf-save.c	212;"	d	file:
xcf_write_string	xcf/xcf-write.c	/^xcf_write_string (FILE     *fp,$/;"	f
xcf_write_string_check_error	xcf/xcf-save.c	150;"	d	file:
xcf_write_string_print_error	xcf/xcf-save.c	195;"	d	file:
xdelta	display/gimpdisplayshell-render.c	/^  gint              xdelta;$/;"	m	struct:_RenderInfo	file:
xmm_high_bytes_to_words	composite/gimp-composite-x86.h	39;"	d
xmm_low_bytes_to_words	composite/gimp-composite-x86.h	35;"	d
xmm_pdivwX	composite/gimp-composite-x86.h	176;"	d
xmm_pdivwqX	composite/gimp-composite-x86.h	125;"	d
xmm_pdivwuqX	composite/gimp-composite-x86.h	189;"	d
xmm_pmulwX	composite/gimp-composite-x86.h	227;"	d
xn	widgets/gimpcolormapeditor.h	/^  gint             xn;$/;"	m	struct:_GimpColormapEditor
xnn	base/cpercep.c	/^static double xnn, znn;$/;"	v	file:
xoffset	core/gimpgrid.h	/^  gdouble        xoffset;$/;"	m	struct:_GimpGrid
xor_color	config/gimpdisplayconfig.h	/^  GimpRGB             xor_color;$/;"	m	struct:_GimpDisplayConfig
xpos_layout	tools/gimpcurvestool.h	/^  PangoLayout          *xpos_layout;$/;"	m	struct:_GimpCurvesTool
xrange	tools/gimpcurvestool.h	/^  GtkWidget            *xrange;$/;"	m	struct:_GimpCurvesTool
xres	dialogs/print-size-dialog.c	/^  gdouble                 xres;$/;"	m	struct:__anon183	file:
xres	text/gimptext-private.h	/^  gdouble         xres;$/;"	m	struct:_GimpTextLayout
xresolution	core/gimpimage.h	/^  gdouble            xresolution;           \/*  image x-res, in dpi          *\/$/;"	m	struct:_GimpImage
xresolution	core/gimpimageundo.h	/^  gdouble            xresolution;$/;"	m	struct:_GimpImageUndo
xresolution	core/gimptemplate.h	/^  gdouble            xresolution;$/;"	m	struct:_GimpTemplate
xresolution	dialogs/image-scale-dialog.c	/^  gdouble                xresolution;$/;"	m	struct:__anon167	file:
xresolution	text/gimpfontlist.h	/^  gdouble   xresolution;$/;"	m	struct:_GimpFontList
xresolution	widgets/gimpgrideditor.h	/^  gdouble       xresolution;$/;"	m	struct:_GimpGridEditor
xresolution	widgets/gimpsizebox.h	/^  gdouble       xresolution;$/;"	m	struct:_GimpSizeBox
xsbpp	base/siox.c	/^  gint          xsbpp;$/;"	m	struct:_SioxState	file:
xsize	dialogs/layer-options-dialog.h	/^  gint          xsize;$/;"	m	struct:_LayerOptionsDialog
xspacing	core/gimpgrid.h	/^  gdouble        xspacing;$/;"	m	struct:_GimpGrid
xstart	display/gimpdisplayshell-render.c	/^  gint              xstart;$/;"	m	struct:_RenderInfo	file:
xtilt	core/core-types.h	/^  gdouble xtilt;$/;"	m	struct:_GimpCoords
xyz_to_lab	base/cpercep.c	/^xyz_to_lab (double *inx,$/;"	f	file:
xyz_to_rgb	base/cpercep.c	/^xyz_to_rgb (double *inx_outr,$/;"	f	file:
y	base/pixel-region.h	/^  gint         y;              \/*  origin                        *\/$/;"	m	struct:_PixelRegion
y	base/siox.c	/^  gint          y;$/;"	m	struct:_SioxState	file:
y	base/temp-buf.h	/^  gint    x, y;       \/*  origin of data source                          *\/$/;"	m	struct:_TempBuf
y	base/tile-manager-private.h	/^  gint               x, y;          \/*  tile manager offsets                 *\/$/;"	m	struct:_TileManager
y	composite/gimp-composite.h	/^  struct { gint x; gint y; gint opacity; } dissolve;$/;"	m	struct:__anon33::__anon37
y	core/core-types.h	/^  gdouble y;$/;"	m	struct:_GimpCoords
y	core/gimp-transform-resize.c	/^  gdouble  x, y;$/;"	m	struct:__anon163	file:
y	core/gimpdrawableundo.h	/^  gint          y;$/;"	m	struct:_GimpDrawableUndo
y	core/gimpmaskundo.h	/^  gint          y;$/;"	m	struct:_GimpMaskUndo
y	core/gimpprojection.h	/^  gint    y;$/;"	m	struct:_GimpProjectionIdleRender
y	core/gimpsamplepoint.h	/^  gint     y;$/;"	m	struct:_GimpSamplePoint
y	core/gimpsamplepointundo.h	/^  gint             y;$/;"	m	struct:_GimpSamplePointUndo
y	display/gimpdisplayshell-render.c	/^  gint              x, y;$/;"	m	struct:_RenderInfo	file:
y	paint-funcs/paint-funcs-generic.h	/^  gint               y;$/;"	m	struct:apply_layer_mode_struct
y	paint/gimpink-blob.h	/^  gint     y;$/;"	m	struct:_Blob
y	paint/gimpink-blob.h	/^  gint y;$/;"	m	struct:_BlobPoint
y	tools/gimpbrightnesscontrasttool.h	/^  gdouble           x, y;$/;"	m	struct:_GimpBrightnessContrastTool
y	tools/gimpeditselectiontool.h	/^  gint                x, y;            \/*  Current x and y coords            *\/$/;"	m	struct:_GimpEditSelectionTool
y	tools/gimpiscissorstool.h	/^  gint            x, y;         \/*  upper left hand coordinate            *\/$/;"	m	struct:_GimpIscissorsTool
y	tools/gimpmagnifytool.h	/^  gdouble       x, y;  \/*  upper left hand coordinate  *\/$/;"	m	struct:_GimpMagnifyTool
y	tools/gimpmeasuretool.h	/^  gint             y[3];        \/*  three y coordinates        *\/$/;"	m	struct:_GimpMeasureTool
y	tools/gimpregionselecttool.h	/^  gint               x, y;$/;"	m	struct:_GimpRegionSelectTool
y	vectors/gimpvectors-compat.h	/^  gdouble y;$/;"	m	struct:_GimpVectorsCompatPoint
y	widgets/gimpnavigationview.h	/^  gdouble      y;$/;"	m	struct:_GimpNavigationView
y	widgets/gimpsessioninfo.h	/^  gint                    y;$/;"	m	struct:_GimpSessionInfo
y	widgets/gimpuimanager.c	/^  guint y;$/;"	m	struct:__anon322	file:
y0	tools/gimpaligntool.h	/^  gint                   x0, y0, x1, y1;   \/* rubber-band rectangle *\/$/;"	m	struct:_GimpAlignTool
y0	tools/gimprectangleoptions.h	/^  gdouble                     y0;$/;"	m	struct:_GimpRectangleOptionsPrivate
y0	widgets/gimpdasheditor.h	/^  gint               y0;$/;"	m	struct:_GimpDashEditor
y1	base/boundary.h	/^  gint   y1;$/;"	m	struct:_BoundSeg
y1	core/gimparea.h	/^  gint x1, y1, x2, y2;   \/*  area bounds  *\/$/;"	m	struct:_GimpArea
y1	core/gimpchannel.h	/^  gint          x1, y1;            \/*  coordinates for bounding box   *\/$/;"	m	struct:_GimpChannel
y1	paint/gimppaintcore.h	/^  gint         x1, y1;           \/*  undo extents in image coords        *\/$/;"	m	struct:_GimpPaintCore
y1	tools/gimpaligntool.h	/^  gint                   x0, y0, x1, y1;   \/* rubber-band rectangle *\/$/;"	m	struct:_GimpAlignTool
y1	tools/gimpeditselectiontool.h	/^  gint                x1, y1;          \/*  Bounding box of selection mask    *\/$/;"	m	struct:_GimpEditSelectionTool
y1	tools/gimpiscissorstool.c	/^  gint       x1, y1;$/;"	m	struct:_ICurve	file:
y1	tools/gimpperspectiveclonetool.h	/^  gint            x1, y1;         \/*  upper left hand coordinate       *\/$/;"	m	struct:_GimpPerspectiveCloneTool
y1	tools/gimprectangletool.c	/^  gint                    x1, y1;$/;"	m	struct:_GimpRectangleToolPrivate	file:
y1	tools/gimptexttool.h	/^  gint           x1, y1;$/;"	m	struct:_GimpTextTool
y1	tools/gimptransformtool.h	/^  gint            x1, y1;          \/*  upper left hand coordinate        *\/$/;"	m	struct:_GimpTransformTool
y2	base/boundary.h	/^  gint   y2;$/;"	m	struct:_BoundSeg
y2	core/gimparea.h	/^  gint x1, y1, x2, y2;   \/*  area bounds  *\/$/;"	m	struct:_GimpArea
y2	core/gimpchannel.h	/^  gint          x2, y2;            \/*  lower right hand coordinate    *\/$/;"	m	struct:_GimpChannel
y2	paint/gimppaintcore.h	/^  gint         x2, y2;           \/*  undo extents in image coords        *\/$/;"	m	struct:_GimpPaintCore
y2	tools/gimpeditselectiontool.h	/^  gint                x2, y2;$/;"	m	struct:_GimpEditSelectionTool
y2	tools/gimpiscissorstool.c	/^  gint       x2, y2;$/;"	m	struct:_ICurve	file:
y2	tools/gimpperspectiveclonetool.h	/^  gint            x2, y2;         \/*  lower right hand coords          *\/$/;"	m	struct:_GimpPerspectiveCloneTool
y2	tools/gimprectangletool.c	/^  gint                    x2, y2;$/;"	m	struct:_GimpRectangleToolPrivate	file:
y2	tools/gimptexttool.h	/^  gint           x2, y2;$/;"	m	struct:_GimpTextTool
y2	tools/gimptransformtool.h	/^  gint            x2, y2;          \/*  lower right hand coords           *\/$/;"	m	struct:_GimpTransformTool
y_adj	tools/gimpsheartool.h	/^  GtkObject         *y_adj;$/;"	m	struct:_GimpShearTool
y_axis	core/gimpbrush.h	/^  GimpVector2   y_axis;     \/*  for calculating brush spacing  *\/$/;"	m	struct:_GimpBrush
y_hot	widgets/gimpcursor.c	/^  const gint    x_hot, y_hot;$/;"	m	struct:_GimpCursor	file:
yellow_blue	base/color-balance.h	/^  gdouble  yellow_blue[3];$/;"	m	struct:_ColorBalance
yellow_blue_adj	tools/gimpcolorbalancetool.h	/^  GtkAdjustment    *yellow_blue_adj;$/;"	m	struct:_GimpColorBalanceTool
yfraction	display/gimpdisplayshell-render.c	/^  gint              yfraction;$/;"	m	struct:_RenderInfo	file:
yn	widgets/gimpcolormapeditor.h	/^  gint             yn;$/;"	m	struct:_GimpColormapEditor
yoffset	core/gimpgrid.h	/^  gdouble        yoffset;$/;"	m	struct:_GimpGrid
yrange	tools/gimpcurvestool.h	/^  GtkWidget            *yrange;$/;"	m	struct:_GimpCurvesTool
yres	dialogs/print-size-dialog.c	/^  gdouble                 yres;$/;"	m	struct:__anon183	file:
yres	text/gimptext-private.h	/^  gdouble         yres;$/;"	m	struct:_GimpTextLayout
yresolution	core/gimpimage.h	/^  gdouble            yresolution;           \/*  image y-res, in dpi          *\/$/;"	m	struct:_GimpImage
yresolution	core/gimpimageundo.h	/^  gdouble            yresolution;$/;"	m	struct:_GimpImageUndo
yresolution	core/gimptemplate.h	/^  gdouble            yresolution;$/;"	m	struct:_GimpTemplate
yresolution	dialogs/image-scale-dialog.c	/^  gdouble                yresolution;$/;"	m	struct:__anon167	file:
yresolution	text/gimpfontlist.h	/^  gdouble   yresolution;$/;"	m	struct:_GimpFontList
yresolution	widgets/gimpgrideditor.h	/^  gdouble       yresolution;$/;"	m	struct:_GimpGridEditor
yresolution	widgets/gimpsizebox.h	/^  gdouble       yresolution;$/;"	m	struct:_GimpSizeBox
ysize	dialogs/layer-options-dialog.h	/^  gint          ysize;$/;"	m	struct:_LayerOptionsDialog
yspacing	core/gimpgrid.h	/^  gdouble        yspacing;$/;"	m	struct:_GimpGrid
ytilt	core/core-types.h	/^  gdouble ytilt;$/;"	m	struct:_GimpCoords
zero_histogram_gray	core/gimpimage-convert.c	/^zero_histogram_gray (CFHistogram histogram)$/;"	f	file:
zero_histogram_rgb	core/gimpimage-convert.c	/^zero_histogram_rgb (CFHistogram histogram)$/;"	f	file:
znn	base/cpercep.c	/^static double xnn, znn;$/;"	v	file:
zoom	display/gimpdisplayshell.h	/^  GimpZoomModel    *zoom;$/;"	m	struct:_GimpDisplayShell
zoom	widgets/gimpnavigationview.h	/^  void (* zoom)           (GimpNavigationView *view,$/;"	m	struct:_GimpNavigationViewClass
zoom_100_button	display/gimpnavigationeditor.h	/^  GtkWidget        *zoom_100_button;$/;"	m	struct:_GimpNavigationEditor
zoom_adjustment	display/gimpnavigationeditor.h	/^  GtkAdjustment    *zoom_adjustment;$/;"	m	struct:_GimpNavigationEditor
zoom_button	display/gimpdisplayshell.h	/^  GtkWidget        *zoom_button;       \/*  NE: zoom toggle button             *\/$/;"	m	struct:_GimpDisplayShell
zoom_factor	widgets/gimpgradienteditor.h	/^  guint           zoom_factor;$/;"	m	struct:_GimpGradientEditor
zoom_factor	widgets/gimppaletteeditor.h	/^  gfloat            zoom_factor;  \/* range from 0.1 to 4.0 *\/$/;"	m	struct:_GimpPaletteEditor
zoom_fit_in_button	display/gimpnavigationeditor.h	/^  GtkWidget        *zoom_fit_in_button;$/;"	m	struct:_GimpNavigationEditor
zoom_fit_to_button	display/gimpnavigationeditor.h	/^  GtkWidget        *zoom_fit_to_button;$/;"	m	struct:_GimpNavigationEditor
zoom_in_button	display/gimpnavigationeditor.h	/^  GtkWidget        *zoom_in_button;$/;"	m	struct:_GimpNavigationEditor
zoom_label	display/gimpnavigationeditor.h	/^  GtkWidget        *zoom_label;$/;"	m	struct:_GimpNavigationEditor
zoom_on_resize	display/gimpdisplayshell.h	/^  gboolean          zoom_on_resize;$/;"	m	struct:_GimpDisplayShell
zoom_out_button	display/gimpnavigationeditor.h	/^  GtkWidget        *zoom_out_button;$/;"	m	struct:_GimpNavigationEditor
zoom_type	tools/gimpmagnifyoptions.h	/^  GimpZoomType      zoom_type;$/;"	m	struct:_GimpMagnifyOptions

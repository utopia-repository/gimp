--- gimp-2.2.11.orig/app/composite/gimp-composite-generic.c
+++ gimp-2.2.11/app/composite/gimp-composite-generic.c
@@ -88,8 +88,8 @@
 {
   int i;
   int j;
-  char *D = ctx->D;
-  char *A = ctx->A;
+  unsigned char *D = ctx->D;
+  unsigned char *A = ctx->A;
   int bpp_A = gimp_composite_pixel_bpp[ctx->pixelformat_A];
   int bpp_D = gimp_composite_pixel_bpp[ctx->pixelformat_D];
 
@@ -374,8 +374,8 @@
   guint bytes2 = gimp_composite_pixel_bpp[ctx->pixelformat_B];
   const guint has_alpha1 = HAS_ALPHA(bytes1);
   const guint has_alpha2 = HAS_ALPHA(bytes2);
-  guint r1, g1, b1;
-  guint r2, g2, b2;
+  gint r1, g1, b1;
+  gint r2, g2, b2;
 
   if (bytes1 > 2)
     {
@@ -442,8 +442,8 @@
   guint bytes2 = gimp_composite_pixel_bpp[ctx->pixelformat_B];
   const guint has_alpha1 = HAS_ALPHA(bytes1);
   const guint has_alpha2 = HAS_ALPHA(bytes2);
-  guint r1, g1, b1;
-  guint r2, g2, b2;
+  gint r1, g1, b1;
+  gint r2, g2, b2;
 
   if (bytes1 > 2) {
     /*  assumes inputs are only 4 byte RGBA pixels  */
@@ -501,8 +501,8 @@
   guint bytes2 = gimp_composite_pixel_bpp[ctx->pixelformat_B];
   const guint has_alpha1 = HAS_ALPHA(bytes1);
   const guint has_alpha2 = HAS_ALPHA(bytes2);
-  guint r1, g1, b1;
-  guint r2, g2, b2;
+  gint r1, g1, b1;
+  gint r2, g2, b2;
 
   if (bytes1 > 2) {
     /*  assumes inputs are only 4 byte RGBA pixels  */
@@ -561,8 +561,8 @@
   guint bytes2 = gimp_composite_pixel_bpp[ctx->pixelformat_B];
   const guint has_alpha1 = HAS_ALPHA(bytes1);
   const guint has_alpha2 = HAS_ALPHA(bytes2);
-  guint r1, g1, b1;
-  guint r2, g2, b2;
+  gint r1, g1, b1;
+  gint r2, g2, b2;
 
   if (bytes1 > 2) {
     /*  assumes inputs are only 4 byte RGBA pixels  */

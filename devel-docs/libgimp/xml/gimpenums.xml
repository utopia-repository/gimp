<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="libgimp-gimpenums">
<refmeta>
<refentrytitle role="top_of_page" id="libgimp-gimpenums.top_of_page">gimpenums</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGIMP Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gimpenums</refname>
<refpurpose>Enums and definitions.</refpurpose>
</refnamediv>

<refsynopsisdiv id="libgimp-gimpenums.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="void">void</link>                <link linkend="gimp-enums-init">gimp_enums_init</link>                     (void);
enum                <link linkend="GimpBrushApplicationMode">GimpBrushApplicationMode</link>;
enum                <link linkend="GimpBrushGeneratedShape">GimpBrushGeneratedShape</link>;
enum                <link linkend="GimpConvertDitherType">GimpConvertDitherType</link>;
enum                <link linkend="GimpConvertPaletteType">GimpConvertPaletteType</link>;
enum                <link linkend="GimpConvolutionType">GimpConvolutionType</link>;
enum                <link linkend="GimpConvolveType">GimpConvolveType</link>;
enum                <link linkend="GimpFillType">GimpFillType</link>;
enum                <link linkend="GimpGradientSegmentColor">GimpGradientSegmentColor</link>;
enum                <link linkend="GimpGradientSegmentType">GimpGradientSegmentType</link>;
enum                <link linkend="GimpHistogramChannel">GimpHistogramChannel</link>;
enum                <link linkend="GimpHueRange">GimpHueRange</link>;
enum                <link linkend="GimpLayerModeEffects">GimpLayerModeEffects</link>;
enum                <link linkend="GimpMaskApplyMode">GimpMaskApplyMode</link>;
enum                <link linkend="GimpMergeType">GimpMergeType</link>;
enum                <link linkend="GimpOffsetType">GimpOffsetType</link>;
enum                <link linkend="GimpOrientationType">GimpOrientationType</link>;
enum                <link linkend="GimpRotationType">GimpRotationType</link>;
enum                <link linkend="GimpSelectCriterion">GimpSelectCriterion</link>;
const <link linkend="gchar">gchar</link> **      <link linkend="gimp-enums-get-type-names">gimp_enums_get_type_names</link>           (<link linkend="gint">gint</link> *n_type_names);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libgimp-gimpenums.description" role="desc">
<title role="desc.title">Description</title>
<para>
Enums and definitions.
</para>
</refsect1>

<refsect1 id="libgimp-gimpenums.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="gimp-enums-init" role="function" condition="since:GIMP 2.4">
<title>gimp_enums_init ()</title>
<indexterm zone="gimp-enums-init" role="GIMP 2.4"><primary sortas="gimp_enums_init">gimp_enums_init</primary></indexterm><programlisting><link linkend="void">void</link>                gimp_enums_init                     (void);</programlisting>
<para>
This function makes sure all the enum types are registered
with the GObject type system. This is intended for use by
language bindings that need the symbols early, before gimp_main
is run. It's not necessary for plug-ins to call this directly,
as the normal plug-in initialization code will handle it
implicitly.</para>
<para>
</para><para role="since">Since GIMP 2.4</para></refsect2>
<refsect2 id="GimpBrushApplicationMode" role="enum">
<title>enum GimpBrushApplicationMode</title>
<indexterm zone="GimpBrushApplicationMode"><primary sortas="GimpBrushApplicationMode">GimpBrushApplicationMode</primary></indexterm><programlisting>typedef enum
{
  GIMP_BRUSH_HARD,
  GIMP_BRUSH_SOFT
} GimpBrushApplicationMode;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpBrushGeneratedShape" role="enum">
<title>enum GimpBrushGeneratedShape</title>
<indexterm zone="GimpBrushGeneratedShape"><primary sortas="GimpBrushGeneratedShape">GimpBrushGeneratedShape</primary></indexterm><programlisting>typedef enum
{
  GIMP_BRUSH_GENERATED_CIRCLE,
  GIMP_BRUSH_GENERATED_SQUARE,
  GIMP_BRUSH_GENERATED_DIAMOND
} GimpBrushGeneratedShape;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpConvertDitherType" role="enum">
<title>enum GimpConvertDitherType</title>
<indexterm zone="GimpConvertDitherType"><primary sortas="GimpConvertDitherType">GimpConvertDitherType</primary></indexterm><programlisting>typedef enum
{
  GIMP_NO_DITHER,
  GIMP_FS_DITHER,
  GIMP_FSLOWBLEED_DITHER,
  GIMP_FIXED_DITHER
} GimpConvertDitherType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpConvertPaletteType" role="enum">
<title>enum GimpConvertPaletteType</title>
<indexterm zone="GimpConvertPaletteType"><primary sortas="GimpConvertPaletteType">GimpConvertPaletteType</primary></indexterm><programlisting>typedef enum
{
  GIMP_MAKE_PALETTE,
  GIMP_REUSE_PALETTE,
  GIMP_WEB_PALETTE,
  GIMP_MONO_PALETTE,
  GIMP_CUSTOM_PALETTE
} GimpConvertPaletteType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpConvolutionType" role="enum">
<title>enum GimpConvolutionType</title>
<indexterm zone="GimpConvolutionType"><primary sortas="GimpConvolutionType">GimpConvolutionType</primary></indexterm><programlisting>typedef enum
{
  GIMP_NORMAL_CONVOL,
  GIMP_ABSOLUTE_CONVOL,
  GIMP_NEGATIVE_CONVOL
} GimpConvolutionType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpConvolveType" role="enum">
<title>enum GimpConvolveType</title>
<indexterm zone="GimpConvolveType"><primary sortas="GimpConvolveType">GimpConvolveType</primary></indexterm><programlisting>typedef enum
{
  GIMP_BLUR_CONVOLVE,
  GIMP_SHARPEN_CONVOLVE
} GimpConvolveType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpFillType" role="enum">
<title>enum GimpFillType</title>
<indexterm zone="GimpFillType"><primary sortas="GimpFillType">GimpFillType</primary></indexterm><programlisting>typedef enum
{
  GIMP_FOREGROUND_FILL,
  GIMP_BACKGROUND_FILL,
  GIMP_WHITE_FILL,
  GIMP_TRANSPARENT_FILL,
  GIMP_PATTERN_FILL
} GimpFillType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpGradientSegmentColor" role="enum">
<title>enum GimpGradientSegmentColor</title>
<indexterm zone="GimpGradientSegmentColor"><primary sortas="GimpGradientSegmentColor">GimpGradientSegmentColor</primary></indexterm><programlisting>typedef enum
{
  GIMP_GRADIENT_SEGMENT_RGB,
  GIMP_GRADIENT_SEGMENT_HSV_CCW,
  GIMP_GRADIENT_SEGMENT_HSV_CW
} GimpGradientSegmentColor;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpGradientSegmentType" role="enum">
<title>enum GimpGradientSegmentType</title>
<indexterm zone="GimpGradientSegmentType"><primary sortas="GimpGradientSegmentType">GimpGradientSegmentType</primary></indexterm><programlisting>typedef enum
{
  GIMP_GRADIENT_SEGMENT_LINEAR,
  GIMP_GRADIENT_SEGMENT_CURVED,
  GIMP_GRADIENT_SEGMENT_SINE,
  GIMP_GRADIENT_SEGMENT_SPHERE_INCREASING,
  GIMP_GRADIENT_SEGMENT_SPHERE_DECREASING
} GimpGradientSegmentType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpHistogramChannel" role="enum">
<title>enum GimpHistogramChannel</title>
<indexterm zone="GimpHistogramChannel"><primary sortas="GimpHistogramChannel">GimpHistogramChannel</primary></indexterm><programlisting>typedef enum
{
  GIMP_HISTOGRAM_VALUE,
  GIMP_HISTOGRAM_RED,
  GIMP_HISTOGRAM_GREEN,
  GIMP_HISTOGRAM_BLUE,
  GIMP_HISTOGRAM_ALPHA
} GimpHistogramChannel;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpHueRange" role="enum">
<title>enum GimpHueRange</title>
<indexterm zone="GimpHueRange"><primary sortas="GimpHueRange">GimpHueRange</primary></indexterm><programlisting>typedef enum
{
  GIMP_ALL_HUES,
  GIMP_RED_HUES,
  GIMP_YELLOW_HUES,
  GIMP_GREEN_HUES,
  GIMP_CYAN_HUES,
  GIMP_BLUE_HUES,
  GIMP_MAGENTA_HUES
} GimpHueRange;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpLayerModeEffects" role="enum">
<title>enum GimpLayerModeEffects</title>
<indexterm zone="GimpLayerModeEffects"><primary sortas="GimpLayerModeEffects">GimpLayerModeEffects</primary></indexterm><programlisting>typedef enum
{
  GIMP_NORMAL_MODE,
  GIMP_DISSOLVE_MODE,
  GIMP_BEHIND_MODE,
  GIMP_MULTIPLY_MODE,
  GIMP_SCREEN_MODE,
  GIMP_OVERLAY_MODE,
  GIMP_DIFFERENCE_MODE,
  GIMP_ADDITION_MODE,
  GIMP_SUBTRACT_MODE,
  GIMP_DARKEN_ONLY_MODE,
  GIMP_LIGHTEN_ONLY_MODE,
  GIMP_HUE_MODE,
  GIMP_SATURATION_MODE,
  GIMP_COLOR_MODE,
  GIMP_VALUE_MODE,
  GIMP_DIVIDE_MODE,
  GIMP_DODGE_MODE,
  GIMP_BURN_MODE,
  GIMP_HARDLIGHT_MODE,
  GIMP_SOFTLIGHT_MODE,
  GIMP_GRAIN_EXTRACT_MODE,
  GIMP_GRAIN_MERGE_MODE,
  GIMP_COLOR_ERASE_MODE
} GimpLayerModeEffects;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpMaskApplyMode" role="enum">
<title>enum GimpMaskApplyMode</title>
<indexterm zone="GimpMaskApplyMode"><primary sortas="GimpMaskApplyMode">GimpMaskApplyMode</primary></indexterm><programlisting>typedef enum
{
  GIMP_MASK_APPLY,
  GIMP_MASK_DISCARD
} GimpMaskApplyMode;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpMergeType" role="enum">
<title>enum GimpMergeType</title>
<indexterm zone="GimpMergeType"><primary sortas="GimpMergeType">GimpMergeType</primary></indexterm><programlisting>typedef enum
{
  GIMP_EXPAND_AS_NECESSARY,
  GIMP_CLIP_TO_IMAGE,
  GIMP_CLIP_TO_BOTTOM_LAYER,
  GIMP_FLATTEN_IMAGE
} GimpMergeType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpOffsetType" role="enum">
<title>enum GimpOffsetType</title>
<indexterm zone="GimpOffsetType"><primary sortas="GimpOffsetType">GimpOffsetType</primary></indexterm><programlisting>typedef enum
{
  GIMP_OFFSET_BACKGROUND,
  GIMP_OFFSET_TRANSPARENT
} GimpOffsetType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpOrientationType" role="enum">
<title>enum GimpOrientationType</title>
<indexterm zone="GimpOrientationType"><primary sortas="GimpOrientationType">GimpOrientationType</primary></indexterm><programlisting>typedef enum
{
  GIMP_ORIENTATION_HORIZONTAL,
  GIMP_ORIENTATION_VERTICAL,
  GIMP_ORIENTATION_UNKNOWN
} GimpOrientationType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpRotationType" role="enum">
<title>enum GimpRotationType</title>
<indexterm zone="GimpRotationType"><primary sortas="GimpRotationType">GimpRotationType</primary></indexterm><programlisting>typedef enum
{
  GIMP_ROTATE_90,
  GIMP_ROTATE_180,
  GIMP_ROTATE_270
} GimpRotationType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GimpSelectCriterion" role="enum">
<title>enum GimpSelectCriterion</title>
<indexterm zone="GimpSelectCriterion"><primary sortas="GimpSelectCriterion">GimpSelectCriterion</primary></indexterm><programlisting>typedef enum
{
  GIMP_SELECT_CRITERION_COMPOSITE,
  GIMP_SELECT_CRITERION_R,
  GIMP_SELECT_CRITERION_G,
  GIMP_SELECT_CRITERION_B,
  GIMP_SELECT_CRITERION_H,
  GIMP_SELECT_CRITERION_S,
  GIMP_SELECT_CRITERION_V
} GimpSelectCriterion;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gimp-enums-get-type-names" role="function" condition="since:GIMP 2.2">
<title>gimp_enums_get_type_names ()</title>
<indexterm zone="gimp-enums-get-type-names" role="GIMP 2.2"><primary sortas="gimp_enums_get_type_names">gimp_enums_get_type_names</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> **      gimp_enums_get_type_names           (<link linkend="gint">gint</link> *n_type_names);</programlisting>
<para>
This function gives access to the list of enums registered by libgimp.
The returned array is static and must not be modified.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>n_type_names</parameter>&#160;:</term>
<listitem><simpara> return location for the number of names
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> an array with type names

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since GIMP 2.2</para></refsect2>

</refsect1>




</refentry>

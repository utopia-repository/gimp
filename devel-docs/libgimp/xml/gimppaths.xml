<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="libgimp-gimppaths">
<refmeta>
<refentrytitle role="top_of_page" id="libgimp-gimppaths.top_of_page">gimppaths</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGIMP Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gimppaths</refname>
<refpurpose>Operations related to paths.</refpurpose>
</refnamediv>

<refsynopsisdiv id="libgimp-gimppaths.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="gchar">gchar</link>**             <link linkend="gimp-path-list">gimp_path_list</link>                      (<link linkend="gint32">gint32</link> image_ID,
                                                         <link linkend="gint">gint</link> *num_paths);
<link linkend="gint">gint</link>                <link linkend="gimp-path-get-points">gimp_path_get_points</link>                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gint">gint</link> *path_closed,
                                                         <link linkend="gint">gint</link> *num_path_point_details,
                                                         <link linkend="gdouble">gdouble</link> **points_pairs);
<link linkend="gchar">gchar</link>*              <link linkend="gimp-path-get-current">gimp_path_get_current</link>               (<link linkend="gint32">gint32</link> image_ID);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-set-current">gimp_path_set_current</link>               (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-set-points">gimp_path_set_points</link>                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gint">gint</link> ptype,
                                                         <link linkend="gint">gint</link> num_path_points,
                                                         const <link linkend="gdouble">gdouble</link> *points_pairs);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-stroke-current">gimp_path_stroke_current</link>            (<link linkend="gint32">gint32</link> image_ID);
<link linkend="gint">gint</link>                <link linkend="gimp-path-get-point-at-dist">gimp_path_get_point_at_dist</link>         (<link linkend="gint32">gint32</link> image_ID,
                                                         <link linkend="gdouble">gdouble</link> distance,
                                                         <link linkend="gint">gint</link> *y_point,
                                                         <link linkend="gdouble">gdouble</link> *slope);
<link linkend="gint">gint</link>                <link linkend="gimp-path-get-tattoo">gimp_path_get_tattoo</link>                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name);
<link linkend="gchar">gchar</link>*              <link linkend="gimp-get-path-by-tattoo">gimp_get_path_by_tattoo</link>             (<link linkend="gint32">gint32</link> image_ID,
                                                         <link linkend="gint">gint</link> tattoo);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-delete">gimp_path_delete</link>                    (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-get-locked">gimp_path_get_locked</link>                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-set-locked">gimp_path_set_locked</link>                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gboolean">gboolean</link> locked);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-set-tattoo">gimp_path_set_tattoo</link>                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gint">gint</link> tattovalue);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-to-selection">gimp_path_to_selection</link>              (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="GimpChannelOps">GimpChannelOps</link> op,
                                                         <link linkend="gboolean">gboolean</link> antialias,
                                                         <link linkend="gboolean">gboolean</link> feather,
                                                         <link linkend="gdouble">gdouble</link> feather_radius_x,
                                                         <link linkend="gdouble">gdouble</link> feather_radius_y);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-path-import">gimp_path_import</link>                    (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *filename,
                                                         <link linkend="gboolean">gboolean</link> merge,
                                                         <link linkend="gboolean">gboolean</link> scale);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libgimp-gimppaths.description" role="desc">
<title role="desc.title">Description</title>
<para>
Operations related to paths.
</para>
</refsect1>

<refsect1 id="libgimp-gimppaths.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="gimp-path-list" role="function" condition="deprecated:">
<title>gimp_path_list ()</title>
<indexterm zone="gimp-path-list" role="deprecated"><primary sortas="gimp_path_list">gimp_path_list</primary></indexterm><programlisting><link linkend="gchar">gchar</link>**             gimp_path_list                      (<link linkend="gint32">gint32</link> image_ID,
                                                         <link linkend="gint">gint</link> *num_paths);</programlisting>
<warning><para><literal>gimp_path_list</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-image-get-vectors"><function>gimp_image_get_vectors()</function></link> instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image to list the paths from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_paths</parameter>&#160;:</term>
<listitem><simpara> The number of paths returned.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> List of the paths belonging to this image.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-get-points" role="function" condition="deprecated:">
<title>gimp_path_get_points ()</title>
<indexterm zone="gimp-path-get-points" role="deprecated"><primary sortas="gimp_path_get_points">gimp_path_get_points</primary></indexterm><programlisting><link linkend="gint">gint</link>                gimp_path_get_points                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gint">gint</link> *path_closed,
                                                         <link linkend="gint">gint</link> *num_path_point_details,
                                                         <link linkend="gdouble">gdouble</link> **points_pairs);</programlisting>
<warning><para><literal>gimp_path_get_points</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-vectors-stroke-get-points"><function>gimp_vectors_stroke_get_points()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image to list the paths from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The name of the path whose points should be listed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path_closed</parameter>&#160;:</term>
<listitem><simpara> Return if the path is closed. (0 = path open, 1 = path closed).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_path_point_details</parameter>&#160;:</term>
<listitem><simpara> The number of points returned. Each point is made up of (x, y, pnt_type) of floats.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>points_pairs</parameter>&#160;:</term>
<listitem><simpara> The points in the path represented as 3 floats. The first is the x pos, next is the y pos, last is the type of the pnt. The type field is dependant on the path type. For beziers (type 1 paths) the type can either be (1.0 = BEZIER_ANCHOR, 2.0 = BEZIER_CONTROL, 3.0 = BEZIER_MOVE). Note all points are returned in pixel resolution.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The type of the path. Currently only one type (1 = Bezier) is supported.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-get-current" role="function" condition="deprecated:">
<title>gimp_path_get_current ()</title>
<indexterm zone="gimp-path-get-current" role="deprecated"><primary sortas="gimp_path_get_current">gimp_path_get_current</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              gimp_path_get_current               (<link linkend="gint32">gint32</link> image_ID);</programlisting>
<warning><para><literal>gimp_path_get_current</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-image-get-active-vectors"><function>gimp_image_get_active_vectors()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image to get the current path from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The name of the current path.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-set-current" role="function" condition="deprecated:">
<title>gimp_path_set_current ()</title>
<indexterm zone="gimp-path-set-current" role="deprecated"><primary sortas="gimp_path_set_current">gimp_path_set_current</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_set_current               (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<warning><para><literal>gimp_path_set_current</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-image-set-active-vectors"><function>gimp_image_set_active_vectors()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image in which a path will become current.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The name of the path to make current.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-set-points" role="function" condition="deprecated:">
<title>gimp_path_set_points ()</title>
<indexterm zone="gimp-path-set-points" role="deprecated"><primary sortas="gimp_path_set_points">gimp_path_set_points</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_set_points                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gint">gint</link> ptype,
                                                         <link linkend="gint">gint</link> num_path_points,
                                                         const <link linkend="gdouble">gdouble</link> *points_pairs);</programlisting>
<warning><para><literal>gimp_path_set_points</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="vectors-stroke-new-from-points"><function>vectors_stroke_new_from_points()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image to set the paths in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The name of the path to create. If it exists then a unique name will be created - query the list of paths if you want to make sure that the name of the path you create is unique. This will be set as the current path.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ptype</parameter>&#160;:</term>
<listitem><simpara> The type of the path. Currently only one type (1 = Bezier) is supported.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_path_points</parameter>&#160;:</term>
<listitem><simpara> The number of elements in the array, i.e. the number of points in the path * 3. Each point is made up of (x, y, type) of floats. Currently only the creation of bezier curves is allowed. The type parameter must be set to (1) to indicate a BEZIER type curve. Note that for BEZIER curves, points must be given in the following order: ACCACCAC... If the path is not closed the last control point is missed off. Points consist of three control points (control/anchor/control) so for a curve that is not closed there must be at least two points passed (2 x,y pairs). If (num_path_points/3) % 3 = 0 then the path is assumed to be closed and the points are ACCACCACCACC.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>points_pairs</parameter>&#160;:</term>
<listitem><simpara> The points in the path represented as 3 floats. The first is the x pos, next is the y pos, last is the type of the pnt. The type field is dependant on the path type. For beziers (type 1 paths) the type can either be (1.0 = BEZIER_ANCHOR, 2.0 = BEZIER_CONTROL, 3.0= BEZIER_MOVE). Note all points are returned in pixel resolution.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-stroke-current" role="function" condition="deprecated:">
<title>gimp_path_stroke_current ()</title>
<indexterm zone="gimp-path-stroke-current" role="deprecated"><primary sortas="gimp_path_stroke_current">gimp_path_stroke_current</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_stroke_current            (<link linkend="gint32">gint32</link> image_ID);</programlisting>
<warning><para><literal>gimp_path_stroke_current</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-edit-stroke-vectors"><function>gimp_edit_stroke_vectors()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image which contains the path to stroke.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-get-point-at-dist" role="function" condition="deprecated:">
<title>gimp_path_get_point_at_dist ()</title>
<indexterm zone="gimp-path-get-point-at-dist" role="deprecated"><primary sortas="gimp_path_get_point_at_dist">gimp_path_get_point_at_dist</primary></indexterm><programlisting><link linkend="gint">gint</link>                gimp_path_get_point_at_dist         (<link linkend="gint32">gint32</link> image_ID,
                                                         <link linkend="gdouble">gdouble</link> distance,
                                                         <link linkend="gint">gint</link> *y_point,
                                                         <link linkend="gdouble">gdouble</link> *slope);</programlisting>
<warning><para><literal>gimp_path_get_point_at_dist</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use
<link linkend="gimp-vectors-stroke-get-point-at-dist"><function>gimp_vectors_stroke_get_point_at_dist()</function></link> instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image the paths belongs to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>distance</parameter>&#160;:</term>
<listitem><simpara> The distance along the path.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_point</parameter>&#160;:</term>
<listitem><simpara> The y position of the point.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>slope</parameter>&#160;:</term>
<listitem><simpara> The slope (dy / dx) at the specified point.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The x position of the point.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-get-tattoo" role="function" condition="deprecated:">
<title>gimp_path_get_tattoo ()</title>
<indexterm zone="gimp-path-get-tattoo" role="deprecated"><primary sortas="gimp_path_get_tattoo">gimp_path_get_tattoo</primary></indexterm><programlisting><link linkend="gint">gint</link>                gimp_path_get_tattoo                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<warning><para><literal>gimp_path_get_tattoo</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-vectors-get-tattoo"><function>gimp_vectors_get_tattoo()</function></link> instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The name of the path whose tattoo should be obtained.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The tattoo associated with the named path.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-get-path-by-tattoo" role="function" condition="deprecated:">
<title>gimp_get_path_by_tattoo ()</title>
<indexterm zone="gimp-get-path-by-tattoo" role="deprecated"><primary sortas="gimp_get_path_by_tattoo">gimp_get_path_by_tattoo</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              gimp_get_path_by_tattoo             (<link linkend="gint32">gint32</link> image_ID,
                                                         <link linkend="gint">gint</link> tattoo);</programlisting>
<warning><para><literal>gimp_get_path_by_tattoo</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-image-get-vectors-by-tattoo"><function>gimp_image_get_vectors_by_tattoo()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tattoo</parameter>&#160;:</term>
<listitem><simpara> The tattoo of the required path.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The name of the path with the specified tattoo.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-delete" role="function" condition="deprecated:">
<title>gimp_path_delete ()</title>
<indexterm zone="gimp-path-delete" role="deprecated"><primary sortas="gimp_path_delete">gimp_path_delete</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_delete                    (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<warning><para><literal>gimp_path_delete</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-image-remove-vectors"><function>gimp_image_remove_vectors()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image to delete the path from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The name of the path to delete.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-get-locked" role="function" condition="deprecated:">
<title>gimp_path_get_locked ()</title>
<indexterm zone="gimp-path-get-locked" role="deprecated"><primary sortas="gimp_path_get_locked">gimp_path_get_locked</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_get_locked                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<warning><para><literal>gimp_path_get_locked</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-vectors-get-linked"><function>gimp_vectors_get_linked()</function></link> instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The name of the path whose locked status should be obtained.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the path is locked, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-set-locked" role="function" condition="deprecated:">
<title>gimp_path_set_locked ()</title>
<indexterm zone="gimp-path-set-locked" role="deprecated"><primary sortas="gimp_path_set_locked">gimp_path_set_locked</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_set_locked                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gboolean">gboolean</link> locked);</programlisting>
<warning><para><literal>gimp_path_set_locked</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-vectors-set-linked"><function>gimp_vectors_set_linked()</function></link> instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> the name of the path whose locked status should be set.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>locked</parameter>&#160;:</term>
<listitem><simpara> Whether the path is locked.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-set-tattoo" role="function" condition="deprecated:">
<title>gimp_path_set_tattoo ()</title>
<indexterm zone="gimp-path-set-tattoo" role="deprecated"><primary sortas="gimp_path_set_tattoo">gimp_path_set_tattoo</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_set_tattoo                (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gint">gint</link> tattovalue);</programlisting>
<warning><para><literal>gimp_path_set_tattoo</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-vectors-set-tattoo"><function>gimp_vectors_set_tattoo()</function></link> instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> the name of the path whose tattoo should be set.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tattovalue</parameter>&#160;:</term>
<listitem><simpara> The tattoo associated with the name path. Only values returned from 'path_get_tattoo' should be used here.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-to-selection" role="function" condition="deprecated:">
<title>gimp_path_to_selection ()</title>
<indexterm zone="gimp-path-to-selection" role="deprecated"><primary sortas="gimp_path_to_selection">gimp_path_to_selection</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_to_selection              (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="GimpChannelOps">GimpChannelOps</link> op,
                                                         <link linkend="gboolean">gboolean</link> antialias,
                                                         <link linkend="gboolean">gboolean</link> feather,
                                                         <link linkend="gdouble">gdouble</link> feather_radius_x,
                                                         <link linkend="gdouble">gdouble</link> feather_radius_y);</programlisting>
<warning><para><literal>gimp_path_to_selection</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="gimp-vectors-to-selection"><function>gimp_vectors_to_selection()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The name of the path which should be made into selection.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>op</parameter>&#160;:</term>
<listitem><simpara> The desired operation with current selection.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>antialias</parameter>&#160;:</term>
<listitem><simpara> Antialias selection.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>feather</parameter>&#160;:</term>
<listitem><simpara> Feather selection.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>feather_radius_x</parameter>&#160;:</term>
<listitem><simpara> Feather radius x.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>feather_radius_y</parameter>&#160;:</term>
<listitem><simpara> Feather radius y.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-path-import" role="function" condition="deprecated:">
<title>gimp_path_import ()</title>
<indexterm zone="gimp-path-import" role="deprecated"><primary sortas="gimp_path_import">gimp_path_import</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_path_import                    (<link linkend="gint32">gint32</link> image_ID,
                                                         const <link linkend="gchar">gchar</link> *filename,
                                                         <link linkend="gboolean">gboolean</link> merge,
                                                         <link linkend="gboolean">gboolean</link> scale);</programlisting>
<warning><para><literal>gimp_path_import</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This procedure is deprecated! Use <link linkend="vectors-import-from-file"><function>vectors_import_from_file()</function></link>
instead.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>image_ID</parameter>&#160;:</term>
<listitem><simpara> The image.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> The name of the SVG file to import.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>merge</parameter>&#160;:</term>
<listitem><simpara> Merge paths into a single vectors object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&#160;:</term>
<listitem><simpara> Scale the SVG to image dimensions.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="libgimp-gimppixelfetcher">
<refmeta>
<refentrytitle>gimppixelfetcher</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGIMP Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gimppixelfetcher</refname><refpurpose>Functions for operating on pixel regions.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



enum        <link linkend="GimpPixelFetcherEdgeMode">GimpPixelFetcherEdgeMode</link>;
            <link linkend="GimpPixelFetcher">GimpPixelFetcher</link>;
<link linkend="GimpPixelFetcher">GimpPixelFetcher</link>* <link linkend="gimp-pixel-fetcher-new">gimp_pixel_fetcher_new</link>    (<link linkend="GimpDrawable">GimpDrawable</link> *drawable,
                                             <link linkend="gboolean">gboolean</link> shadow);
<link linkend="void">void</link>        <link linkend="gimp-pixel-fetcher-set-edge-mode">gimp_pixel_fetcher_set_edge_mode</link>
                                            (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf,
                                             <link linkend="GimpPixelFetcherEdgeMode">GimpPixelFetcherEdgeMode</link> mode);
<link linkend="void">void</link>        <link linkend="gimp-pixel-fetcher-set-bg-color">gimp_pixel_fetcher_set_bg_color</link> (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf,
                                             const <link linkend="GimpRGB">GimpRGB</link> *color);
<link linkend="void">void</link>        <link linkend="gimp-pixel-fetcher-get-pixel">gimp_pixel_fetcher_get_pixel</link>    (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="guchar">guchar</link> *pixel);
<link linkend="void">void</link>        <link linkend="gimp-pixel-fetcher-put-pixel">gimp_pixel_fetcher_put_pixel</link>    (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             const <link linkend="guchar">guchar</link> *pixel);
<link linkend="void">void</link>        <link linkend="gimp-pixel-fetcher-destroy">gimp_pixel_fetcher_destroy</link>      (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>
These functions provide neighbourhood-based algorithms which get
dramatically slower on region boundaries, to the point where a special
treatment for neighbourhoods which are completely inside a tile is
called for.  It hides the special treatment of tile borders, making
plug-in code more readable and shorter.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GimpPixelFetcherEdgeMode"/>enum GimpPixelFetcherEdgeMode</title>
<indexterm><primary>GimpPixelFetcherEdgeMode</primary></indexterm><programlisting>typedef enum
{
  GIMP_PIXEL_FETCHER_EDGE_NONE,
  GIMP_PIXEL_FETCHER_EDGE_WRAP,
  GIMP_PIXEL_FETCHER_EDGE_SMEAR,
  GIMP_PIXEL_FETCHER_EDGE_BLACK,
  GIMP_PIXEL_FETCHER_EDGE_BACKGROUND
} GimpPixelFetcherEdgeMode;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GimpPixelFetcher"/>GimpPixelFetcher</title>
<indexterm><primary>GimpPixelFetcher</primary></indexterm><programlisting>typedef struct _GimpPixelFetcher GimpPixelFetcher;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gimp-pixel-fetcher-new"/>gimp_pixel_fetcher_new ()</title>
<indexterm><primary>gimp_pixel_fetcher_new</primary></indexterm><programlisting><link linkend="GimpPixelFetcher">GimpPixelFetcher</link>* gimp_pixel_fetcher_new    (<link linkend="GimpDrawable">GimpDrawable</link> *drawable,
                                             <link linkend="gboolean">gboolean</link> shadow);</programlisting>
<para>
Initialize a pixel region from the drawable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GimpDrawable"><type>GimpDrawable</type></link> the new region will be attached to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>shadow</parameter>&nbsp;:</term>
<listitem><simpara>   a <link linkend="gboolean"><type>gboolean</type></link> indicating whether the region is attached to
           the shadow tiles or the real <literal>drawable</literal> tiles.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a pointer to a <link linkend="GimpPixelRgn"><type>GimpPixelRgn</type></link> structure (or NULL).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gimp-pixel-fetcher-set-edge-mode"/>gimp_pixel_fetcher_set_edge_mode ()</title>
<indexterm><primary>gimp_pixel_fetcher_set_edge_mode</primary></indexterm><programlisting><link linkend="void">void</link>        gimp_pixel_fetcher_set_edge_mode
                                            (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf,
                                             <link linkend="GimpPixelFetcherEdgeMode">GimpPixelFetcherEdgeMode</link> mode);</programlisting>
<para>
Change the edage mode of a previously initialized pixel region.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pf</parameter>&nbsp;:</term>
<listitem><simpara>   a pointer to a previously initialized <link linkend="GimpPixelFetcher"><type>GimpPixelFetcher</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mode</parameter>&nbsp;:</term>
<listitem><simpara> the new edge mode from <link linkend="GimpPixelFetcherEdgeMode"><type>GimpPixelFetcherEdgeMode</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gimp-pixel-fetcher-set-bg-color"/>gimp_pixel_fetcher_set_bg_color ()</title>
<indexterm><primary>gimp_pixel_fetcher_set_bg_color</primary></indexterm><programlisting><link linkend="void">void</link>        gimp_pixel_fetcher_set_bg_color (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf,
                                             const <link linkend="GimpRGB">GimpRGB</link> *color);</programlisting>
<para>
Change the background color of a previously initialized pixel region.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pf</parameter>&nbsp;:</term>
<listitem><simpara>    a pointer to a previously initialized <link linkend="GimpPixelFetcher"><type>GimpPixelFetcher</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>color</parameter>&nbsp;:</term>
<listitem><simpara> the color to be used as bg color.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gimp-pixel-fetcher-get-pixel"/>gimp_pixel_fetcher_get_pixel ()</title>
<indexterm><primary>gimp_pixel_fetcher_get_pixel</primary></indexterm><programlisting><link linkend="void">void</link>        gimp_pixel_fetcher_get_pixel    (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="guchar">guchar</link> *pixel);</programlisting>
<para>
Get a pixel from the pixel region.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pf</parameter>&nbsp;:</term>
<listitem><simpara>    a pointer to a previously initialized <link linkend="GimpPixelFetcher"><type>GimpPixelFetcher</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>     the x coordinate of the pixel to get.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>     the y coordinate of the pixel to get.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixel</parameter>&nbsp;:</term>
<listitem><simpara> the memory location where to return the pixel.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gimp-pixel-fetcher-put-pixel"/>gimp_pixel_fetcher_put_pixel ()</title>
<indexterm><primary>gimp_pixel_fetcher_put_pixel</primary></indexterm><programlisting><link linkend="void">void</link>        gimp_pixel_fetcher_put_pixel    (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             const <link linkend="guchar">guchar</link> *pixel);</programlisting>
<para>
Set a pixel in the pixel region.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pf</parameter>&nbsp;:</term>
<listitem><simpara>    a pointer to a previously initialized <link linkend="GimpPixelFetcher"><type>GimpPixelFetcher</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>     the x coordinate of the pixel to set.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>     the y coordinate of the pixel to set.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixel</parameter>&nbsp;:</term>
<listitem><simpara> the pixel to set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gimp-pixel-fetcher-destroy"/>gimp_pixel_fetcher_destroy ()</title>
<indexterm><primary>gimp_pixel_fetcher_destroy</primary></indexterm><programlisting><link linkend="void">void</link>        gimp_pixel_fetcher_destroy      (<link linkend="GimpPixelFetcher">GimpPixelFetcher</link> *pf);</programlisting>
<para>
Close a previously initializd pixel region.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pf</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a previously initialized <link linkend="GimpPixelFetcher"><type>GimpPixelFetcher</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="libgimp-gimpproceduraldb">
<refmeta>
<refentrytitle role="top_of_page" id="libgimp-gimpproceduraldb.top_of_page">gimpproceduraldb</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGIMP Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gimpproceduraldb</refname>
<refpurpose>Functions for querying and changing procedural database (PDB) entries.</refpurpose>
</refnamediv>

<refsynopsisdiv id="libgimp-gimpproceduraldb.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="gchar">gchar</link>*              <link linkend="gimp-procedural-db-temp-name">gimp_procedural_db_temp_name</link>        (void);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-procedural-db-get-data">gimp_procedural_db_get_data</link>         (const <link linkend="gchar">gchar</link> *identifier,
                                                         <link linkend="gpointer">gpointer</link> data);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-procedural-db-set-data">gimp_procedural_db_set_data</link>         (const <link linkend="gchar">gchar</link> *identifier,
                                                         <link linkend="gconstpointer">gconstpointer</link> data,
                                                         <link linkend="guint32">guint32</link> bytes);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-procedural-db-dump">gimp_procedural_db_dump</link>             (const <link linkend="gchar">gchar</link> *filename);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-procedural-db-query">gimp_procedural_db_query</link>            (const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> *blurb,
                                                         const <link linkend="gchar">gchar</link> *help,
                                                         const <link linkend="gchar">gchar</link> *author,
                                                         const <link linkend="gchar">gchar</link> *copyright,
                                                         const <link linkend="gchar">gchar</link> *date,
                                                         const <link linkend="gchar">gchar</link> *proc_type,
                                                         <link linkend="gint">gint</link> *num_matches,
                                                         <link linkend="gchar">gchar</link> ***procedure_names);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-procedural-db-proc-exists">gimp_procedural_db_proc_exists</link>      (const <link linkend="gchar">gchar</link> *procedure_name);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-procedural-db-proc-info">gimp_procedural_db_proc_info</link>        (const <link linkend="gchar">gchar</link> *procedure,
                                                         <link linkend="gchar">gchar</link> **blurb,
                                                         <link linkend="gchar">gchar</link> **help,
                                                         <link linkend="gchar">gchar</link> **author,
                                                         <link linkend="gchar">gchar</link> **copyright,
                                                         <link linkend="gchar">gchar</link> **date,
                                                         <link linkend="GimpPDBProcType">GimpPDBProcType</link> *proc_type,
                                                         <link linkend="gint">gint</link> *num_args,
                                                         <link linkend="gint">gint</link> *num_values,
                                                         <link linkend="GimpParamDef">GimpParamDef</link> **args,
                                                         <link linkend="GimpParamDef">GimpParamDef</link> **return_vals);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-procedural-db-proc-arg">gimp_procedural_db_proc_arg</link>         (const <link linkend="gchar">gchar</link> *procedure_name,
                                                         <link linkend="gint">gint</link> arg_num,
                                                         <link linkend="GimpPDBArgType">GimpPDBArgType</link> *arg_type,
                                                         <link linkend="gchar">gchar</link> **arg_name,
                                                         <link linkend="gchar">gchar</link> **arg_desc);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-procedural-db-proc-val">gimp_procedural_db_proc_val</link>         (const <link linkend="gchar">gchar</link> *procedure_name,
                                                         <link linkend="gint">gint</link> val_num,
                                                         <link linkend="GimpPDBArgType">GimpPDBArgType</link> *val_type,
                                                         <link linkend="gchar">gchar</link> **val_name,
                                                         <link linkend="gchar">gchar</link> **val_desc);
<link linkend="gint">gint</link>                <link linkend="gimp-procedural-db-get-data-size">gimp_procedural_db_get_data_size</link>    (const <link linkend="gchar">gchar</link> *identifier);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libgimp-gimpproceduraldb.description" role="desc">
<title role="desc.title">Description</title>
<para>
Functions for querying and changing procedural database (PDB) entries.
</para>
</refsect1>

<refsect1 id="libgimp-gimpproceduraldb.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="gimp-procedural-db-temp-name" role="function">
<title>gimp_procedural_db_temp_name ()</title>
<indexterm zone="gimp-procedural-db-temp-name"><primary sortas="gimp_procedural_db_temp_name">gimp_procedural_db_temp_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              gimp_procedural_db_temp_name        (void);</programlisting>
<para>
Generates a unique temporary PDB name.
</para>
<para>
This procedure generates a temporary PDB entry name that is
guaranteed to be unique.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A unique temporary name for a temporary PDB entry.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-procedural-db-get-data" role="function">
<title>gimp_procedural_db_get_data ()</title>
<indexterm zone="gimp-procedural-db-get-data"><primary sortas="gimp_procedural_db_get_data">gimp_procedural_db_get_data</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_procedural_db_get_data         (const <link linkend="gchar">gchar</link> *identifier,
                                                         <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Returns data associated with the specified identifier.
</para>
<para>
This procedure returns any data which may have been associated with
the specified identifier. The data is copied into the given memory
location.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>identifier</parameter>&#160;:</term>
<listitem><simpara> The identifier associated with data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> A byte array containing data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE if no data has been associated with
the identifier
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-procedural-db-set-data" role="function">
<title>gimp_procedural_db_set_data ()</title>
<indexterm zone="gimp-procedural-db-set-data"><primary sortas="gimp_procedural_db_set_data">gimp_procedural_db_set_data</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_procedural_db_set_data         (const <link linkend="gchar">gchar</link> *identifier,
                                                         <link linkend="gconstpointer">gconstpointer</link> data,
                                                         <link linkend="guint32">guint32</link> bytes);</programlisting>
<para>
Associates the specified identifier with the supplied data.
</para>
<para>
This procedure associates the supplied data with the provided
identifier. The data may be subsequently retrieved by a call to
'procedural-db-get-data'.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>identifier</parameter>&#160;:</term>
<listitem><simpara> The identifier associated with data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> A byte array containing data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes</parameter>&#160;:</term>
<listitem><simpara> The number of bytes in the data
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-procedural-db-dump" role="function">
<title>gimp_procedural_db_dump ()</title>
<indexterm zone="gimp-procedural-db-dump"><primary sortas="gimp_procedural_db_dump">gimp_procedural_db_dump</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_procedural_db_dump             (const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Dumps the current contents of the procedural database
</para>
<para>
This procedure dumps the contents of the procedural database to the
specified file. The file will contain all of the information
provided for each registered procedure.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> The dump filename.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-procedural-db-query" role="function">
<title>gimp_procedural_db_query ()</title>
<indexterm zone="gimp-procedural-db-query"><primary sortas="gimp_procedural_db_query">gimp_procedural_db_query</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_procedural_db_query            (const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> *blurb,
                                                         const <link linkend="gchar">gchar</link> *help,
                                                         const <link linkend="gchar">gchar</link> *author,
                                                         const <link linkend="gchar">gchar</link> *copyright,
                                                         const <link linkend="gchar">gchar</link> *date,
                                                         const <link linkend="gchar">gchar</link> *proc_type,
                                                         <link linkend="gint">gint</link> *num_matches,
                                                         <link linkend="gchar">gchar</link> ***procedure_names);</programlisting>
<para>
Queries the procedural database for its contents using regular
expression matching.
</para>
<para>
This procedure queries the contents of the procedural database. It
is supplied with seven arguments matching procedures on { name,
blurb, help, author, copyright, date, procedure type}. This is
accomplished using regular expression matching. For instance, to
find all procedures with \"jpeg\" listed in the blurb, all seven
arguments can be supplied as \".*\", except for the second, which
can be supplied as \".*jpeg.*\". There are two return arguments for
this procedure. The first is the number of procedures matching the
query. The second is a concatenated list of procedure names
corresponding to those matching the query. If no matching entries
are found, then the returned string is NULL and the number of
entries is 0.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The regex for procedure name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>blurb</parameter>&#160;:</term>
<listitem><simpara> The regex for procedure blurb.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>help</parameter>&#160;:</term>
<listitem><simpara> The regex for procedure help.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>author</parameter>&#160;:</term>
<listitem><simpara> The regex for procedure author.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>copyright</parameter>&#160;:</term>
<listitem><simpara> The regex for procedure copyright.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>date</parameter>&#160;:</term>
<listitem><simpara> The regex for procedure date.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>proc_type</parameter>&#160;:</term>
<listitem><simpara> The regex for procedure type: { 'Internal GIMP procedure', 'GIMP Plug-In', 'GIMP Extension', 'Temporary Procedure' }.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_matches</parameter>&#160;:</term>
<listitem><simpara> The number of matching procedures.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>procedure_names</parameter>&#160;:</term>
<listitem><simpara> The list of procedure names.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-procedural-db-proc-exists" role="function" condition="since:GIMP 2.6">
<title>gimp_procedural_db_proc_exists ()</title>
<indexterm zone="gimp-procedural-db-proc-exists" role="GIMP 2.6"><primary sortas="gimp_procedural_db_proc_exists">gimp_procedural_db_proc_exists</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_procedural_db_proc_exists      (const <link linkend="gchar">gchar</link> *procedure_name);</programlisting>
<para>
Checks if the specified procedure exists in the procedural database
</para>
<para>
This procedure checks if the specified procedure is registered in
the procedural database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>procedure_name</parameter>&#160;:</term>
<listitem><simpara> The procedure name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether a procedure of that name is registered.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since GIMP 2.6</para></refsect2>
<refsect2 id="gimp-procedural-db-proc-info" role="function">
<title>gimp_procedural_db_proc_info ()</title>
<indexterm zone="gimp-procedural-db-proc-info"><primary sortas="gimp_procedural_db_proc_info">gimp_procedural_db_proc_info</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_procedural_db_proc_info        (const <link linkend="gchar">gchar</link> *procedure,
                                                         <link linkend="gchar">gchar</link> **blurb,
                                                         <link linkend="gchar">gchar</link> **help,
                                                         <link linkend="gchar">gchar</link> **author,
                                                         <link linkend="gchar">gchar</link> **copyright,
                                                         <link linkend="gchar">gchar</link> **date,
                                                         <link linkend="GimpPDBProcType">GimpPDBProcType</link> *proc_type,
                                                         <link linkend="gint">gint</link> *num_args,
                                                         <link linkend="gint">gint</link> *num_values,
                                                         <link linkend="GimpParamDef">GimpParamDef</link> **args,
                                                         <link linkend="GimpParamDef">GimpParamDef</link> **return_vals);</programlisting>
<para>
Queries the procedural database for information on the specified
procedure.
</para>
<para>
This procedure returns information on the specified procedure. A
short blurb, detailed help, author(s), copyright information,
procedure type, number of input, and number of return values are
returned. Additionally this function returns specific information
about each input argument and return value.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>procedure</parameter>&#160;:</term>
<listitem><simpara> The procedure name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>blurb</parameter>&#160;:</term>
<listitem><simpara> A short blurb.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>help</parameter>&#160;:</term>
<listitem><simpara> Detailed procedure help.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>author</parameter>&#160;:</term>
<listitem><simpara> Author(s) of the procedure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>copyright</parameter>&#160;:</term>
<listitem><simpara> The copyright.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>date</parameter>&#160;:</term>
<listitem><simpara> Copyright date.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>proc_type</parameter>&#160;:</term>
<listitem><simpara> The procedure type.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_args</parameter>&#160;:</term>
<listitem><simpara> The number of input arguments.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_values</parameter>&#160;:</term>
<listitem><simpara> The number of return values.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&#160;:</term>
<listitem><simpara> The input arguments.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>return_vals</parameter>&#160;:</term>
<listitem><simpara> The return values.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-procedural-db-proc-arg" role="function">
<title>gimp_procedural_db_proc_arg ()</title>
<indexterm zone="gimp-procedural-db-proc-arg"><primary sortas="gimp_procedural_db_proc_arg">gimp_procedural_db_proc_arg</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_procedural_db_proc_arg         (const <link linkend="gchar">gchar</link> *procedure_name,
                                                         <link linkend="gint">gint</link> arg_num,
                                                         <link linkend="GimpPDBArgType">GimpPDBArgType</link> *arg_type,
                                                         <link linkend="gchar">gchar</link> **arg_name,
                                                         <link linkend="gchar">gchar</link> **arg_desc);</programlisting>
<para>
Queries the procedural database for information on the specified
procedure's argument.
</para>
<para>
This procedure returns information on the specified procedure's
argument. The argument type, name, and a description are retrieved.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>procedure_name</parameter>&#160;:</term>
<listitem><simpara> The procedure name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_num</parameter>&#160;:</term>
<listitem><simpara> The argument number.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_type</parameter>&#160;:</term>
<listitem><simpara> The type of argument.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_name</parameter>&#160;:</term>
<listitem><simpara> The name of the argument.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_desc</parameter>&#160;:</term>
<listitem><simpara> A description of the argument.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-procedural-db-proc-val" role="function">
<title>gimp_procedural_db_proc_val ()</title>
<indexterm zone="gimp-procedural-db-proc-val"><primary sortas="gimp_procedural_db_proc_val">gimp_procedural_db_proc_val</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_procedural_db_proc_val         (const <link linkend="gchar">gchar</link> *procedure_name,
                                                         <link linkend="gint">gint</link> val_num,
                                                         <link linkend="GimpPDBArgType">GimpPDBArgType</link> *val_type,
                                                         <link linkend="gchar">gchar</link> **val_name,
                                                         <link linkend="gchar">gchar</link> **val_desc);</programlisting>
<para>
Queries the procedural database for information on the specified
procedure's return value.
</para>
<para>
This procedure returns information on the specified procedure's
return value. The return value type, name, and a description are
retrieved.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>procedure_name</parameter>&#160;:</term>
<listitem><simpara> The procedure name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val_num</parameter>&#160;:</term>
<listitem><simpara> The return value number.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val_type</parameter>&#160;:</term>
<listitem><simpara> The type of return value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val_name</parameter>&#160;:</term>
<listitem><simpara> The name of the return value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val_desc</parameter>&#160;:</term>
<listitem><simpara> A description of the return value.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-procedural-db-get-data-size" role="function">
<title>gimp_procedural_db_get_data_size ()</title>
<indexterm zone="gimp-procedural-db-get-data-size"><primary sortas="gimp_procedural_db_get_data_size">gimp_procedural_db_get_data_size</primary></indexterm><programlisting><link linkend="gint">gint</link>                gimp_procedural_db_get_data_size    (const <link linkend="gchar">gchar</link> *identifier);</programlisting>
<para>
Returns size of data associated with the specified identifier.
</para>
<para>
This procedure returns the size of any data which may have been
associated with the specified identifier. If no data has been
associated with the identifier, an error is returned.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>identifier</parameter>&#160;:</term>
<listitem><simpara> The identifier associated with data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The number of bytes in the data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>

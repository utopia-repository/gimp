<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="libgimpbase-gimpparasite">
<refmeta>
<refentrytitle role="top_of_page" id="libgimpbase-gimpparasite.top_of_page">gimpparasite</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGIMPBASE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gimpparasite</refname>
<refpurpose>Arbitrary pieces of data which can be attached to various GIMP objects.</refpurpose>
</refnamediv>

<refsynopsisdiv id="libgimpbase-gimpparasite.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GimpParasite">GimpParasite</link>;
<link linkend="GimpParasite">GimpParasite</link> *      <link linkend="gimp-parasite-new">gimp_parasite_new</link>                   (const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="guint32">guint32</link> flags,
                                                         <link linkend="guint32">guint32</link> size,
                                                         <link linkend="gconstpointer">gconstpointer</link> data);
<link linkend="void">void</link>                <link linkend="gimp-parasite-free">gimp_parasite_free</link>                  (<link linkend="GimpParasite">GimpParasite</link> *parasite);
<link linkend="GimpParasite">GimpParasite</link> *      <link linkend="gimp-parasite-copy">gimp_parasite_copy</link>                  (const <link linkend="GimpParasite">GimpParasite</link> *parasite);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-parasite-compare">gimp_parasite_compare</link>               (const <link linkend="GimpParasite">GimpParasite</link> *a,
                                                         const <link linkend="GimpParasite">GimpParasite</link> *b);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-parasite-is-type">gimp_parasite_is_type</link>               (const <link linkend="GimpParasite">GimpParasite</link> *parasite,
                                                         const <link linkend="gchar">gchar</link> *name);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-parasite-is-persistent">gimp_parasite_is_persistent</link>         (const <link linkend="GimpParasite">GimpParasite</link> *parasite);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-parasite-is-undoable">gimp_parasite_is_undoable</link>           (const <link linkend="GimpParasite">GimpParasite</link> *parasite);
<link linkend="gboolean">gboolean</link>            <link linkend="gimp-parasite-has-flag">gimp_parasite_has_flag</link>              (const <link linkend="GimpParasite">GimpParasite</link> *parasite,
                                                         <link linkend="gulong">gulong</link> flag);
<link linkend="gulong">gulong</link>              <link linkend="gimp-parasite-flags">gimp_parasite_flags</link>                 (const <link linkend="GimpParasite">GimpParasite</link> *parasite);
const <link linkend="gchar">gchar</link> *       <link linkend="gimp-parasite-name">gimp_parasite_name</link>                  (const <link linkend="GimpParasite">GimpParasite</link> *parasite);
<link linkend="gconstpointer">gconstpointer</link>       <link linkend="gimp-parasite-data">gimp_parasite_data</link>                  (const <link linkend="GimpParasite">GimpParasite</link> *parasite);
<link linkend="glong">glong</link>               <link linkend="gimp-parasite-data-size">gimp_parasite_data_size</link>             (const <link linkend="GimpParasite">GimpParasite</link> *parasite);
#define             <link linkend="GIMP-PARASITE-PERSISTENT--CAPS">GIMP_PARASITE_PERSISTENT</link>
#define             <link linkend="GIMP-PARASITE-UNDOABLE--CAPS">GIMP_PARASITE_UNDOABLE</link>
#define             <link linkend="GIMP-PARASITE-ATTACH-PARENT--CAPS">GIMP_PARASITE_ATTACH_PARENT</link>
#define             <link linkend="GIMP-PARASITE-PARENT-PERSISTENT--CAPS">GIMP_PARASITE_PARENT_PERSISTENT</link>
#define             <link linkend="GIMP-PARASITE-PARENT-UNDOABLE--CAPS">GIMP_PARASITE_PARENT_UNDOABLE</link>
#define             <link linkend="GIMP-PARASITE-ATTACH-GRANDPARENT--CAPS">GIMP_PARASITE_ATTACH_GRANDPARENT</link>
#define             <link linkend="GIMP-PARASITE-GRANDPARENT-PERSISTENT--CAPS">GIMP_PARASITE_GRANDPARENT_PERSISTENT</link>
#define             <link linkend="GIMP-PARASITE-GRANDPARENT-UNDOABLE--CAPS">GIMP_PARASITE_GRANDPARENT_UNDOABLE</link>
#define             <link linkend="GIMP-TYPE-PARASITE--CAPS">GIMP_TYPE_PARASITE</link>
#define             <link linkend="GIMP-TYPE-PARAM-PARASITE--CAPS">GIMP_TYPE_PARAM_PARASITE</link>
#define             <link linkend="GIMP-IS-PARAM-SPEC-PARASITE--CAPS">GIMP_IS_PARAM_SPEC_PARASITE</link>         (pspec)
<link linkend="GParamSpec">GParamSpec</link> *        <link linkend="gimp-param-spec-parasite">gimp_param_spec_parasite</link>            (const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> *nick,
                                                         const <link linkend="gchar">gchar</link> *blurb,
                                                         <link linkend="GParamFlags">GParamFlags</link> flags);
#define             <link linkend="GIMP-VALUE-HOLDS-PARASITE--CAPS">GIMP_VALUE_HOLDS_PARASITE</link>           (value)
</synopsis>
</refsynopsisdiv>









<refsect1 id="libgimpbase-gimpparasite.description" role="desc">
<title role="desc.title">Description</title>
<para>
Arbitrary pieces of data which can be attached to various GIMP objects.
</para>
</refsect1>

<refsect1 id="libgimpbase-gimpparasite.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GimpParasite" role="struct">
<title>GimpParasite</title>
<indexterm zone="GimpParasite"><primary sortas="GimpParasite">GimpParasite</primary></indexterm><programlisting>typedef struct {
  gchar    *name;   /* The name of the parasite. USE A UNIQUE PREFIX! */
  guint32   flags;  /* save Parasite in XCF file, etc.                */
  guint32   size;   /* amount of data                                 */
  gpointer  data;   /* a pointer to the data.  plugin is              *
                     * responsible for tracking byte order            */
} GimpParasite;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gimp-parasite-new" role="function">
<title>gimp_parasite_new ()</title>
<indexterm zone="gimp-parasite-new"><primary sortas="gimp_parasite_new">gimp_parasite_new</primary></indexterm><programlisting><link linkend="GimpParasite">GimpParasite</link> *      gimp_parasite_new                   (const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="guint32">guint32</link> flags,
                                                         <link linkend="guint32">guint32</link> size,
                                                         <link linkend="gconstpointer">gconstpointer</link> data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-free" role="function">
<title>gimp_parasite_free ()</title>
<indexterm zone="gimp-parasite-free"><primary sortas="gimp_parasite_free">gimp_parasite_free</primary></indexterm><programlisting><link linkend="void">void</link>                gimp_parasite_free                  (<link linkend="GimpParasite">GimpParasite</link> *parasite);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-copy" role="function">
<title>gimp_parasite_copy ()</title>
<indexterm zone="gimp-parasite-copy"><primary sortas="gimp_parasite_copy">gimp_parasite_copy</primary></indexterm><programlisting><link linkend="GimpParasite">GimpParasite</link> *      gimp_parasite_copy                  (const <link linkend="GimpParasite">GimpParasite</link> *parasite);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-compare" role="function">
<title>gimp_parasite_compare ()</title>
<indexterm zone="gimp-parasite-compare"><primary sortas="gimp_parasite_compare">gimp_parasite_compare</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_parasite_compare               (const <link linkend="GimpParasite">GimpParasite</link> *a,
                                                         const <link linkend="GimpParasite">GimpParasite</link> *b);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-is-type" role="function">
<title>gimp_parasite_is_type ()</title>
<indexterm zone="gimp-parasite-is-type"><primary sortas="gimp_parasite_is_type">gimp_parasite_is_type</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_parasite_is_type               (const <link linkend="GimpParasite">GimpParasite</link> *parasite,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-is-persistent" role="function">
<title>gimp_parasite_is_persistent ()</title>
<indexterm zone="gimp-parasite-is-persistent"><primary sortas="gimp_parasite_is_persistent">gimp_parasite_is_persistent</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_parasite_is_persistent         (const <link linkend="GimpParasite">GimpParasite</link> *parasite);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-is-undoable" role="function">
<title>gimp_parasite_is_undoable ()</title>
<indexterm zone="gimp-parasite-is-undoable"><primary sortas="gimp_parasite_is_undoable">gimp_parasite_is_undoable</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_parasite_is_undoable           (const <link linkend="GimpParasite">GimpParasite</link> *parasite);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-has-flag" role="function">
<title>gimp_parasite_has_flag ()</title>
<indexterm zone="gimp-parasite-has-flag"><primary sortas="gimp_parasite_has_flag">gimp_parasite_has_flag</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gimp_parasite_has_flag              (const <link linkend="GimpParasite">GimpParasite</link> *parasite,
                                                         <link linkend="gulong">gulong</link> flag);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flag</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-flags" role="function">
<title>gimp_parasite_flags ()</title>
<indexterm zone="gimp-parasite-flags"><primary sortas="gimp_parasite_flags">gimp_parasite_flags</primary></indexterm><programlisting><link linkend="gulong">gulong</link>              gimp_parasite_flags                 (const <link linkend="GimpParasite">GimpParasite</link> *parasite);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-name" role="function">
<title>gimp_parasite_name ()</title>
<indexterm zone="gimp-parasite-name"><primary sortas="gimp_parasite_name">gimp_parasite_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       gimp_parasite_name                  (const <link linkend="GimpParasite">GimpParasite</link> *parasite);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-data" role="function">
<title>gimp_parasite_data ()</title>
<indexterm zone="gimp-parasite-data"><primary sortas="gimp_parasite_data">gimp_parasite_data</primary></indexterm><programlisting><link linkend="gconstpointer">gconstpointer</link>       gimp_parasite_data                  (const <link linkend="GimpParasite">GimpParasite</link> *parasite);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-parasite-data-size" role="function">
<title>gimp_parasite_data_size ()</title>
<indexterm zone="gimp-parasite-data-size"><primary sortas="gimp_parasite_data_size">gimp_parasite_data_size</primary></indexterm><programlisting><link linkend="glong">glong</link>               gimp_parasite_data_size             (const <link linkend="GimpParasite">GimpParasite</link> *parasite);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parasite</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GIMP-PARASITE-PERSISTENT--CAPS" role="macro">
<title>GIMP_PARASITE_PERSISTENT</title>
<indexterm zone="GIMP-PARASITE-PERSISTENT--CAPS"><primary sortas="GIMP_PARASITE_PERSISTENT">GIMP_PARASITE_PERSISTENT</primary></indexterm><programlisting>#define GIMP_PARASITE_PERSISTENT 1
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-PARASITE-UNDOABLE--CAPS" role="macro">
<title>GIMP_PARASITE_UNDOABLE</title>
<indexterm zone="GIMP-PARASITE-UNDOABLE--CAPS"><primary sortas="GIMP_PARASITE_UNDOABLE">GIMP_PARASITE_UNDOABLE</primary></indexterm><programlisting>#define GIMP_PARASITE_UNDOABLE   2
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-PARASITE-ATTACH-PARENT--CAPS" role="macro">
<title>GIMP_PARASITE_ATTACH_PARENT</title>
<indexterm zone="GIMP-PARASITE-ATTACH-PARENT--CAPS"><primary sortas="GIMP_PARASITE_ATTACH_PARENT">GIMP_PARASITE_ATTACH_PARENT</primary></indexterm><programlisting>#define GIMP_PARASITE_ATTACH_PARENT     (0x80 &lt;&lt; 8)
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-PARASITE-PARENT-PERSISTENT--CAPS" role="macro">
<title>GIMP_PARASITE_PARENT_PERSISTENT</title>
<indexterm zone="GIMP-PARASITE-PARENT-PERSISTENT--CAPS"><primary sortas="GIMP_PARASITE_PARENT_PERSISTENT">GIMP_PARASITE_PARENT_PERSISTENT</primary></indexterm><programlisting>#define GIMP_PARASITE_PARENT_PERSISTENT (GIMP_PARASITE_PERSISTENT &lt;&lt; 8)
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-PARASITE-PARENT-UNDOABLE--CAPS" role="macro">
<title>GIMP_PARASITE_PARENT_UNDOABLE</title>
<indexterm zone="GIMP-PARASITE-PARENT-UNDOABLE--CAPS"><primary sortas="GIMP_PARASITE_PARENT_UNDOABLE">GIMP_PARASITE_PARENT_UNDOABLE</primary></indexterm><programlisting>#define GIMP_PARASITE_PARENT_UNDOABLE   (GIMP_PARASITE_UNDOABLE &lt;&lt; 8)
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-PARASITE-ATTACH-GRANDPARENT--CAPS" role="macro">
<title>GIMP_PARASITE_ATTACH_GRANDPARENT</title>
<indexterm zone="GIMP-PARASITE-ATTACH-GRANDPARENT--CAPS"><primary sortas="GIMP_PARASITE_ATTACH_GRANDPARENT">GIMP_PARASITE_ATTACH_GRANDPARENT</primary></indexterm><programlisting>#define GIMP_PARASITE_ATTACH_GRANDPARENT     (0x80 &lt;&lt; 16)
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-PARASITE-GRANDPARENT-PERSISTENT--CAPS" role="macro">
<title>GIMP_PARASITE_GRANDPARENT_PERSISTENT</title>
<indexterm zone="GIMP-PARASITE-GRANDPARENT-PERSISTENT--CAPS"><primary sortas="GIMP_PARASITE_GRANDPARENT_PERSISTENT">GIMP_PARASITE_GRANDPARENT_PERSISTENT</primary></indexterm><programlisting>#define GIMP_PARASITE_GRANDPARENT_PERSISTENT (GIMP_PARASITE_PERSISTENT &lt;&lt; 16)
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-PARASITE-GRANDPARENT-UNDOABLE--CAPS" role="macro">
<title>GIMP_PARASITE_GRANDPARENT_UNDOABLE</title>
<indexterm zone="GIMP-PARASITE-GRANDPARENT-UNDOABLE--CAPS"><primary sortas="GIMP_PARASITE_GRANDPARENT_UNDOABLE">GIMP_PARASITE_GRANDPARENT_UNDOABLE</primary></indexterm><programlisting>#define GIMP_PARASITE_GRANDPARENT_UNDOABLE   (GIMP_PARASITE_UNDOABLE &lt;&lt; 16)
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-TYPE-PARASITE--CAPS" role="macro">
<title>GIMP_TYPE_PARASITE</title>
<indexterm zone="GIMP-TYPE-PARASITE--CAPS"><primary sortas="GIMP_TYPE_PARASITE">GIMP_TYPE_PARASITE</primary></indexterm><programlisting>#define GIMP_TYPE_PARASITE               (gimp_parasite_get_type ())
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-TYPE-PARAM-PARASITE--CAPS" role="macro">
<title>GIMP_TYPE_PARAM_PARASITE</title>
<indexterm zone="GIMP-TYPE-PARAM-PARASITE--CAPS"><primary sortas="GIMP_TYPE_PARAM_PARASITE">GIMP_TYPE_PARAM_PARASITE</primary></indexterm><programlisting>#define GIMP_TYPE_PARAM_PARASITE           (gimp_param_parasite_get_type ())
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GIMP-IS-PARAM-SPEC-PARASITE--CAPS" role="macro">
<title>GIMP_IS_PARAM_SPEC_PARASITE()</title>
<indexterm zone="GIMP-IS-PARAM-SPEC-PARASITE--CAPS"><primary sortas="GIMP_IS_PARAM_SPEC_PARASITE">GIMP_IS_PARAM_SPEC_PARASITE</primary></indexterm><programlisting>#define GIMP_IS_PARAM_SPEC_PARASITE(pspec) (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), GIMP_TYPE_PARAM_PARASITE))
</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pspec</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gimp-param-spec-parasite" role="function">
<title>gimp_param_spec_parasite ()</title>
<indexterm zone="gimp-param-spec-parasite"><primary sortas="gimp_param_spec_parasite">gimp_param_spec_parasite</primary></indexterm><programlisting><link linkend="GParamSpec">GParamSpec</link> *        gimp_param_spec_parasite            (const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> *nick,
                                                         const <link linkend="gchar">gchar</link> *blurb,
                                                         <link linkend="GParamFlags">GParamFlags</link> flags);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nick</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>blurb</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GIMP-VALUE-HOLDS-PARASITE--CAPS" role="macro">
<title>GIMP_VALUE_HOLDS_PARASITE()</title>
<indexterm zone="GIMP-VALUE-HOLDS-PARASITE--CAPS"><primary sortas="GIMP_VALUE_HOLDS_PARASITE">GIMP_VALUE_HOLDS_PARASITE</primary></indexterm><programlisting>#define GIMP_VALUE_HOLDS_PARASITE(value) (G_TYPE_CHECK_VALUE_TYPE ((value), GIMP_TYPE_PARASITE))
</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="libgimpbase-gimpparasite.see-also">
<title>See Also</title>
<para>
<link linkend="gimp-image-parasite-attach"><function>gimp_image_parasite_attach()</function></link>, <link linkend="gimp-drawable-parasite-attach"><function>gimp_drawable_parasite_attach()</function></link>,
<link linkend="gimp-parasite-attach"><function>gimp_parasite_attach()</function></link> and their related functions.
</para>
</refsect1>

</refentry>
